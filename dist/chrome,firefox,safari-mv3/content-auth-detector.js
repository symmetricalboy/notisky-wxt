var contentAuthDetector=function(){"use strict";var h,g;const a=(g=(h=globalThis.browser)==null?void 0:h.runtime)!=null&&g.id?globalThis.browser:globalThis.chrome;console.log("Notisky auth detector content script loaded");function s(e,t){console.log("Auth data detected:",{code:e,state:t});try{localStorage.setItem("notisky_auth_code",e),localStorage.setItem("notisky_auth_state",t);const o={type:"oauth_callback",code:e,state:t};if(typeof a<"u"&&a.runtime&&a.runtime.sendMessage)console.log("Sending auth data to extension background script via browser API"),a.runtime.sendMessage(o).then(n=>{console.log("Background script response:",n),u()}).catch(n=>{if(console.error("Error sending message via browser API:",n),typeof chrome<"u"&&chrome.runtime&&chrome.runtime.sendMessage)l(o);else throw n});else if(typeof chrome<"u"&&chrome.runtime&&chrome.runtime.sendMessage)l(o);else throw console.error("Neither browser nor chrome runtime API available for sending messages"),new Error("Extension messaging API not available")}catch(o){console.error("Error processing auth data:",o)}}function l(e){console.log("Sending auth data to extension background script via Chrome API"),chrome.runtime.sendMessage(e,t=>{console.log("Background script response (Chrome API):",t),u()})}function u(){const e=new CustomEvent("notisky-auth-detected",{detail:{success:!0}});document.dispatchEvent(e),window.dispatchEvent(e);const t=document.getElementById("detection-status");t&&(t.textContent="Authentication data received by extension!",t.style.color="#4caf50");const o=document.getElementById("detection-complete");o&&(o.style.display="block")}window.addEventListener("notisky-auth-available",e=>{console.log("Detected notisky-auth-available event");const t=e.detail||{};t.code&&t.state?s(t.code,t.state):console.warn("Event data missing required fields:",t)});function r(){console.log("Checking DOM for auth data attributes");const e=document.getElementById("notisky-auth-data");if(e){const m=e.getAttribute("data-code"),f=e.getAttribute("data-state");if(m&&f)return s(m,f),!0}const t=new URLSearchParams(window.location.search),o=t.get("code"),n=t.get("state");return o&&n?(console.log("Found auth data in URL parameters"),s(o,n),!0):!1}function i(){console.log("Checking localStorage for auth data");const e=localStorage.getItem("notisky_auth_code"),t=localStorage.getItem("notisky_auth_state");return e&&t?(s(e,t),!0):!1}function d(){try{return typeof window<"u"&&window.location&&window.location.href?window.location.href.includes("auth-success.html")||window.location.href.includes("auth/extension-callback")||window.location.href.includes("oauth=success"):!!document.getElementById("notisky-auth-page")||!!document.getElementById("notisky-auth-data")}catch(e){return console.warn("Error checking page type:",e),!1}}console.log("Running initial auth check immediately"),d()&&(r()||i()),document.addEventListener("DOMContentLoaded",()=>{if(console.log("DOM fully loaded, running auth data checks"),!d()){console.log("Not on auth-success page, skipping auth detection");return}if(r()){console.log("Auth data found in DOM elements");return}if(i()){console.log("Auth data found in localStorage");return}console.log("No auth data found on initial check, setting up interval");let e=0;const t=10,o=setInterval(()=>{if(e++,console.log(`Running periodic check ${e}/${t}`),r()||i()){console.log("Auth data found during periodic check"),clearInterval(o);return}if(e>=t){console.warn("Max checks reached, giving up on finding auth data"),clearInterval(o);const n=document.getElementById("detection-status");n&&(n.textContent="Could not find authentication data",n.className="error")}},500)});const w={};function p(){}function c(e,...t){}const y={debug:(...e)=>c(console.debug,...e),log:(...e)=>c(console.log,...e),warn:(...e)=>c(console.warn,...e),error:(...e)=>c(console.error,...e)};return(async()=>{try{return await w.main()}catch(e){throw y.error('The unlisted script "content-auth-detector" crashed on startup!',e),e}})()}();
contentAuthDetector;

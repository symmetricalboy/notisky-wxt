import{r,R as f,b as c,j as o,a as w}from"./browser-Bh6BCD6u.js";function P(){const[x,i]=r.useState({}),[j,u]=r.useState(!0),[v,l]=r.useState(!1),[A,s]=r.useState(null),[N,a]=r.useState("connecting"),g=f.useCallback(async()=>{u(!0),s(null),a("connecting");try{console.log("[Popup] Attempting direct fetch accounts...");let e;try{e=await c.runtime.sendMessage({action:"getAccounts"}),console.log("[Popup] Received response from sendMessage:",e)}catch(n){console.error("[Popup] Error calling sendMessage:",n),s("Error communicating with background script."),a("error"),u(!1);return}if(e&&e.success)console.log("[Popup] Fetch successful, accounts:",e.accounts),i(e.accounts||{}),a("connected");else{const n=(e==null?void 0:e.error)||"Unknown error from background";console.error("[Popup] Fetch failed:",n,"(Response:",e,")"),s(`Failed to load accounts: ${n}`),i({}),a("error")}}catch(e){console.error("[Popup] Unexpected error in fetchAccounts:",e),s("An unexpected error occurred."),i({}),a("error")}finally{u(!1)}},[]);r.useEffect(()=>{(async()=>{try{console.log("[Popup] Sending ping...");const t=await c.runtime.sendMessage({action:"ping"});console.log("[Popup] Received pong response:",t)}catch(t){console.error("[Popup] Error during ping test:",t)}})(),g(),c.runtime.sendMessage({action:"clearNewNotificationCount"}).catch(t=>console.error("Error clearing badge count:",t));const n=t=>{t.action==="accountAdded"?(console.log("Popup received accountAdded:",t.account),i(d=>({...d,[t.account.did]:t.account})),s(null),l(!1)):t.action==="accountRemoved"&&(console.log("Popup received accountRemoved:",t.did),i(d=>{const h={...d};return delete h[t.did],h}),s(null))};return c.runtime.onMessage.addListener(n),()=>{c.runtime.onMessage.removeListener(n)}},[g]);const p=async()=>{l(!0),s(null);try{const e=await c.runtime.sendMessage({action:"authenticate"});e.success||(console.error("Failed to initiate auth flow:",e.error),s(e.error||"Failed to start login."),l(!1))}catch(e){console.error("Error sending authenticate message:",e),s("Failed to communicate with extension for login."),l(!1)}},b=async e=>{s(null);try{const n=await c.runtime.sendMessage({action:"removeAccount",did:e});n.success||(console.error("Failed to remove account:",n.error),s(n.error||"Failed to remove account."))}catch(n){console.error("Error sending removeAccount message:",n),s("Failed to communicate with extension to remove account.")}},y=()=>{c.runtime.openOptionsPage(),window.close()},m=Object.values(x);return o.jsxs("div",{className:"popup-container",children:[o.jsxs("div",{className:"popup-header",children:[o.jsx("img",{src:"/icon/48.png",alt:"Notisky Logo",className:"logo"}),o.jsx("h1",{children:"Notisky"}),o.jsx("button",{onClick:y,className:"options-button",title:"Open Settings",children:"⚙️"})]}),j?o.jsx("div",{className:"status-message",children:"Connecting..."}):v?o.jsx("div",{className:"status-message",children:"Redirecting to Bluesky for login..."}):N==="error"?o.jsxs("div",{className:"error-message",children:["Error: ",A]}):o.jsx(o.Fragment,{children:m.length>0?o.jsxs("div",{className:"accounts-list",children:[o.jsx("h2",{children:"Logged In Accounts:"}),o.jsx("ul",{children:m.map(e=>o.jsxs("li",{className:"account-item",children:[o.jsxs("span",{children:["@",e.handle]}),o.jsx("button",{onClick:()=>b(e.did),className:"remove-button",title:`Log out ${e.handle}`,children:"Logout"})]},e.did))}),o.jsx("button",{onClick:p,className:"login-button add-account-button",children:"Add Another Account"})]}):o.jsxs("div",{className:"login-section",children:[o.jsx("p",{children:"Log in to Bluesky to start receiving notifications."}),o.jsx("button",{onClick:p,className:"login-button",children:"Login with Bluesky"})]})})]})}w.createRoot(document.getElementById("root")).render(o.jsx(f.StrictMode,{children:o.jsx(P,{})}));

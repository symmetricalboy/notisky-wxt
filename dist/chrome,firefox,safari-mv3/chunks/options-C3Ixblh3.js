import{r as a,b as p,j as e,c as N,R as b}from"./browser-Bh6BCD6u.js";const j={updateSiteIcon:!0,updateExtensionIcon:!0,enableNotifications:!0,keepPageAlive:!0,refreshInterval:1,useNotificationServer:!1,notificationServerUrl:"",notificationServerUserId:""},S=()=>{const[t,d]=a.useState(j),[o,h]=a.useState("preferences"),[v,f]=a.useState(null),[l,c]=a.useState("checking");a.useEffect(()=>{m()},[]),a.useEffect(()=>{t.useNotificationServer&&t.notificationServerUrl&&t.notificationServerUserId&&g()},[t.useNotificationServer,t.notificationServerUrl,t.notificationServerUserId]);const m=async()=>{try{const s=await p.storage.sync.get(j);d(s),console.log("Preferences loaded:",s)}catch(s){console.error("Error loading preferences:",s),u("Error loading preferences","error")}},x=async()=>{try{await p.storage.sync.set(t),console.log("Preferences saved:",t),u("Preferences saved!","success"),await p.runtime.sendMessage({action:"preferencesUpdated",preferences:t})}catch(s){console.error("Error saving preferences:",s),u("Error saving preferences","error")}},g=async()=>{if(!t.notificationServerUrl){c("not-configured");return}c("checking");try{let s=t.notificationServerUrl;!s.startsWith("http://")&&!s.startsWith("https://")&&(s=`https://${s}`),s.endsWith("/")&&(s=s.slice(0,-1));const r=await fetch(`${s}/api/status`,{method:"GET",headers:{"Content-Type":"application/json"},mode:"cors"}).catch(n=>{throw console.error("Fetch error:",n),n.toString().includes("CORS")||n.toString().includes("blocked by CORS")?new Error("CORS error - The server is not configured to accept requests from this extension"):n});if(r.ok){const n=await r.json();if(n.success){c("connected"),s!==t.notificationServerUrl&&d({...t,notificationServerUrl:s});return}else console.error("Server returned non-success status:",n),c("error")}else console.error("Server returned error status:",r.status),c("error")}catch(s){console.error("Error connecting to notification server:",s),c("error")}},u=(s,r)=>{f({text:s,type:r}),setTimeout(()=>{f(null)},3e3)},i=(s,r)=>{d({...t,[s]:r})};return e.jsxs("div",{className:"container",children:[e.jsxs("h1",{children:[e.jsx("img",{src:"../assets/icons/icon48.png",alt:"Notisky Logo"}),"Notisky Notifications Options"]}),e.jsxs("div",{className:"tab-navigation",children:[e.jsx("div",{className:`tab ${o==="preferences"?"active":""}`,onClick:()=>h("preferences"),children:"Preferences"}),e.jsx("div",{className:`tab ${o==="server"?"active":""}`,onClick:()=>h("server"),children:"Notification Server"}),e.jsx("div",{className:`tab ${o==="about"?"active":""}`,onClick:()=>h("about"),children:"About"})]}),e.jsxs("div",{className:`tab-content ${o==="preferences"?"active":""}`,id:"preferences-tab",children:[e.jsx("h2",{children:"Notification Settings"}),e.jsxs("div",{className:"toggle-container",children:[e.jsxs("div",{className:"toggle-option",children:[e.jsxs("div",{children:[e.jsx("div",{className:"option-label",children:"Update Website Icon"}),e.jsx("div",{className:"option-description",children:"Show notification count on the Bluesky website favicon"})]}),e.jsxs("label",{className:"toggle-switch",children:[e.jsx("input",{type:"checkbox",checked:t.updateSiteIcon,onChange:s=>i("updateSiteIcon",s.target.checked)}),e.jsx("span",{className:"slider"})]})]}),e.jsxs("div",{className:"toggle-option",children:[e.jsxs("div",{children:[e.jsx("div",{className:"option-label",children:"Update Extension Icon"}),e.jsx("div",{className:"option-description",children:"Show notification count on the extension icon"})]}),e.jsxs("label",{className:"toggle-switch",children:[e.jsx("input",{type:"checkbox",checked:t.updateExtensionIcon,onChange:s=>i("updateExtensionIcon",s.target.checked)}),e.jsx("span",{className:"slider"})]})]}),e.jsxs("div",{className:"toggle-option",children:[e.jsxs("div",{children:[e.jsx("div",{className:"option-label",children:"Enable Desktop Notifications"}),e.jsx("div",{className:"option-description",children:"Show desktop notifications for new activity"})]}),e.jsxs("label",{className:"toggle-switch",children:[e.jsx("input",{type:"checkbox",checked:t.enableNotifications,onChange:s=>i("enableNotifications",s.target.checked)}),e.jsx("span",{className:"slider"})]})]}),e.jsxs("div",{className:"toggle-option",children:[e.jsxs("div",{children:[e.jsx("div",{className:"option-label",children:"Background Checking"}),e.jsx("div",{className:"option-description",children:"Check for notifications in the background"})]}),e.jsxs("label",{className:"toggle-switch",children:[e.jsx("input",{type:"checkbox",checked:t.keepPageAlive,onChange:s=>i("keepPageAlive",s.target.checked)}),e.jsx("span",{className:"slider"})]})]}),e.jsxs("div",{className:"toggle-option",children:[e.jsxs("div",{children:[e.jsx("div",{className:"option-label",children:"Use Notification Server"}),e.jsx("div",{className:"option-description",children:"Connect to a notification server for real-time multi-account updates"})]}),e.jsxs("label",{className:"toggle-switch",children:[e.jsx("input",{type:"checkbox",checked:t.useNotificationServer,onChange:s=>i("useNotificationServer",s.target.checked)}),e.jsx("span",{className:"slider"})]})]})]}),e.jsxs("div",{className:`input-group ${t.keepPageAlive&&!t.useNotificationServer?"visible":""}`,children:[e.jsx("label",{htmlFor:"refresh-interval",children:"Check Interval (minutes)"}),e.jsx("input",{type:"number",id:"refresh-interval",min:"1",max:"60",value:t.refreshInterval,onChange:s=>i("refreshInterval",parseInt(s.target.value)||1)})]}),e.jsx("div",{className:"action-buttons",children:e.jsx("button",{onClick:x,children:"Save Preferences"})}),v&&e.jsx("div",{className:`message ${v.type}`,children:v.text})]}),e.jsxs("div",{className:`tab-content ${o==="server"?"active":""}`,id:"server-tab",children:[e.jsx("h2",{children:"Notification Server"}),e.jsx("p",{className:"server-description",children:"Connect to a Notisky notification server to get real-time notifications from multiple Bluesky accounts."}),e.jsxs("div",{className:"server-settings",children:[e.jsxs("div",{className:"form-group",children:[e.jsx("label",{htmlFor:"server-url",children:"Server URL"}),e.jsx("input",{type:"text",id:"server-url",placeholder:"https://yourserver.com",value:t.notificationServerUrl,onChange:s=>i("notificationServerUrl",s.target.value),disabled:!t.useNotificationServer})]}),e.jsxs("div",{className:"form-group",children:[e.jsx("label",{htmlFor:"server-userid",children:"User ID"}),e.jsx("input",{type:"text",id:"server-userid",placeholder:"Your user ID from the notification server",value:t.notificationServerUserId,onChange:s=>i("notificationServerUserId",s.target.value),disabled:!t.useNotificationServer})]}),e.jsxs("div",{className:"server-status",children:[e.jsx("span",{className:"status-label",children:"Server Status:"}),e.jsxs("span",{className:`status-indicator ${l}`,children:[l==="checking"&&"Checking connection...",l==="connected"&&"Connected",l==="error"&&"Connection error"]})]}),e.jsxs("div",{className:"action-buttons",children:[e.jsx("button",{onClick:g,disabled:!t.useNotificationServer||!t.notificationServerUrl,children:"Test Connection"}),e.jsx("button",{onClick:x,children:"Save Settings"})]}),e.jsx("div",{className:"server-info",children:e.jsxs("p",{children:["Don't have a server? Check the ",e.jsx("a",{href:"https://github.com/dylanpdx/notisky",target:"_blank",children:"Notisky GitHub repository"})," for instructions on setting up your own notification server."]})})]})]}),e.jsxs("div",{className:`tab-content ${o==="about"?"active":""}`,id:"about-tab",children:[e.jsx("h2",{children:"About Notisky Notifications"}),e.jsx("p",{children:"Notisky is a browser extension that enhances Bluesky with notification features. It helps you stay updated with your Bluesky notifications without having to keep checking the site."}),e.jsxs("p",{children:[e.jsx("strong",{children:"Version:"})," 1.0.0"]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Supported Browsers:"})," Chrome, Firefox, Safari"]}),e.jsx("p",{children:e.jsx("strong",{children:"Features:"})}),e.jsxs("ul",{children:[e.jsx("li",{children:"Display notification count on the extension icon"}),e.jsx("li",{children:"Display notification count on the Bluesky tab favicon"}),e.jsx("li",{children:"Background notification checking"}),e.jsx("li",{children:"Desktop notifications"}),e.jsx("li",{children:"Real-time multi-account notifications via notification server"})]})]})]})},k=N.createRoot(document.getElementById("root"));k.render(e.jsx(b.StrictMode,{children:e.jsx(S,{})}));

import{r,b as d,j as e,c as E,R as A}from"./browser-Bh6BCD6u.js";const v={updateSiteIcon:!0,updateExtensionIcon:!0,enableNotifications:!0,keepPageAlive:!0,refreshInterval:1,notificationServerUrl:"https://notisky.symm.app",notificationServerUserId:""},I=()=>{const[c,h]=r.useState(v),[a,u]=r.useState("preferences"),[x,j]=r.useState(null),[p,o]=r.useState("checking"),[f,y]=r.useState([]);r.useEffect(()=>{N(),b()},[]),r.useEffect(()=>{S()},[]);const N=async()=>{try{const s=await d.storage.sync.get(v);h(s),console.log("Preferences loaded:",s)}catch(s){console.error("Error loading preferences:",s),m("Error loading preferences","error")}},k=async()=>{try{await d.storage.sync.set(c),console.log("Preferences saved:",c),m("Preferences saved!","success"),await d.runtime.sendMessage({action:"preferencesUpdated",preferences:c})}catch(s){console.error("Error saving preferences:",s),m("Error saving preferences","error")}},b=async()=>{try{const{accounts:s=[]}=await d.storage.local.get("accounts");y(s)}catch(s){console.error("Error fetching linked accounts:",s)}},S=async()=>{o("checking");try{const s="https://notisky.symm.app";try{const t=await fetch(`${s}/api/status.json`,{method:"GET",headers:{Accept:"application/json"},mode:"cors"});if(t.ok){const l=t.headers.get("content-type");if(l&&l.includes("application/json")&&(await t.json()).success){o("connected"),h(C=>({...C,notificationServerUrl:s}));return}}}catch(t){console.warn("Could not fetch from status.json, trying API endpoint:",t)}const n=await fetch(`${s}/api/status`,{method:"GET",headers:{Accept:"application/json"},mode:"cors"}).catch(t=>{throw console.error("Fetch error:",t),t});if(n.ok){const t=n.headers.get("content-type");if(t&&t.includes("application/json")){const l=await n.json();if(l.success){o("connected"),h(g=>({...g,notificationServerUrl:s}));return}else console.error("Server returned non-success status:",l),o("error")}else console.error("Server returned non-JSON content type:",t),o("error")}else console.error("Server returned error status:",n.status),o("error")}catch(s){console.error("Error connecting to notification server:",s),o("error")}},m=(s,n)=>{j({text:s,type:n}),setTimeout(()=>{j(null)},3e3)},i=(s,n)=>{h({...c,[s]:n})},w=()=>{d.tabs.create({url:"https://notisky.symm.app"})};return e.jsxs("div",{className:"container",children:[e.jsxs("header",{className:"app-header",children:[e.jsx("img",{src:"../assets/icons/icon48.png",alt:"Notisky Logo",className:"logo"}),e.jsx("h1",{children:"Notisky Notifications"})]}),e.jsxs("div",{className:"tab-navigation",children:[e.jsx("div",{className:`tab ${a==="preferences"?"active":""}`,onClick:()=>u("preferences"),children:"Preferences"}),e.jsx("div",{className:`tab ${a==="accounts"?"active":""}`,onClick:()=>u("accounts"),children:"Accounts"}),e.jsx("div",{className:`tab ${a==="about"?"active":""}`,onClick:()=>u("about"),children:"About"})]}),e.jsxs("div",{className:`tab-content ${a==="preferences"?"active":""}`,id:"preferences-tab",children:[e.jsx("h2",{children:"Notification Settings"}),e.jsxs("div",{className:"toggle-container",children:[e.jsxs("div",{className:"toggle-option",children:[e.jsxs("div",{children:[e.jsx("div",{className:"option-label",children:"Update Website Icon"}),e.jsx("div",{className:"option-description",children:"Show notification count on the Bluesky website favicon"})]}),e.jsxs("label",{className:"toggle-switch",children:[e.jsx("input",{type:"checkbox",checked:c.updateSiteIcon,onChange:s=>i("updateSiteIcon",s.target.checked)}),e.jsx("span",{className:"slider"})]})]}),e.jsxs("div",{className:"toggle-option",children:[e.jsxs("div",{children:[e.jsx("div",{className:"option-label",children:"Update Extension Icon"}),e.jsx("div",{className:"option-description",children:"Show notification count on the extension icon"})]}),e.jsxs("label",{className:"toggle-switch",children:[e.jsx("input",{type:"checkbox",checked:c.updateExtensionIcon,onChange:s=>i("updateExtensionIcon",s.target.checked)}),e.jsx("span",{className:"slider"})]})]}),e.jsxs("div",{className:"toggle-option",children:[e.jsxs("div",{children:[e.jsx("div",{className:"option-label",children:"Enable Desktop Notifications"}),e.jsx("div",{className:"option-description",children:"Show desktop notifications for new activity"})]}),e.jsxs("label",{className:"toggle-switch",children:[e.jsx("input",{type:"checkbox",checked:c.enableNotifications,onChange:s=>i("enableNotifications",s.target.checked)}),e.jsx("span",{className:"slider"})]})]}),e.jsxs("div",{className:"toggle-option",children:[e.jsxs("div",{children:[e.jsx("div",{className:"option-label",children:"Background Checking"}),e.jsx("div",{className:"option-description",children:"Check for notifications in the background"})]}),e.jsxs("label",{className:"toggle-switch",children:[e.jsx("input",{type:"checkbox",checked:c.keepPageAlive,onChange:s=>i("keepPageAlive",s.target.checked)}),e.jsx("span",{className:"slider"})]})]})]}),e.jsxs("div",{className:"input-group visible",children:[e.jsx("label",{htmlFor:"refresh-interval",children:"Check Interval (minutes)"}),e.jsx("input",{type:"number",id:"refresh-interval",min:"1",max:"60",value:c.refreshInterval,onChange:s=>i("refreshInterval",parseInt(s.target.value)||1)})]}),e.jsx("div",{className:"action-buttons",children:e.jsx("button",{onClick:k,className:"primary-button",children:"Save Preferences"})}),x&&e.jsx("div",{className:`message ${x.type}`,children:x.text})]}),e.jsxs("div",{className:`tab-content ${a==="accounts"?"active":""}`,id:"accounts-tab",children:[e.jsx("h2",{children:"Bluesky Accounts"}),e.jsxs("div",{className:"accounts-section",children:[e.jsx("div",{className:"server-status-banner",children:e.jsxs("div",{className:`status-indicator ${p}`,children:[p==="checking"&&"Checking connection to Notisky server...",p==="connected"&&"Connected to Notisky authentication server",p==="error"&&"Error connecting to Notisky server"]})}),f.length>0?e.jsxs("div",{className:"accounts-list",children:[e.jsx("h3",{children:"Connected Accounts"}),f.map((s,n)=>e.jsx("div",{className:"account-card",children:e.jsxs("div",{className:"account-info",children:[e.jsxs("div",{className:"account-handle",children:["@",s.handle]}),e.jsx("div",{className:"account-did",children:s.did})]})},n))]}):e.jsx("div",{className:"no-accounts",children:e.jsx("p",{children:"No accounts connected yet."})}),e.jsx("div",{className:"auth-actions",children:e.jsx("button",{onClick:w,className:"primary-button",children:"Manage Accounts in Auth Portal"})}),e.jsx("div",{className:"accounts-help",children:e.jsx("p",{children:"Notisky uses the Authentication Portal to securely manage your Bluesky accounts. You can connect multiple accounts to receive real-time notifications from all of them."})})]})]}),e.jsxs("div",{className:`tab-content ${a==="about"?"active":""}`,id:"about-tab",children:[e.jsx("h2",{children:"About Notisky Notifications"}),e.jsx("p",{children:"Notisky is a browser extension that enhances Bluesky with notification features. It helps you stay updated with your Bluesky notifications without having to keep checking the site."}),e.jsxs("p",{children:[e.jsx("strong",{children:"Version:"})," 1.0.0"]}),e.jsxs("p",{children:[e.jsx("strong",{children:"Supported Browsers:"})," Chrome, Firefox, Safari"]}),e.jsx("p",{children:e.jsx("strong",{children:"Features:"})}),e.jsxs("ul",{children:[e.jsx("li",{children:"Display notification count on the extension icon"}),e.jsx("li",{children:"Display notification count on the Bluesky tab favicon"}),e.jsx("li",{children:"Background notification checking"}),e.jsx("li",{children:"Desktop notifications"}),e.jsx("li",{children:"Real-time multi-account notifications via Notisky server"})]}),e.jsxs("div",{className:"auth-actions",children:[e.jsx("a",{href:"https://notisky.symm.app",target:"_blank",rel:"noopener noreferrer",className:"secondary-button",children:"Visit Auth Portal"}),e.jsx("a",{href:"https://github.com/symmetricalboy/notisky",target:"_blank",rel:"noopener noreferrer",className:"secondary-button",children:"GitHub Repository"})]})]}),e.jsxs("footer",{className:"app-footer",children:[e.jsx("p",{className:"footer-slogan",children:"Free & open source, for all, forever."}),e.jsxs("p",{className:"footer-contact",children:["Feedback, suggestions, assistance, & updates:",e.jsx("a",{href:"https://bsky.app/profile/symm.app",target:"_blank",rel:"noopener noreferrer",children:"@symm.app"})]}),e.jsx("p",{className:"footer-copyright",children:"Copyright (c) 2025 Dylan Gregori Singer (symmetricalboy)"})]})]})},P=E.createRoot(document.getElementById("root"));P.render(e.jsx(A.StrictMode,{children:e.jsx(I,{})}));

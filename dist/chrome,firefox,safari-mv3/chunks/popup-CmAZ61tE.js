import{r as c,b as o,j as e,a as f,R as v}from"./browser-Bh6BCD6u.js";function N(){const[h,r]=c.useState({}),[m,i]=c.useState(!0),[x,a]=c.useState(!1),[l,n]=c.useState(null),u=async()=>{i(!0),n(null);try{const t=await o.runtime.sendMessage({action:"getAccounts"});t.success?r(t.accounts||{}):(console.error("Failed to fetch accounts:",t.error),n("Failed to load account data."),r({}))}catch(t){console.error("Error messaging background script:",t),n("Could not connect to extension background. Try reloading the extension."),r({})}finally{i(!1)}};c.useEffect(()=>{u(),o.runtime.sendMessage({action:"clearNewNotificationCount"}).catch(s=>console.error("Error clearing badge count:",s));const t=s=>{s.action==="authStateChanged"&&(console.log("Popup received authStateChanged:",s.accounts),r(s.accounts||{}),n(null),a(!1))};return o.runtime.onMessage.addListener(t),()=>{o.runtime.onMessage.removeListener(t)}},[u]);const d=async()=>{a(!0),n(null);try{const t=await o.runtime.sendMessage({action:"authenticate"});t.success||(console.error("Failed to initiate auth flow:",t.error),n(t.error||"Failed to start login."),a(!1))}catch(t){console.error("Error sending authenticate message:",t),n("Failed to communicate with extension for login."),a(!1)}},p=async t=>{n(null);try{const s=await o.runtime.sendMessage({action:"removeAccount",did:t});s.success||(console.error("Failed to remove account:",s.error),n(s.error||"Failed to remove account."))}catch(s){console.error("Error sending removeAccount message:",s),n("Failed to communicate with extension to remove account.")}},j=()=>{o.runtime.openOptionsPage(),window.close()},g=Object.values(h);return e.jsxs("div",{className:"popup-container",children:[e.jsxs("div",{className:"popup-header",children:[e.jsx("img",{src:"/icon/48.png",alt:"Notisky Logo",className:"logo"}),e.jsx("h1",{children:"Notisky"}),e.jsx("button",{onClick:j,className:"options-button",title:"Open Settings",children:"⚙️"})]}),m?e.jsx("div",{className:"status-message",children:"Loading accounts..."}):x?e.jsx("div",{className:"status-message",children:"Redirecting to Bluesky for login..."}):l?e.jsxs("div",{className:"error-message",children:["Error: ",l]}):e.jsx(e.Fragment,{children:g.length>0?e.jsxs("div",{className:"accounts-list",children:[e.jsx("h2",{children:"Logged In Accounts:"}),e.jsx("ul",{children:g.map(t=>e.jsxs("li",{className:"account-item",children:[e.jsxs("span",{children:["@",t.handle]}),e.jsx("button",{onClick:()=>p(t.did),className:"remove-button",title:`Log out ${t.handle}`,children:"Logout"})]},t.did))}),e.jsx("button",{onClick:d,className:"login-button add-account-button",children:"Add Another Account"})]}):e.jsxs("div",{className:"login-section",children:[e.jsx("p",{children:"Log in to Bluesky to start receiving notifications."}),e.jsx("button",{onClick:d,className:"login-button",children:"Login with Bluesky"})]})})]})}f.createRoot(document.getElementById("root")).render(e.jsx(v.StrictMode,{children:e.jsx(N,{})}));

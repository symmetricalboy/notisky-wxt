import{r as p,j as s,b as n,a as b,R as k}from"./browser-Bh6BCD6u.js";function C(){const[g,l]=p.useState([]),[x,f]=p.useState(!0),[j,d]=p.useState(!1);p.useEffect(()=>{(async()=>{try{f(!0);const c=async()=>{try{const t=await fetch("https://notisky.symm.app/api/status",{method:"GET",headers:{"Content-Type":"application/json"},mode:"cors"});if(t.ok){const r=t.headers.get("content-type");if(r&&r.includes("application/json")){const o=await t.json();d(o.success===!0)}else console.error("Server returned non-JSON response"),d(!1)}else d(!1)}catch(t){console.error("Error checking server connection:",t),d(!1)}},{accounts:i=[]}=await n.storage.local.get("accounts"),a=(await n.tabs.query({active:!0,currentWindow:!0}))[0];if(a!=null&&a.url&&(a.url.includes("bsky.app")||a.url.includes("bsky.social")))try{await n.tabs.sendMessage(a.id,{action:"checkForUpdates"})}catch(t){console.log("Unable to refresh counts from Bluesky tab:",t)}const h=await n.storage.local.get(["notificationCounts","accountNotifications"]);if(h.accountNotifications&&Array.isArray(h.accountNotifications)){const t=i.map(r=>{const o=h.accountNotifications.find(v=>v.did===r.did);return{...r,counts:o?{notification:o.notification||0,message:o.message||0,total:(o.notification||0)+(o.message||0)}:{notification:0,message:0,total:0}}});l(t)}else{const t=h.notificationCounts||{notification:0,message:0,total:0};i.length>0?i.length===1?l([{...i[0],counts:t}]):l(i):l([])}await c()}catch(c){console.error("Error loading data:",c)}finally{f(!1)}})()},[]);const u=e=>{n.tabs.create({url:`https://bsky.app${e}`}),window.close()},N=()=>{n.runtime.openOptionsPage(),window.close()},y=()=>{n.tabs.create({url:"https://notisky.symm.app"}),window.close()},m=e=>e>99?"badge-counter large-number":"badge-counter";return s.jsxs("div",{className:"popup-container",children:[s.jsxs("div",{className:"popup-header",children:[s.jsx("img",{src:"/icon/48.png",alt:"Notisky Logo",className:"logo"}),s.jsx("h1",{children:"Notisky"})]}),x?s.jsxs("div",{className:"loading-container",children:[s.jsx("div",{className:"loading-spinner"}),s.jsx("p",{children:"Checking for notifications..."})]}):s.jsxs(s.Fragment,{children:[g.length>0?s.jsx("div",{className:"accounts-container",children:g.map((e,c)=>s.jsxs("div",{className:"account-card",children:[s.jsx("div",{className:"account-header",children:s.jsxs("span",{className:"account-handle",children:["@",e.handle]})}),s.jsxs("div",{className:"notification-summary",children:[s.jsxs("div",{className:"count-container",children:[s.jsxs("div",{className:"count-item badge-container",onClick:()=>u(`/profile/${e.handle}/notifications`),children:[s.jsx("div",{className:"count-label",children:"Notifications"}),e.counts&&e.counts.notification>0&&s.jsx("div",{className:m(e.counts.notification),children:e.counts.notification>99?"99+":e.counts.notification})]}),s.jsxs("div",{className:"count-item badge-container",onClick:()=>u("/messages"),children:[s.jsx("div",{className:"count-label",children:"Messages"}),e.counts&&e.counts.message>0&&s.jsx("div",{className:m(e.counts.message),children:e.counts.message>99?"99+":e.counts.message})]})]}),s.jsxs("div",{className:"total-count badge-container",children:[s.jsx("span",{children:"Total:"}),e.counts&&e.counts.total>0&&s.jsx("div",{className:m(e.counts.total),children:e.counts.total>99?"99+":e.counts.total})]})]})]},c))}):s.jsxs("div",{className:"no-accounts",children:[s.jsx("p",{children:"No Bluesky accounts connected."}),s.jsx("p",{children:"Connect your accounts through the Auth Portal."})]}),s.jsx("div",{className:"server-status",children:s.jsx("div",{className:`status-indicator ${j?"connected":"error"}`,children:j?"Connected to Auth Server":"Not connected to Auth Server"})})]}),s.jsxs("div",{className:"popup-actions",children:[s.jsx("button",{className:"action-button primary",onClick:()=>u("/"),children:"Open Bluesky"}),s.jsx("button",{className:"action-button secondary",onClick:y,children:"Auth Portal"}),s.jsx("button",{className:"action-button secondary",onClick:N,children:"Options"})]}),s.jsxs("footer",{className:"popup-footer",children:[s.jsx("p",{className:"footer-slogan",children:"Free & open source, for all, forever."}),s.jsxs("p",{className:"footer-contact",children:["Feedback, suggestions, assistance, & updates:",s.jsx("a",{href:"#",onClick:e=>{e.preventDefault(),u("/profile/symm.app")},children:"@symm.app"})]}),s.jsx("p",{className:"footer-copyright",children:"Copyright (c) 2025 Dylan Gregori Singer (symmetricalboy)"})]})]})}b.createRoot(document.getElementById("root")).render(s.jsx(k.StrictMode,{children:s.jsx(C,{})}));

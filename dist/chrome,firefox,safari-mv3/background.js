var background=function(){"use strict";var Mr,$r;const R=($r=(Mr=globalThis.browser)==null?void 0:Mr.runtime)!=null&&$r.id?globalThis.browser:globalThis.chrome;function vp(V){return V==null||typeof V=="function"?{main:V}:V}var ir={exports:{}},Fr;function Lp(){return Fr||(Fr=1,function(V){var M=Object.create,D=Object.defineProperty,z=Object.getOwnPropertyDescriptor,H=Object.getOwnPropertyNames,se=Object.getPrototypeOf,We=Object.prototype.hasOwnProperty,Ae=(e,i)=>function(){return i||(0,e[H(e)[0]])((i={exports:{}}).exports,i),i.exports},p=(e,i)=>{for(var r in i)D(e,r,{get:i[r],enumerable:!0})},Je=(e,i,r,n)=>{if(i&&typeof i=="object"||typeof i=="function")for(let s of H(i))!We.call(e,s)&&s!==r&&D(e,s,{get:()=>i[s],enumerable:!(n=z(i,s))||n.enumerable});return e},vt=(e,i,r)=>(r=e!=null?M(se(e)):{},Je(!e||!e.__esModule?D(r,"default",{value:e,enumerable:!0}):r,e)),or=e=>Je(D({},"__esModule",{value:!0}),e),Lt=Ae({"../../node_modules/.pnpm/graphemer@1.4.0/node_modules/graphemer/lib/boundaries.js"(e){Object.defineProperty(e,"__esModule",{value:!0}),e.EXTENDED_PICTOGRAPHIC=e.CLUSTER_BREAK=void 0,function(i){i[i.CR=0]="CR",i[i.LF=1]="LF",i[i.CONTROL=2]="CONTROL",i[i.EXTEND=3]="EXTEND",i[i.REGIONAL_INDICATOR=4]="REGIONAL_INDICATOR",i[i.SPACINGMARK=5]="SPACINGMARK",i[i.L=6]="L",i[i.V=7]="V",i[i.T=8]="T",i[i.LV=9]="LV",i[i.LVT=10]="LVT",i[i.OTHER=11]="OTHER",i[i.PREPEND=12]="PREPEND",i[i.E_BASE=13]="E_BASE",i[i.E_MODIFIER=14]="E_MODIFIER",i[i.ZWJ=15]="ZWJ",i[i.GLUE_AFTER_ZWJ=16]="GLUE_AFTER_ZWJ",i[i.E_BASE_GAZ=17]="E_BASE_GAZ"}(e.CLUSTER_BREAK||(e.CLUSTER_BREAK={})),e.EXTENDED_PICTOGRAPHIC=101}}),_t=Ae({"../../node_modules/.pnpm/graphemer@1.4.0/node_modules/graphemer/lib/GraphemerHelper.js"(e){Object.defineProperty(e,"__esModule",{value:!0});var i=Lt(),r=0,n=1,s=2,a=3,t=4,l=class{static isSurrogate(u,h){return 55296<=u.charCodeAt(h)&&u.charCodeAt(h)<=56319&&56320<=u.charCodeAt(h+1)&&u.charCodeAt(h+1)<=57343}static codePointAt(u,h){h===void 0&&(h=0);const T=u.charCodeAt(h);if(55296<=T&&T<=56319&&h<u.length-1){const v=T,x=u.charCodeAt(h+1);return 56320<=x&&x<=57343?(v-55296)*1024+(x-56320)+65536:v}if(56320<=T&&T<=57343&&h>=1){const v=u.charCodeAt(h-1),x=T;return 55296<=v&&v<=56319?(v-55296)*1024+(x-56320)+65536:x}return T}static shouldBreak(u,h,T,v,x,X){const K=[u].concat(h).concat([T]),q=[v].concat(x).concat([X]),j=K[K.length-2],F=T,ie=X,re=K.lastIndexOf(i.CLUSTER_BREAK.REGIONAL_INDICATOR);if(re>0&&K.slice(1,re).every(function(Y){return Y===i.CLUSTER_BREAK.REGIONAL_INDICATOR})&&[i.CLUSTER_BREAK.PREPEND,i.CLUSTER_BREAK.REGIONAL_INDICATOR].indexOf(j)===-1)return K.filter(function(Y){return Y===i.CLUSTER_BREAK.REGIONAL_INDICATOR}).length%2===1?a:t;if(j===i.CLUSTER_BREAK.CR&&F===i.CLUSTER_BREAK.LF)return r;if(j===i.CLUSTER_BREAK.CONTROL||j===i.CLUSTER_BREAK.CR||j===i.CLUSTER_BREAK.LF)return n;if(F===i.CLUSTER_BREAK.CONTROL||F===i.CLUSTER_BREAK.CR||F===i.CLUSTER_BREAK.LF)return n;if(j===i.CLUSTER_BREAK.L&&(F===i.CLUSTER_BREAK.L||F===i.CLUSTER_BREAK.V||F===i.CLUSTER_BREAK.LV||F===i.CLUSTER_BREAK.LVT))return r;if((j===i.CLUSTER_BREAK.LV||j===i.CLUSTER_BREAK.V)&&(F===i.CLUSTER_BREAK.V||F===i.CLUSTER_BREAK.T))return r;if((j===i.CLUSTER_BREAK.LVT||j===i.CLUSTER_BREAK.T)&&F===i.CLUSTER_BREAK.T)return r;if(F===i.CLUSTER_BREAK.EXTEND||F===i.CLUSTER_BREAK.ZWJ)return r;if(F===i.CLUSTER_BREAK.SPACINGMARK)return r;if(j===i.CLUSTER_BREAK.PREPEND)return r;const N=q.slice(0,-1).lastIndexOf(i.EXTENDED_PICTOGRAPHIC);return N!==-1&&q[N]===i.EXTENDED_PICTOGRAPHIC&&K.slice(N+1,-2).every(function(Y){return Y===i.CLUSTER_BREAK.EXTEND})&&j===i.CLUSTER_BREAK.ZWJ&&ie===i.EXTENDED_PICTOGRAPHIC?r:h.indexOf(i.CLUSTER_BREAK.REGIONAL_INDICATOR)!==-1?s:j===i.CLUSTER_BREAK.REGIONAL_INDICATOR&&F===i.CLUSTER_BREAK.REGIONAL_INDICATOR?r:n}};e.default=l}}),ce=Ae({"../../node_modules/.pnpm/graphemer@1.4.0/node_modules/graphemer/lib/GraphemerIterator.js"(e){Object.defineProperty(e,"__esModule",{value:!0});var i=class{constructor(r,n){this._index=0,this._str=r,this._nextBreak=n}[Symbol.iterator](){return this}next(){let r;if((r=this._nextBreak(this._str,this._index))<this._str.length){const n=this._str.slice(this._index,r);return this._index=r,{value:n,done:!1}}if(this._index<this._str.length){const n=this._str.slice(this._index);return this._index=this._str.length,{value:n,done:!1}}return{value:void 0,done:!0}}};e.default=i}}),Ct=Ae({"../../node_modules/.pnpm/graphemer@1.4.0/node_modules/graphemer/lib/Graphemer.js"(e){var i=e&&e.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});var r=Lt(),n=i(_t()),s=i(ce()),a=class{static nextBreak(t,l){if(l===void 0&&(l=0),l<0)return 0;if(l>=t.length-1)return t.length;const u=n.default.codePointAt(t,l),h=a.getGraphemeBreakProperty(u),T=a.getEmojiProperty(u),v=[],x=[];for(let X=l+1;X<t.length;X++){if(n.default.isSurrogate(t,X-1))continue;const K=n.default.codePointAt(t,X),q=a.getGraphemeBreakProperty(K),j=a.getEmojiProperty(K);if(n.default.shouldBreak(h,v,q,T,x,j))return X;v.push(q),x.push(j)}return t.length}splitGraphemes(t){const l=[];let u=0,h;for(;(h=a.nextBreak(t,u))<t.length;)l.push(t.slice(u,h)),u=h;return u<t.length&&l.push(t.slice(u)),l}iterateGraphemes(t){return new s.default(t,a.nextBreak)}countGraphemes(t){let l=0,u=0,h;for(;(h=a.nextBreak(t,u))<t.length;)u=h,l++;return u<t.length&&l++,l}static getGraphemeBreakProperty(t){if(t<48905){if(t<44116){if(t<4141){if(t<2818){if(t<2363)if(t<1759){if(t<1471){if(t<127){if(t<11){if(t<10){if(0<=t&&t<=9)return r.CLUSTER_BREAK.CONTROL}else if(t===10)return r.CLUSTER_BREAK.LF}else if(t<13){if(11<=t&&t<=12)return r.CLUSTER_BREAK.CONTROL}else if(t<14){if(t===13)return r.CLUSTER_BREAK.CR}else if(14<=t&&t<=31)return r.CLUSTER_BREAK.CONTROL}else if(t<768){if(t<173){if(127<=t&&t<=159)return r.CLUSTER_BREAK.CONTROL}else if(t===173)return r.CLUSTER_BREAK.CONTROL}else if(t<1155){if(768<=t&&t<=879)return r.CLUSTER_BREAK.EXTEND}else if(t<1425){if(1155<=t&&t<=1161)return r.CLUSTER_BREAK.EXTEND}else if(1425<=t&&t<=1469)return r.CLUSTER_BREAK.EXTEND}else if(t<1552){if(t<1476){if(t<1473){if(t===1471)return r.CLUSTER_BREAK.EXTEND}else if(1473<=t&&t<=1474)return r.CLUSTER_BREAK.EXTEND}else if(t<1479){if(1476<=t&&t<=1477)return r.CLUSTER_BREAK.EXTEND}else if(t<1536){if(t===1479)return r.CLUSTER_BREAK.EXTEND}else if(1536<=t&&t<=1541)return r.CLUSTER_BREAK.PREPEND}else if(t<1648){if(t<1564){if(1552<=t&&t<=1562)return r.CLUSTER_BREAK.EXTEND}else if(t<1611){if(t===1564)return r.CLUSTER_BREAK.CONTROL}else if(1611<=t&&t<=1631)return r.CLUSTER_BREAK.EXTEND}else if(t<1750){if(t===1648)return r.CLUSTER_BREAK.EXTEND}else if(t<1757){if(1750<=t&&t<=1756)return r.CLUSTER_BREAK.EXTEND}else if(t===1757)return r.CLUSTER_BREAK.PREPEND}else if(t<2075){if(t<1840)if(t<1770){if(t<1767){if(1759<=t&&t<=1764)return r.CLUSTER_BREAK.EXTEND}else if(1767<=t&&t<=1768)return r.CLUSTER_BREAK.EXTEND}else if(t<1807){if(1770<=t&&t<=1773)return r.CLUSTER_BREAK.EXTEND}else{if(t===1807)return r.CLUSTER_BREAK.PREPEND;if(t===1809)return r.CLUSTER_BREAK.EXTEND}else if(t<2027){if(t<1958){if(1840<=t&&t<=1866)return r.CLUSTER_BREAK.EXTEND}else if(1958<=t&&t<=1968)return r.CLUSTER_BREAK.EXTEND}else if(t<2045){if(2027<=t&&t<=2035)return r.CLUSTER_BREAK.EXTEND}else if(t<2070){if(t===2045)return r.CLUSTER_BREAK.EXTEND}else if(2070<=t&&t<=2073)return r.CLUSTER_BREAK.EXTEND}else if(t<2200){if(t<2089){if(t<2085){if(2075<=t&&t<=2083)return r.CLUSTER_BREAK.EXTEND}else if(2085<=t&&t<=2087)return r.CLUSTER_BREAK.EXTEND}else if(t<2137){if(2089<=t&&t<=2093)return r.CLUSTER_BREAK.EXTEND}else if(t<2192){if(2137<=t&&t<=2139)return r.CLUSTER_BREAK.EXTEND}else if(2192<=t&&t<=2193)return r.CLUSTER_BREAK.PREPEND}else if(t<2275){if(t<2250){if(2200<=t&&t<=2207)return r.CLUSTER_BREAK.EXTEND}else if(t<2274){if(2250<=t&&t<=2273)return r.CLUSTER_BREAK.EXTEND}else if(t===2274)return r.CLUSTER_BREAK.PREPEND}else if(t<2307){if(2275<=t&&t<=2306)return r.CLUSTER_BREAK.EXTEND}else{if(t===2307)return r.CLUSTER_BREAK.SPACINGMARK;if(t===2362)return r.CLUSTER_BREAK.EXTEND}else if(t<2561){if(t<2434){if(t<2381){if(t<2366){if(t===2363)return r.CLUSTER_BREAK.SPACINGMARK;if(t===2364)return r.CLUSTER_BREAK.EXTEND}else if(t<2369){if(2366<=t&&t<=2368)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<2377){if(2369<=t&&t<=2376)return r.CLUSTER_BREAK.EXTEND}else if(2377<=t&&t<=2380)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<2385){if(t<2382){if(t===2381)return r.CLUSTER_BREAK.EXTEND}else if(2382<=t&&t<=2383)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<2402){if(2385<=t&&t<=2391)return r.CLUSTER_BREAK.EXTEND}else if(t<2433){if(2402<=t&&t<=2403)return r.CLUSTER_BREAK.EXTEND}else if(t===2433)return r.CLUSTER_BREAK.EXTEND}else if(t<2503){if(t<2494){if(t<2492){if(2434<=t&&t<=2435)return r.CLUSTER_BREAK.SPACINGMARK}else if(t===2492)return r.CLUSTER_BREAK.EXTEND}else if(t<2495){if(t===2494)return r.CLUSTER_BREAK.EXTEND}else if(t<2497){if(2495<=t&&t<=2496)return r.CLUSTER_BREAK.SPACINGMARK}else if(2497<=t&&t<=2500)return r.CLUSTER_BREAK.EXTEND}else if(t<2519){if(t<2507){if(2503<=t&&t<=2504)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<2509){if(2507<=t&&t<=2508)return r.CLUSTER_BREAK.SPACINGMARK}else if(t===2509)return r.CLUSTER_BREAK.EXTEND}else if(t<2530){if(t===2519)return r.CLUSTER_BREAK.EXTEND}else if(t<2558){if(2530<=t&&t<=2531)return r.CLUSTER_BREAK.EXTEND}else if(t===2558)return r.CLUSTER_BREAK.EXTEND}else if(t<2691){if(t<2631){if(t<2620){if(t<2563){if(2561<=t&&t<=2562)return r.CLUSTER_BREAK.EXTEND}else if(t===2563)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<2622){if(t===2620)return r.CLUSTER_BREAK.EXTEND}else if(t<2625){if(2622<=t&&t<=2624)return r.CLUSTER_BREAK.SPACINGMARK}else if(2625<=t&&t<=2626)return r.CLUSTER_BREAK.EXTEND}else if(t<2672){if(t<2635){if(2631<=t&&t<=2632)return r.CLUSTER_BREAK.EXTEND}else if(t<2641){if(2635<=t&&t<=2637)return r.CLUSTER_BREAK.EXTEND}else if(t===2641)return r.CLUSTER_BREAK.EXTEND}else if(t<2677){if(2672<=t&&t<=2673)return r.CLUSTER_BREAK.EXTEND}else if(t<2689){if(t===2677)return r.CLUSTER_BREAK.EXTEND}else if(2689<=t&&t<=2690)return r.CLUSTER_BREAK.EXTEND}else if(t<2761){if(t<2750){if(t===2691)return r.CLUSTER_BREAK.SPACINGMARK;if(t===2748)return r.CLUSTER_BREAK.EXTEND}else if(t<2753){if(2750<=t&&t<=2752)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<2759){if(2753<=t&&t<=2757)return r.CLUSTER_BREAK.EXTEND}else if(2759<=t&&t<=2760)return r.CLUSTER_BREAK.EXTEND}else if(t<2786){if(t<2763){if(t===2761)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<2765){if(2763<=t&&t<=2764)return r.CLUSTER_BREAK.SPACINGMARK}else if(t===2765)return r.CLUSTER_BREAK.EXTEND}else if(t<2810){if(2786<=t&&t<=2787)return r.CLUSTER_BREAK.EXTEND}else if(t<2817){if(2810<=t&&t<=2815)return r.CLUSTER_BREAK.EXTEND}else if(t===2817)return r.CLUSTER_BREAK.EXTEND}else if(t<3315){if(t<3076){if(t<2946){if(t<2887){if(t<2878){if(t<2876){if(2818<=t&&t<=2819)return r.CLUSTER_BREAK.SPACINGMARK}else if(t===2876)return r.CLUSTER_BREAK.EXTEND}else if(t<2880){if(2878<=t&&t<=2879)return r.CLUSTER_BREAK.EXTEND}else if(t<2881){if(t===2880)return r.CLUSTER_BREAK.SPACINGMARK}else if(2881<=t&&t<=2884)return r.CLUSTER_BREAK.EXTEND}else if(t<2893){if(t<2891){if(2887<=t&&t<=2888)return r.CLUSTER_BREAK.SPACINGMARK}else if(2891<=t&&t<=2892)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<2901){if(t===2893)return r.CLUSTER_BREAK.EXTEND}else if(t<2914){if(2901<=t&&t<=2903)return r.CLUSTER_BREAK.EXTEND}else if(2914<=t&&t<=2915)return r.CLUSTER_BREAK.EXTEND}else if(t<3014){if(t<3007){if(t===2946||t===3006)return r.CLUSTER_BREAK.EXTEND}else if(t<3008){if(t===3007)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<3009){if(t===3008)return r.CLUSTER_BREAK.EXTEND}else if(3009<=t&&t<=3010)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<3031){if(t<3018){if(3014<=t&&t<=3016)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<3021){if(3018<=t&&t<=3020)return r.CLUSTER_BREAK.SPACINGMARK}else if(t===3021)return r.CLUSTER_BREAK.EXTEND}else if(t<3072){if(t===3031)return r.CLUSTER_BREAK.EXTEND}else if(t<3073){if(t===3072)return r.CLUSTER_BREAK.EXTEND}else if(3073<=t&&t<=3075)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<3262){if(t<3146){if(t<3134){if(t===3076||t===3132)return r.CLUSTER_BREAK.EXTEND}else if(t<3137){if(3134<=t&&t<=3136)return r.CLUSTER_BREAK.EXTEND}else if(t<3142){if(3137<=t&&t<=3140)return r.CLUSTER_BREAK.SPACINGMARK}else if(3142<=t&&t<=3144)return r.CLUSTER_BREAK.EXTEND}else if(t<3201){if(t<3157){if(3146<=t&&t<=3149)return r.CLUSTER_BREAK.EXTEND}else if(t<3170){if(3157<=t&&t<=3158)return r.CLUSTER_BREAK.EXTEND}else if(3170<=t&&t<=3171)return r.CLUSTER_BREAK.EXTEND}else if(t<3202){if(t===3201)return r.CLUSTER_BREAK.EXTEND}else if(t<3260){if(3202<=t&&t<=3203)return r.CLUSTER_BREAK.SPACINGMARK}else if(t===3260)return r.CLUSTER_BREAK.EXTEND}else if(t<3270){if(t<3264){if(t===3262)return r.CLUSTER_BREAK.SPACINGMARK;if(t===3263)return r.CLUSTER_BREAK.EXTEND}else if(t<3266){if(3264<=t&&t<=3265)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<3267){if(t===3266)return r.CLUSTER_BREAK.EXTEND}else if(3267<=t&&t<=3268)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<3276){if(t<3271){if(t===3270)return r.CLUSTER_BREAK.EXTEND}else if(t<3274){if(3271<=t&&t<=3272)return r.CLUSTER_BREAK.SPACINGMARK}else if(3274<=t&&t<=3275)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<3285){if(3276<=t&&t<=3277)return r.CLUSTER_BREAK.EXTEND}else if(t<3298){if(3285<=t&&t<=3286)return r.CLUSTER_BREAK.EXTEND}else if(3298<=t&&t<=3299)return r.CLUSTER_BREAK.EXTEND}else if(t<3551){if(t<3406){if(t<3391){if(t<3330){if(t<3328){if(t===3315)return r.CLUSTER_BREAK.SPACINGMARK}else if(3328<=t&&t<=3329)return r.CLUSTER_BREAK.EXTEND}else if(t<3387){if(3330<=t&&t<=3331)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<3390){if(3387<=t&&t<=3388)return r.CLUSTER_BREAK.EXTEND}else if(t===3390)return r.CLUSTER_BREAK.EXTEND}else if(t<3398){if(t<3393){if(3391<=t&&t<=3392)return r.CLUSTER_BREAK.SPACINGMARK}else if(3393<=t&&t<=3396)return r.CLUSTER_BREAK.EXTEND}else if(t<3402){if(3398<=t&&t<=3400)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<3405){if(3402<=t&&t<=3404)return r.CLUSTER_BREAK.SPACINGMARK}else if(t===3405)return r.CLUSTER_BREAK.EXTEND}else if(t<3530){if(t<3426){if(t===3406)return r.CLUSTER_BREAK.PREPEND;if(t===3415)return r.CLUSTER_BREAK.EXTEND}else if(t<3457){if(3426<=t&&t<=3427)return r.CLUSTER_BREAK.EXTEND}else if(t<3458){if(t===3457)return r.CLUSTER_BREAK.EXTEND}else if(3458<=t&&t<=3459)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<3538){if(t<3535){if(t===3530)return r.CLUSTER_BREAK.EXTEND}else if(t<3536){if(t===3535)return r.CLUSTER_BREAK.EXTEND}else if(3536<=t&&t<=3537)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<3542){if(3538<=t&&t<=3540)return r.CLUSTER_BREAK.EXTEND}else if(t<3544){if(t===3542)return r.CLUSTER_BREAK.EXTEND}else if(3544<=t&&t<=3550)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<3893){if(t<3655){if(t<3633){if(t<3570){if(t===3551)return r.CLUSTER_BREAK.EXTEND}else if(3570<=t&&t<=3571)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<3635){if(t===3633)return r.CLUSTER_BREAK.EXTEND}else if(t<3636){if(t===3635)return r.CLUSTER_BREAK.SPACINGMARK}else if(3636<=t&&t<=3642)return r.CLUSTER_BREAK.EXTEND}else if(t<3764)if(t<3761){if(3655<=t&&t<=3662)return r.CLUSTER_BREAK.EXTEND}else{if(t===3761)return r.CLUSTER_BREAK.EXTEND;if(t===3763)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<3784){if(3764<=t&&t<=3772)return r.CLUSTER_BREAK.EXTEND}else if(t<3864){if(3784<=t&&t<=3790)return r.CLUSTER_BREAK.EXTEND}else if(3864<=t&&t<=3865)return r.CLUSTER_BREAK.EXTEND}else if(t<3967){if(t<3897){if(t===3893||t===3895)return r.CLUSTER_BREAK.EXTEND}else if(t<3902){if(t===3897)return r.CLUSTER_BREAK.EXTEND}else if(t<3953){if(3902<=t&&t<=3903)return r.CLUSTER_BREAK.SPACINGMARK}else if(3953<=t&&t<=3966)return r.CLUSTER_BREAK.EXTEND}else if(t<3981){if(t<3968){if(t===3967)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<3974){if(3968<=t&&t<=3972)return r.CLUSTER_BREAK.EXTEND}else if(3974<=t&&t<=3975)return r.CLUSTER_BREAK.EXTEND}else if(t<3993){if(3981<=t&&t<=3991)return r.CLUSTER_BREAK.EXTEND}else if(t<4038){if(3993<=t&&t<=4028)return r.CLUSTER_BREAK.EXTEND}else if(t===4038)return r.CLUSTER_BREAK.EXTEND}else if(t<7204){if(t<6448){if(t<5938){if(t<4226){if(t<4157){if(t<4146){if(t<4145){if(4141<=t&&t<=4144)return r.CLUSTER_BREAK.EXTEND}else if(t===4145)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<4153){if(4146<=t&&t<=4151)return r.CLUSTER_BREAK.EXTEND}else if(t<4155){if(4153<=t&&t<=4154)return r.CLUSTER_BREAK.EXTEND}else if(4155<=t&&t<=4156)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<4184){if(t<4182){if(4157<=t&&t<=4158)return r.CLUSTER_BREAK.EXTEND}else if(4182<=t&&t<=4183)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<4190){if(4184<=t&&t<=4185)return r.CLUSTER_BREAK.EXTEND}else if(t<4209){if(4190<=t&&t<=4192)return r.CLUSTER_BREAK.EXTEND}else if(4209<=t&&t<=4212)return r.CLUSTER_BREAK.EXTEND}else if(t<4352){if(t<4229){if(t===4226)return r.CLUSTER_BREAK.EXTEND;if(t===4228)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<4237){if(4229<=t&&t<=4230)return r.CLUSTER_BREAK.EXTEND}else if(t===4237||t===4253)return r.CLUSTER_BREAK.EXTEND}else if(t<4957){if(t<4448){if(4352<=t&&t<=4447)return r.CLUSTER_BREAK.L}else if(t<4520){if(4448<=t&&t<=4519)return r.CLUSTER_BREAK.V}else if(4520<=t&&t<=4607)return r.CLUSTER_BREAK.T}else if(t<5906){if(4957<=t&&t<=4959)return r.CLUSTER_BREAK.EXTEND}else if(t<5909){if(5906<=t&&t<=5908)return r.CLUSTER_BREAK.EXTEND}else if(t===5909)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<6089){if(t<6070){if(t<5970){if(t<5940){if(5938<=t&&t<=5939)return r.CLUSTER_BREAK.EXTEND}else if(t===5940)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<6002){if(5970<=t&&t<=5971)return r.CLUSTER_BREAK.EXTEND}else if(t<6068){if(6002<=t&&t<=6003)return r.CLUSTER_BREAK.EXTEND}else if(6068<=t&&t<=6069)return r.CLUSTER_BREAK.EXTEND}else if(t<6078){if(t<6071){if(t===6070)return r.CLUSTER_BREAK.SPACINGMARK}else if(6071<=t&&t<=6077)return r.CLUSTER_BREAK.EXTEND}else if(t<6086){if(6078<=t&&t<=6085)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<6087){if(t===6086)return r.CLUSTER_BREAK.EXTEND}else if(6087<=t&&t<=6088)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<6277)if(t<6155){if(t<6109){if(6089<=t&&t<=6099)return r.CLUSTER_BREAK.EXTEND}else if(t===6109)return r.CLUSTER_BREAK.EXTEND}else if(t<6158){if(6155<=t&&t<=6157)return r.CLUSTER_BREAK.EXTEND}else{if(t===6158)return r.CLUSTER_BREAK.CONTROL;if(t===6159)return r.CLUSTER_BREAK.EXTEND}else if(t<6435){if(t<6313){if(6277<=t&&t<=6278)return r.CLUSTER_BREAK.EXTEND}else if(t<6432){if(t===6313)return r.CLUSTER_BREAK.EXTEND}else if(6432<=t&&t<=6434)return r.CLUSTER_BREAK.EXTEND}else if(t<6439){if(6435<=t&&t<=6438)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<6441){if(6439<=t&&t<=6440)return r.CLUSTER_BREAK.EXTEND}else if(6441<=t&&t<=6443)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<6971){if(t<6744)if(t<6681){if(t<6451){if(t<6450){if(6448<=t&&t<=6449)return r.CLUSTER_BREAK.SPACINGMARK}else if(t===6450)return r.CLUSTER_BREAK.EXTEND}else if(t<6457){if(6451<=t&&t<=6456)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<6679){if(6457<=t&&t<=6459)return r.CLUSTER_BREAK.EXTEND}else if(6679<=t&&t<=6680)return r.CLUSTER_BREAK.EXTEND}else if(t<6741){if(t<6683){if(6681<=t&&t<=6682)return r.CLUSTER_BREAK.SPACINGMARK}else if(t===6683)return r.CLUSTER_BREAK.EXTEND}else if(t<6742){if(t===6741)return r.CLUSTER_BREAK.SPACINGMARK}else{if(t===6742)return r.CLUSTER_BREAK.EXTEND;if(t===6743)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<6771){if(t<6754){if(t<6752){if(6744<=t&&t<=6750)return r.CLUSTER_BREAK.EXTEND}else if(t===6752)return r.CLUSTER_BREAK.EXTEND}else if(t<6757){if(t===6754)return r.CLUSTER_BREAK.EXTEND}else if(t<6765){if(6757<=t&&t<=6764)return r.CLUSTER_BREAK.EXTEND}else if(6765<=t&&t<=6770)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<6912){if(t<6783){if(6771<=t&&t<=6780)return r.CLUSTER_BREAK.EXTEND}else if(t<6832){if(t===6783)return r.CLUSTER_BREAK.EXTEND}else if(6832<=t&&t<=6862)return r.CLUSTER_BREAK.EXTEND}else if(t<6916){if(6912<=t&&t<=6915)return r.CLUSTER_BREAK.EXTEND}else if(t<6964){if(t===6916)return r.CLUSTER_BREAK.SPACINGMARK}else if(6964<=t&&t<=6970)return r.CLUSTER_BREAK.EXTEND}else if(t<7080){if(t<7019){if(t<6973){if(t===6971)return r.CLUSTER_BREAK.SPACINGMARK;if(t===6972)return r.CLUSTER_BREAK.EXTEND}else if(t<6978){if(6973<=t&&t<=6977)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<6979){if(t===6978)return r.CLUSTER_BREAK.EXTEND}else if(6979<=t&&t<=6980)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<7073){if(t<7040){if(7019<=t&&t<=7027)return r.CLUSTER_BREAK.EXTEND}else if(t<7042){if(7040<=t&&t<=7041)return r.CLUSTER_BREAK.EXTEND}else if(t===7042)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<7074){if(t===7073)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<7078){if(7074<=t&&t<=7077)return r.CLUSTER_BREAK.EXTEND}else if(7078<=t&&t<=7079)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<7144)if(t<7083){if(t<7082){if(7080<=t&&t<=7081)return r.CLUSTER_BREAK.EXTEND}else if(t===7082)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<7142){if(7083<=t&&t<=7085)return r.CLUSTER_BREAK.EXTEND}else{if(t===7142)return r.CLUSTER_BREAK.EXTEND;if(t===7143)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<7150){if(t<7146){if(7144<=t&&t<=7145)return r.CLUSTER_BREAK.EXTEND}else if(t<7149){if(7146<=t&&t<=7148)return r.CLUSTER_BREAK.SPACINGMARK}else if(t===7149)return r.CLUSTER_BREAK.EXTEND}else if(t<7151){if(t===7150)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<7154){if(7151<=t&&t<=7153)return r.CLUSTER_BREAK.EXTEND}else if(7154<=t&&t<=7155)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<43346){if(t<11647){if(t<7415){if(t<7380){if(t<7220){if(t<7212){if(7204<=t&&t<=7211)return r.CLUSTER_BREAK.SPACINGMARK}else if(7212<=t&&t<=7219)return r.CLUSTER_BREAK.EXTEND}else if(t<7222){if(7220<=t&&t<=7221)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<7376){if(7222<=t&&t<=7223)return r.CLUSTER_BREAK.EXTEND}else if(7376<=t&&t<=7378)return r.CLUSTER_BREAK.EXTEND}else if(t<7394){if(t<7393){if(7380<=t&&t<=7392)return r.CLUSTER_BREAK.EXTEND}else if(t===7393)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<7405){if(7394<=t&&t<=7400)return r.CLUSTER_BREAK.EXTEND}else if(t===7405||t===7412)return r.CLUSTER_BREAK.EXTEND}else if(t<8205)if(t<7616){if(t<7416){if(t===7415)return r.CLUSTER_BREAK.SPACINGMARK}else if(7416<=t&&t<=7417)return r.CLUSTER_BREAK.EXTEND}else if(t<8203){if(7616<=t&&t<=7679)return r.CLUSTER_BREAK.EXTEND}else{if(t===8203)return r.CLUSTER_BREAK.CONTROL;if(t===8204)return r.CLUSTER_BREAK.EXTEND}else if(t<8288){if(t<8206){if(t===8205)return r.CLUSTER_BREAK.ZWJ}else if(t<8232){if(8206<=t&&t<=8207)return r.CLUSTER_BREAK.CONTROL}else if(8232<=t&&t<=8238)return r.CLUSTER_BREAK.CONTROL}else if(t<8400){if(8288<=t&&t<=8303)return r.CLUSTER_BREAK.CONTROL}else if(t<11503){if(8400<=t&&t<=8432)return r.CLUSTER_BREAK.EXTEND}else if(11503<=t&&t<=11505)return r.CLUSTER_BREAK.EXTEND}else if(t<43043){if(t<42612){if(t<12330){if(t<11744){if(t===11647)return r.CLUSTER_BREAK.EXTEND}else if(11744<=t&&t<=11775)return r.CLUSTER_BREAK.EXTEND}else if(t<12441){if(12330<=t&&t<=12335)return r.CLUSTER_BREAK.EXTEND}else if(t<42607){if(12441<=t&&t<=12442)return r.CLUSTER_BREAK.EXTEND}else if(42607<=t&&t<=42610)return r.CLUSTER_BREAK.EXTEND}else if(t<43010){if(t<42654){if(42612<=t&&t<=42621)return r.CLUSTER_BREAK.EXTEND}else if(t<42736){if(42654<=t&&t<=42655)return r.CLUSTER_BREAK.EXTEND}else if(42736<=t&&t<=42737)return r.CLUSTER_BREAK.EXTEND}else if(t<43014){if(t===43010)return r.CLUSTER_BREAK.EXTEND}else if(t===43014||t===43019)return r.CLUSTER_BREAK.EXTEND}else if(t<43188){if(t<43047){if(t<43045){if(43043<=t&&t<=43044)return r.CLUSTER_BREAK.SPACINGMARK}else if(43045<=t&&t<=43046)return r.CLUSTER_BREAK.EXTEND}else if(t<43052){if(t===43047)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<43136){if(t===43052)return r.CLUSTER_BREAK.EXTEND}else if(43136<=t&&t<=43137)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<43263){if(t<43204){if(43188<=t&&t<=43203)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<43232){if(43204<=t&&t<=43205)return r.CLUSTER_BREAK.EXTEND}else if(43232<=t&&t<=43249)return r.CLUSTER_BREAK.EXTEND}else if(t<43302){if(t===43263)return r.CLUSTER_BREAK.EXTEND}else if(t<43335){if(43302<=t&&t<=43309)return r.CLUSTER_BREAK.EXTEND}else if(43335<=t&&t<=43345)return r.CLUSTER_BREAK.EXTEND}else if(t<43698){if(t<43493){if(t<43444)if(t<43392){if(t<43360){if(43346<=t&&t<=43347)return r.CLUSTER_BREAK.SPACINGMARK}else if(43360<=t&&t<=43388)return r.CLUSTER_BREAK.L}else if(t<43395){if(43392<=t&&t<=43394)return r.CLUSTER_BREAK.EXTEND}else{if(t===43395)return r.CLUSTER_BREAK.SPACINGMARK;if(t===43443)return r.CLUSTER_BREAK.EXTEND}else if(t<43450){if(t<43446){if(43444<=t&&t<=43445)return r.CLUSTER_BREAK.SPACINGMARK}else if(43446<=t&&t<=43449)return r.CLUSTER_BREAK.EXTEND}else if(t<43452){if(43450<=t&&t<=43451)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<43454){if(43452<=t&&t<=43453)return r.CLUSTER_BREAK.EXTEND}else if(43454<=t&&t<=43456)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<43573){if(t<43567){if(t<43561){if(t===43493)return r.CLUSTER_BREAK.EXTEND}else if(43561<=t&&t<=43566)return r.CLUSTER_BREAK.EXTEND}else if(t<43569){if(43567<=t&&t<=43568)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<43571){if(43569<=t&&t<=43570)return r.CLUSTER_BREAK.EXTEND}else if(43571<=t&&t<=43572)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<43597){if(t<43587){if(43573<=t&&t<=43574)return r.CLUSTER_BREAK.EXTEND}else if(t===43587||t===43596)return r.CLUSTER_BREAK.EXTEND}else if(t<43644){if(t===43597)return r.CLUSTER_BREAK.SPACINGMARK}else if(t===43644||t===43696)return r.CLUSTER_BREAK.EXTEND}else if(t<44006){if(t<43756)if(t<43710){if(t<43703){if(43698<=t&&t<=43700)return r.CLUSTER_BREAK.EXTEND}else if(43703<=t&&t<=43704)return r.CLUSTER_BREAK.EXTEND}else if(t<43713){if(43710<=t&&t<=43711)return r.CLUSTER_BREAK.EXTEND}else{if(t===43713)return r.CLUSTER_BREAK.EXTEND;if(t===43755)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<43766){if(t<43758){if(43756<=t&&t<=43757)return r.CLUSTER_BREAK.EXTEND}else if(t<43765){if(43758<=t&&t<=43759)return r.CLUSTER_BREAK.SPACINGMARK}else if(t===43765)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<44003){if(t===43766)return r.CLUSTER_BREAK.EXTEND}else if(t<44005){if(44003<=t&&t<=44004)return r.CLUSTER_BREAK.SPACINGMARK}else if(t===44005)return r.CLUSTER_BREAK.EXTEND}else if(t<44032)if(t<44009){if(t<44008){if(44006<=t&&t<=44007)return r.CLUSTER_BREAK.SPACINGMARK}else if(t===44008)return r.CLUSTER_BREAK.EXTEND}else if(t<44012){if(44009<=t&&t<=44010)return r.CLUSTER_BREAK.SPACINGMARK}else{if(t===44012)return r.CLUSTER_BREAK.SPACINGMARK;if(t===44013)return r.CLUSTER_BREAK.EXTEND}else if(t<44061){if(t<44033){if(t===44032)return r.CLUSTER_BREAK.LV}else if(t<44060){if(44033<=t&&t<=44059)return r.CLUSTER_BREAK.LVT}else if(t===44060)return r.CLUSTER_BREAK.LV}else if(t<44088){if(44061<=t&&t<=44087)return r.CLUSTER_BREAK.LVT}else if(t<44089){if(t===44088)return r.CLUSTER_BREAK.LV}else if(44089<=t&&t<=44115)return r.CLUSTER_BREAK.LVT}else if(t<46497){if(t<45293){if(t<44704){if(t<44397){if(t<44256){if(t<44173){if(t<44144){if(t<44117){if(t===44116)return r.CLUSTER_BREAK.LV}else if(44117<=t&&t<=44143)return r.CLUSTER_BREAK.LVT}else if(t<44145){if(t===44144)return r.CLUSTER_BREAK.LV}else if(t<44172){if(44145<=t&&t<=44171)return r.CLUSTER_BREAK.LVT}else if(t===44172)return r.CLUSTER_BREAK.LV}else if(t<44201){if(t<44200){if(44173<=t&&t<=44199)return r.CLUSTER_BREAK.LVT}else if(t===44200)return r.CLUSTER_BREAK.LV}else if(t<44228){if(44201<=t&&t<=44227)return r.CLUSTER_BREAK.LVT}else if(t<44229){if(t===44228)return r.CLUSTER_BREAK.LV}else if(44229<=t&&t<=44255)return r.CLUSTER_BREAK.LVT}else if(t<44313){if(t<44284){if(t<44257){if(t===44256)return r.CLUSTER_BREAK.LV}else if(44257<=t&&t<=44283)return r.CLUSTER_BREAK.LVT}else if(t<44285){if(t===44284)return r.CLUSTER_BREAK.LV}else if(t<44312){if(44285<=t&&t<=44311)return r.CLUSTER_BREAK.LVT}else if(t===44312)return r.CLUSTER_BREAK.LV}else if(t<44368){if(t<44340){if(44313<=t&&t<=44339)return r.CLUSTER_BREAK.LVT}else if(t<44341){if(t===44340)return r.CLUSTER_BREAK.LV}else if(44341<=t&&t<=44367)return r.CLUSTER_BREAK.LVT}else if(t<44369){if(t===44368)return r.CLUSTER_BREAK.LV}else if(t<44396){if(44369<=t&&t<=44395)return r.CLUSTER_BREAK.LVT}else if(t===44396)return r.CLUSTER_BREAK.LV}else if(t<44537){if(t<44480){if(t<44425){if(t<44424){if(44397<=t&&t<=44423)return r.CLUSTER_BREAK.LVT}else if(t===44424)return r.CLUSTER_BREAK.LV}else if(t<44452){if(44425<=t&&t<=44451)return r.CLUSTER_BREAK.LVT}else if(t<44453){if(t===44452)return r.CLUSTER_BREAK.LV}else if(44453<=t&&t<=44479)return r.CLUSTER_BREAK.LVT}else if(t<44508){if(t<44481){if(t===44480)return r.CLUSTER_BREAK.LV}else if(44481<=t&&t<=44507)return r.CLUSTER_BREAK.LVT}else if(t<44509){if(t===44508)return r.CLUSTER_BREAK.LV}else if(t<44536){if(44509<=t&&t<=44535)return r.CLUSTER_BREAK.LVT}else if(t===44536)return r.CLUSTER_BREAK.LV}else if(t<44620){if(t<44565){if(t<44564){if(44537<=t&&t<=44563)return r.CLUSTER_BREAK.LVT}else if(t===44564)return r.CLUSTER_BREAK.LV}else if(t<44592){if(44565<=t&&t<=44591)return r.CLUSTER_BREAK.LVT}else if(t<44593){if(t===44592)return r.CLUSTER_BREAK.LV}else if(44593<=t&&t<=44619)return r.CLUSTER_BREAK.LVT}else if(t<44649){if(t<44621){if(t===44620)return r.CLUSTER_BREAK.LV}else if(t<44648){if(44621<=t&&t<=44647)return r.CLUSTER_BREAK.LVT}else if(t===44648)return r.CLUSTER_BREAK.LV}else if(t<44676){if(44649<=t&&t<=44675)return r.CLUSTER_BREAK.LVT}else if(t<44677){if(t===44676)return r.CLUSTER_BREAK.LV}else if(44677<=t&&t<=44703)return r.CLUSTER_BREAK.LVT}else if(t<44985){if(t<44844){if(t<44761){if(t<44732){if(t<44705){if(t===44704)return r.CLUSTER_BREAK.LV}else if(44705<=t&&t<=44731)return r.CLUSTER_BREAK.LVT}else if(t<44733){if(t===44732)return r.CLUSTER_BREAK.LV}else if(t<44760){if(44733<=t&&t<=44759)return r.CLUSTER_BREAK.LVT}else if(t===44760)return r.CLUSTER_BREAK.LV}else if(t<44789){if(t<44788){if(44761<=t&&t<=44787)return r.CLUSTER_BREAK.LVT}else if(t===44788)return r.CLUSTER_BREAK.LV}else if(t<44816){if(44789<=t&&t<=44815)return r.CLUSTER_BREAK.LVT}else if(t<44817){if(t===44816)return r.CLUSTER_BREAK.LV}else if(44817<=t&&t<=44843)return r.CLUSTER_BREAK.LVT}else if(t<44901){if(t<44872){if(t<44845){if(t===44844)return r.CLUSTER_BREAK.LV}else if(44845<=t&&t<=44871)return r.CLUSTER_BREAK.LVT}else if(t<44873){if(t===44872)return r.CLUSTER_BREAK.LV}else if(t<44900){if(44873<=t&&t<=44899)return r.CLUSTER_BREAK.LVT}else if(t===44900)return r.CLUSTER_BREAK.LV}else if(t<44956){if(t<44928){if(44901<=t&&t<=44927)return r.CLUSTER_BREAK.LVT}else if(t<44929){if(t===44928)return r.CLUSTER_BREAK.LV}else if(44929<=t&&t<=44955)return r.CLUSTER_BREAK.LVT}else if(t<44957){if(t===44956)return r.CLUSTER_BREAK.LV}else if(t<44984){if(44957<=t&&t<=44983)return r.CLUSTER_BREAK.LVT}else if(t===44984)return r.CLUSTER_BREAK.LV}else if(t<45152){if(t<45068){if(t<45013){if(t<45012){if(44985<=t&&t<=45011)return r.CLUSTER_BREAK.LVT}else if(t===45012)return r.CLUSTER_BREAK.LV}else if(t<45040){if(45013<=t&&t<=45039)return r.CLUSTER_BREAK.LVT}else if(t<45041){if(t===45040)return r.CLUSTER_BREAK.LV}else if(45041<=t&&t<=45067)return r.CLUSTER_BREAK.LVT}else if(t<45097){if(t<45069){if(t===45068)return r.CLUSTER_BREAK.LV}else if(t<45096){if(45069<=t&&t<=45095)return r.CLUSTER_BREAK.LVT}else if(t===45096)return r.CLUSTER_BREAK.LV}else if(t<45124){if(45097<=t&&t<=45123)return r.CLUSTER_BREAK.LVT}else if(t<45125){if(t===45124)return r.CLUSTER_BREAK.LV}else if(45125<=t&&t<=45151)return r.CLUSTER_BREAK.LVT}else if(t<45209){if(t<45180){if(t<45153){if(t===45152)return r.CLUSTER_BREAK.LV}else if(45153<=t&&t<=45179)return r.CLUSTER_BREAK.LVT}else if(t<45181){if(t===45180)return r.CLUSTER_BREAK.LV}else if(t<45208){if(45181<=t&&t<=45207)return r.CLUSTER_BREAK.LVT}else if(t===45208)return r.CLUSTER_BREAK.LV}else if(t<45264){if(t<45236){if(45209<=t&&t<=45235)return r.CLUSTER_BREAK.LVT}else if(t<45237){if(t===45236)return r.CLUSTER_BREAK.LV}else if(45237<=t&&t<=45263)return r.CLUSTER_BREAK.LVT}else if(t<45265){if(t===45264)return r.CLUSTER_BREAK.LV}else if(t<45292){if(45265<=t&&t<=45291)return r.CLUSTER_BREAK.LVT}else if(t===45292)return r.CLUSTER_BREAK.LV}else if(t<45908){if(t<45600){if(t<45433){if(t<45376){if(t<45321){if(t<45320){if(45293<=t&&t<=45319)return r.CLUSTER_BREAK.LVT}else if(t===45320)return r.CLUSTER_BREAK.LV}else if(t<45348){if(45321<=t&&t<=45347)return r.CLUSTER_BREAK.LVT}else if(t<45349){if(t===45348)return r.CLUSTER_BREAK.LV}else if(45349<=t&&t<=45375)return r.CLUSTER_BREAK.LVT}else if(t<45404){if(t<45377){if(t===45376)return r.CLUSTER_BREAK.LV}else if(45377<=t&&t<=45403)return r.CLUSTER_BREAK.LVT}else if(t<45405){if(t===45404)return r.CLUSTER_BREAK.LV}else if(t<45432){if(45405<=t&&t<=45431)return r.CLUSTER_BREAK.LVT}else if(t===45432)return r.CLUSTER_BREAK.LV}else if(t<45516){if(t<45461){if(t<45460){if(45433<=t&&t<=45459)return r.CLUSTER_BREAK.LVT}else if(t===45460)return r.CLUSTER_BREAK.LV}else if(t<45488){if(45461<=t&&t<=45487)return r.CLUSTER_BREAK.LVT}else if(t<45489){if(t===45488)return r.CLUSTER_BREAK.LV}else if(45489<=t&&t<=45515)return r.CLUSTER_BREAK.LVT}else if(t<45545){if(t<45517){if(t===45516)return r.CLUSTER_BREAK.LV}else if(t<45544){if(45517<=t&&t<=45543)return r.CLUSTER_BREAK.LVT}else if(t===45544)return r.CLUSTER_BREAK.LV}else if(t<45572){if(45545<=t&&t<=45571)return r.CLUSTER_BREAK.LVT}else if(t<45573){if(t===45572)return r.CLUSTER_BREAK.LV}else if(45573<=t&&t<=45599)return r.CLUSTER_BREAK.LVT}else if(t<45741){if(t<45657){if(t<45628){if(t<45601){if(t===45600)return r.CLUSTER_BREAK.LV}else if(45601<=t&&t<=45627)return r.CLUSTER_BREAK.LVT}else if(t<45629){if(t===45628)return r.CLUSTER_BREAK.LV}else if(t<45656){if(45629<=t&&t<=45655)return r.CLUSTER_BREAK.LVT}else if(t===45656)return r.CLUSTER_BREAK.LV}else if(t<45712){if(t<45684){if(45657<=t&&t<=45683)return r.CLUSTER_BREAK.LVT}else if(t<45685){if(t===45684)return r.CLUSTER_BREAK.LV}else if(45685<=t&&t<=45711)return r.CLUSTER_BREAK.LVT}else if(t<45713){if(t===45712)return r.CLUSTER_BREAK.LV}else if(t<45740){if(45713<=t&&t<=45739)return r.CLUSTER_BREAK.LVT}else if(t===45740)return r.CLUSTER_BREAK.LV}else if(t<45824){if(t<45769){if(t<45768){if(45741<=t&&t<=45767)return r.CLUSTER_BREAK.LVT}else if(t===45768)return r.CLUSTER_BREAK.LV}else if(t<45796){if(45769<=t&&t<=45795)return r.CLUSTER_BREAK.LVT}else if(t<45797){if(t===45796)return r.CLUSTER_BREAK.LV}else if(45797<=t&&t<=45823)return r.CLUSTER_BREAK.LVT}else if(t<45853){if(t<45825){if(t===45824)return r.CLUSTER_BREAK.LV}else if(t<45852){if(45825<=t&&t<=45851)return r.CLUSTER_BREAK.LVT}else if(t===45852)return r.CLUSTER_BREAK.LV}else if(t<45880){if(45853<=t&&t<=45879)return r.CLUSTER_BREAK.LVT}else if(t<45881){if(t===45880)return r.CLUSTER_BREAK.LV}else if(45881<=t&&t<=45907)return r.CLUSTER_BREAK.LVT}else if(t<46189){if(t<46048){if(t<45965){if(t<45936){if(t<45909){if(t===45908)return r.CLUSTER_BREAK.LV}else if(45909<=t&&t<=45935)return r.CLUSTER_BREAK.LVT}else if(t<45937){if(t===45936)return r.CLUSTER_BREAK.LV}else if(t<45964){if(45937<=t&&t<=45963)return r.CLUSTER_BREAK.LVT}else if(t===45964)return r.CLUSTER_BREAK.LV}else if(t<45993){if(t<45992){if(45965<=t&&t<=45991)return r.CLUSTER_BREAK.LVT}else if(t===45992)return r.CLUSTER_BREAK.LV}else if(t<46020){if(45993<=t&&t<=46019)return r.CLUSTER_BREAK.LVT}else if(t<46021){if(t===46020)return r.CLUSTER_BREAK.LV}else if(46021<=t&&t<=46047)return r.CLUSTER_BREAK.LVT}else if(t<46105){if(t<46076){if(t<46049){if(t===46048)return r.CLUSTER_BREAK.LV}else if(46049<=t&&t<=46075)return r.CLUSTER_BREAK.LVT}else if(t<46077){if(t===46076)return r.CLUSTER_BREAK.LV}else if(t<46104){if(46077<=t&&t<=46103)return r.CLUSTER_BREAK.LVT}else if(t===46104)return r.CLUSTER_BREAK.LV}else if(t<46160){if(t<46132){if(46105<=t&&t<=46131)return r.CLUSTER_BREAK.LVT}else if(t<46133){if(t===46132)return r.CLUSTER_BREAK.LV}else if(46133<=t&&t<=46159)return r.CLUSTER_BREAK.LVT}else if(t<46161){if(t===46160)return r.CLUSTER_BREAK.LV}else if(t<46188){if(46161<=t&&t<=46187)return r.CLUSTER_BREAK.LVT}else if(t===46188)return r.CLUSTER_BREAK.LV}else if(t<46356){if(t<46272){if(t<46217){if(t<46216){if(46189<=t&&t<=46215)return r.CLUSTER_BREAK.LVT}else if(t===46216)return r.CLUSTER_BREAK.LV}else if(t<46244){if(46217<=t&&t<=46243)return r.CLUSTER_BREAK.LVT}else if(t<46245){if(t===46244)return r.CLUSTER_BREAK.LV}else if(46245<=t&&t<=46271)return r.CLUSTER_BREAK.LVT}else if(t<46301){if(t<46273){if(t===46272)return r.CLUSTER_BREAK.LV}else if(t<46300){if(46273<=t&&t<=46299)return r.CLUSTER_BREAK.LVT}else if(t===46300)return r.CLUSTER_BREAK.LV}else if(t<46328){if(46301<=t&&t<=46327)return r.CLUSTER_BREAK.LVT}else if(t<46329){if(t===46328)return r.CLUSTER_BREAK.LV}else if(46329<=t&&t<=46355)return r.CLUSTER_BREAK.LVT}else if(t<46413){if(t<46384){if(t<46357){if(t===46356)return r.CLUSTER_BREAK.LV}else if(46357<=t&&t<=46383)return r.CLUSTER_BREAK.LVT}else if(t<46385){if(t===46384)return r.CLUSTER_BREAK.LV}else if(t<46412){if(46385<=t&&t<=46411)return r.CLUSTER_BREAK.LVT}else if(t===46412)return r.CLUSTER_BREAK.LV}else if(t<46468){if(t<46440){if(46413<=t&&t<=46439)return r.CLUSTER_BREAK.LVT}else if(t<46441){if(t===46440)return r.CLUSTER_BREAK.LV}else if(46441<=t&&t<=46467)return r.CLUSTER_BREAK.LVT}else if(t<46469){if(t===46468)return r.CLUSTER_BREAK.LV}else if(t<46496){if(46469<=t&&t<=46495)return r.CLUSTER_BREAK.LVT}else if(t===46496)return r.CLUSTER_BREAK.LV}else if(t<47701){if(t<47112){if(t<46804){if(t<46637){if(t<46580){if(t<46525){if(t<46524){if(46497<=t&&t<=46523)return r.CLUSTER_BREAK.LVT}else if(t===46524)return r.CLUSTER_BREAK.LV}else if(t<46552){if(46525<=t&&t<=46551)return r.CLUSTER_BREAK.LVT}else if(t<46553){if(t===46552)return r.CLUSTER_BREAK.LV}else if(46553<=t&&t<=46579)return r.CLUSTER_BREAK.LVT}else if(t<46608){if(t<46581){if(t===46580)return r.CLUSTER_BREAK.LV}else if(46581<=t&&t<=46607)return r.CLUSTER_BREAK.LVT}else if(t<46609){if(t===46608)return r.CLUSTER_BREAK.LV}else if(t<46636){if(46609<=t&&t<=46635)return r.CLUSTER_BREAK.LVT}else if(t===46636)return r.CLUSTER_BREAK.LV}else if(t<46720){if(t<46665){if(t<46664){if(46637<=t&&t<=46663)return r.CLUSTER_BREAK.LVT}else if(t===46664)return r.CLUSTER_BREAK.LV}else if(t<46692){if(46665<=t&&t<=46691)return r.CLUSTER_BREAK.LVT}else if(t<46693){if(t===46692)return r.CLUSTER_BREAK.LV}else if(46693<=t&&t<=46719)return r.CLUSTER_BREAK.LVT}else if(t<46749){if(t<46721){if(t===46720)return r.CLUSTER_BREAK.LV}else if(t<46748){if(46721<=t&&t<=46747)return r.CLUSTER_BREAK.LVT}else if(t===46748)return r.CLUSTER_BREAK.LV}else if(t<46776){if(46749<=t&&t<=46775)return r.CLUSTER_BREAK.LVT}else if(t<46777){if(t===46776)return r.CLUSTER_BREAK.LV}else if(46777<=t&&t<=46803)return r.CLUSTER_BREAK.LVT}else if(t<46945){if(t<46861){if(t<46832){if(t<46805){if(t===46804)return r.CLUSTER_BREAK.LV}else if(46805<=t&&t<=46831)return r.CLUSTER_BREAK.LVT}else if(t<46833){if(t===46832)return r.CLUSTER_BREAK.LV}else if(t<46860){if(46833<=t&&t<=46859)return r.CLUSTER_BREAK.LVT}else if(t===46860)return r.CLUSTER_BREAK.LV}else if(t<46916){if(t<46888){if(46861<=t&&t<=46887)return r.CLUSTER_BREAK.LVT}else if(t<46889){if(t===46888)return r.CLUSTER_BREAK.LV}else if(46889<=t&&t<=46915)return r.CLUSTER_BREAK.LVT}else if(t<46917){if(t===46916)return r.CLUSTER_BREAK.LV}else if(t<46944){if(46917<=t&&t<=46943)return r.CLUSTER_BREAK.LVT}else if(t===46944)return r.CLUSTER_BREAK.LV}else if(t<47028){if(t<46973){if(t<46972){if(46945<=t&&t<=46971)return r.CLUSTER_BREAK.LVT}else if(t===46972)return r.CLUSTER_BREAK.LV}else if(t<47e3){if(46973<=t&&t<=46999)return r.CLUSTER_BREAK.LVT}else if(t<47001){if(t===47e3)return r.CLUSTER_BREAK.LV}else if(47001<=t&&t<=47027)return r.CLUSTER_BREAK.LVT}else if(t<47057){if(t<47029){if(t===47028)return r.CLUSTER_BREAK.LV}else if(t<47056){if(47029<=t&&t<=47055)return r.CLUSTER_BREAK.LVT}else if(t===47056)return r.CLUSTER_BREAK.LV}else if(t<47084){if(47057<=t&&t<=47083)return r.CLUSTER_BREAK.LVT}else if(t<47085){if(t===47084)return r.CLUSTER_BREAK.LV}else if(47085<=t&&t<=47111)return r.CLUSTER_BREAK.LVT}else if(t<47393){if(t<47252){if(t<47169){if(t<47140){if(t<47113){if(t===47112)return r.CLUSTER_BREAK.LV}else if(47113<=t&&t<=47139)return r.CLUSTER_BREAK.LVT}else if(t<47141){if(t===47140)return r.CLUSTER_BREAK.LV}else if(t<47168){if(47141<=t&&t<=47167)return r.CLUSTER_BREAK.LVT}else if(t===47168)return r.CLUSTER_BREAK.LV}else if(t<47197){if(t<47196){if(47169<=t&&t<=47195)return r.CLUSTER_BREAK.LVT}else if(t===47196)return r.CLUSTER_BREAK.LV}else if(t<47224){if(47197<=t&&t<=47223)return r.CLUSTER_BREAK.LVT}else if(t<47225){if(t===47224)return r.CLUSTER_BREAK.LV}else if(47225<=t&&t<=47251)return r.CLUSTER_BREAK.LVT}else if(t<47309){if(t<47280){if(t<47253){if(t===47252)return r.CLUSTER_BREAK.LV}else if(47253<=t&&t<=47279)return r.CLUSTER_BREAK.LVT}else if(t<47281){if(t===47280)return r.CLUSTER_BREAK.LV}else if(t<47308){if(47281<=t&&t<=47307)return r.CLUSTER_BREAK.LVT}else if(t===47308)return r.CLUSTER_BREAK.LV}else if(t<47364){if(t<47336){if(47309<=t&&t<=47335)return r.CLUSTER_BREAK.LVT}else if(t<47337){if(t===47336)return r.CLUSTER_BREAK.LV}else if(47337<=t&&t<=47363)return r.CLUSTER_BREAK.LVT}else if(t<47365){if(t===47364)return r.CLUSTER_BREAK.LV}else if(t<47392){if(47365<=t&&t<=47391)return r.CLUSTER_BREAK.LVT}else if(t===47392)return r.CLUSTER_BREAK.LV}else if(t<47560){if(t<47476){if(t<47421){if(t<47420){if(47393<=t&&t<=47419)return r.CLUSTER_BREAK.LVT}else if(t===47420)return r.CLUSTER_BREAK.LV}else if(t<47448){if(47421<=t&&t<=47447)return r.CLUSTER_BREAK.LVT}else if(t<47449){if(t===47448)return r.CLUSTER_BREAK.LV}else if(47449<=t&&t<=47475)return r.CLUSTER_BREAK.LVT}else if(t<47505){if(t<47477){if(t===47476)return r.CLUSTER_BREAK.LV}else if(t<47504){if(47477<=t&&t<=47503)return r.CLUSTER_BREAK.LVT}else if(t===47504)return r.CLUSTER_BREAK.LV}else if(t<47532){if(47505<=t&&t<=47531)return r.CLUSTER_BREAK.LVT}else if(t<47533){if(t===47532)return r.CLUSTER_BREAK.LV}else if(47533<=t&&t<=47559)return r.CLUSTER_BREAK.LVT}else if(t<47617){if(t<47588){if(t<47561){if(t===47560)return r.CLUSTER_BREAK.LV}else if(47561<=t&&t<=47587)return r.CLUSTER_BREAK.LVT}else if(t<47589){if(t===47588)return r.CLUSTER_BREAK.LV}else if(t<47616){if(47589<=t&&t<=47615)return r.CLUSTER_BREAK.LVT}else if(t===47616)return r.CLUSTER_BREAK.LV}else if(t<47672){if(t<47644){if(47617<=t&&t<=47643)return r.CLUSTER_BREAK.LVT}else if(t<47645){if(t===47644)return r.CLUSTER_BREAK.LV}else if(47645<=t&&t<=47671)return r.CLUSTER_BREAK.LVT}else if(t<47673){if(t===47672)return r.CLUSTER_BREAK.LV}else if(t<47700){if(47673<=t&&t<=47699)return r.CLUSTER_BREAK.LVT}else if(t===47700)return r.CLUSTER_BREAK.LV}else if(t<48316){if(t<48008){if(t<47841){if(t<47784){if(t<47729){if(t<47728){if(47701<=t&&t<=47727)return r.CLUSTER_BREAK.LVT}else if(t===47728)return r.CLUSTER_BREAK.LV}else if(t<47756){if(47729<=t&&t<=47755)return r.CLUSTER_BREAK.LVT}else if(t<47757){if(t===47756)return r.CLUSTER_BREAK.LV}else if(47757<=t&&t<=47783)return r.CLUSTER_BREAK.LVT}else if(t<47812){if(t<47785){if(t===47784)return r.CLUSTER_BREAK.LV}else if(47785<=t&&t<=47811)return r.CLUSTER_BREAK.LVT}else if(t<47813){if(t===47812)return r.CLUSTER_BREAK.LV}else if(t<47840){if(47813<=t&&t<=47839)return r.CLUSTER_BREAK.LVT}else if(t===47840)return r.CLUSTER_BREAK.LV}else if(t<47924){if(t<47869){if(t<47868){if(47841<=t&&t<=47867)return r.CLUSTER_BREAK.LVT}else if(t===47868)return r.CLUSTER_BREAK.LV}else if(t<47896){if(47869<=t&&t<=47895)return r.CLUSTER_BREAK.LVT}else if(t<47897){if(t===47896)return r.CLUSTER_BREAK.LV}else if(47897<=t&&t<=47923)return r.CLUSTER_BREAK.LVT}else if(t<47953){if(t<47925){if(t===47924)return r.CLUSTER_BREAK.LV}else if(t<47952){if(47925<=t&&t<=47951)return r.CLUSTER_BREAK.LVT}else if(t===47952)return r.CLUSTER_BREAK.LV}else if(t<47980){if(47953<=t&&t<=47979)return r.CLUSTER_BREAK.LVT}else if(t<47981){if(t===47980)return r.CLUSTER_BREAK.LV}else if(47981<=t&&t<=48007)return r.CLUSTER_BREAK.LVT}else if(t<48149){if(t<48065){if(t<48036){if(t<48009){if(t===48008)return r.CLUSTER_BREAK.LV}else if(48009<=t&&t<=48035)return r.CLUSTER_BREAK.LVT}else if(t<48037){if(t===48036)return r.CLUSTER_BREAK.LV}else if(t<48064){if(48037<=t&&t<=48063)return r.CLUSTER_BREAK.LVT}else if(t===48064)return r.CLUSTER_BREAK.LV}else if(t<48120){if(t<48092){if(48065<=t&&t<=48091)return r.CLUSTER_BREAK.LVT}else if(t<48093){if(t===48092)return r.CLUSTER_BREAK.LV}else if(48093<=t&&t<=48119)return r.CLUSTER_BREAK.LVT}else if(t<48121){if(t===48120)return r.CLUSTER_BREAK.LV}else if(t<48148){if(48121<=t&&t<=48147)return r.CLUSTER_BREAK.LVT}else if(t===48148)return r.CLUSTER_BREAK.LV}else if(t<48232){if(t<48177){if(t<48176){if(48149<=t&&t<=48175)return r.CLUSTER_BREAK.LVT}else if(t===48176)return r.CLUSTER_BREAK.LV}else if(t<48204){if(48177<=t&&t<=48203)return r.CLUSTER_BREAK.LVT}else if(t<48205){if(t===48204)return r.CLUSTER_BREAK.LV}else if(48205<=t&&t<=48231)return r.CLUSTER_BREAK.LVT}else if(t<48261){if(t<48233){if(t===48232)return r.CLUSTER_BREAK.LV}else if(t<48260){if(48233<=t&&t<=48259)return r.CLUSTER_BREAK.LVT}else if(t===48260)return r.CLUSTER_BREAK.LV}else if(t<48288){if(48261<=t&&t<=48287)return r.CLUSTER_BREAK.LVT}else if(t<48289){if(t===48288)return r.CLUSTER_BREAK.LV}else if(48289<=t&&t<=48315)return r.CLUSTER_BREAK.LVT}else if(t<48597){if(t<48456){if(t<48373){if(t<48344){if(t<48317){if(t===48316)return r.CLUSTER_BREAK.LV}else if(48317<=t&&t<=48343)return r.CLUSTER_BREAK.LVT}else if(t<48345){if(t===48344)return r.CLUSTER_BREAK.LV}else if(t<48372){if(48345<=t&&t<=48371)return r.CLUSTER_BREAK.LVT}else if(t===48372)return r.CLUSTER_BREAK.LV}else if(t<48401){if(t<48400){if(48373<=t&&t<=48399)return r.CLUSTER_BREAK.LVT}else if(t===48400)return r.CLUSTER_BREAK.LV}else if(t<48428){if(48401<=t&&t<=48427)return r.CLUSTER_BREAK.LVT}else if(t<48429){if(t===48428)return r.CLUSTER_BREAK.LV}else if(48429<=t&&t<=48455)return r.CLUSTER_BREAK.LVT}else if(t<48513){if(t<48484){if(t<48457){if(t===48456)return r.CLUSTER_BREAK.LV}else if(48457<=t&&t<=48483)return r.CLUSTER_BREAK.LVT}else if(t<48485){if(t===48484)return r.CLUSTER_BREAK.LV}else if(t<48512){if(48485<=t&&t<=48511)return r.CLUSTER_BREAK.LVT}else if(t===48512)return r.CLUSTER_BREAK.LV}else if(t<48568){if(t<48540){if(48513<=t&&t<=48539)return r.CLUSTER_BREAK.LVT}else if(t<48541){if(t===48540)return r.CLUSTER_BREAK.LV}else if(48541<=t&&t<=48567)return r.CLUSTER_BREAK.LVT}else if(t<48569){if(t===48568)return r.CLUSTER_BREAK.LV}else if(t<48596){if(48569<=t&&t<=48595)return r.CLUSTER_BREAK.LVT}else if(t===48596)return r.CLUSTER_BREAK.LV}else if(t<48764){if(t<48680){if(t<48625){if(t<48624){if(48597<=t&&t<=48623)return r.CLUSTER_BREAK.LVT}else if(t===48624)return r.CLUSTER_BREAK.LV}else if(t<48652){if(48625<=t&&t<=48651)return r.CLUSTER_BREAK.LVT}else if(t<48653){if(t===48652)return r.CLUSTER_BREAK.LV}else if(48653<=t&&t<=48679)return r.CLUSTER_BREAK.LVT}else if(t<48709){if(t<48681){if(t===48680)return r.CLUSTER_BREAK.LV}else if(t<48708){if(48681<=t&&t<=48707)return r.CLUSTER_BREAK.LVT}else if(t===48708)return r.CLUSTER_BREAK.LV}else if(t<48736){if(48709<=t&&t<=48735)return r.CLUSTER_BREAK.LVT}else if(t<48737){if(t===48736)return r.CLUSTER_BREAK.LV}else if(48737<=t&&t<=48763)return r.CLUSTER_BREAK.LVT}else if(t<48821){if(t<48792){if(t<48765){if(t===48764)return r.CLUSTER_BREAK.LV}else if(48765<=t&&t<=48791)return r.CLUSTER_BREAK.LVT}else if(t<48793){if(t===48792)return r.CLUSTER_BREAK.LV}else if(t<48820){if(48793<=t&&t<=48819)return r.CLUSTER_BREAK.LVT}else if(t===48820)return r.CLUSTER_BREAK.LV}else if(t<48876){if(t<48848){if(48821<=t&&t<=48847)return r.CLUSTER_BREAK.LVT}else if(t<48849){if(t===48848)return r.CLUSTER_BREAK.LV}else if(48849<=t&&t<=48875)return r.CLUSTER_BREAK.LVT}else if(t<48877){if(t===48876)return r.CLUSTER_BREAK.LV}else if(t<48904){if(48877<=t&&t<=48903)return r.CLUSTER_BREAK.LVT}else if(t===48904)return r.CLUSTER_BREAK.LV}else if(t<53720){if(t<51312){if(t<50108){if(t<49493){if(t<49212){if(t<49045){if(t<48988){if(t<48933){if(t<48932){if(48905<=t&&t<=48931)return r.CLUSTER_BREAK.LVT}else if(t===48932)return r.CLUSTER_BREAK.LV}else if(t<48960){if(48933<=t&&t<=48959)return r.CLUSTER_BREAK.LVT}else if(t<48961){if(t===48960)return r.CLUSTER_BREAK.LV}else if(48961<=t&&t<=48987)return r.CLUSTER_BREAK.LVT}else if(t<49016){if(t<48989){if(t===48988)return r.CLUSTER_BREAK.LV}else if(48989<=t&&t<=49015)return r.CLUSTER_BREAK.LVT}else if(t<49017){if(t===49016)return r.CLUSTER_BREAK.LV}else if(t<49044){if(49017<=t&&t<=49043)return r.CLUSTER_BREAK.LVT}else if(t===49044)return r.CLUSTER_BREAK.LV}else if(t<49128){if(t<49073){if(t<49072){if(49045<=t&&t<=49071)return r.CLUSTER_BREAK.LVT}else if(t===49072)return r.CLUSTER_BREAK.LV}else if(t<49100){if(49073<=t&&t<=49099)return r.CLUSTER_BREAK.LVT}else if(t<49101){if(t===49100)return r.CLUSTER_BREAK.LV}else if(49101<=t&&t<=49127)return r.CLUSTER_BREAK.LVT}else if(t<49157){if(t<49129){if(t===49128)return r.CLUSTER_BREAK.LV}else if(t<49156){if(49129<=t&&t<=49155)return r.CLUSTER_BREAK.LVT}else if(t===49156)return r.CLUSTER_BREAK.LV}else if(t<49184){if(49157<=t&&t<=49183)return r.CLUSTER_BREAK.LVT}else if(t<49185){if(t===49184)return r.CLUSTER_BREAK.LV}else if(49185<=t&&t<=49211)return r.CLUSTER_BREAK.LVT}else if(t<49352){if(t<49269){if(t<49240){if(t<49213){if(t===49212)return r.CLUSTER_BREAK.LV}else if(49213<=t&&t<=49239)return r.CLUSTER_BREAK.LVT}else if(t<49241){if(t===49240)return r.CLUSTER_BREAK.LV}else if(t<49268){if(49241<=t&&t<=49267)return r.CLUSTER_BREAK.LVT}else if(t===49268)return r.CLUSTER_BREAK.LV}else if(t<49297){if(t<49296){if(49269<=t&&t<=49295)return r.CLUSTER_BREAK.LVT}else if(t===49296)return r.CLUSTER_BREAK.LV}else if(t<49324){if(49297<=t&&t<=49323)return r.CLUSTER_BREAK.LVT}else if(t<49325){if(t===49324)return r.CLUSTER_BREAK.LV}else if(49325<=t&&t<=49351)return r.CLUSTER_BREAK.LVT}else if(t<49409){if(t<49380){if(t<49353){if(t===49352)return r.CLUSTER_BREAK.LV}else if(49353<=t&&t<=49379)return r.CLUSTER_BREAK.LVT}else if(t<49381){if(t===49380)return r.CLUSTER_BREAK.LV}else if(t<49408){if(49381<=t&&t<=49407)return r.CLUSTER_BREAK.LVT}else if(t===49408)return r.CLUSTER_BREAK.LV}else if(t<49464){if(t<49436){if(49409<=t&&t<=49435)return r.CLUSTER_BREAK.LVT}else if(t<49437){if(t===49436)return r.CLUSTER_BREAK.LV}else if(49437<=t&&t<=49463)return r.CLUSTER_BREAK.LVT}else if(t<49465){if(t===49464)return r.CLUSTER_BREAK.LV}else if(t<49492){if(49465<=t&&t<=49491)return r.CLUSTER_BREAK.LVT}else if(t===49492)return r.CLUSTER_BREAK.LV}else if(t<49800){if(t<49633){if(t<49576){if(t<49521){if(t<49520){if(49493<=t&&t<=49519)return r.CLUSTER_BREAK.LVT}else if(t===49520)return r.CLUSTER_BREAK.LV}else if(t<49548){if(49521<=t&&t<=49547)return r.CLUSTER_BREAK.LVT}else if(t<49549){if(t===49548)return r.CLUSTER_BREAK.LV}else if(49549<=t&&t<=49575)return r.CLUSTER_BREAK.LVT}else if(t<49604){if(t<49577){if(t===49576)return r.CLUSTER_BREAK.LV}else if(49577<=t&&t<=49603)return r.CLUSTER_BREAK.LVT}else if(t<49605){if(t===49604)return r.CLUSTER_BREAK.LV}else if(t<49632){if(49605<=t&&t<=49631)return r.CLUSTER_BREAK.LVT}else if(t===49632)return r.CLUSTER_BREAK.LV}else if(t<49716){if(t<49661){if(t<49660){if(49633<=t&&t<=49659)return r.CLUSTER_BREAK.LVT}else if(t===49660)return r.CLUSTER_BREAK.LV}else if(t<49688){if(49661<=t&&t<=49687)return r.CLUSTER_BREAK.LVT}else if(t<49689){if(t===49688)return r.CLUSTER_BREAK.LV}else if(49689<=t&&t<=49715)return r.CLUSTER_BREAK.LVT}else if(t<49745){if(t<49717){if(t===49716)return r.CLUSTER_BREAK.LV}else if(t<49744){if(49717<=t&&t<=49743)return r.CLUSTER_BREAK.LVT}else if(t===49744)return r.CLUSTER_BREAK.LV}else if(t<49772){if(49745<=t&&t<=49771)return r.CLUSTER_BREAK.LVT}else if(t<49773){if(t===49772)return r.CLUSTER_BREAK.LV}else if(49773<=t&&t<=49799)return r.CLUSTER_BREAK.LVT}else if(t<49941){if(t<49857){if(t<49828){if(t<49801){if(t===49800)return r.CLUSTER_BREAK.LV}else if(49801<=t&&t<=49827)return r.CLUSTER_BREAK.LVT}else if(t<49829){if(t===49828)return r.CLUSTER_BREAK.LV}else if(t<49856){if(49829<=t&&t<=49855)return r.CLUSTER_BREAK.LVT}else if(t===49856)return r.CLUSTER_BREAK.LV}else if(t<49912){if(t<49884){if(49857<=t&&t<=49883)return r.CLUSTER_BREAK.LVT}else if(t<49885){if(t===49884)return r.CLUSTER_BREAK.LV}else if(49885<=t&&t<=49911)return r.CLUSTER_BREAK.LVT}else if(t<49913){if(t===49912)return r.CLUSTER_BREAK.LV}else if(t<49940){if(49913<=t&&t<=49939)return r.CLUSTER_BREAK.LVT}else if(t===49940)return r.CLUSTER_BREAK.LV}else if(t<50024){if(t<49969){if(t<49968){if(49941<=t&&t<=49967)return r.CLUSTER_BREAK.LVT}else if(t===49968)return r.CLUSTER_BREAK.LV}else if(t<49996){if(49969<=t&&t<=49995)return r.CLUSTER_BREAK.LVT}else if(t<49997){if(t===49996)return r.CLUSTER_BREAK.LV}else if(49997<=t&&t<=50023)return r.CLUSTER_BREAK.LVT}else if(t<50053){if(t<50025){if(t===50024)return r.CLUSTER_BREAK.LV}else if(t<50052){if(50025<=t&&t<=50051)return r.CLUSTER_BREAK.LVT}else if(t===50052)return r.CLUSTER_BREAK.LV}else if(t<50080){if(50053<=t&&t<=50079)return r.CLUSTER_BREAK.LVT}else if(t<50081){if(t===50080)return r.CLUSTER_BREAK.LV}else if(50081<=t&&t<=50107)return r.CLUSTER_BREAK.LVT}else if(t<50697){if(t<50389){if(t<50248){if(t<50165){if(t<50136){if(t<50109){if(t===50108)return r.CLUSTER_BREAK.LV}else if(50109<=t&&t<=50135)return r.CLUSTER_BREAK.LVT}else if(t<50137){if(t===50136)return r.CLUSTER_BREAK.LV}else if(t<50164){if(50137<=t&&t<=50163)return r.CLUSTER_BREAK.LVT}else if(t===50164)return r.CLUSTER_BREAK.LV}else if(t<50193){if(t<50192){if(50165<=t&&t<=50191)return r.CLUSTER_BREAK.LVT}else if(t===50192)return r.CLUSTER_BREAK.LV}else if(t<50220){if(50193<=t&&t<=50219)return r.CLUSTER_BREAK.LVT}else if(t<50221){if(t===50220)return r.CLUSTER_BREAK.LV}else if(50221<=t&&t<=50247)return r.CLUSTER_BREAK.LVT}else if(t<50305){if(t<50276){if(t<50249){if(t===50248)return r.CLUSTER_BREAK.LV}else if(50249<=t&&t<=50275)return r.CLUSTER_BREAK.LVT}else if(t<50277){if(t===50276)return r.CLUSTER_BREAK.LV}else if(t<50304){if(50277<=t&&t<=50303)return r.CLUSTER_BREAK.LVT}else if(t===50304)return r.CLUSTER_BREAK.LV}else if(t<50360){if(t<50332){if(50305<=t&&t<=50331)return r.CLUSTER_BREAK.LVT}else if(t<50333){if(t===50332)return r.CLUSTER_BREAK.LV}else if(50333<=t&&t<=50359)return r.CLUSTER_BREAK.LVT}else if(t<50361){if(t===50360)return r.CLUSTER_BREAK.LV}else if(t<50388){if(50361<=t&&t<=50387)return r.CLUSTER_BREAK.LVT}else if(t===50388)return r.CLUSTER_BREAK.LV}else if(t<50556){if(t<50472){if(t<50417){if(t<50416){if(50389<=t&&t<=50415)return r.CLUSTER_BREAK.LVT}else if(t===50416)return r.CLUSTER_BREAK.LV}else if(t<50444){if(50417<=t&&t<=50443)return r.CLUSTER_BREAK.LVT}else if(t<50445){if(t===50444)return r.CLUSTER_BREAK.LV}else if(50445<=t&&t<=50471)return r.CLUSTER_BREAK.LVT}else if(t<50501){if(t<50473){if(t===50472)return r.CLUSTER_BREAK.LV}else if(t<50500){if(50473<=t&&t<=50499)return r.CLUSTER_BREAK.LVT}else if(t===50500)return r.CLUSTER_BREAK.LV}else if(t<50528){if(50501<=t&&t<=50527)return r.CLUSTER_BREAK.LVT}else if(t<50529){if(t===50528)return r.CLUSTER_BREAK.LV}else if(50529<=t&&t<=50555)return r.CLUSTER_BREAK.LVT}else if(t<50613){if(t<50584){if(t<50557){if(t===50556)return r.CLUSTER_BREAK.LV}else if(50557<=t&&t<=50583)return r.CLUSTER_BREAK.LVT}else if(t<50585){if(t===50584)return r.CLUSTER_BREAK.LV}else if(t<50612){if(50585<=t&&t<=50611)return r.CLUSTER_BREAK.LVT}else if(t===50612)return r.CLUSTER_BREAK.LV}else if(t<50668){if(t<50640){if(50613<=t&&t<=50639)return r.CLUSTER_BREAK.LVT}else if(t<50641){if(t===50640)return r.CLUSTER_BREAK.LV}else if(50641<=t&&t<=50667)return r.CLUSTER_BREAK.LVT}else if(t<50669){if(t===50668)return r.CLUSTER_BREAK.LV}else if(t<50696){if(50669<=t&&t<=50695)return r.CLUSTER_BREAK.LVT}else if(t===50696)return r.CLUSTER_BREAK.LV}else if(t<51004){if(t<50837){if(t<50780){if(t<50725){if(t<50724){if(50697<=t&&t<=50723)return r.CLUSTER_BREAK.LVT}else if(t===50724)return r.CLUSTER_BREAK.LV}else if(t<50752){if(50725<=t&&t<=50751)return r.CLUSTER_BREAK.LVT}else if(t<50753){if(t===50752)return r.CLUSTER_BREAK.LV}else if(50753<=t&&t<=50779)return r.CLUSTER_BREAK.LVT}else if(t<50808){if(t<50781){if(t===50780)return r.CLUSTER_BREAK.LV}else if(50781<=t&&t<=50807)return r.CLUSTER_BREAK.LVT}else if(t<50809){if(t===50808)return r.CLUSTER_BREAK.LV}else if(t<50836){if(50809<=t&&t<=50835)return r.CLUSTER_BREAK.LVT}else if(t===50836)return r.CLUSTER_BREAK.LV}else if(t<50920){if(t<50865){if(t<50864){if(50837<=t&&t<=50863)return r.CLUSTER_BREAK.LVT}else if(t===50864)return r.CLUSTER_BREAK.LV}else if(t<50892){if(50865<=t&&t<=50891)return r.CLUSTER_BREAK.LVT}else if(t<50893){if(t===50892)return r.CLUSTER_BREAK.LV}else if(50893<=t&&t<=50919)return r.CLUSTER_BREAK.LVT}else if(t<50949){if(t<50921){if(t===50920)return r.CLUSTER_BREAK.LV}else if(t<50948){if(50921<=t&&t<=50947)return r.CLUSTER_BREAK.LVT}else if(t===50948)return r.CLUSTER_BREAK.LV}else if(t<50976){if(50949<=t&&t<=50975)return r.CLUSTER_BREAK.LVT}else if(t<50977){if(t===50976)return r.CLUSTER_BREAK.LV}else if(50977<=t&&t<=51003)return r.CLUSTER_BREAK.LVT}else if(t<51145){if(t<51061){if(t<51032){if(t<51005){if(t===51004)return r.CLUSTER_BREAK.LV}else if(51005<=t&&t<=51031)return r.CLUSTER_BREAK.LVT}else if(t<51033){if(t===51032)return r.CLUSTER_BREAK.LV}else if(t<51060){if(51033<=t&&t<=51059)return r.CLUSTER_BREAK.LVT}else if(t===51060)return r.CLUSTER_BREAK.LV}else if(t<51116){if(t<51088){if(51061<=t&&t<=51087)return r.CLUSTER_BREAK.LVT}else if(t<51089){if(t===51088)return r.CLUSTER_BREAK.LV}else if(51089<=t&&t<=51115)return r.CLUSTER_BREAK.LVT}else if(t<51117){if(t===51116)return r.CLUSTER_BREAK.LV}else if(t<51144){if(51117<=t&&t<=51143)return r.CLUSTER_BREAK.LVT}else if(t===51144)return r.CLUSTER_BREAK.LV}else if(t<51228){if(t<51173){if(t<51172){if(51145<=t&&t<=51171)return r.CLUSTER_BREAK.LVT}else if(t===51172)return r.CLUSTER_BREAK.LV}else if(t<51200){if(51173<=t&&t<=51199)return r.CLUSTER_BREAK.LVT}else if(t<51201){if(t===51200)return r.CLUSTER_BREAK.LV}else if(51201<=t&&t<=51227)return r.CLUSTER_BREAK.LVT}else if(t<51257){if(t<51229){if(t===51228)return r.CLUSTER_BREAK.LV}else if(t<51256){if(51229<=t&&t<=51255)return r.CLUSTER_BREAK.LVT}else if(t===51256)return r.CLUSTER_BREAK.LV}else if(t<51284){if(51257<=t&&t<=51283)return r.CLUSTER_BREAK.LVT}else if(t<51285){if(t===51284)return r.CLUSTER_BREAK.LV}else if(51285<=t&&t<=51311)return r.CLUSTER_BREAK.LVT}else if(t<52516){if(t<51901){if(t<51593){if(t<51452){if(t<51369){if(t<51340){if(t<51313){if(t===51312)return r.CLUSTER_BREAK.LV}else if(51313<=t&&t<=51339)return r.CLUSTER_BREAK.LVT}else if(t<51341){if(t===51340)return r.CLUSTER_BREAK.LV}else if(t<51368){if(51341<=t&&t<=51367)return r.CLUSTER_BREAK.LVT}else if(t===51368)return r.CLUSTER_BREAK.LV}else if(t<51397){if(t<51396){if(51369<=t&&t<=51395)return r.CLUSTER_BREAK.LVT}else if(t===51396)return r.CLUSTER_BREAK.LV}else if(t<51424){if(51397<=t&&t<=51423)return r.CLUSTER_BREAK.LVT}else if(t<51425){if(t===51424)return r.CLUSTER_BREAK.LV}else if(51425<=t&&t<=51451)return r.CLUSTER_BREAK.LVT}else if(t<51509){if(t<51480){if(t<51453){if(t===51452)return r.CLUSTER_BREAK.LV}else if(51453<=t&&t<=51479)return r.CLUSTER_BREAK.LVT}else if(t<51481){if(t===51480)return r.CLUSTER_BREAK.LV}else if(t<51508){if(51481<=t&&t<=51507)return r.CLUSTER_BREAK.LVT}else if(t===51508)return r.CLUSTER_BREAK.LV}else if(t<51564){if(t<51536){if(51509<=t&&t<=51535)return r.CLUSTER_BREAK.LVT}else if(t<51537){if(t===51536)return r.CLUSTER_BREAK.LV}else if(51537<=t&&t<=51563)return r.CLUSTER_BREAK.LVT}else if(t<51565){if(t===51564)return r.CLUSTER_BREAK.LV}else if(t<51592){if(51565<=t&&t<=51591)return r.CLUSTER_BREAK.LVT}else if(t===51592)return r.CLUSTER_BREAK.LV}else if(t<51760){if(t<51676){if(t<51621){if(t<51620){if(51593<=t&&t<=51619)return r.CLUSTER_BREAK.LVT}else if(t===51620)return r.CLUSTER_BREAK.LV}else if(t<51648){if(51621<=t&&t<=51647)return r.CLUSTER_BREAK.LVT}else if(t<51649){if(t===51648)return r.CLUSTER_BREAK.LV}else if(51649<=t&&t<=51675)return r.CLUSTER_BREAK.LVT}else if(t<51705){if(t<51677){if(t===51676)return r.CLUSTER_BREAK.LV}else if(t<51704){if(51677<=t&&t<=51703)return r.CLUSTER_BREAK.LVT}else if(t===51704)return r.CLUSTER_BREAK.LV}else if(t<51732){if(51705<=t&&t<=51731)return r.CLUSTER_BREAK.LVT}else if(t<51733){if(t===51732)return r.CLUSTER_BREAK.LV}else if(51733<=t&&t<=51759)return r.CLUSTER_BREAK.LVT}else if(t<51817){if(t<51788){if(t<51761){if(t===51760)return r.CLUSTER_BREAK.LV}else if(51761<=t&&t<=51787)return r.CLUSTER_BREAK.LVT}else if(t<51789){if(t===51788)return r.CLUSTER_BREAK.LV}else if(t<51816){if(51789<=t&&t<=51815)return r.CLUSTER_BREAK.LVT}else if(t===51816)return r.CLUSTER_BREAK.LV}else if(t<51872){if(t<51844){if(51817<=t&&t<=51843)return r.CLUSTER_BREAK.LVT}else if(t<51845){if(t===51844)return r.CLUSTER_BREAK.LV}else if(51845<=t&&t<=51871)return r.CLUSTER_BREAK.LVT}else if(t<51873){if(t===51872)return r.CLUSTER_BREAK.LV}else if(t<51900){if(51873<=t&&t<=51899)return r.CLUSTER_BREAK.LVT}else if(t===51900)return r.CLUSTER_BREAK.LV}else if(t<52208){if(t<52041){if(t<51984){if(t<51929){if(t<51928){if(51901<=t&&t<=51927)return r.CLUSTER_BREAK.LVT}else if(t===51928)return r.CLUSTER_BREAK.LV}else if(t<51956){if(51929<=t&&t<=51955)return r.CLUSTER_BREAK.LVT}else if(t<51957){if(t===51956)return r.CLUSTER_BREAK.LV}else if(51957<=t&&t<=51983)return r.CLUSTER_BREAK.LVT}else if(t<52012){if(t<51985){if(t===51984)return r.CLUSTER_BREAK.LV}else if(51985<=t&&t<=52011)return r.CLUSTER_BREAK.LVT}else if(t<52013){if(t===52012)return r.CLUSTER_BREAK.LV}else if(t<52040){if(52013<=t&&t<=52039)return r.CLUSTER_BREAK.LVT}else if(t===52040)return r.CLUSTER_BREAK.LV}else if(t<52124){if(t<52069){if(t<52068){if(52041<=t&&t<=52067)return r.CLUSTER_BREAK.LVT}else if(t===52068)return r.CLUSTER_BREAK.LV}else if(t<52096){if(52069<=t&&t<=52095)return r.CLUSTER_BREAK.LVT}else if(t<52097){if(t===52096)return r.CLUSTER_BREAK.LV}else if(52097<=t&&t<=52123)return r.CLUSTER_BREAK.LVT}else if(t<52153){if(t<52125){if(t===52124)return r.CLUSTER_BREAK.LV}else if(t<52152){if(52125<=t&&t<=52151)return r.CLUSTER_BREAK.LVT}else if(t===52152)return r.CLUSTER_BREAK.LV}else if(t<52180){if(52153<=t&&t<=52179)return r.CLUSTER_BREAK.LVT}else if(t<52181){if(t===52180)return r.CLUSTER_BREAK.LV}else if(52181<=t&&t<=52207)return r.CLUSTER_BREAK.LVT}else if(t<52349){if(t<52265){if(t<52236){if(t<52209){if(t===52208)return r.CLUSTER_BREAK.LV}else if(52209<=t&&t<=52235)return r.CLUSTER_BREAK.LVT}else if(t<52237){if(t===52236)return r.CLUSTER_BREAK.LV}else if(t<52264){if(52237<=t&&t<=52263)return r.CLUSTER_BREAK.LVT}else if(t===52264)return r.CLUSTER_BREAK.LV}else if(t<52320){if(t<52292){if(52265<=t&&t<=52291)return r.CLUSTER_BREAK.LVT}else if(t<52293){if(t===52292)return r.CLUSTER_BREAK.LV}else if(52293<=t&&t<=52319)return r.CLUSTER_BREAK.LVT}else if(t<52321){if(t===52320)return r.CLUSTER_BREAK.LV}else if(t<52348){if(52321<=t&&t<=52347)return r.CLUSTER_BREAK.LVT}else if(t===52348)return r.CLUSTER_BREAK.LV}else if(t<52432){if(t<52377){if(t<52376){if(52349<=t&&t<=52375)return r.CLUSTER_BREAK.LVT}else if(t===52376)return r.CLUSTER_BREAK.LV}else if(t<52404){if(52377<=t&&t<=52403)return r.CLUSTER_BREAK.LVT}else if(t<52405){if(t===52404)return r.CLUSTER_BREAK.LV}else if(52405<=t&&t<=52431)return r.CLUSTER_BREAK.LVT}else if(t<52461){if(t<52433){if(t===52432)return r.CLUSTER_BREAK.LV}else if(t<52460){if(52433<=t&&t<=52459)return r.CLUSTER_BREAK.LVT}else if(t===52460)return r.CLUSTER_BREAK.LV}else if(t<52488){if(52461<=t&&t<=52487)return r.CLUSTER_BREAK.LVT}else if(t<52489){if(t===52488)return r.CLUSTER_BREAK.LV}else if(52489<=t&&t<=52515)return r.CLUSTER_BREAK.LVT}else if(t<53105){if(t<52797){if(t<52656){if(t<52573){if(t<52544){if(t<52517){if(t===52516)return r.CLUSTER_BREAK.LV}else if(52517<=t&&t<=52543)return r.CLUSTER_BREAK.LVT}else if(t<52545){if(t===52544)return r.CLUSTER_BREAK.LV}else if(t<52572){if(52545<=t&&t<=52571)return r.CLUSTER_BREAK.LVT}else if(t===52572)return r.CLUSTER_BREAK.LV}else if(t<52601){if(t<52600){if(52573<=t&&t<=52599)return r.CLUSTER_BREAK.LVT}else if(t===52600)return r.CLUSTER_BREAK.LV}else if(t<52628){if(52601<=t&&t<=52627)return r.CLUSTER_BREAK.LVT}else if(t<52629){if(t===52628)return r.CLUSTER_BREAK.LV}else if(52629<=t&&t<=52655)return r.CLUSTER_BREAK.LVT}else if(t<52713){if(t<52684){if(t<52657){if(t===52656)return r.CLUSTER_BREAK.LV}else if(52657<=t&&t<=52683)return r.CLUSTER_BREAK.LVT}else if(t<52685){if(t===52684)return r.CLUSTER_BREAK.LV}else if(t<52712){if(52685<=t&&t<=52711)return r.CLUSTER_BREAK.LVT}else if(t===52712)return r.CLUSTER_BREAK.LV}else if(t<52768){if(t<52740){if(52713<=t&&t<=52739)return r.CLUSTER_BREAK.LVT}else if(t<52741){if(t===52740)return r.CLUSTER_BREAK.LV}else if(52741<=t&&t<=52767)return r.CLUSTER_BREAK.LVT}else if(t<52769){if(t===52768)return r.CLUSTER_BREAK.LV}else if(t<52796){if(52769<=t&&t<=52795)return r.CLUSTER_BREAK.LVT}else if(t===52796)return r.CLUSTER_BREAK.LV}else if(t<52964){if(t<52880){if(t<52825){if(t<52824){if(52797<=t&&t<=52823)return r.CLUSTER_BREAK.LVT}else if(t===52824)return r.CLUSTER_BREAK.LV}else if(t<52852){if(52825<=t&&t<=52851)return r.CLUSTER_BREAK.LVT}else if(t<52853){if(t===52852)return r.CLUSTER_BREAK.LV}else if(52853<=t&&t<=52879)return r.CLUSTER_BREAK.LVT}else if(t<52909){if(t<52881){if(t===52880)return r.CLUSTER_BREAK.LV}else if(t<52908){if(52881<=t&&t<=52907)return r.CLUSTER_BREAK.LVT}else if(t===52908)return r.CLUSTER_BREAK.LV}else if(t<52936){if(52909<=t&&t<=52935)return r.CLUSTER_BREAK.LVT}else if(t<52937){if(t===52936)return r.CLUSTER_BREAK.LV}else if(52937<=t&&t<=52963)return r.CLUSTER_BREAK.LVT}else if(t<53021){if(t<52992){if(t<52965){if(t===52964)return r.CLUSTER_BREAK.LV}else if(52965<=t&&t<=52991)return r.CLUSTER_BREAK.LVT}else if(t<52993){if(t===52992)return r.CLUSTER_BREAK.LV}else if(t<53020){if(52993<=t&&t<=53019)return r.CLUSTER_BREAK.LVT}else if(t===53020)return r.CLUSTER_BREAK.LV}else if(t<53076){if(t<53048){if(53021<=t&&t<=53047)return r.CLUSTER_BREAK.LVT}else if(t<53049){if(t===53048)return r.CLUSTER_BREAK.LV}else if(53049<=t&&t<=53075)return r.CLUSTER_BREAK.LVT}else if(t<53077){if(t===53076)return r.CLUSTER_BREAK.LV}else if(t<53104){if(53077<=t&&t<=53103)return r.CLUSTER_BREAK.LVT}else if(t===53104)return r.CLUSTER_BREAK.LV}else if(t<53412){if(t<53245){if(t<53188){if(t<53133){if(t<53132){if(53105<=t&&t<=53131)return r.CLUSTER_BREAK.LVT}else if(t===53132)return r.CLUSTER_BREAK.LV}else if(t<53160){if(53133<=t&&t<=53159)return r.CLUSTER_BREAK.LVT}else if(t<53161){if(t===53160)return r.CLUSTER_BREAK.LV}else if(53161<=t&&t<=53187)return r.CLUSTER_BREAK.LVT}else if(t<53216){if(t<53189){if(t===53188)return r.CLUSTER_BREAK.LV}else if(53189<=t&&t<=53215)return r.CLUSTER_BREAK.LVT}else if(t<53217){if(t===53216)return r.CLUSTER_BREAK.LV}else if(t<53244){if(53217<=t&&t<=53243)return r.CLUSTER_BREAK.LVT}else if(t===53244)return r.CLUSTER_BREAK.LV}else if(t<53328){if(t<53273){if(t<53272){if(53245<=t&&t<=53271)return r.CLUSTER_BREAK.LVT}else if(t===53272)return r.CLUSTER_BREAK.LV}else if(t<53300){if(53273<=t&&t<=53299)return r.CLUSTER_BREAK.LVT}else if(t<53301){if(t===53300)return r.CLUSTER_BREAK.LV}else if(53301<=t&&t<=53327)return r.CLUSTER_BREAK.LVT}else if(t<53357){if(t<53329){if(t===53328)return r.CLUSTER_BREAK.LV}else if(t<53356){if(53329<=t&&t<=53355)return r.CLUSTER_BREAK.LVT}else if(t===53356)return r.CLUSTER_BREAK.LV}else if(t<53384){if(53357<=t&&t<=53383)return r.CLUSTER_BREAK.LVT}else if(t<53385){if(t===53384)return r.CLUSTER_BREAK.LV}else if(53385<=t&&t<=53411)return r.CLUSTER_BREAK.LVT}else if(t<53553){if(t<53469){if(t<53440){if(t<53413){if(t===53412)return r.CLUSTER_BREAK.LV}else if(53413<=t&&t<=53439)return r.CLUSTER_BREAK.LVT}else if(t<53441){if(t===53440)return r.CLUSTER_BREAK.LV}else if(t<53468){if(53441<=t&&t<=53467)return r.CLUSTER_BREAK.LVT}else if(t===53468)return r.CLUSTER_BREAK.LV}else if(t<53524){if(t<53496){if(53469<=t&&t<=53495)return r.CLUSTER_BREAK.LVT}else if(t<53497){if(t===53496)return r.CLUSTER_BREAK.LV}else if(53497<=t&&t<=53523)return r.CLUSTER_BREAK.LVT}else if(t<53525){if(t===53524)return r.CLUSTER_BREAK.LV}else if(t<53552){if(53525<=t&&t<=53551)return r.CLUSTER_BREAK.LVT}else if(t===53552)return r.CLUSTER_BREAK.LV}else if(t<53636){if(t<53581){if(t<53580){if(53553<=t&&t<=53579)return r.CLUSTER_BREAK.LVT}else if(t===53580)return r.CLUSTER_BREAK.LV}else if(t<53608){if(53581<=t&&t<=53607)return r.CLUSTER_BREAK.LVT}else if(t<53609){if(t===53608)return r.CLUSTER_BREAK.LV}else if(53609<=t&&t<=53635)return r.CLUSTER_BREAK.LVT}else if(t<53665){if(t<53637){if(t===53636)return r.CLUSTER_BREAK.LV}else if(t<53664){if(53637<=t&&t<=53663)return r.CLUSTER_BREAK.LVT}else if(t===53664)return r.CLUSTER_BREAK.LV}else if(t<53692){if(53665<=t&&t<=53691)return r.CLUSTER_BREAK.LVT}else if(t<53693){if(t===53692)return r.CLUSTER_BREAK.LV}else if(53693<=t&&t<=53719)return r.CLUSTER_BREAK.LVT}else if(t<70459){if(t<54897){if(t<54308){if(t<54001){if(t<53860){if(t<53777){if(t<53748){if(t<53721){if(t===53720)return r.CLUSTER_BREAK.LV}else if(53721<=t&&t<=53747)return r.CLUSTER_BREAK.LVT}else if(t<53749){if(t===53748)return r.CLUSTER_BREAK.LV}else if(t<53776){if(53749<=t&&t<=53775)return r.CLUSTER_BREAK.LVT}else if(t===53776)return r.CLUSTER_BREAK.LV}else if(t<53805){if(t<53804){if(53777<=t&&t<=53803)return r.CLUSTER_BREAK.LVT}else if(t===53804)return r.CLUSTER_BREAK.LV}else if(t<53832){if(53805<=t&&t<=53831)return r.CLUSTER_BREAK.LVT}else if(t<53833){if(t===53832)return r.CLUSTER_BREAK.LV}else if(53833<=t&&t<=53859)return r.CLUSTER_BREAK.LVT}else if(t<53917){if(t<53888){if(t<53861){if(t===53860)return r.CLUSTER_BREAK.LV}else if(53861<=t&&t<=53887)return r.CLUSTER_BREAK.LVT}else if(t<53889){if(t===53888)return r.CLUSTER_BREAK.LV}else if(t<53916){if(53889<=t&&t<=53915)return r.CLUSTER_BREAK.LVT}else if(t===53916)return r.CLUSTER_BREAK.LV}else if(t<53972){if(t<53944){if(53917<=t&&t<=53943)return r.CLUSTER_BREAK.LVT}else if(t<53945){if(t===53944)return r.CLUSTER_BREAK.LV}else if(53945<=t&&t<=53971)return r.CLUSTER_BREAK.LVT}else if(t<53973){if(t===53972)return r.CLUSTER_BREAK.LV}else if(t<54e3){if(53973<=t&&t<=53999)return r.CLUSTER_BREAK.LVT}else if(t===54e3)return r.CLUSTER_BREAK.LV}else if(t<54141){if(t<54084){if(t<54029){if(t<54028){if(54001<=t&&t<=54027)return r.CLUSTER_BREAK.LVT}else if(t===54028)return r.CLUSTER_BREAK.LV}else if(t<54056){if(54029<=t&&t<=54055)return r.CLUSTER_BREAK.LVT}else if(t<54057){if(t===54056)return r.CLUSTER_BREAK.LV}else if(54057<=t&&t<=54083)return r.CLUSTER_BREAK.LVT}else if(t<54112){if(t<54085){if(t===54084)return r.CLUSTER_BREAK.LV}else if(54085<=t&&t<=54111)return r.CLUSTER_BREAK.LVT}else if(t<54113){if(t===54112)return r.CLUSTER_BREAK.LV}else if(t<54140){if(54113<=t&&t<=54139)return r.CLUSTER_BREAK.LVT}else if(t===54140)return r.CLUSTER_BREAK.LV}else if(t<54224){if(t<54169){if(t<54168){if(54141<=t&&t<=54167)return r.CLUSTER_BREAK.LVT}else if(t===54168)return r.CLUSTER_BREAK.LV}else if(t<54196){if(54169<=t&&t<=54195)return r.CLUSTER_BREAK.LVT}else if(t<54197){if(t===54196)return r.CLUSTER_BREAK.LV}else if(54197<=t&&t<=54223)return r.CLUSTER_BREAK.LVT}else if(t<54253){if(t<54225){if(t===54224)return r.CLUSTER_BREAK.LV}else if(t<54252){if(54225<=t&&t<=54251)return r.CLUSTER_BREAK.LVT}else if(t===54252)return r.CLUSTER_BREAK.LV}else if(t<54280){if(54253<=t&&t<=54279)return r.CLUSTER_BREAK.LVT}else if(t<54281){if(t===54280)return r.CLUSTER_BREAK.LV}else if(54281<=t&&t<=54307)return r.CLUSTER_BREAK.LVT}else if(t<54589){if(t<54448){if(t<54365){if(t<54336){if(t<54309){if(t===54308)return r.CLUSTER_BREAK.LV}else if(54309<=t&&t<=54335)return r.CLUSTER_BREAK.LVT}else if(t<54337){if(t===54336)return r.CLUSTER_BREAK.LV}else if(t<54364){if(54337<=t&&t<=54363)return r.CLUSTER_BREAK.LVT}else if(t===54364)return r.CLUSTER_BREAK.LV}else if(t<54393){if(t<54392){if(54365<=t&&t<=54391)return r.CLUSTER_BREAK.LVT}else if(t===54392)return r.CLUSTER_BREAK.LV}else if(t<54420){if(54393<=t&&t<=54419)return r.CLUSTER_BREAK.LVT}else if(t<54421){if(t===54420)return r.CLUSTER_BREAK.LV}else if(54421<=t&&t<=54447)return r.CLUSTER_BREAK.LVT}else if(t<54505){if(t<54476){if(t<54449){if(t===54448)return r.CLUSTER_BREAK.LV}else if(54449<=t&&t<=54475)return r.CLUSTER_BREAK.LVT}else if(t<54477){if(t===54476)return r.CLUSTER_BREAK.LV}else if(t<54504){if(54477<=t&&t<=54503)return r.CLUSTER_BREAK.LVT}else if(t===54504)return r.CLUSTER_BREAK.LV}else if(t<54560){if(t<54532){if(54505<=t&&t<=54531)return r.CLUSTER_BREAK.LVT}else if(t<54533){if(t===54532)return r.CLUSTER_BREAK.LV}else if(54533<=t&&t<=54559)return r.CLUSTER_BREAK.LVT}else if(t<54561){if(t===54560)return r.CLUSTER_BREAK.LV}else if(t<54588){if(54561<=t&&t<=54587)return r.CLUSTER_BREAK.LVT}else if(t===54588)return r.CLUSTER_BREAK.LV}else if(t<54756){if(t<54672){if(t<54617){if(t<54616){if(54589<=t&&t<=54615)return r.CLUSTER_BREAK.LVT}else if(t===54616)return r.CLUSTER_BREAK.LV}else if(t<54644){if(54617<=t&&t<=54643)return r.CLUSTER_BREAK.LVT}else if(t<54645){if(t===54644)return r.CLUSTER_BREAK.LV}else if(54645<=t&&t<=54671)return r.CLUSTER_BREAK.LVT}else if(t<54701){if(t<54673){if(t===54672)return r.CLUSTER_BREAK.LV}else if(t<54700){if(54673<=t&&t<=54699)return r.CLUSTER_BREAK.LVT}else if(t===54700)return r.CLUSTER_BREAK.LV}else if(t<54728){if(54701<=t&&t<=54727)return r.CLUSTER_BREAK.LVT}else if(t<54729){if(t===54728)return r.CLUSTER_BREAK.LV}else if(54729<=t&&t<=54755)return r.CLUSTER_BREAK.LVT}else if(t<54813){if(t<54784){if(t<54757){if(t===54756)return r.CLUSTER_BREAK.LV}else if(54757<=t&&t<=54783)return r.CLUSTER_BREAK.LVT}else if(t<54785){if(t===54784)return r.CLUSTER_BREAK.LV}else if(t<54812){if(54785<=t&&t<=54811)return r.CLUSTER_BREAK.LVT}else if(t===54812)return r.CLUSTER_BREAK.LV}else if(t<54868){if(t<54840){if(54813<=t&&t<=54839)return r.CLUSTER_BREAK.LVT}else if(t<54841){if(t===54840)return r.CLUSTER_BREAK.LV}else if(54841<=t&&t<=54867)return r.CLUSTER_BREAK.LVT}else if(t<54869){if(t===54868)return r.CLUSTER_BREAK.LV}else if(t<54896){if(54869<=t&&t<=54895)return r.CLUSTER_BREAK.LVT}else if(t===54896)return r.CLUSTER_BREAK.LV}else if(t<69632){if(t<55216){if(t<55037){if(t<54980){if(t<54925){if(t<54924){if(54897<=t&&t<=54923)return r.CLUSTER_BREAK.LVT}else if(t===54924)return r.CLUSTER_BREAK.LV}else if(t<54952){if(54925<=t&&t<=54951)return r.CLUSTER_BREAK.LVT}else if(t<54953){if(t===54952)return r.CLUSTER_BREAK.LV}else if(54953<=t&&t<=54979)return r.CLUSTER_BREAK.LVT}else if(t<55008){if(t<54981){if(t===54980)return r.CLUSTER_BREAK.LV}else if(54981<=t&&t<=55007)return r.CLUSTER_BREAK.LVT}else if(t<55009){if(t===55008)return r.CLUSTER_BREAK.LV}else if(t<55036){if(55009<=t&&t<=55035)return r.CLUSTER_BREAK.LVT}else if(t===55036)return r.CLUSTER_BREAK.LV}else if(t<55120){if(t<55065){if(t<55064){if(55037<=t&&t<=55063)return r.CLUSTER_BREAK.LVT}else if(t===55064)return r.CLUSTER_BREAK.LV}else if(t<55092){if(55065<=t&&t<=55091)return r.CLUSTER_BREAK.LVT}else if(t<55093){if(t===55092)return r.CLUSTER_BREAK.LV}else if(55093<=t&&t<=55119)return r.CLUSTER_BREAK.LVT}else if(t<55149){if(t<55121){if(t===55120)return r.CLUSTER_BREAK.LV}else if(t<55148){if(55121<=t&&t<=55147)return r.CLUSTER_BREAK.LVT}else if(t===55148)return r.CLUSTER_BREAK.LV}else if(t<55176){if(55149<=t&&t<=55175)return r.CLUSTER_BREAK.LVT}else if(t<55177){if(t===55176)return r.CLUSTER_BREAK.LV}else if(55177<=t&&t<=55203)return r.CLUSTER_BREAK.LVT}else if(t<68097){if(t<65279){if(t<64286){if(t<55243){if(55216<=t&&t<=55238)return r.CLUSTER_BREAK.V}else if(55243<=t&&t<=55291)return r.CLUSTER_BREAK.T}else if(t<65024){if(t===64286)return r.CLUSTER_BREAK.EXTEND}else if(t<65056){if(65024<=t&&t<=65039)return r.CLUSTER_BREAK.EXTEND}else if(65056<=t&&t<=65071)return r.CLUSTER_BREAK.EXTEND}else if(t<66045){if(t<65438){if(t===65279)return r.CLUSTER_BREAK.CONTROL}else if(t<65520){if(65438<=t&&t<=65439)return r.CLUSTER_BREAK.EXTEND}else if(65520<=t&&t<=65531)return r.CLUSTER_BREAK.CONTROL}else if(t<66272){if(t===66045)return r.CLUSTER_BREAK.EXTEND}else if(t<66422){if(t===66272)return r.CLUSTER_BREAK.EXTEND}else if(66422<=t&&t<=66426)return r.CLUSTER_BREAK.EXTEND}else if(t<68325){if(t<68108){if(t<68101){if(68097<=t&&t<=68099)return r.CLUSTER_BREAK.EXTEND}else if(68101<=t&&t<=68102)return r.CLUSTER_BREAK.EXTEND}else if(t<68152){if(68108<=t&&t<=68111)return r.CLUSTER_BREAK.EXTEND}else if(t<68159){if(68152<=t&&t<=68154)return r.CLUSTER_BREAK.EXTEND}else if(t===68159)return r.CLUSTER_BREAK.EXTEND}else if(t<69373){if(t<68900){if(68325<=t&&t<=68326)return r.CLUSTER_BREAK.EXTEND}else if(t<69291){if(68900<=t&&t<=68903)return r.CLUSTER_BREAK.EXTEND}else if(69291<=t&&t<=69292)return r.CLUSTER_BREAK.EXTEND}else if(t<69446){if(69373<=t&&t<=69375)return r.CLUSTER_BREAK.EXTEND}else if(t<69506){if(69446<=t&&t<=69456)return r.CLUSTER_BREAK.EXTEND}else if(69506<=t&&t<=69509)return r.CLUSTER_BREAK.EXTEND}else if(t<70016){if(t<69815){if(t<69747){if(t<69634){if(t===69632)return r.CLUSTER_BREAK.SPACINGMARK;if(t===69633)return r.CLUSTER_BREAK.EXTEND}else if(t<69688){if(t===69634)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<69744){if(69688<=t&&t<=69702)return r.CLUSTER_BREAK.EXTEND}else if(t===69744)return r.CLUSTER_BREAK.EXTEND}else if(t<69762){if(t<69759){if(69747<=t&&t<=69748)return r.CLUSTER_BREAK.EXTEND}else if(69759<=t&&t<=69761)return r.CLUSTER_BREAK.EXTEND}else if(t<69808){if(t===69762)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<69811){if(69808<=t&&t<=69810)return r.CLUSTER_BREAK.SPACINGMARK}else if(69811<=t&&t<=69814)return r.CLUSTER_BREAK.EXTEND}else if(t<69888)if(t<69821){if(t<69817){if(69815<=t&&t<=69816)return r.CLUSTER_BREAK.SPACINGMARK}else if(69817<=t&&t<=69818)return r.CLUSTER_BREAK.EXTEND}else if(t<69826){if(t===69821)return r.CLUSTER_BREAK.PREPEND}else{if(t===69826)return r.CLUSTER_BREAK.EXTEND;if(t===69837)return r.CLUSTER_BREAK.PREPEND}else if(t<69933){if(t<69927){if(69888<=t&&t<=69890)return r.CLUSTER_BREAK.EXTEND}else if(t<69932){if(69927<=t&&t<=69931)return r.CLUSTER_BREAK.EXTEND}else if(t===69932)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<69957){if(69933<=t&&t<=69940)return r.CLUSTER_BREAK.EXTEND}else if(t<70003){if(69957<=t&&t<=69958)return r.CLUSTER_BREAK.SPACINGMARK}else if(t===70003)return r.CLUSTER_BREAK.EXTEND}else if(t<70194){if(t<70082){if(t<70067){if(t<70018){if(70016<=t&&t<=70017)return r.CLUSTER_BREAK.EXTEND}else if(t===70018)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<70070){if(70067<=t&&t<=70069)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<70079){if(70070<=t&&t<=70078)return r.CLUSTER_BREAK.EXTEND}else if(70079<=t&&t<=70080)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<70095){if(t<70089){if(70082<=t&&t<=70083)return r.CLUSTER_BREAK.PREPEND}else if(t<70094){if(70089<=t&&t<=70092)return r.CLUSTER_BREAK.EXTEND}else if(t===70094)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<70188){if(t===70095)return r.CLUSTER_BREAK.EXTEND}else if(t<70191){if(70188<=t&&t<=70190)return r.CLUSTER_BREAK.SPACINGMARK}else if(70191<=t&&t<=70193)return r.CLUSTER_BREAK.EXTEND}else if(t<70209){if(t<70197){if(t<70196){if(70194<=t&&t<=70195)return r.CLUSTER_BREAK.SPACINGMARK}else if(t===70196)return r.CLUSTER_BREAK.EXTEND}else if(t<70198){if(t===70197)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<70206){if(70198<=t&&t<=70199)return r.CLUSTER_BREAK.EXTEND}else if(t===70206)return r.CLUSTER_BREAK.EXTEND}else if(t<70371){if(t<70367){if(t===70209)return r.CLUSTER_BREAK.EXTEND}else if(t<70368){if(t===70367)return r.CLUSTER_BREAK.EXTEND}else if(70368<=t&&t<=70370)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<70400){if(70371<=t&&t<=70378)return r.CLUSTER_BREAK.EXTEND}else if(t<70402){if(70400<=t&&t<=70401)return r.CLUSTER_BREAK.EXTEND}else if(70402<=t&&t<=70403)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<72343){if(t<71339){if(t<70841){if(t<70512){if(t<70471){if(t<70463){if(t<70462){if(70459<=t&&t<=70460)return r.CLUSTER_BREAK.EXTEND}else if(t===70462)return r.CLUSTER_BREAK.EXTEND}else if(t<70464){if(t===70463)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<70465){if(t===70464)return r.CLUSTER_BREAK.EXTEND}else if(70465<=t&&t<=70468)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<70487){if(t<70475){if(70471<=t&&t<=70472)return r.CLUSTER_BREAK.SPACINGMARK}else if(70475<=t&&t<=70477)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<70498){if(t===70487)return r.CLUSTER_BREAK.EXTEND}else if(t<70502){if(70498<=t&&t<=70499)return r.CLUSTER_BREAK.SPACINGMARK}else if(70502<=t&&t<=70508)return r.CLUSTER_BREAK.EXTEND}else if(t<70725){if(t<70712){if(t<70709){if(70512<=t&&t<=70516)return r.CLUSTER_BREAK.EXTEND}else if(70709<=t&&t<=70711)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<70720){if(70712<=t&&t<=70719)return r.CLUSTER_BREAK.EXTEND}else if(t<70722){if(70720<=t&&t<=70721)return r.CLUSTER_BREAK.SPACINGMARK}else if(70722<=t&&t<=70724)return r.CLUSTER_BREAK.EXTEND}else if(t<70832){if(t<70726){if(t===70725)return r.CLUSTER_BREAK.SPACINGMARK}else if(t===70726||t===70750)return r.CLUSTER_BREAK.EXTEND}else if(t<70833){if(t===70832)return r.CLUSTER_BREAK.EXTEND}else if(t<70835){if(70833<=t&&t<=70834)return r.CLUSTER_BREAK.SPACINGMARK}else if(70835<=t&&t<=70840)return r.CLUSTER_BREAK.EXTEND}else if(t<71096){if(t<70847)if(t<70843){if(t===70841)return r.CLUSTER_BREAK.SPACINGMARK;if(t===70842)return r.CLUSTER_BREAK.EXTEND}else if(t<70845){if(70843<=t&&t<=70844)return r.CLUSTER_BREAK.SPACINGMARK}else{if(t===70845)return r.CLUSTER_BREAK.EXTEND;if(t===70846)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<71087){if(t<70849){if(70847<=t&&t<=70848)return r.CLUSTER_BREAK.EXTEND}else if(t<70850){if(t===70849)return r.CLUSTER_BREAK.SPACINGMARK}else if(70850<=t&&t<=70851)return r.CLUSTER_BREAK.EXTEND}else if(t<71088){if(t===71087)return r.CLUSTER_BREAK.EXTEND}else if(t<71090){if(71088<=t&&t<=71089)return r.CLUSTER_BREAK.SPACINGMARK}else if(71090<=t&&t<=71093)return r.CLUSTER_BREAK.EXTEND}else if(t<71216){if(t<71102){if(t<71100){if(71096<=t&&t<=71099)return r.CLUSTER_BREAK.SPACINGMARK}else if(71100<=t&&t<=71101)return r.CLUSTER_BREAK.EXTEND}else if(t<71103){if(t===71102)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<71132){if(71103<=t&&t<=71104)return r.CLUSTER_BREAK.EXTEND}else if(71132<=t&&t<=71133)return r.CLUSTER_BREAK.EXTEND}else if(t<71229){if(t<71219){if(71216<=t&&t<=71218)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<71227){if(71219<=t&&t<=71226)return r.CLUSTER_BREAK.EXTEND}else if(71227<=t&&t<=71228)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<71230){if(t===71229)return r.CLUSTER_BREAK.EXTEND}else if(t<71231){if(t===71230)return r.CLUSTER_BREAK.SPACINGMARK}else if(71231<=t&&t<=71232)return r.CLUSTER_BREAK.EXTEND}else if(t<71999)if(t<71463){if(t<71350){if(t<71341){if(t===71339)return r.CLUSTER_BREAK.EXTEND;if(t===71340)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<71342){if(t===71341)return r.CLUSTER_BREAK.EXTEND}else if(t<71344){if(71342<=t&&t<=71343)return r.CLUSTER_BREAK.SPACINGMARK}else if(71344<=t&&t<=71349)return r.CLUSTER_BREAK.EXTEND}else if(t<71453){if(t===71350)return r.CLUSTER_BREAK.SPACINGMARK;if(t===71351)return r.CLUSTER_BREAK.EXTEND}else if(t<71458){if(71453<=t&&t<=71455)return r.CLUSTER_BREAK.EXTEND}else if(t<71462){if(71458<=t&&t<=71461)return r.CLUSTER_BREAK.EXTEND}else if(t===71462)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<71984){if(t<71727){if(t<71724){if(71463<=t&&t<=71467)return r.CLUSTER_BREAK.EXTEND}else if(71724<=t&&t<=71726)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<71736){if(71727<=t&&t<=71735)return r.CLUSTER_BREAK.EXTEND}else if(t<71737){if(t===71736)return r.CLUSTER_BREAK.SPACINGMARK}else if(71737<=t&&t<=71738)return r.CLUSTER_BREAK.EXTEND}else if(t<71995){if(t<71985){if(t===71984)return r.CLUSTER_BREAK.EXTEND}else if(t<71991){if(71985<=t&&t<=71989)return r.CLUSTER_BREAK.SPACINGMARK}else if(71991<=t&&t<=71992)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<71997){if(71995<=t&&t<=71996)return r.CLUSTER_BREAK.EXTEND}else{if(t===71997)return r.CLUSTER_BREAK.SPACINGMARK;if(t===71998)return r.CLUSTER_BREAK.EXTEND}else if(t<72193)if(t<72145)if(t<72001){if(t===71999)return r.CLUSTER_BREAK.PREPEND;if(t===72e3)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<72002){if(t===72001)return r.CLUSTER_BREAK.PREPEND}else{if(t===72002)return r.CLUSTER_BREAK.SPACINGMARK;if(t===72003)return r.CLUSTER_BREAK.EXTEND}else if(t<72156){if(t<72148){if(72145<=t&&t<=72147)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<72154){if(72148<=t&&t<=72151)return r.CLUSTER_BREAK.EXTEND}else if(72154<=t&&t<=72155)return r.CLUSTER_BREAK.EXTEND}else if(t<72160){if(72156<=t&&t<=72159)return r.CLUSTER_BREAK.SPACINGMARK}else{if(t===72160)return r.CLUSTER_BREAK.EXTEND;if(t===72164)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<72263){if(t<72249){if(t<72243){if(72193<=t&&t<=72202)return r.CLUSTER_BREAK.EXTEND}else if(72243<=t&&t<=72248)return r.CLUSTER_BREAK.EXTEND}else if(t<72250){if(t===72249)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<72251){if(t===72250)return r.CLUSTER_BREAK.PREPEND}else if(72251<=t&&t<=72254)return r.CLUSTER_BREAK.EXTEND}else if(t<72281){if(t<72273){if(t===72263)return r.CLUSTER_BREAK.EXTEND}else if(t<72279){if(72273<=t&&t<=72278)return r.CLUSTER_BREAK.EXTEND}else if(72279<=t&&t<=72280)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<72324){if(72281<=t&&t<=72283)return r.CLUSTER_BREAK.EXTEND}else if(t<72330){if(72324<=t&&t<=72329)return r.CLUSTER_BREAK.PREPEND}else if(72330<=t&&t<=72342)return r.CLUSTER_BREAK.EXTEND}else if(t<94033){if(t<73104){if(t<72881){if(t<72766){if(t<72751){if(t<72344){if(t===72343)return r.CLUSTER_BREAK.SPACINGMARK}else if(72344<=t&&t<=72345)return r.CLUSTER_BREAK.EXTEND}else if(t<72752){if(t===72751)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<72760){if(72752<=t&&t<=72758)return r.CLUSTER_BREAK.EXTEND}else if(72760<=t&&t<=72765)return r.CLUSTER_BREAK.EXTEND}else if(t<72850){if(t===72766)return r.CLUSTER_BREAK.SPACINGMARK;if(t===72767)return r.CLUSTER_BREAK.EXTEND}else if(t<72873){if(72850<=t&&t<=72871)return r.CLUSTER_BREAK.EXTEND}else if(t<72874){if(t===72873)return r.CLUSTER_BREAK.SPACINGMARK}else if(72874<=t&&t<=72880)return r.CLUSTER_BREAK.EXTEND}else if(t<73018){if(t<72884){if(t<72882){if(t===72881)return r.CLUSTER_BREAK.SPACINGMARK}else if(72882<=t&&t<=72883)return r.CLUSTER_BREAK.EXTEND}else if(t<72885){if(t===72884)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<73009){if(72885<=t&&t<=72886)return r.CLUSTER_BREAK.EXTEND}else if(73009<=t&&t<=73014)return r.CLUSTER_BREAK.EXTEND}else if(t<73030){if(t<73020){if(t===73018)return r.CLUSTER_BREAK.EXTEND}else if(t<73023){if(73020<=t&&t<=73021)return r.CLUSTER_BREAK.EXTEND}else if(73023<=t&&t<=73029)return r.CLUSTER_BREAK.EXTEND}else if(t<73031){if(t===73030)return r.CLUSTER_BREAK.PREPEND}else if(t<73098){if(t===73031)return r.CLUSTER_BREAK.EXTEND}else if(73098<=t&&t<=73102)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<73526){if(t<73459)if(t<73109){if(t<73107){if(73104<=t&&t<=73105)return r.CLUSTER_BREAK.EXTEND}else if(73107<=t&&t<=73108)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<73110){if(t===73109)return r.CLUSTER_BREAK.EXTEND}else{if(t===73110)return r.CLUSTER_BREAK.SPACINGMARK;if(t===73111)return r.CLUSTER_BREAK.EXTEND}else if(t<73474){if(t<73461){if(73459<=t&&t<=73460)return r.CLUSTER_BREAK.EXTEND}else if(t<73472){if(73461<=t&&t<=73462)return r.CLUSTER_BREAK.SPACINGMARK}else if(73472<=t&&t<=73473)return r.CLUSTER_BREAK.EXTEND}else if(t<73475){if(t===73474)return r.CLUSTER_BREAK.PREPEND}else if(t<73524){if(t===73475)return r.CLUSTER_BREAK.SPACINGMARK}else if(73524<=t&&t<=73525)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<78896)if(t<73536){if(t<73534){if(73526<=t&&t<=73530)return r.CLUSTER_BREAK.EXTEND}else if(73534<=t&&t<=73535)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<73537){if(t===73536)return r.CLUSTER_BREAK.EXTEND}else{if(t===73537)return r.CLUSTER_BREAK.SPACINGMARK;if(t===73538)return r.CLUSTER_BREAK.EXTEND}else if(t<92912){if(t<78912){if(78896<=t&&t<=78911)return r.CLUSTER_BREAK.CONTROL}else if(t<78919){if(t===78912)return r.CLUSTER_BREAK.EXTEND}else if(78919<=t&&t<=78933)return r.CLUSTER_BREAK.EXTEND}else if(t<92976){if(92912<=t&&t<=92916)return r.CLUSTER_BREAK.EXTEND}else if(t<94031){if(92976<=t&&t<=92982)return r.CLUSTER_BREAK.EXTEND}else if(t===94031)return r.CLUSTER_BREAK.EXTEND}else if(t<121476){if(t<119143)if(t<113824){if(t<94180){if(t<94095){if(94033<=t&&t<=94087)return r.CLUSTER_BREAK.SPACINGMARK}else if(94095<=t&&t<=94098)return r.CLUSTER_BREAK.EXTEND}else if(t<94192){if(t===94180)return r.CLUSTER_BREAK.EXTEND}else if(t<113821){if(94192<=t&&t<=94193)return r.CLUSTER_BREAK.SPACINGMARK}else if(113821<=t&&t<=113822)return r.CLUSTER_BREAK.EXTEND}else if(t<118576){if(t<118528){if(113824<=t&&t<=113827)return r.CLUSTER_BREAK.CONTROL}else if(118528<=t&&t<=118573)return r.CLUSTER_BREAK.EXTEND}else if(t<119141){if(118576<=t&&t<=118598)return r.CLUSTER_BREAK.EXTEND}else{if(t===119141)return r.CLUSTER_BREAK.EXTEND;if(t===119142)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<119173){if(t<119150){if(t<119149){if(119143<=t&&t<=119145)return r.CLUSTER_BREAK.EXTEND}else if(t===119149)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<119155){if(119150<=t&&t<=119154)return r.CLUSTER_BREAK.EXTEND}else if(t<119163){if(119155<=t&&t<=119162)return r.CLUSTER_BREAK.CONTROL}else if(119163<=t&&t<=119170)return r.CLUSTER_BREAK.EXTEND}else if(t<121344){if(t<119210){if(119173<=t&&t<=119179)return r.CLUSTER_BREAK.EXTEND}else if(t<119362){if(119210<=t&&t<=119213)return r.CLUSTER_BREAK.EXTEND}else if(119362<=t&&t<=119364)return r.CLUSTER_BREAK.EXTEND}else if(t<121403){if(121344<=t&&t<=121398)return r.CLUSTER_BREAK.EXTEND}else if(t<121461){if(121403<=t&&t<=121452)return r.CLUSTER_BREAK.EXTEND}else if(t===121461)return r.CLUSTER_BREAK.EXTEND}else if(t<123628){if(t<122907){if(t<121505){if(t<121499){if(t===121476)return r.CLUSTER_BREAK.EXTEND}else if(121499<=t&&t<=121503)return r.CLUSTER_BREAK.EXTEND}else if(t<122880){if(121505<=t&&t<=121519)return r.CLUSTER_BREAK.EXTEND}else if(t<122888){if(122880<=t&&t<=122886)return r.CLUSTER_BREAK.EXTEND}else if(122888<=t&&t<=122904)return r.CLUSTER_BREAK.EXTEND}else if(t<123023){if(t<122915){if(122907<=t&&t<=122913)return r.CLUSTER_BREAK.EXTEND}else if(t<122918){if(122915<=t&&t<=122916)return r.CLUSTER_BREAK.EXTEND}else if(122918<=t&&t<=122922)return r.CLUSTER_BREAK.EXTEND}else if(t<123184){if(t===123023)return r.CLUSTER_BREAK.EXTEND}else if(t<123566){if(123184<=t&&t<=123190)return r.CLUSTER_BREAK.EXTEND}else if(t===123566)return r.CLUSTER_BREAK.EXTEND}else if(t<127995){if(t<125136){if(t<124140){if(123628<=t&&t<=123631)return r.CLUSTER_BREAK.EXTEND}else if(124140<=t&&t<=124143)return r.CLUSTER_BREAK.EXTEND}else if(t<125252){if(125136<=t&&t<=125142)return r.CLUSTER_BREAK.EXTEND}else if(t<127462){if(125252<=t&&t<=125258)return r.CLUSTER_BREAK.EXTEND}else if(127462<=t&&t<=127487)return r.CLUSTER_BREAK.REGIONAL_INDICATOR}else if(t<917632){if(t<917504){if(127995<=t&&t<=127999)return r.CLUSTER_BREAK.EXTEND}else if(t<917536){if(917504<=t&&t<=917535)return r.CLUSTER_BREAK.CONTROL}else if(917536<=t&&t<=917631)return r.CLUSTER_BREAK.EXTEND}else if(t<917760){if(917632<=t&&t<=917759)return r.CLUSTER_BREAK.CONTROL}else if(t<918e3){if(917760<=t&&t<=917999)return r.CLUSTER_BREAK.EXTEND}else if(918e3<=t&&t<=921599)return r.CLUSTER_BREAK.CONTROL;return r.CLUSTER_BREAK.OTHER}static getEmojiProperty(t){if(t<10160){if(t<9728){if(t<9e3){if(t<8482){if(t<8252){if(t===169||t===174)return r.EXTENDED_PICTOGRAPHIC}else if(t===8252||t===8265)return r.EXTENDED_PICTOGRAPHIC}else if(t<8596){if(t===8482||t===8505)return r.EXTENDED_PICTOGRAPHIC}else if(t<8617){if(8596<=t&&t<=8601)return r.EXTENDED_PICTOGRAPHIC}else if(t<8986){if(8617<=t&&t<=8618)return r.EXTENDED_PICTOGRAPHIC}else if(8986<=t&&t<=8987)return r.EXTENDED_PICTOGRAPHIC}else if(t<9410){if(t<9167){if(t===9e3||t===9096)return r.EXTENDED_PICTOGRAPHIC}else if(t<9193){if(t===9167)return r.EXTENDED_PICTOGRAPHIC}else if(t<9208){if(9193<=t&&t<=9203)return r.EXTENDED_PICTOGRAPHIC}else if(9208<=t&&t<=9210)return r.EXTENDED_PICTOGRAPHIC}else if(t<9654){if(t<9642){if(t===9410)return r.EXTENDED_PICTOGRAPHIC}else if(9642<=t&&t<=9643)return r.EXTENDED_PICTOGRAPHIC}else if(t<9664){if(t===9654)return r.EXTENDED_PICTOGRAPHIC}else if(t<9723){if(t===9664)return r.EXTENDED_PICTOGRAPHIC}else if(9723<=t&&t<=9726)return r.EXTENDED_PICTOGRAPHIC}else if(t<10035){if(t<10004){if(t<9748){if(t<9735){if(9728<=t&&t<=9733)return r.EXTENDED_PICTOGRAPHIC}else if(9735<=t&&t<=9746)return r.EXTENDED_PICTOGRAPHIC}else if(t<9872){if(9748<=t&&t<=9861)return r.EXTENDED_PICTOGRAPHIC}else if(t<9992){if(9872<=t&&t<=9989)return r.EXTENDED_PICTOGRAPHIC}else if(9992<=t&&t<=10002)return r.EXTENDED_PICTOGRAPHIC}else if(t<10013){if(t===10004||t===10006)return r.EXTENDED_PICTOGRAPHIC}else if(t<10017){if(t===10013)return r.EXTENDED_PICTOGRAPHIC}else if(t===10017||t===10024)return r.EXTENDED_PICTOGRAPHIC}else if(t<10067){if(t<10055){if(t<10052){if(10035<=t&&t<=10036)return r.EXTENDED_PICTOGRAPHIC}else if(t===10052)return r.EXTENDED_PICTOGRAPHIC}else if(t<10060){if(t===10055)return r.EXTENDED_PICTOGRAPHIC}else if(t===10060||t===10062)return r.EXTENDED_PICTOGRAPHIC}else if(t<10083){if(t<10071){if(10067<=t&&t<=10069)return r.EXTENDED_PICTOGRAPHIC}else if(t===10071)return r.EXTENDED_PICTOGRAPHIC}else if(t<10133){if(10083<=t&&t<=10087)return r.EXTENDED_PICTOGRAPHIC}else if(t<10145){if(10133<=t&&t<=10135)return r.EXTENDED_PICTOGRAPHIC}else if(t===10145)return r.EXTENDED_PICTOGRAPHIC}else if(t<127489){if(t<12951){if(t<11035){if(t<10548){if(t===10160||t===10175)return r.EXTENDED_PICTOGRAPHIC}else if(t<11013){if(10548<=t&&t<=10549)return r.EXTENDED_PICTOGRAPHIC}else if(11013<=t&&t<=11015)return r.EXTENDED_PICTOGRAPHIC}else if(t<11093){if(t<11088){if(11035<=t&&t<=11036)return r.EXTENDED_PICTOGRAPHIC}else if(t===11088)return r.EXTENDED_PICTOGRAPHIC}else if(t<12336){if(t===11093)return r.EXTENDED_PICTOGRAPHIC}else if(t===12336||t===12349)return r.EXTENDED_PICTOGRAPHIC}else if(t<127340){if(t<126976){if(t===12951||t===12953)return r.EXTENDED_PICTOGRAPHIC}else if(t<127245){if(126976<=t&&t<=127231)return r.EXTENDED_PICTOGRAPHIC}else if(t<127279){if(127245<=t&&t<=127247)return r.EXTENDED_PICTOGRAPHIC}else if(t===127279)return r.EXTENDED_PICTOGRAPHIC}else if(t<127374){if(t<127358){if(127340<=t&&t<=127345)return r.EXTENDED_PICTOGRAPHIC}else if(127358<=t&&t<=127359)return r.EXTENDED_PICTOGRAPHIC}else if(t<127377){if(t===127374)return r.EXTENDED_PICTOGRAPHIC}else if(t<127405){if(127377<=t&&t<=127386)return r.EXTENDED_PICTOGRAPHIC}else if(127405<=t&&t<=127461)return r.EXTENDED_PICTOGRAPHIC}else if(t<128981){if(t<127561){if(t<127535){if(t<127514){if(127489<=t&&t<=127503)return r.EXTENDED_PICTOGRAPHIC}else if(t===127514)return r.EXTENDED_PICTOGRAPHIC}else if(t<127538){if(t===127535)return r.EXTENDED_PICTOGRAPHIC}else if(t<127548){if(127538<=t&&t<=127546)return r.EXTENDED_PICTOGRAPHIC}else if(127548<=t&&t<=127551)return r.EXTENDED_PICTOGRAPHIC}else if(t<128326){if(t<128e3){if(127561<=t&&t<=127994)return r.EXTENDED_PICTOGRAPHIC}else if(128e3<=t&&t<=128317)return r.EXTENDED_PICTOGRAPHIC}else if(t<128640){if(128326<=t&&t<=128591)return r.EXTENDED_PICTOGRAPHIC}else if(t<128884){if(128640<=t&&t<=128767)return r.EXTENDED_PICTOGRAPHIC}else if(128884<=t&&t<=128895)return r.EXTENDED_PICTOGRAPHIC}else if(t<129198){if(t<129096){if(t<129036){if(128981<=t&&t<=129023)return r.EXTENDED_PICTOGRAPHIC}else if(129036<=t&&t<=129039)return r.EXTENDED_PICTOGRAPHIC}else if(t<129114){if(129096<=t&&t<=129103)return r.EXTENDED_PICTOGRAPHIC}else if(t<129160){if(129114<=t&&t<=129119)return r.EXTENDED_PICTOGRAPHIC}else if(129160<=t&&t<=129167)return r.EXTENDED_PICTOGRAPHIC}else if(t<129340){if(t<129292){if(129198<=t&&t<=129279)return r.EXTENDED_PICTOGRAPHIC}else if(129292<=t&&t<=129338)return r.EXTENDED_PICTOGRAPHIC}else if(t<129351){if(129340<=t&&t<=129349)return r.EXTENDED_PICTOGRAPHIC}else if(t<130048){if(129351<=t&&t<=129791)return r.EXTENDED_PICTOGRAPHIC}else if(130048<=t&&t<=131069)return r.EXTENDED_PICTOGRAPHIC;return r.CLUSTER_BREAK.OTHER}};e.default=a}}),Qe=Ae({"../../node_modules/.pnpm/graphemer@1.4.0/node_modules/graphemer/lib/index.js"(e){var i=e&&e.__importDefault||function(n){return n&&n.__esModule?n:{default:n}};Object.defineProperty(e,"__esModule",{value:!0});var r=i(Ct());e.default=r.default}}),lr=Ae({"../../node_modules/.pnpm/iso-datestring-validator@2.2.2/node_modules/iso-datestring-validator/dist/index.js"(e){(()=>{var i={d:(T,v)=>{for(var x in v)i.o(v,x)&&!i.o(T,x)&&Object.defineProperty(T,x,{enumerable:!0,get:v[x]})},o:(T,v)=>Object.prototype.hasOwnProperty.call(T,v),r:T=>{typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(T,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(T,"__esModule",{value:!0})}},r={};function n(T,v){return v===void 0&&(v="-"),new RegExp("^(?!0{4}"+v+"0{2}"+v+"0{2})((?=[0-9]{4}"+v+"(((0[^2])|1[0-2])|02(?="+v+"(([0-1][0-9])|2[0-8])))"+v+"[0-9]{2})|(?=((([13579][26])|([2468][048])|(0[48]))0{2})|([0-9]{2}((((0|[2468])[48])|[2468][048])|([13579][26])))"+v+"02"+v+"29))([0-9]{4})"+v+"(?!((0[469])|11)"+v+"31)((0[1,3-9]|1[0-2])|(02(?!"+v+"3)))"+v+"(0[1-9]|[1-2][0-9]|3[0-1])$").test(T)}function s(T){var v=/\D/.exec(T);return v?v[0]:""}function a(T,v,x){v===void 0&&(v=":"),x===void 0&&(x=!1);var X=new RegExp("^([0-1]|2(?=([0-3])|4"+v+"00))[0-9]"+v+"[0-5][0-9]("+v+"([0-5]|6(?=0))[0-9])?(.[0-9]{1,9})?$");if(!x||!/[Z+\-]/.test(T))return X.test(T);if(/Z$/.test(T))return X.test(T.replace("Z",""));var K=T.includes("+"),q=T.split(/[+-]/),j=q[0],F=q[1];return X.test(j)&&function(ie,re,N){return N===void 0&&(N=":"),new RegExp(re?"^(0(?!(2"+N+"4)|0"+N+"3)|1(?=([0-1]|2(?="+N+"[04])|[34](?="+N+"0))))([03469](?="+N+"[03])|[17](?="+N+"0)|2(?="+N+"[04])|5(?="+N+"[034])|8(?="+N+"[04]))"+N+"([03](?=0)|4(?=5))[05]$":"^(0(?=[^0])|1(?=[0-2]))([39](?="+N+"[03])|[0-24-8](?="+N+"00))"+N+"[03]0$").test(ie)}(F,K,s(F))}function t(T){var v=T.split("T"),x=v[0],X=v[1],K=n(x,s(x));if(!X)return!1;var q,j=(q=X.match(/([^Z+\-\d])(?=\d+\1)/),Array.isArray(q)?q[0]:"");return K&&a(X,j,!0)}function l(T,v){return v===void 0&&(v="-"),new RegExp("^[0-9]{4}"+v+"(0(?=[^0])|1(?=[0-2]))[0-9]$").test(T)}i.r(r),i.d(r,{isValidDate:()=>n,isValidISODateString:()=>t,isValidTime:()=>a,isValidYearMonth:()=>l});var u=e;for(var h in r)u[h]=r[h];r.__esModule&&Object.defineProperty(u,"__esModule",{value:!0})})()}}),wt={};p(wt,{APP_BSKY_GRAPH:()=>kb,AppBskyActorDefs:()=>_,AppBskyActorGetPreferences:()=>ha,AppBskyActorGetProfile:()=>Ra,AppBskyActorGetProfiles:()=>ga,AppBskyActorGetSuggestions:()=>ba,AppBskyActorNS:()=>xl,AppBskyActorProfile:()=>Nr,AppBskyActorPutPreferences:()=>Aa,AppBskyActorSearchActors:()=>Ta,AppBskyActorSearchActorsTypeahead:()=>va,AppBskyEmbedExternal:()=>Et,AppBskyEmbedImages:()=>Oe,AppBskyEmbedNS:()=>Ul,AppBskyEmbedRecord:()=>Be,AppBskyEmbedRecordWithMedia:()=>Ge,AppBskyFeedDefs:()=>tl,AppBskyFeedDescribeFeedGenerator:()=>La,AppBskyFeedGenerator:()=>rl,AppBskyFeedGetActorFeeds:()=>_a,AppBskyFeedGetActorLikes:()=>Ca,AppBskyFeedGetAuthorFeed:()=>ka,AppBskyFeedGetFeed:()=>Va,AppBskyFeedGetFeedGenerator:()=>Pa,AppBskyFeedGetFeedGenerators:()=>Ia,AppBskyFeedGetFeedSkeleton:()=>ja,AppBskyFeedGetLikes:()=>Ma,AppBskyFeedGetListFeed:()=>$a,AppBskyFeedGetPostThread:()=>Xa,AppBskyFeedGetPosts:()=>Za,AppBskyFeedGetRepostedBy:()=>Wa,AppBskyFeedGetSuggestedFeeds:()=>Ja,AppBskyFeedGetTimeline:()=>Qa,AppBskyFeedLike:()=>il,AppBskyFeedNS:()=>Vl,AppBskyFeedPost:()=>Pe,AppBskyFeedRepost:()=>nl,AppBskyFeedSearchPosts:()=>Ya,AppBskyFeedThreadgate:()=>sl,AppBskyGraphBlock:()=>al,AppBskyGraphDefs:()=>ol,AppBskyGraphFollow:()=>ll,AppBskyGraphGetBlocks:()=>ro,AppBskyGraphGetFollowers:()=>io,AppBskyGraphGetFollows:()=>no,AppBskyGraphGetList:()=>so,AppBskyGraphGetListBlocks:()=>ao,AppBskyGraphGetListMutes:()=>oo,AppBskyGraphGetLists:()=>lo,AppBskyGraphGetMutes:()=>po,AppBskyGraphGetRelationships:()=>uo,AppBskyGraphGetSuggestedFollowsByActor:()=>mo,AppBskyGraphList:()=>pl,AppBskyGraphListblock:()=>ul,AppBskyGraphListitem:()=>fl,AppBskyGraphMuteActor:()=>yo,AppBskyGraphMuteActorList:()=>Eo,AppBskyGraphNS:()=>Fl,AppBskyGraphUnmuteActor:()=>ho,AppBskyGraphUnmuteActorList:()=>Ro,AppBskyLabelerDefs:()=>cl,AppBskyLabelerGetServices:()=>go,AppBskyLabelerNS:()=>Xl,AppBskyLabelerService:()=>dl,AppBskyNS:()=>kl,AppBskyNotificationGetUnreadCount:()=>bo,AppBskyNotificationListNotifications:()=>Ao,AppBskyNotificationNS:()=>Hl,AppBskyNotificationRegisterPush:()=>To,AppBskyNotificationUpdateSeen:()=>vo,AppBskyRichtextFacet:()=>ge,AppBskyRichtextNS:()=>Zl,AppBskyUnspeccedDefs:()=>ml,AppBskyUnspeccedGetPopularFeedGenerators:()=>Lo,AppBskyUnspeccedGetTaggedSuggestions:()=>_o,AppBskyUnspeccedNS:()=>Wl,AppBskyUnspeccedSearchActorsSkeleton:()=>Co,AppBskyUnspeccedSearchPostsSkeleton:()=>Bo,AppNS:()=>Bl,AtUri:()=>de,AtpAgent:()=>ht,AtpBaseClient:()=>hl,AtpServiceClient:()=>Rl,BLOCK_BEHAVIOR:()=>Qt,BSKY_LABELER_DID:()=>rn,BlobRef:()=>Ne,BlockRecord:()=>ql,BskyAgent:()=>bt,COM_ATPROTO_MODERATION:()=>Bb,CUSTOM_LABEL_VALUE_RE:()=>cp,ComAtprotoAdminDefs:()=>Zo,ComAtprotoAdminDeleteAccount:()=>fn,ComAtprotoAdminDisableAccountInvites:()=>cn,ComAtprotoAdminDisableInviteCodes:()=>dn,ComAtprotoAdminEnableAccountInvites:()=>mn,ComAtprotoAdminGetAccountInfo:()=>yn,ComAtprotoAdminGetAccountInfos:()=>En,ComAtprotoAdminGetInviteCodes:()=>hn,ComAtprotoAdminGetSubjectStatus:()=>Rn,ComAtprotoAdminNS:()=>Al,ComAtprotoAdminSendEmail:()=>gn,ComAtprotoAdminUpdateAccountEmail:()=>bn,ComAtprotoAdminUpdateAccountHandle:()=>An,ComAtprotoAdminUpdateAccountPassword:()=>Tn,ComAtprotoAdminUpdateSubjectStatus:()=>vn,ComAtprotoIdentityGetRecommendedDidCredentials:()=>Ln,ComAtprotoIdentityNS:()=>Tl,ComAtprotoIdentityRequestPlcOperationSignature:()=>_n,ComAtprotoIdentityResolveHandle:()=>Cn,ComAtprotoIdentitySignPlcOperation:()=>wn,ComAtprotoIdentitySubmitPlcOperation:()=>Sn,ComAtprotoIdentityUpdateHandle:()=>Bn,ComAtprotoLabelDefs:()=>Dr,ComAtprotoLabelNS:()=>vl,ComAtprotoLabelQueryLabels:()=>kn,ComAtprotoLabelSubscribeLabels:()=>Wo,ComAtprotoModerationCreateReport:()=>xn,ComAtprotoModerationDefs:()=>Jo,ComAtprotoModerationNS:()=>Ll,ComAtprotoNS:()=>bl,ComAtprotoRepoApplyWrites:()=>Kn,ComAtprotoRepoCreateRecord:()=>Dn,ComAtprotoRepoDeleteRecord:()=>In,ComAtprotoRepoDescribeRepo:()=>qn,ComAtprotoRepoGetRecord:()=>Mn,ComAtprotoRepoImportRepo:()=>$n,ComAtprotoRepoListMissingBlobs:()=>On,ComAtprotoRepoListRecords:()=>Gn,ComAtprotoRepoNS:()=>_l,ComAtprotoRepoPutRecord:()=>Vr,ComAtprotoRepoStrongRef:()=>Qo,ComAtprotoRepoUploadBlob:()=>Hn,ComAtprotoServerActivateAccount:()=>Zn,ComAtprotoServerCheckAccountStatus:()=>Wn,ComAtprotoServerConfirmEmail:()=>Jn,ComAtprotoServerCreateAccount:()=>is,ComAtprotoServerCreateAppPassword:()=>cs,ComAtprotoServerCreateInviteCode:()=>ys,ComAtprotoServerCreateInviteCodes:()=>Es,ComAtprotoServerCreateSession:()=>hs,ComAtprotoServerDeactivateAccount:()=>bs,ComAtprotoServerDefs:()=>Yo,ComAtprotoServerDeleteAccount:()=>As,ComAtprotoServerDeleteSession:()=>_s,ComAtprotoServerDescribeServer:()=>Cs,ComAtprotoServerGetAccountInviteCodes:()=>ws,ComAtprotoServerGetServiceAuth:()=>ks,ComAtprotoServerGetSession:()=>xs,ComAtprotoServerListAppPasswords:()=>Ks,ComAtprotoServerNS:()=>Cl,ComAtprotoServerRefreshSession:()=>Ds,ComAtprotoServerRequestAccountDelete:()=>Is,ComAtprotoServerRequestEmailConfirmation:()=>js,ComAtprotoServerRequestEmailUpdate:()=>Fs,ComAtprotoServerRequestPasswordReset:()=>qs,ComAtprotoServerReserveSigningKey:()=>Ms,ComAtprotoServerResetPassword:()=>$s,ComAtprotoServerRevokeAppPassword:()=>zs,ComAtprotoServerUpdateEmail:()=>Hs,ComAtprotoSyncGetBlob:()=>Ys,ComAtprotoSyncGetBlocks:()=>ea,ComAtprotoSyncGetCheckout:()=>ta,ComAtprotoSyncGetHead:()=>ra,ComAtprotoSyncGetLatestCommit:()=>sa,ComAtprotoSyncGetRecord:()=>la,ComAtprotoSyncGetRepo:()=>pa,ComAtprotoSyncListBlobs:()=>ua,ComAtprotoSyncListRepos:()=>fa,ComAtprotoSyncNS:()=>wl,ComAtprotoSyncNotifyOfUpdate:()=>ca,ComAtprotoSyncRequestCrawl:()=>da,ComAtprotoSyncSubscribeRepos:()=>el,ComAtprotoTempCheckSignupQueue:()=>ma,ComAtprotoTempFetchLabels:()=>ya,ComAtprotoTempNS:()=>Sl,ComAtprotoTempRequestPhoneVerification:()=>Ea,ComNS:()=>gl,DEFAULT_LABEL_SETTINGS:()=>yp,FollowRecord:()=>Ml,GeneratorRecord:()=>Dl,HIDE_BEHAVIOR:()=>tr,LABELS:()=>Ir,LikeRecord:()=>Nl,ListRecord:()=>$l,ListblockRecord:()=>Ol,ListitemRecord:()=>Gl,MENTION_REGEX:()=>np,MUTEWORD_BEHAVIOR:()=>er,MUTE_BEHAVIOR:()=>Yt,ModerationDecision:()=>te,ModerationUI:()=>mp,NOOP_BEHAVIOR:()=>dp,PostRecord:()=>Pl,ProfileRecord:()=>Kl,RepostRecord:()=>Il,RichText:()=>up,RichTextSegment:()=>Xe,ServiceRecord:()=>zl,TAG_REGEX:()=>op,TOOLS_OZONE_MODERATION:()=>xb,TRAILING_PUNCTUATION_REGEX:()=>ap,ThreadgateRecord:()=>jl,ToolsNS:()=>Jl,ToolsOzoneCommunicationCreateTemplate:()=>Ko,ToolsOzoneCommunicationDefs:()=>yl,ToolsOzoneCommunicationDeleteTemplate:()=>Uo,ToolsOzoneCommunicationListTemplates:()=>Vo,ToolsOzoneCommunicationNS:()=>Yl,ToolsOzoneCommunicationUpdateTemplate:()=>Do,ToolsOzoneModerationDefs:()=>El,ToolsOzoneModerationEmitEvent:()=>No,ToolsOzoneModerationGetEvent:()=>jo,ToolsOzoneModerationGetRecord:()=>Fo,ToolsOzoneModerationGetRepo:()=>$o,ToolsOzoneModerationNS:()=>ep,ToolsOzoneModerationQueryEvents:()=>Xo,ToolsOzoneModerationQueryStatuses:()=>zo,ToolsOzoneModerationSearchRepos:()=>Ho,ToolsOzoneNS:()=>Ql,URL_REGEX:()=>sp,UnicodeString:()=>Rt,default:()=>ht,hasMutedWord:()=>ue,interpretLabelValueDefinition:()=>Rp,interpretLabelValueDefinitions:()=>gp,jsonStringToLex:()=>tn,jsonToLex:()=>en,lexToJson:()=>Qi,mock:()=>n4,moderateFeedGenerator:()=>r4,moderateNotification:()=>t4,moderatePost:()=>e4,moderateProfile:()=>Yb,moderateUserList:()=>i4,parseLanguage:()=>Yf,sanitizeMutedWordValue:()=>Ur,sanitizeRichText:()=>ip,stringifyLex:()=>Yi}),V.exports=or(wt);var Ye=e=>{if(!/^[a-zA-Z0-9.-]*$/.test(e))throw new ae("Disallowed characters in handle (ASCII letters, digits, dashes, periods only)");if(e.length>253)throw new ae("Handle is too long (253 chars max)");const i=e.split(".");if(i.length<2)throw new ae("Handle domain needs at least two parts");for(let r=0;r<i.length;r++){const n=i[r];if(n.length<1)throw new ae("Handle parts can not be empty");if(n.length>63)throw new ae("Handle part too long (max 63 chars)");if(n.endsWith("-")||n.startsWith("-"))throw new ae("Handle parts can not start or end with hyphens");if(r+1==i.length&&!/^[a-zA-Z]/.test(n))throw new ae("Handle final component (TLD) must start with ASCII letter")}},ae=class extends Error{},et=e=>{if(!/^[a-zA-Z0-9._:%-]*$/.test(e))throw new Se("Disallowed characters in DID (ASCII letters, digits, and a couple other characters only)");const i=e.split(":");if(i.length<3)throw new Se("DID requires prefix, method, and method-specific content");if(i[0]!="did")throw new Se('DID requires "did:" prefix');if(!/^[a-z]+$/.test(i[1]))throw new Se("DID method must be lower-case letters");if(e.endsWith(":")||e.endsWith("%"))throw new Se('DID can not end with ":" or "%"');if(e.length>2*1024)throw new Se("DID is too long (2048 chars max)")},Se=class extends Error{},Ie=class{constructor(e){this.segments=[],tt(e),this.segments=e.split(".")}static parse(e){return new Ie(e)}static create(e,i){const r=[...e.split(".").reverse(),i].join(".");return new Ie(r)}static isValid(e){try{return Ie.parse(e),!0}catch{return!1}}get authority(){return this.segments.slice(0,this.segments.length-1).reverse().join(".")}get name(){return this.segments.at(this.segments.length-1)}toString(){return this.segments.join(".")}},tt=e=>{const i=e;if(!/^[a-zA-Z0-9.-]*$/.test(i))throw new oe("Disallowed characters in NSID (ASCII letters, digits, dashes, periods only)");if(i.length>317)throw new oe("NSID is too long (317 chars max)");const r=i.split(".");if(r.length<3)throw new oe("NSID needs at least three parts");for(let n=0;n<r.length;n++){const s=r[n];if(s.length<1)throw new oe("NSID parts can not be empty");if(s.length>63)throw new oe("NSID part too long (max 63 chars)");if(s.endsWith("-")||s.startsWith("-"))throw new oe("NSID parts can not start or end with hyphen");if(/^[0-9]/.test(s)&&n==0)throw new oe("NSID first part may not start with a digit");if(!/^[a-zA-Z]+$/.test(s)&&n+1==r.length)throw new oe("NSID name part must be only letters")}},oe=class extends Error{},pr=e=>{const i=e.split("#");if(i.length>2)throw new Error('ATURI can have at most one "#", separating fragment out');const r=i[1]||null;if(e=i[0],!/^[a-zA-Z0-9._~:@!$&')(*+,;=%/-]*$/.test(e))throw new Error("Disallowed characters in ATURI (ASCII)");const n=e.split("/");if(n.length>=3&&(n[0]!="at:"||n[1].length!=0))throw new Error('ATURI must start with "at://"');if(n.length<3)throw new Error("ATURI requires at least method and authority sections");try{n[2].startsWith("did:")?et(n[2]):Ye(n[2])}catch{throw new Error("ATURI authority must be a valid handle or DID")}if(n.length>=4){if(n[3].length==0)throw new Error("ATURI can not have a slash after authority without a path segment");try{tt(n[3])}catch{throw new Error("ATURI requires first path segment (if supplied) to be valid NSID")}}if(n.length>=5&&n[4].length==0)throw new Error("ATURI can not have a slash after collection, unless record key is provided");if(n.length>=6)throw new Error("ATURI path can have at most two parts, and no trailing slash");if(i.length>=2&&r==null)throw new Error("ATURI fragment must be non-empty and start with slash");if(r!=null){if(r.length==0||r[0]!="/")throw new Error("ATURI fragment must be non-empty and start with slash");if(!/^\/[a-zA-Z0-9._~:@!$&')(*+,;=%[\]/-]*$/.test(r))throw new Error("Disallowed characters in ATURI fragment (ASCII)")}if(e.length>8*1024)throw new Error("ATURI is far too long")},ur=/^(at:\/\/)?((?:did:[a-z0-9:%-]+)|(?:[a-z0-9][a-z0-9.:-]*))(\/[^?#\s]*)?(\?[^#\s]+)?(#[^\s]+)?$/i,fr=/^(\/[^?#\s]*)?(\?[^#\s]+)?(#[^\s]+)?$/i,de=class{constructor(e,i){let r;if(i){if(r=St(i),!r)throw new Error(`Invalid at uri: ${i}`);const n=cr(e);if(!n)throw new Error(`Invalid path: ${e}`);Object.assign(r,n)}else if(r=St(e),!r)throw new Error(`Invalid at uri: ${e}`);this.hash=r.hash,this.host=r.host,this.pathname=r.pathname,this.searchParams=r.searchParams}static make(e,i,r){let n=e;return i&&(n+="/"+i),r&&(n+="/"+r),new de(n)}get protocol(){return"at:"}get origin(){return`at://${this.host}`}get hostname(){return this.host}set hostname(e){this.host=e}get search(){return this.searchParams.toString()}set search(e){this.searchParams=new URLSearchParams(e)}get collection(){return this.pathname.split("/").filter(Boolean)[0]||""}set collection(e){const i=this.pathname.split("/").filter(Boolean);i[0]=e,this.pathname=i.join("/")}get rkey(){return this.pathname.split("/").filter(Boolean)[1]||""}set rkey(e){const i=this.pathname.split("/").filter(Boolean);i[0]||(i[0]="undefined"),i[1]=e,this.pathname=i.join("/")}get href(){return this.toString()}toString(){let e=this.pathname||"/";e.startsWith("/")||(e=`/${e}`);let i=this.searchParams.toString();i&&!i.startsWith("?")&&(i=`?${i}`);let r=this.hash;return r&&!r.startsWith("#")&&(r=`#${r}`),`at://${this.host}${e}${i}${r}`}};function St(e){const i=ur.exec(e);if(i)return{hash:i[5]||"",host:i[2]||"",pathname:i[3]||"",searchParams:new URLSearchParams(i[4]||"")}}function cr(e){const i=fr.exec(e);if(i)return{hash:i[3]||"",pathname:i[1]||"",searchParams:new URLSearchParams(i[2]||"")}}var o;(function(e){e.assertEqual=s=>s;function i(s){}e.assertIs=i;function r(s){throw new Error}e.assertNever=r,e.arrayToEnum=s=>{const a={};for(const t of s)a[t]=t;return a},e.getValidEnumValues=s=>{const a=e.objectKeys(s).filter(l=>typeof s[s[l]]!="number"),t={};for(const l of a)t[l]=s[l];return e.objectValues(t)},e.objectValues=s=>e.objectKeys(s).map(function(a){return s[a]}),e.objectKeys=typeof Object.keys=="function"?s=>Object.keys(s):s=>{const a=[];for(const t in s)Object.prototype.hasOwnProperty.call(s,t)&&a.push(t);return a},e.find=(s,a)=>{for(const t of s)if(a(t))return t},e.isInteger=typeof Number.isInteger=="function"?s=>Number.isInteger(s):s=>typeof s=="number"&&isFinite(s)&&Math.floor(s)===s;function n(s,a=" | "){return s.map(t=>typeof t=="string"?`'${t}'`:t).join(a)}e.joinValues=n,e.jsonStringifyReplacer=(s,a)=>typeof a=="bigint"?a.toString():a})(o||(o={}));var g;(function(e){e.mergeShapes=(i,r)=>({...i,...r})})(g||(g={}));var y=o.arrayToEnum(["string","nan","number","integer","float","boolean","date","bigint","symbol","function","undefined","null","array","object","unknown","promise","void","never","map","set"]),A=e=>{switch(typeof e){case"undefined":return y.undefined;case"string":return y.string;case"number":return isNaN(e)?y.nan:y.number;case"boolean":return y.boolean;case"function":return y.function;case"bigint":return y.bigint;case"symbol":return y.symbol;case"object":return Array.isArray(e)?y.array:e===null?y.null:e.then&&typeof e.then=="function"&&e.catch&&typeof e.catch=="function"?y.promise:typeof Map<"u"&&e instanceof Map?y.map:typeof Set<"u"&&e instanceof Set?y.set:typeof Date<"u"&&e instanceof Date?y.date:y.object;default:return y.unknown}},E=o.arrayToEnum(["invalid_type","invalid_literal","custom","invalid_union","invalid_union_discriminator","invalid_enum_value","unrecognized_keys","invalid_arguments","invalid_return_type","invalid_date","invalid_string","too_small","too_big","invalid_intersection_types","not_multiple_of","not_finite"]),P=e=>JSON.stringify(e,null,2).replace(/"([^"]+)":/g,"$1:"),I=class extends Error{constructor(e){super(),this.issues=[],this.addIssue=r=>{this.issues=[...this.issues,r]},this.addIssues=(r=[])=>{this.issues=[...this.issues,...r]};const i=new.target.prototype;Object.setPrototypeOf?Object.setPrototypeOf(this,i):this.__proto__=i,this.name="ZodError",this.issues=e}get errors(){return this.issues}format(e){const i=e||function(s){return s.message},r={_errors:[]},n=s=>{for(const a of s.issues)if(a.code==="invalid_union")a.unionErrors.map(n);else if(a.code==="invalid_return_type")n(a.returnTypeError);else if(a.code==="invalid_arguments")n(a.argumentsError);else if(a.path.length===0)r._errors.push(i(a));else{let t=r,l=0;for(;l<a.path.length;){const u=a.path[l];l===a.path.length-1?(t[u]=t[u]||{_errors:[]},t[u]._errors.push(i(a))):t[u]=t[u]||{_errors:[]},t=t[u],l++}}};return n(this),r}toString(){return this.message}get message(){return JSON.stringify(this.issues,o.jsonStringifyReplacer,2)}get isEmpty(){return this.issues.length===0}flatten(e=i=>i.message){const i={},r=[];for(const n of this.issues)n.path.length>0?(i[n.path[0]]=i[n.path[0]]||[],i[n.path[0]].push(e(n))):r.push(e(n));return{formErrors:r,fieldErrors:i}}get formErrors(){return this.flatten()}};I.create=e=>new I(e);var O=(e,i)=>{let r;switch(e.code){case E.invalid_type:e.received===y.undefined?r="Required":r=`Expected ${e.expected}, received ${e.received}`;break;case E.invalid_literal:r=`Invalid literal value, expected ${JSON.stringify(e.expected,o.jsonStringifyReplacer)}`;break;case E.unrecognized_keys:r=`Unrecognized key(s) in object: ${o.joinValues(e.keys,", ")}`;break;case E.invalid_union:r="Invalid input";break;case E.invalid_union_discriminator:r=`Invalid discriminator value. Expected ${o.joinValues(e.options)}`;break;case E.invalid_enum_value:r=`Invalid enum value. Expected ${o.joinValues(e.options)}, received '${e.received}'`;break;case E.invalid_arguments:r="Invalid function arguments";break;case E.invalid_return_type:r="Invalid function return type";break;case E.invalid_date:r="Invalid date";break;case E.invalid_string:typeof e.validation=="object"?"includes"in e.validation?(r=`Invalid input: must include "${e.validation.includes}"`,typeof e.validation.position=="number"&&(r=`${r} at one or more positions greater than or equal to ${e.validation.position}`)):"startsWith"in e.validation?r=`Invalid input: must start with "${e.validation.startsWith}"`:"endsWith"in e.validation?r=`Invalid input: must end with "${e.validation.endsWith}"`:o.assertNever(e.validation):e.validation!=="regex"?r=`Invalid ${e.validation}`:r="Invalid";break;case E.too_small:e.type==="array"?r=`Array must contain ${e.exact?"exactly":e.inclusive?"at least":"more than"} ${e.minimum} element(s)`:e.type==="string"?r=`String must contain ${e.exact?"exactly":e.inclusive?"at least":"over"} ${e.minimum} character(s)`:e.type==="number"?r=`Number must be ${e.exact?"exactly equal to ":e.inclusive?"greater than or equal to ":"greater than "}${e.minimum}`:e.type==="date"?r=`Date must be ${e.exact?"exactly equal to ":e.inclusive?"greater than or equal to ":"greater than "}${new Date(Number(e.minimum))}`:r="Invalid input";break;case E.too_big:e.type==="array"?r=`Array must contain ${e.exact?"exactly":e.inclusive?"at most":"less than"} ${e.maximum} element(s)`:e.type==="string"?r=`String must contain ${e.exact?"exactly":e.inclusive?"at most":"under"} ${e.maximum} character(s)`:e.type==="number"?r=`Number must be ${e.exact?"exactly":e.inclusive?"less than or equal to":"less than"} ${e.maximum}`:e.type==="bigint"?r=`BigInt must be ${e.exact?"exactly":e.inclusive?"less than or equal to":"less than"} ${e.maximum}`:e.type==="date"?r=`Date must be ${e.exact?"exactly":e.inclusive?"smaller than or equal to":"smaller than"} ${new Date(Number(e.maximum))}`:r="Invalid input";break;case E.custom:r="Invalid input";break;case E.invalid_intersection_types:r="Intersection results could not be merged";break;case E.not_multiple_of:r=`Number must be a multiple of ${e.multipleOf}`;break;case E.not_finite:r="Number must be finite";break;default:r=i.defaultError,o.assertNever(e)}return{message:r}},Z=O;function Te(e){Z=e}function me(){return Z}var ye=e=>{const{data:i,path:r,errorMaps:n,issueData:s}=e,a=[...r,...s.path||[]],t={...s,path:a};let l="";const u=n.filter(h=>!!h).slice().reverse();for(const h of u)l=h(t,{data:i,defaultError:l}).message;return{...s,path:a,message:s.message||l}},le=[];function L(e,i){const r=ye({issueData:i,data:e.data,path:e.path,errorMaps:[e.common.contextualErrorMap,e.schemaErrorMap,me(),O].filter(n=>!!n)});e.common.issues.push(r)}var W=class{constructor(){this.value="valid"}dirty(){this.value==="valid"&&(this.value="dirty")}abort(){this.value!=="aborted"&&(this.value="aborted")}static mergeArray(e,i){const r=[];for(const n of i){if(n.status==="aborted")return B;n.status==="dirty"&&e.dirty(),r.push(n.value)}return{status:e.value,value:r}}static async mergeObjectAsync(e,i){const r=[];for(const n of i)r.push({key:await n.key,value:await n.value});return W.mergeObjectSync(e,r)}static mergeObjectSync(e,i){const r={};for(const n of i){const{key:s,value:a}=n;if(s.status==="aborted"||a.status==="aborted")return B;s.status==="dirty"&&e.dirty(),a.status==="dirty"&&e.dirty(),(typeof a.value<"u"||n.alwaysSet)&&(r[s.value]=a.value)}return{status:e.value,value:r}}},B=Object.freeze({status:"aborted"}),Or=e=>({status:"dirty",value:e}),ee=e=>({status:"valid",value:e}),dr=e=>e.status==="aborted",mr=e=>e.status==="dirty",Bt=e=>e.status==="valid",kt=e=>typeof Promise<"u"&&e instanceof Promise,C;(function(e){e.errToObj=i=>typeof i=="string"?{message:i}:i||{},e.toString=i=>typeof i=="string"?i:i==null?void 0:i.message})(C||(C={}));var Ee=class{constructor(e,i,r,n){this._cachedPath=[],this.parent=e,this.data=i,this._path=r,this._key=n}get path(){return this._cachedPath.length||(this._key instanceof Array?this._cachedPath.push(...this._path,...this._key):this._cachedPath.push(...this._path,this._key)),this._cachedPath}},Gr=(e,i)=>{if(Bt(i))return{success:!0,data:i.value};if(!e.common.issues.length)throw new Error("Validation failed but no issues detected.");return{success:!1,get error(){if(this._error)return this._error;const r=new I(e.common.issues);return this._error=r,this._error}}};function k(e){if(!e)return{};const{errorMap:i,invalid_type_error:r,required_error:n,description:s}=e;if(i&&(r||n))throw new Error(`Can't use "invalid_type_error" or "required_error" in conjunction with custom error map.`);return i?{errorMap:i,description:s}:{errorMap:(t,l)=>t.code!=="invalid_type"?{message:l.defaultError}:typeof l.data>"u"?{message:n??l.defaultError}:{message:r??l.defaultError},description:s}}var U=class{constructor(e){this.spa=this.safeParseAsync,this._def=e,this.parse=this.parse.bind(this),this.safeParse=this.safeParse.bind(this),this.parseAsync=this.parseAsync.bind(this),this.safeParseAsync=this.safeParseAsync.bind(this),this.spa=this.spa.bind(this),this.refine=this.refine.bind(this),this.refinement=this.refinement.bind(this),this.superRefine=this.superRefine.bind(this),this.optional=this.optional.bind(this),this.nullable=this.nullable.bind(this),this.nullish=this.nullish.bind(this),this.array=this.array.bind(this),this.promise=this.promise.bind(this),this.or=this.or.bind(this),this.and=this.and.bind(this),this.transform=this.transform.bind(this),this.brand=this.brand.bind(this),this.default=this.default.bind(this),this.catch=this.catch.bind(this),this.describe=this.describe.bind(this),this.pipe=this.pipe.bind(this),this.isNullable=this.isNullable.bind(this),this.isOptional=this.isOptional.bind(this)}get description(){return this._def.description}_getType(e){return A(e.data)}_getOrReturnCtx(e,i){return i||{common:e.parent.common,data:e.data,parsedType:A(e.data),schemaErrorMap:this._def.errorMap,path:e.path,parent:e.parent}}_processInputParams(e){return{status:new W,ctx:{common:e.parent.common,data:e.data,parsedType:A(e.data),schemaErrorMap:this._def.errorMap,path:e.path,parent:e.parent}}}_parseSync(e){const i=this._parse(e);if(kt(i))throw new Error("Synchronous parse encountered promise.");return i}_parseAsync(e){const i=this._parse(e);return Promise.resolve(i)}parse(e,i){const r=this.safeParse(e,i);if(r.success)return r.data;throw r.error}safeParse(e,i){var r;const n={common:{issues:[],async:(r=i==null?void 0:i.async)!==null&&r!==void 0?r:!1,contextualErrorMap:i==null?void 0:i.errorMap},path:(i==null?void 0:i.path)||[],schemaErrorMap:this._def.errorMap,parent:null,data:e,parsedType:A(e)},s=this._parseSync({data:e,path:n.path,parent:n});return Gr(n,s)}async parseAsync(e,i){const r=await this.safeParseAsync(e,i);if(r.success)return r.data;throw r.error}async safeParseAsync(e,i){const r={common:{issues:[],contextualErrorMap:i==null?void 0:i.errorMap,async:!0},path:(i==null?void 0:i.path)||[],schemaErrorMap:this._def.errorMap,parent:null,data:e,parsedType:A(e)},n=this._parse({data:e,path:r.path,parent:r}),s=await(kt(n)?n:Promise.resolve(n));return Gr(r,s)}refine(e,i){const r=n=>typeof i=="string"||typeof i>"u"?{message:i}:typeof i=="function"?i(n):i;return this._refinement((n,s)=>{const a=e(n),t=()=>s.addIssue({code:E.custom,...r(n)});return typeof Promise<"u"&&a instanceof Promise?a.then(l=>l?!0:(t(),!1)):a?!0:(t(),!1)})}refinement(e,i){return this._refinement((r,n)=>e(r)?!0:(n.addIssue(typeof i=="function"?i(r,n):i),!1))}_refinement(e){return new pe({schema:this,typeName:w.ZodEffects,effect:{type:"refinement",refinement:e}})}superRefine(e){return this._refinement(e)}optional(){return _e.create(this,this._def)}nullable(){return De.create(this,this._def)}nullish(){return this.nullable().optional()}array(){return Re.create(this,this._def)}promise(){return $e.create(this,this._def)}or(e){return st.create([this,e],this._def)}and(e){return at.create(this,e,this._def)}transform(e){return new pe({...k(this._def),schema:this,typeName:w.ZodEffects,effect:{type:"transform",transform:e}})}default(e){const i=typeof e=="function"?e:()=>e;return new ft({...k(this._def),innerType:this,defaultValue:i,typeName:w.ZodDefault})}brand(){return new zr({typeName:w.ZodBranded,type:this,...k(this._def)})}catch(e){const i=typeof e=="function"?e:()=>e;return new Nt({...k(this._def),innerType:this,catchValue:i,typeName:w.ZodCatch})}describe(e){const i=this.constructor;return new i({...this._def,description:e})}pipe(e){return It.create(this,e)}isOptional(){return this.safeParse(void 0).success}isNullable(){return this.safeParse(null).success}},xp=/^c[^\s-]{8,}$/i,Kp=/^[a-z][a-z0-9]*$/,Up=/[0-9A-HJKMNP-TV-Z]{26}/,Vp=/^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i,Dp=/^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\])|(\[IPv6:(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))\])|([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])*(\.[A-Za-z]{2,})+))$/,Np=new RegExp("^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$","u"),Pp=/^(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))$/,Ip=/^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/,jp=e=>e.precision?e.offset?new RegExp(`^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{${e.precision}}(([+-]\\d{2}(:?\\d{2})?)|Z)$`):new RegExp(`^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{${e.precision}}Z$`):e.precision===0?e.offset?new RegExp("^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(([+-]\\d{2}(:?\\d{2})?)|Z)$"):new RegExp("^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$"):e.offset?new RegExp("^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(([+-]\\d{2}(:?\\d{2})?)|Z)$"):new RegExp("^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?Z$");function Fp(e,i){return!!((i==="v4"||!i)&&Pp.test(e)||(i==="v6"||!i)&&Ip.test(e))}var he=class extends U{constructor(){super(...arguments),this._regex=(e,i,r)=>this.refinement(n=>e.test(n),{validation:i,code:E.invalid_string,...C.errToObj(r)}),this.nonempty=e=>this.min(1,C.errToObj(e)),this.trim=()=>new he({...this._def,checks:[...this._def.checks,{kind:"trim"}]}),this.toLowerCase=()=>new he({...this._def,checks:[...this._def.checks,{kind:"toLowerCase"}]}),this.toUpperCase=()=>new he({...this._def,checks:[...this._def.checks,{kind:"toUpperCase"}]})}_parse(e){if(this._def.coerce&&(e.data=String(e.data)),this._getType(e)!==y.string){const s=this._getOrReturnCtx(e);return L(s,{code:E.invalid_type,expected:y.string,received:s.parsedType}),B}const r=new W;let n;for(const s of this._def.checks)if(s.kind==="min")e.data.length<s.value&&(n=this._getOrReturnCtx(e,n),L(n,{code:E.too_small,minimum:s.value,type:"string",inclusive:!0,exact:!1,message:s.message}),r.dirty());else if(s.kind==="max")e.data.length>s.value&&(n=this._getOrReturnCtx(e,n),L(n,{code:E.too_big,maximum:s.value,type:"string",inclusive:!0,exact:!1,message:s.message}),r.dirty());else if(s.kind==="length"){const a=e.data.length>s.value,t=e.data.length<s.value;(a||t)&&(n=this._getOrReturnCtx(e,n),a?L(n,{code:E.too_big,maximum:s.value,type:"string",inclusive:!0,exact:!0,message:s.message}):t&&L(n,{code:E.too_small,minimum:s.value,type:"string",inclusive:!0,exact:!0,message:s.message}),r.dirty())}else if(s.kind==="email")Dp.test(e.data)||(n=this._getOrReturnCtx(e,n),L(n,{validation:"email",code:E.invalid_string,message:s.message}),r.dirty());else if(s.kind==="emoji")Np.test(e.data)||(n=this._getOrReturnCtx(e,n),L(n,{validation:"emoji",code:E.invalid_string,message:s.message}),r.dirty());else if(s.kind==="uuid")Vp.test(e.data)||(n=this._getOrReturnCtx(e,n),L(n,{validation:"uuid",code:E.invalid_string,message:s.message}),r.dirty());else if(s.kind==="cuid")xp.test(e.data)||(n=this._getOrReturnCtx(e,n),L(n,{validation:"cuid",code:E.invalid_string,message:s.message}),r.dirty());else if(s.kind==="cuid2")Kp.test(e.data)||(n=this._getOrReturnCtx(e,n),L(n,{validation:"cuid2",code:E.invalid_string,message:s.message}),r.dirty());else if(s.kind==="ulid")Up.test(e.data)||(n=this._getOrReturnCtx(e,n),L(n,{validation:"ulid",code:E.invalid_string,message:s.message}),r.dirty());else if(s.kind==="url")try{new URL(e.data)}catch{n=this._getOrReturnCtx(e,n),L(n,{validation:"url",code:E.invalid_string,message:s.message}),r.dirty()}else s.kind==="regex"?(s.regex.lastIndex=0,s.regex.test(e.data)||(n=this._getOrReturnCtx(e,n),L(n,{validation:"regex",code:E.invalid_string,message:s.message}),r.dirty())):s.kind==="trim"?e.data=e.data.trim():s.kind==="includes"?e.data.includes(s.value,s.position)||(n=this._getOrReturnCtx(e,n),L(n,{code:E.invalid_string,validation:{includes:s.value,position:s.position},message:s.message}),r.dirty()):s.kind==="toLowerCase"?e.data=e.data.toLowerCase():s.kind==="toUpperCase"?e.data=e.data.toUpperCase():s.kind==="startsWith"?e.data.startsWith(s.value)||(n=this._getOrReturnCtx(e,n),L(n,{code:E.invalid_string,validation:{startsWith:s.value},message:s.message}),r.dirty()):s.kind==="endsWith"?e.data.endsWith(s.value)||(n=this._getOrReturnCtx(e,n),L(n,{code:E.invalid_string,validation:{endsWith:s.value},message:s.message}),r.dirty()):s.kind==="datetime"?jp(s).test(e.data)||(n=this._getOrReturnCtx(e,n),L(n,{code:E.invalid_string,validation:"datetime",message:s.message}),r.dirty()):s.kind==="ip"?Fp(e.data,s.version)||(n=this._getOrReturnCtx(e,n),L(n,{validation:"ip",code:E.invalid_string,message:s.message}),r.dirty()):o.assertNever(s);return{status:r.value,value:e.data}}_addCheck(e){return new he({...this._def,checks:[...this._def.checks,e]})}email(e){return this._addCheck({kind:"email",...C.errToObj(e)})}url(e){return this._addCheck({kind:"url",...C.errToObj(e)})}emoji(e){return this._addCheck({kind:"emoji",...C.errToObj(e)})}uuid(e){return this._addCheck({kind:"uuid",...C.errToObj(e)})}cuid(e){return this._addCheck({kind:"cuid",...C.errToObj(e)})}cuid2(e){return this._addCheck({kind:"cuid2",...C.errToObj(e)})}ulid(e){return this._addCheck({kind:"ulid",...C.errToObj(e)})}ip(e){return this._addCheck({kind:"ip",...C.errToObj(e)})}datetime(e){var i;return typeof e=="string"?this._addCheck({kind:"datetime",precision:null,offset:!1,message:e}):this._addCheck({kind:"datetime",precision:typeof(e==null?void 0:e.precision)>"u"?null:e==null?void 0:e.precision,offset:(i=e==null?void 0:e.offset)!==null&&i!==void 0?i:!1,...C.errToObj(e==null?void 0:e.message)})}regex(e,i){return this._addCheck({kind:"regex",regex:e,...C.errToObj(i)})}includes(e,i){return this._addCheck({kind:"includes",value:e,position:i==null?void 0:i.position,...C.errToObj(i==null?void 0:i.message)})}startsWith(e,i){return this._addCheck({kind:"startsWith",value:e,...C.errToObj(i)})}endsWith(e,i){return this._addCheck({kind:"endsWith",value:e,...C.errToObj(i)})}min(e,i){return this._addCheck({kind:"min",value:e,...C.errToObj(i)})}max(e,i){return this._addCheck({kind:"max",value:e,...C.errToObj(i)})}length(e,i){return this._addCheck({kind:"length",value:e,...C.errToObj(i)})}get isDatetime(){return!!this._def.checks.find(e=>e.kind==="datetime")}get isEmail(){return!!this._def.checks.find(e=>e.kind==="email")}get isURL(){return!!this._def.checks.find(e=>e.kind==="url")}get isEmoji(){return!!this._def.checks.find(e=>e.kind==="emoji")}get isUUID(){return!!this._def.checks.find(e=>e.kind==="uuid")}get isCUID(){return!!this._def.checks.find(e=>e.kind==="cuid")}get isCUID2(){return!!this._def.checks.find(e=>e.kind==="cuid2")}get isULID(){return!!this._def.checks.find(e=>e.kind==="ulid")}get isIP(){return!!this._def.checks.find(e=>e.kind==="ip")}get minLength(){let e=null;for(const i of this._def.checks)i.kind==="min"&&(e===null||i.value>e)&&(e=i.value);return e}get maxLength(){let e=null;for(const i of this._def.checks)i.kind==="max"&&(e===null||i.value<e)&&(e=i.value);return e}};he.create=e=>{var i;return new he({checks:[],typeName:w.ZodString,coerce:(i=e==null?void 0:e.coerce)!==null&&i!==void 0?i:!1,...k(e)})};function qp(e,i){const r=(e.toString().split(".")[1]||"").length,n=(i.toString().split(".")[1]||"").length,s=r>n?r:n,a=parseInt(e.toFixed(s).replace(".","")),t=parseInt(i.toFixed(s).replace(".",""));return a%t/Math.pow(10,s)}var xe=class extends U{constructor(){super(...arguments),this.min=this.gte,this.max=this.lte,this.step=this.multipleOf}_parse(e){if(this._def.coerce&&(e.data=Number(e.data)),this._getType(e)!==y.number){const s=this._getOrReturnCtx(e);return L(s,{code:E.invalid_type,expected:y.number,received:s.parsedType}),B}let r;const n=new W;for(const s of this._def.checks)s.kind==="int"?o.isInteger(e.data)||(r=this._getOrReturnCtx(e,r),L(r,{code:E.invalid_type,expected:"integer",received:"float",message:s.message}),n.dirty()):s.kind==="min"?(s.inclusive?e.data<s.value:e.data<=s.value)&&(r=this._getOrReturnCtx(e,r),L(r,{code:E.too_small,minimum:s.value,type:"number",inclusive:s.inclusive,exact:!1,message:s.message}),n.dirty()):s.kind==="max"?(s.inclusive?e.data>s.value:e.data>=s.value)&&(r=this._getOrReturnCtx(e,r),L(r,{code:E.too_big,maximum:s.value,type:"number",inclusive:s.inclusive,exact:!1,message:s.message}),n.dirty()):s.kind==="multipleOf"?qp(e.data,s.value)!==0&&(r=this._getOrReturnCtx(e,r),L(r,{code:E.not_multiple_of,multipleOf:s.value,message:s.message}),n.dirty()):s.kind==="finite"?Number.isFinite(e.data)||(r=this._getOrReturnCtx(e,r),L(r,{code:E.not_finite,message:s.message}),n.dirty()):o.assertNever(s);return{status:n.value,value:e.data}}gte(e,i){return this.setLimit("min",e,!0,C.toString(i))}gt(e,i){return this.setLimit("min",e,!1,C.toString(i))}lte(e,i){return this.setLimit("max",e,!0,C.toString(i))}lt(e,i){return this.setLimit("max",e,!1,C.toString(i))}setLimit(e,i,r,n){return new xe({...this._def,checks:[...this._def.checks,{kind:e,value:i,inclusive:r,message:C.toString(n)}]})}_addCheck(e){return new xe({...this._def,checks:[...this._def.checks,e]})}int(e){return this._addCheck({kind:"int",message:C.toString(e)})}positive(e){return this._addCheck({kind:"min",value:0,inclusive:!1,message:C.toString(e)})}negative(e){return this._addCheck({kind:"max",value:0,inclusive:!1,message:C.toString(e)})}nonpositive(e){return this._addCheck({kind:"max",value:0,inclusive:!0,message:C.toString(e)})}nonnegative(e){return this._addCheck({kind:"min",value:0,inclusive:!0,message:C.toString(e)})}multipleOf(e,i){return this._addCheck({kind:"multipleOf",value:e,message:C.toString(i)})}finite(e){return this._addCheck({kind:"finite",message:C.toString(e)})}safe(e){return this._addCheck({kind:"min",inclusive:!0,value:Number.MIN_SAFE_INTEGER,message:C.toString(e)})._addCheck({kind:"max",inclusive:!0,value:Number.MAX_SAFE_INTEGER,message:C.toString(e)})}get minValue(){let e=null;for(const i of this._def.checks)i.kind==="min"&&(e===null||i.value>e)&&(e=i.value);return e}get maxValue(){let e=null;for(const i of this._def.checks)i.kind==="max"&&(e===null||i.value<e)&&(e=i.value);return e}get isInt(){return!!this._def.checks.find(e=>e.kind==="int"||e.kind==="multipleOf"&&o.isInteger(e.value))}get isFinite(){let e=null,i=null;for(const r of this._def.checks){if(r.kind==="finite"||r.kind==="int"||r.kind==="multipleOf")return!0;r.kind==="min"?(i===null||r.value>i)&&(i=r.value):r.kind==="max"&&(e===null||r.value<e)&&(e=r.value)}return Number.isFinite(i)&&Number.isFinite(e)}};xe.create=e=>new xe({checks:[],typeName:w.ZodNumber,coerce:(e==null?void 0:e.coerce)||!1,...k(e)});var Ke=class extends U{constructor(){super(...arguments),this.min=this.gte,this.max=this.lte}_parse(e){if(this._def.coerce&&(e.data=BigInt(e.data)),this._getType(e)!==y.bigint){const s=this._getOrReturnCtx(e);return L(s,{code:E.invalid_type,expected:y.bigint,received:s.parsedType}),B}let r;const n=new W;for(const s of this._def.checks)s.kind==="min"?(s.inclusive?e.data<s.value:e.data<=s.value)&&(r=this._getOrReturnCtx(e,r),L(r,{code:E.too_small,type:"bigint",minimum:s.value,inclusive:s.inclusive,message:s.message}),n.dirty()):s.kind==="max"?(s.inclusive?e.data>s.value:e.data>=s.value)&&(r=this._getOrReturnCtx(e,r),L(r,{code:E.too_big,type:"bigint",maximum:s.value,inclusive:s.inclusive,message:s.message}),n.dirty()):s.kind==="multipleOf"?e.data%s.value!==BigInt(0)&&(r=this._getOrReturnCtx(e,r),L(r,{code:E.not_multiple_of,multipleOf:s.value,message:s.message}),n.dirty()):o.assertNever(s);return{status:n.value,value:e.data}}gte(e,i){return this.setLimit("min",e,!0,C.toString(i))}gt(e,i){return this.setLimit("min",e,!1,C.toString(i))}lte(e,i){return this.setLimit("max",e,!0,C.toString(i))}lt(e,i){return this.setLimit("max",e,!1,C.toString(i))}setLimit(e,i,r,n){return new Ke({...this._def,checks:[...this._def.checks,{kind:e,value:i,inclusive:r,message:C.toString(n)}]})}_addCheck(e){return new Ke({...this._def,checks:[...this._def.checks,e]})}positive(e){return this._addCheck({kind:"min",value:BigInt(0),inclusive:!1,message:C.toString(e)})}negative(e){return this._addCheck({kind:"max",value:BigInt(0),inclusive:!1,message:C.toString(e)})}nonpositive(e){return this._addCheck({kind:"max",value:BigInt(0),inclusive:!0,message:C.toString(e)})}nonnegative(e){return this._addCheck({kind:"min",value:BigInt(0),inclusive:!0,message:C.toString(e)})}multipleOf(e,i){return this._addCheck({kind:"multipleOf",value:e,message:C.toString(i)})}get minValue(){let e=null;for(const i of this._def.checks)i.kind==="min"&&(e===null||i.value>e)&&(e=i.value);return e}get maxValue(){let e=null;for(const i of this._def.checks)i.kind==="max"&&(e===null||i.value<e)&&(e=i.value);return e}};Ke.create=e=>{var i;return new Ke({checks:[],typeName:w.ZodBigInt,coerce:(i=e==null?void 0:e.coerce)!==null&&i!==void 0?i:!1,...k(e)})};var rt=class extends U{_parse(e){if(this._def.coerce&&(e.data=!!e.data),this._getType(e)!==y.boolean){const r=this._getOrReturnCtx(e);return L(r,{code:E.invalid_type,expected:y.boolean,received:r.parsedType}),B}return ee(e.data)}};rt.create=e=>new rt({typeName:w.ZodBoolean,coerce:(e==null?void 0:e.coerce)||!1,...k(e)});var je=class extends U{_parse(e){if(this._def.coerce&&(e.data=new Date(e.data)),this._getType(e)!==y.date){const s=this._getOrReturnCtx(e);return L(s,{code:E.invalid_type,expected:y.date,received:s.parsedType}),B}if(isNaN(e.data.getTime())){const s=this._getOrReturnCtx(e);return L(s,{code:E.invalid_date}),B}const r=new W;let n;for(const s of this._def.checks)s.kind==="min"?e.data.getTime()<s.value&&(n=this._getOrReturnCtx(e,n),L(n,{code:E.too_small,message:s.message,inclusive:!0,exact:!1,minimum:s.value,type:"date"}),r.dirty()):s.kind==="max"?e.data.getTime()>s.value&&(n=this._getOrReturnCtx(e,n),L(n,{code:E.too_big,message:s.message,inclusive:!0,exact:!1,maximum:s.value,type:"date"}),r.dirty()):o.assertNever(s);return{status:r.value,value:new Date(e.data.getTime())}}_addCheck(e){return new je({...this._def,checks:[...this._def.checks,e]})}min(e,i){return this._addCheck({kind:"min",value:e.getTime(),message:C.toString(i)})}max(e,i){return this._addCheck({kind:"max",value:e.getTime(),message:C.toString(i)})}get minDate(){let e=null;for(const i of this._def.checks)i.kind==="min"&&(e===null||i.value>e)&&(e=i.value);return e!=null?new Date(e):null}get maxDate(){let e=null;for(const i of this._def.checks)i.kind==="max"&&(e===null||i.value<e)&&(e=i.value);return e!=null?new Date(e):null}};je.create=e=>new je({checks:[],coerce:(e==null?void 0:e.coerce)||!1,typeName:w.ZodDate,...k(e)});var xt=class extends U{_parse(e){if(this._getType(e)!==y.symbol){const r=this._getOrReturnCtx(e);return L(r,{code:E.invalid_type,expected:y.symbol,received:r.parsedType}),B}return ee(e.data)}};xt.create=e=>new xt({typeName:w.ZodSymbol,...k(e)});var it=class extends U{_parse(e){if(this._getType(e)!==y.undefined){const r=this._getOrReturnCtx(e);return L(r,{code:E.invalid_type,expected:y.undefined,received:r.parsedType}),B}return ee(e.data)}};it.create=e=>new it({typeName:w.ZodUndefined,...k(e)});var nt=class extends U{_parse(e){if(this._getType(e)!==y.null){const r=this._getOrReturnCtx(e);return L(r,{code:E.invalid_type,expected:y.null,received:r.parsedType}),B}return ee(e.data)}};nt.create=e=>new nt({typeName:w.ZodNull,...k(e)});var Fe=class extends U{constructor(){super(...arguments),this._any=!0}_parse(e){return ee(e.data)}};Fe.create=e=>new Fe({typeName:w.ZodAny,...k(e)});var Ue=class extends U{constructor(){super(...arguments),this._unknown=!0}_parse(e){return ee(e.data)}};Ue.create=e=>new Ue({typeName:w.ZodUnknown,...k(e)});var ve=class extends U{_parse(e){const i=this._getOrReturnCtx(e);return L(i,{code:E.invalid_type,expected:y.never,received:i.parsedType}),B}};ve.create=e=>new ve({typeName:w.ZodNever,...k(e)});var Kt=class extends U{_parse(e){if(this._getType(e)!==y.undefined){const r=this._getOrReturnCtx(e);return L(r,{code:E.invalid_type,expected:y.void,received:r.parsedType}),B}return ee(e.data)}};Kt.create=e=>new Kt({typeName:w.ZodVoid,...k(e)});var Re=class extends U{_parse(e){const{ctx:i,status:r}=this._processInputParams(e),n=this._def;if(i.parsedType!==y.array)return L(i,{code:E.invalid_type,expected:y.array,received:i.parsedType}),B;if(n.exactLength!==null){const a=i.data.length>n.exactLength.value,t=i.data.length<n.exactLength.value;(a||t)&&(L(i,{code:a?E.too_big:E.too_small,minimum:t?n.exactLength.value:void 0,maximum:a?n.exactLength.value:void 0,type:"array",inclusive:!0,exact:!0,message:n.exactLength.message}),r.dirty())}if(n.minLength!==null&&i.data.length<n.minLength.value&&(L(i,{code:E.too_small,minimum:n.minLength.value,type:"array",inclusive:!0,exact:!1,message:n.minLength.message}),r.dirty()),n.maxLength!==null&&i.data.length>n.maxLength.value&&(L(i,{code:E.too_big,maximum:n.maxLength.value,type:"array",inclusive:!0,exact:!1,message:n.maxLength.message}),r.dirty()),i.common.async)return Promise.all([...i.data].map((a,t)=>n.type._parseAsync(new Ee(i,a,i.path,t)))).then(a=>W.mergeArray(r,a));const s=[...i.data].map((a,t)=>n.type._parseSync(new Ee(i,a,i.path,t)));return W.mergeArray(r,s)}get element(){return this._def.type}min(e,i){return new Re({...this._def,minLength:{value:e,message:C.toString(i)}})}max(e,i){return new Re({...this._def,maxLength:{value:e,message:C.toString(i)}})}length(e,i){return new Re({...this._def,exactLength:{value:e,message:C.toString(i)}})}nonempty(e){return this.min(1,e)}};Re.create=(e,i)=>new Re({type:e,minLength:null,maxLength:null,exactLength:null,typeName:w.ZodArray,...k(i)});function qe(e){if(e instanceof G){const i={};for(const r in e.shape){const n=e.shape[r];i[r]=_e.create(qe(n))}return new G({...e._def,shape:()=>i})}else return e instanceof Re?new Re({...e._def,type:qe(e.element)}):e instanceof _e?_e.create(qe(e.unwrap())):e instanceof De?De.create(qe(e.unwrap())):e instanceof Le?Le.create(e.items.map(i=>qe(i))):e}var G=class extends U{constructor(){super(...arguments),this._cached=null,this.nonstrict=this.passthrough,this.augment=this.extend}_getCached(){if(this._cached!==null)return this._cached;const e=this._def.shape(),i=o.objectKeys(e);return this._cached={shape:e,keys:i}}_parse(e){if(this._getType(e)!==y.object){const u=this._getOrReturnCtx(e);return L(u,{code:E.invalid_type,expected:y.object,received:u.parsedType}),B}const{status:r,ctx:n}=this._processInputParams(e),{shape:s,keys:a}=this._getCached(),t=[];if(!(this._def.catchall instanceof ve&&this._def.unknownKeys==="strip"))for(const u in n.data)a.includes(u)||t.push(u);const l=[];for(const u of a){const h=s[u],T=n.data[u];l.push({key:{status:"valid",value:u},value:h._parse(new Ee(n,T,n.path,u)),alwaysSet:u in n.data})}if(this._def.catchall instanceof ve){const u=this._def.unknownKeys;if(u==="passthrough")for(const h of t)l.push({key:{status:"valid",value:h},value:{status:"valid",value:n.data[h]}});else if(u==="strict")t.length>0&&(L(n,{code:E.unrecognized_keys,keys:t}),r.dirty());else if(u!=="strip")throw new Error("Internal ZodObject error: invalid unknownKeys value.")}else{const u=this._def.catchall;for(const h of t){const T=n.data[h];l.push({key:{status:"valid",value:h},value:u._parse(new Ee(n,T,n.path,h)),alwaysSet:h in n.data})}}return n.common.async?Promise.resolve().then(async()=>{const u=[];for(const h of l){const T=await h.key;u.push({key:T,value:await h.value,alwaysSet:h.alwaysSet})}return u}).then(u=>W.mergeObjectSync(r,u)):W.mergeObjectSync(r,l)}get shape(){return this._def.shape()}strict(e){return C.errToObj,new G({...this._def,unknownKeys:"strict",...e!==void 0?{errorMap:(i,r)=>{var n,s,a,t;const l=(a=(s=(n=this._def).errorMap)===null||s===void 0?void 0:s.call(n,i,r).message)!==null&&a!==void 0?a:r.defaultError;return i.code==="unrecognized_keys"?{message:(t=C.errToObj(e).message)!==null&&t!==void 0?t:l}:{message:l}}}:{}})}strip(){return new G({...this._def,unknownKeys:"strip"})}passthrough(){return new G({...this._def,unknownKeys:"passthrough"})}extend(e){return new G({...this._def,shape:()=>({...this._def.shape(),...e})})}merge(e){return new G({unknownKeys:e._def.unknownKeys,catchall:e._def.catchall,shape:()=>({...this._def.shape(),...e._def.shape()}),typeName:w.ZodObject})}setKey(e,i){return this.augment({[e]:i})}catchall(e){return new G({...this._def,catchall:e})}pick(e){const i={};return o.objectKeys(e).forEach(r=>{e[r]&&this.shape[r]&&(i[r]=this.shape[r])}),new G({...this._def,shape:()=>i})}omit(e){const i={};return o.objectKeys(this.shape).forEach(r=>{e[r]||(i[r]=this.shape[r])}),new G({...this._def,shape:()=>i})}deepPartial(){return qe(this)}partial(e){const i={};return o.objectKeys(this.shape).forEach(r=>{const n=this.shape[r];e&&!e[r]?i[r]=n:i[r]=n.optional()}),new G({...this._def,shape:()=>i})}required(e){const i={};return o.objectKeys(this.shape).forEach(r=>{if(e&&!e[r])i[r]=this.shape[r];else{let s=this.shape[r];for(;s instanceof _e;)s=s._def.innerType;i[r]=s}}),new G({...this._def,shape:()=>i})}keyof(){return Xr(o.objectKeys(this.shape))}};G.create=(e,i)=>new G({shape:()=>e,unknownKeys:"strip",catchall:ve.create(),typeName:w.ZodObject,...k(i)}),G.strictCreate=(e,i)=>new G({shape:()=>e,unknownKeys:"strict",catchall:ve.create(),typeName:w.ZodObject,...k(i)}),G.lazycreate=(e,i)=>new G({shape:e,unknownKeys:"strip",catchall:ve.create(),typeName:w.ZodObject,...k(i)});var st=class extends U{_parse(e){const{ctx:i}=this._processInputParams(e),r=this._def.options;function n(s){for(const t of s)if(t.result.status==="valid")return t.result;for(const t of s)if(t.result.status==="dirty")return i.common.issues.push(...t.ctx.common.issues),t.result;const a=s.map(t=>new I(t.ctx.common.issues));return L(i,{code:E.invalid_union,unionErrors:a}),B}if(i.common.async)return Promise.all(r.map(async s=>{const a={...i,common:{...i.common,issues:[]},parent:null};return{result:await s._parseAsync({data:i.data,path:i.path,parent:a}),ctx:a}})).then(n);{let s;const a=[];for(const l of r){const u={...i,common:{...i.common,issues:[]},parent:null},h=l._parseSync({data:i.data,path:i.path,parent:u});if(h.status==="valid")return h;h.status==="dirty"&&!s&&(s={result:h,ctx:u}),u.common.issues.length&&a.push(u.common.issues)}if(s)return i.common.issues.push(...s.ctx.common.issues),s.result;const t=a.map(l=>new I(l));return L(i,{code:E.invalid_union,unionErrors:t}),B}}get options(){return this._def.options}};st.create=(e,i)=>new st({options:e,typeName:w.ZodUnion,...k(i)});var Ut=e=>e instanceof lt?Ut(e.schema):e instanceof pe?Ut(e.innerType()):e instanceof pt?[e.value]:e instanceof Ve?e.options:e instanceof ut?Object.keys(e.enum):e instanceof ft?Ut(e._def.innerType):e instanceof it?[void 0]:e instanceof nt?[null]:null,yr=class extends U{_parse(e){const{ctx:i}=this._processInputParams(e);if(i.parsedType!==y.object)return L(i,{code:E.invalid_type,expected:y.object,received:i.parsedType}),B;const r=this.discriminator,n=i.data[r],s=this.optionsMap.get(n);return s?i.common.async?s._parseAsync({data:i.data,path:i.path,parent:i}):s._parseSync({data:i.data,path:i.path,parent:i}):(L(i,{code:E.invalid_union_discriminator,options:Array.from(this.optionsMap.keys()),path:[r]}),B)}get discriminator(){return this._def.discriminator}get options(){return this._def.options}get optionsMap(){return this._def.optionsMap}static create(e,i,r){const n=new Map;for(const s of i){const a=Ut(s.shape[e]);if(!a)throw new Error(`A discriminator value for key \`${e}\` could not be extracted from all schema options`);for(const t of a){if(n.has(t))throw new Error(`Discriminator property ${String(e)} has duplicate value ${String(t)}`);n.set(t,s)}}return new yr({typeName:w.ZodDiscriminatedUnion,discriminator:e,options:i,optionsMap:n,...k(r)})}};function Er(e,i){const r=A(e),n=A(i);if(e===i)return{valid:!0,data:e};if(r===y.object&&n===y.object){const s=o.objectKeys(i),a=o.objectKeys(e).filter(l=>s.indexOf(l)!==-1),t={...e,...i};for(const l of a){const u=Er(e[l],i[l]);if(!u.valid)return{valid:!1};t[l]=u.data}return{valid:!0,data:t}}else if(r===y.array&&n===y.array){if(e.length!==i.length)return{valid:!1};const s=[];for(let a=0;a<e.length;a++){const t=e[a],l=i[a],u=Er(t,l);if(!u.valid)return{valid:!1};s.push(u.data)}return{valid:!0,data:s}}else return r===y.date&&n===y.date&&+e==+i?{valid:!0,data:e}:{valid:!1}}var at=class extends U{_parse(e){const{status:i,ctx:r}=this._processInputParams(e),n=(s,a)=>{if(dr(s)||dr(a))return B;const t=Er(s.value,a.value);return t.valid?((mr(s)||mr(a))&&i.dirty(),{status:i.value,value:t.data}):(L(r,{code:E.invalid_intersection_types}),B)};return r.common.async?Promise.all([this._def.left._parseAsync({data:r.data,path:r.path,parent:r}),this._def.right._parseAsync({data:r.data,path:r.path,parent:r})]).then(([s,a])=>n(s,a)):n(this._def.left._parseSync({data:r.data,path:r.path,parent:r}),this._def.right._parseSync({data:r.data,path:r.path,parent:r}))}};at.create=(e,i,r)=>new at({left:e,right:i,typeName:w.ZodIntersection,...k(r)});var Le=class extends U{_parse(e){const{status:i,ctx:r}=this._processInputParams(e);if(r.parsedType!==y.array)return L(r,{code:E.invalid_type,expected:y.array,received:r.parsedType}),B;if(r.data.length<this._def.items.length)return L(r,{code:E.too_small,minimum:this._def.items.length,inclusive:!0,exact:!1,type:"array"}),B;!this._def.rest&&r.data.length>this._def.items.length&&(L(r,{code:E.too_big,maximum:this._def.items.length,inclusive:!0,exact:!1,type:"array"}),i.dirty());const s=[...r.data].map((a,t)=>{const l=this._def.items[t]||this._def.rest;return l?l._parse(new Ee(r,a,r.path,t)):null}).filter(a=>!!a);return r.common.async?Promise.all(s).then(a=>W.mergeArray(i,a)):W.mergeArray(i,s)}get items(){return this._def.items}rest(e){return new Le({...this._def,rest:e})}};Le.create=(e,i)=>{if(!Array.isArray(e))throw new Error("You must pass an array of schemas to z.tuple([ ... ])");return new Le({items:e,typeName:w.ZodTuple,rest:null,...k(i)})};var Vt=class extends U{get keySchema(){return this._def.keyType}get valueSchema(){return this._def.valueType}_parse(e){const{status:i,ctx:r}=this._processInputParams(e);if(r.parsedType!==y.object)return L(r,{code:E.invalid_type,expected:y.object,received:r.parsedType}),B;const n=[],s=this._def.keyType,a=this._def.valueType;for(const t in r.data)n.push({key:s._parse(new Ee(r,t,r.path,t)),value:a._parse(new Ee(r,r.data[t],r.path,t))});return r.common.async?W.mergeObjectAsync(i,n):W.mergeObjectSync(i,n)}get element(){return this._def.valueType}static create(e,i,r){return i instanceof U?new Vt({keyType:e,valueType:i,typeName:w.ZodRecord,...k(r)}):new Vt({keyType:he.create(),valueType:e,typeName:w.ZodRecord,...k(i)})}},Dt=class extends U{_parse(e){const{status:i,ctx:r}=this._processInputParams(e);if(r.parsedType!==y.map)return L(r,{code:E.invalid_type,expected:y.map,received:r.parsedType}),B;const n=this._def.keyType,s=this._def.valueType,a=[...r.data.entries()].map(([t,l],u)=>({key:n._parse(new Ee(r,t,r.path,[u,"key"])),value:s._parse(new Ee(r,l,r.path,[u,"value"]))}));if(r.common.async){const t=new Map;return Promise.resolve().then(async()=>{for(const l of a){const u=await l.key,h=await l.value;if(u.status==="aborted"||h.status==="aborted")return B;(u.status==="dirty"||h.status==="dirty")&&i.dirty(),t.set(u.value,h.value)}return{status:i.value,value:t}})}else{const t=new Map;for(const l of a){const u=l.key,h=l.value;if(u.status==="aborted"||h.status==="aborted")return B;(u.status==="dirty"||h.status==="dirty")&&i.dirty(),t.set(u.value,h.value)}return{status:i.value,value:t}}}};Dt.create=(e,i,r)=>new Dt({valueType:i,keyType:e,typeName:w.ZodMap,...k(r)});var Me=class extends U{_parse(e){const{status:i,ctx:r}=this._processInputParams(e);if(r.parsedType!==y.set)return L(r,{code:E.invalid_type,expected:y.set,received:r.parsedType}),B;const n=this._def;n.minSize!==null&&r.data.size<n.minSize.value&&(L(r,{code:E.too_small,minimum:n.minSize.value,type:"set",inclusive:!0,exact:!1,message:n.minSize.message}),i.dirty()),n.maxSize!==null&&r.data.size>n.maxSize.value&&(L(r,{code:E.too_big,maximum:n.maxSize.value,type:"set",inclusive:!0,exact:!1,message:n.maxSize.message}),i.dirty());const s=this._def.valueType;function a(l){const u=new Set;for(const h of l){if(h.status==="aborted")return B;h.status==="dirty"&&i.dirty(),u.add(h.value)}return{status:i.value,value:u}}const t=[...r.data.values()].map((l,u)=>s._parse(new Ee(r,l,r.path,u)));return r.common.async?Promise.all(t).then(l=>a(l)):a(t)}min(e,i){return new Me({...this._def,minSize:{value:e,message:C.toString(i)}})}max(e,i){return new Me({...this._def,maxSize:{value:e,message:C.toString(i)}})}size(e,i){return this.min(e,i).max(e,i)}nonempty(e){return this.min(1,e)}};Me.create=(e,i)=>new Me({valueType:e,minSize:null,maxSize:null,typeName:w.ZodSet,...k(i)});var ot=class extends U{constructor(){super(...arguments),this.validate=this.implement}_parse(e){const{ctx:i}=this._processInputParams(e);if(i.parsedType!==y.function)return L(i,{code:E.invalid_type,expected:y.function,received:i.parsedType}),B;function r(t,l){return ye({data:t,path:i.path,errorMaps:[i.common.contextualErrorMap,i.schemaErrorMap,me(),O].filter(u=>!!u),issueData:{code:E.invalid_arguments,argumentsError:l}})}function n(t,l){return ye({data:t,path:i.path,errorMaps:[i.common.contextualErrorMap,i.schemaErrorMap,me(),O].filter(u=>!!u),issueData:{code:E.invalid_return_type,returnTypeError:l}})}const s={errorMap:i.common.contextualErrorMap},a=i.data;return this._def.returns instanceof $e?ee(async(...t)=>{const l=new I([]),u=await this._def.args.parseAsync(t,s).catch(v=>{throw l.addIssue(r(t,v)),l}),h=await a(...u);return await this._def.returns._def.type.parseAsync(h,s).catch(v=>{throw l.addIssue(n(h,v)),l})}):ee((...t)=>{const l=this._def.args.safeParse(t,s);if(!l.success)throw new I([r(t,l.error)]);const u=a(...l.data),h=this._def.returns.safeParse(u,s);if(!h.success)throw new I([n(u,h.error)]);return h.data})}parameters(){return this._def.args}returnType(){return this._def.returns}args(...e){return new ot({...this._def,args:Le.create(e).rest(Ue.create())})}returns(e){return new ot({...this._def,returns:e})}implement(e){return this.parse(e)}strictImplement(e){return this.parse(e)}static create(e,i,r){return new ot({args:e||Le.create([]).rest(Ue.create()),returns:i||Ue.create(),typeName:w.ZodFunction,...k(r)})}},lt=class extends U{get schema(){return this._def.getter()}_parse(e){const{ctx:i}=this._processInputParams(e);return this._def.getter()._parse({data:i.data,path:i.path,parent:i})}};lt.create=(e,i)=>new lt({getter:e,typeName:w.ZodLazy,...k(i)});var pt=class extends U{_parse(e){if(e.data!==this._def.value){const i=this._getOrReturnCtx(e);return L(i,{received:i.data,code:E.invalid_literal,expected:this._def.value}),B}return{status:"valid",value:e.data}}get value(){return this._def.value}};pt.create=(e,i)=>new pt({value:e,typeName:w.ZodLiteral,...k(i)});function Xr(e,i){return new Ve({values:e,typeName:w.ZodEnum,...k(i)})}var Ve=class extends U{_parse(e){if(typeof e.data!="string"){const i=this._getOrReturnCtx(e),r=this._def.values;return L(i,{expected:o.joinValues(r),received:i.parsedType,code:E.invalid_type}),B}if(this._def.values.indexOf(e.data)===-1){const i=this._getOrReturnCtx(e),r=this._def.values;return L(i,{received:i.data,code:E.invalid_enum_value,options:r}),B}return ee(e.data)}get options(){return this._def.values}get enum(){const e={};for(const i of this._def.values)e[i]=i;return e}get Values(){const e={};for(const i of this._def.values)e[i]=i;return e}get Enum(){const e={};for(const i of this._def.values)e[i]=i;return e}extract(e){return Ve.create(e)}exclude(e){return Ve.create(this.options.filter(i=>!e.includes(i)))}};Ve.create=Xr;var ut=class extends U{_parse(e){const i=o.getValidEnumValues(this._def.values),r=this._getOrReturnCtx(e);if(r.parsedType!==y.string&&r.parsedType!==y.number){const n=o.objectValues(i);return L(r,{expected:o.joinValues(n),received:r.parsedType,code:E.invalid_type}),B}if(i.indexOf(e.data)===-1){const n=o.objectValues(i);return L(r,{received:r.data,code:E.invalid_enum_value,options:n}),B}return ee(e.data)}get enum(){return this._def.values}};ut.create=(e,i)=>new ut({values:e,typeName:w.ZodNativeEnum,...k(i)});var $e=class extends U{unwrap(){return this._def.type}_parse(e){const{ctx:i}=this._processInputParams(e);if(i.parsedType!==y.promise&&i.common.async===!1)return L(i,{code:E.invalid_type,expected:y.promise,received:i.parsedType}),B;const r=i.parsedType===y.promise?i.data:Promise.resolve(i.data);return ee(r.then(n=>this._def.type.parseAsync(n,{path:i.path,errorMap:i.common.contextualErrorMap})))}};$e.create=(e,i)=>new $e({type:e,typeName:w.ZodPromise,...k(i)});var pe=class extends U{innerType(){return this._def.schema}sourceType(){return this._def.schema._def.typeName===w.ZodEffects?this._def.schema.sourceType():this._def.schema}_parse(e){const{status:i,ctx:r}=this._processInputParams(e),n=this._def.effect||null;if(n.type==="preprocess"){const a=n.transform(r.data);return r.common.async?Promise.resolve(a).then(t=>this._def.schema._parseAsync({data:t,path:r.path,parent:r})):this._def.schema._parseSync({data:a,path:r.path,parent:r})}const s={addIssue:a=>{L(r,a),a.fatal?i.abort():i.dirty()},get path(){return r.path}};if(s.addIssue=s.addIssue.bind(s),n.type==="refinement"){const a=t=>{const l=n.refinement(t,s);if(r.common.async)return Promise.resolve(l);if(l instanceof Promise)throw new Error("Async refinement encountered during synchronous parse operation. Use .parseAsync instead.");return t};if(r.common.async===!1){const t=this._def.schema._parseSync({data:r.data,path:r.path,parent:r});return t.status==="aborted"?B:(t.status==="dirty"&&i.dirty(),a(t.value),{status:i.value,value:t.value})}else return this._def.schema._parseAsync({data:r.data,path:r.path,parent:r}).then(t=>t.status==="aborted"?B:(t.status==="dirty"&&i.dirty(),a(t.value).then(()=>({status:i.value,value:t.value}))))}if(n.type==="transform")if(r.common.async===!1){const a=this._def.schema._parseSync({data:r.data,path:r.path,parent:r});if(!Bt(a))return a;const t=n.transform(a.value,s);if(t instanceof Promise)throw new Error("Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.");return{status:i.value,value:t}}else return this._def.schema._parseAsync({data:r.data,path:r.path,parent:r}).then(a=>Bt(a)?Promise.resolve(n.transform(a.value,s)).then(t=>({status:i.value,value:t})):a);o.assertNever(n)}};pe.create=(e,i,r)=>new pe({schema:e,typeName:w.ZodEffects,effect:i,...k(r)}),pe.createWithPreprocess=(e,i,r)=>new pe({schema:i,effect:{type:"preprocess",transform:e},typeName:w.ZodEffects,...k(r)});var _e=class extends U{_parse(e){return this._getType(e)===y.undefined?ee(void 0):this._def.innerType._parse(e)}unwrap(){return this._def.innerType}};_e.create=(e,i)=>new _e({innerType:e,typeName:w.ZodOptional,...k(i)});var De=class extends U{_parse(e){return this._getType(e)===y.null?ee(null):this._def.innerType._parse(e)}unwrap(){return this._def.innerType}};De.create=(e,i)=>new De({innerType:e,typeName:w.ZodNullable,...k(i)});var ft=class extends U{_parse(e){const{ctx:i}=this._processInputParams(e);let r=i.data;return i.parsedType===y.undefined&&(r=this._def.defaultValue()),this._def.innerType._parse({data:r,path:i.path,parent:i})}removeDefault(){return this._def.innerType}};ft.create=(e,i)=>new ft({innerType:e,typeName:w.ZodDefault,defaultValue:typeof i.default=="function"?i.default:()=>i.default,...k(i)});var Nt=class extends U{_parse(e){const{ctx:i}=this._processInputParams(e),r={...i,common:{...i.common,issues:[]}},n=this._def.innerType._parse({data:r.data,path:r.path,parent:{...r}});return kt(n)?n.then(s=>({status:"valid",value:s.status==="valid"?s.value:this._def.catchValue({get error(){return new I(r.common.issues)},input:r.data})})):{status:"valid",value:n.status==="valid"?n.value:this._def.catchValue({get error(){return new I(r.common.issues)},input:r.data})}}removeCatch(){return this._def.innerType}};Nt.create=(e,i)=>new Nt({innerType:e,typeName:w.ZodCatch,catchValue:typeof i.catch=="function"?i.catch:()=>i.catch,...k(i)});var Pt=class extends U{_parse(e){if(this._getType(e)!==y.nan){const r=this._getOrReturnCtx(e);return L(r,{code:E.invalid_type,expected:y.nan,received:r.parsedType}),B}return{status:"valid",value:e.data}}};Pt.create=e=>new Pt({typeName:w.ZodNaN,...k(e)});var Mp=Symbol("zod_brand"),zr=class extends U{_parse(e){const{ctx:i}=this._processInputParams(e),r=i.data;return this._def.type._parse({data:r,path:i.path,parent:i})}unwrap(){return this._def.type}},It=class extends U{_parse(e){const{status:i,ctx:r}=this._processInputParams(e);if(r.common.async)return(async()=>{const s=await this._def.in._parseAsync({data:r.data,path:r.path,parent:r});return s.status==="aborted"?B:s.status==="dirty"?(i.dirty(),Or(s.value)):this._def.out._parseAsync({data:s.value,path:r.path,parent:r})})();{const n=this._def.in._parseSync({data:r.data,path:r.path,parent:r});return n.status==="aborted"?B:n.status==="dirty"?(i.dirty(),{status:"dirty",value:n.value}):this._def.out._parseSync({data:n.value,path:r.path,parent:r})}}static create(e,i){return new It({in:e,out:i,typeName:w.ZodPipeline})}},Hr=(e,i={},r)=>e?Fe.create().superRefine((n,s)=>{var a,t;if(!e(n)){const l=typeof i=="function"?i(n):typeof i=="string"?{message:i}:i,u=(t=(a=l.fatal)!==null&&a!==void 0?a:r)!==null&&t!==void 0?t:!0,h=typeof l=="string"?{message:l}:l;s.addIssue({code:"custom",...h,fatal:u})}}):Fe.create(),$p={object:G.lazycreate},w;(function(e){e.ZodString="ZodString",e.ZodNumber="ZodNumber",e.ZodNaN="ZodNaN",e.ZodBigInt="ZodBigInt",e.ZodBoolean="ZodBoolean",e.ZodDate="ZodDate",e.ZodSymbol="ZodSymbol",e.ZodUndefined="ZodUndefined",e.ZodNull="ZodNull",e.ZodAny="ZodAny",e.ZodUnknown="ZodUnknown",e.ZodNever="ZodNever",e.ZodVoid="ZodVoid",e.ZodArray="ZodArray",e.ZodObject="ZodObject",e.ZodUnion="ZodUnion",e.ZodDiscriminatedUnion="ZodDiscriminatedUnion",e.ZodIntersection="ZodIntersection",e.ZodTuple="ZodTuple",e.ZodRecord="ZodRecord",e.ZodMap="ZodMap",e.ZodSet="ZodSet",e.ZodFunction="ZodFunction",e.ZodLazy="ZodLazy",e.ZodLiteral="ZodLiteral",e.ZodEnum="ZodEnum",e.ZodEffects="ZodEffects",e.ZodNativeEnum="ZodNativeEnum",e.ZodOptional="ZodOptional",e.ZodNullable="ZodNullable",e.ZodDefault="ZodDefault",e.ZodCatch="ZodCatch",e.ZodPromise="ZodPromise",e.ZodBranded="ZodBranded",e.ZodPipeline="ZodPipeline"})(w||(w={}));var Op=(e,i={message:`Input not instance of ${e.name}`})=>Hr(r=>r instanceof e,i),Zr=he.create,Wr=xe.create,Gp=Pt.create,Xp=Ke.create,Jr=rt.create,zp=je.create,Hp=xt.create,Zp=it.create,Wp=nt.create,Jp=Fe.create,Qp=Ue.create,Yp=ve.create,eu=Kt.create,tu=Re.create,ru=G.create,iu=G.strictCreate,nu=st.create,su=yr.create,au=at.create,ou=Le.create,lu=Vt.create,pu=Dt.create,uu=Me.create,fu=ot.create,cu=lt.create,du=pt.create,mu=Ve.create,yu=ut.create,Eu=$e.create,Qr=pe.create,hu=_e.create,Ru=De.create,gu=pe.createWithPreprocess,bu=It.create,Au=()=>Zr().optional(),Tu=()=>Wr().optional(),vu=()=>Jr().optional(),Lu={string:e=>he.create({...e,coerce:!0}),number:e=>xe.create({...e,coerce:!0}),boolean:e=>rt.create({...e,coerce:!0}),bigint:e=>Ke.create({...e,coerce:!0}),date:e=>je.create({...e,coerce:!0})},_u=B,f=Object.freeze({__proto__:null,defaultErrorMap:O,setErrorMap:Te,getErrorMap:me,makeIssue:ye,EMPTY_PATH:le,addIssueToContext:L,ParseStatus:W,INVALID:B,DIRTY:Or,OK:ee,isAborted:dr,isDirty:mr,isValid:Bt,isAsync:kt,get util(){return o},get objectUtil(){return g},ZodParsedType:y,getParsedType:A,ZodType:U,ZodString:he,ZodNumber:xe,ZodBigInt:Ke,ZodBoolean:rt,ZodDate:je,ZodSymbol:xt,ZodUndefined:it,ZodNull:nt,ZodAny:Fe,ZodUnknown:Ue,ZodNever:ve,ZodVoid:Kt,ZodArray:Re,ZodObject:G,ZodUnion:st,ZodDiscriminatedUnion:yr,ZodIntersection:at,ZodTuple:Le,ZodRecord:Vt,ZodMap:Dt,ZodSet:Me,ZodFunction:ot,ZodLazy:lt,ZodLiteral:pt,ZodEnum:Ve,ZodNativeEnum:ut,ZodPromise:$e,ZodEffects:pe,ZodTransformer:pe,ZodOptional:_e,ZodNullable:De,ZodDefault:ft,ZodCatch:Nt,ZodNaN:Pt,BRAND:Mp,ZodBranded:zr,ZodPipeline:It,custom:Hr,Schema:U,ZodSchema:U,late:$p,get ZodFirstPartyTypeKind(){return w},coerce:Lu,any:Jp,array:tu,bigint:Xp,boolean:Jr,date:zp,discriminatedUnion:su,effect:Qr,enum:mu,function:fu,instanceof:Op,intersection:au,lazy:cu,literal:du,map:pu,nan:Gp,nativeEnum:yu,never:Yp,null:Wp,nullable:Ru,number:Wr,object:ru,oboolean:vu,onumber:Tu,optional:hu,ostring:Au,pipeline:bu,preprocess:gu,promise:Eu,record:lu,set:uu,strictObject:iu,string:Zr,symbol:Hp,transformer:Qr,tuple:ou,undefined:Zp,union:nu,unknown:Qp,void:eu,NEVER:_u,ZodIssueCode:E,quotelessJson:P,ZodError:I}),jt={};p(jt,{assure:()=>wu,is:()=>Cu,isObject:()=>Su});var Cu=(e,i)=>i.safeParse(e).success,wu=(e,i)=>e.parse(i),Su=e=>typeof e=="object"&&e!==null,Bu=ei,Yr=128,ku=-128,xu=Math.pow(2,31);function ei(e,i,r){i=i||[],r=r||0;for(var n=r;e>=xu;)i[r++]=e&255|Yr,e/=128;for(;e&ku;)i[r++]=e&255|Yr,e>>>=7;return i[r]=e|0,ei.bytes=r-n+1,i}var Ku=hr,Uu=128,ti=127;function hr(e,n){var r=0,n=n||0,s=0,a=n,t,l=e.length;do{if(a>=l)throw hr.bytes=0,new RangeError("Could not decode varint");t=e[a++],r+=s<28?(t&ti)<<s:(t&ti)*Math.pow(2,s),s+=7}while(t>=Uu);return hr.bytes=a-n,r}var Vu=Math.pow(2,7),Du=Math.pow(2,14),Nu=Math.pow(2,21),Pu=Math.pow(2,28),Iu=Math.pow(2,35),ju=Math.pow(2,42),Fu=Math.pow(2,49),qu=Math.pow(2,56),Mu=Math.pow(2,63),$u=function(e){return e<Vu?1:e<Du?2:e<Nu?3:e<Pu?4:e<Iu?5:e<ju?6:e<Fu?7:e<qu?8:e<Mu?9:10},Ou={encode:Bu,decode:Ku,encodingLength:$u},Gu=Ou,Ft=Gu,Rr=(e,i=0)=>[Ft.decode(e,i),Ft.decode.bytes],qt=(e,i,r=0)=>(Ft.encode(e,i,r),i),Mt=e=>Ft.encodingLength(e),Xu=(e,i)=>{if(e===i)return!0;if(e.byteLength!==i.byteLength)return!1;for(let r=0;r<e.byteLength;r++)if(e[r]!==i[r])return!1;return!0},$t=e=>{if(e instanceof Uint8Array&&e.constructor.name==="Uint8Array")return e;if(e instanceof ArrayBuffer)return new Uint8Array(e);if(ArrayBuffer.isView(e))return new Uint8Array(e.buffer,e.byteOffset,e.byteLength);throw new Error("Unknown type, must be binary type")},zu=e=>new TextEncoder().encode(e),Hu=e=>new TextDecoder().decode(e),Ot=(e,i)=>{const r=i.byteLength,n=Mt(e),s=n+Mt(r),a=new Uint8Array(s+r);return qt(e,a,0),qt(r,a,n),a.set(i,s),new gr(e,r,i,a)},Zu=e=>{const i=$t(e),[r,n]=Rr(i),[s,a]=Rr(i.subarray(n)),t=i.subarray(n+a);if(t.byteLength!==s)throw new Error("Incorrect length");return new gr(r,s,t,i)},Wu=(e,i)=>e===i?!0:e.code===i.code&&e.size===i.size&&Xu(e.bytes,i.bytes),gr=class{constructor(e,i,r,n){this.code=e,this.size=i,this.digest=r,this.bytes=n}},ri={};p(ri,{base58btc:()=>Ce,base58flickr:()=>lf});function Ju(e,i){if(e.length>=255)throw new TypeError("Alphabet too long");for(var r=new Uint8Array(256),n=0;n<r.length;n++)r[n]=255;for(var s=0;s<e.length;s++){var a=e.charAt(s),t=a.charCodeAt(0);if(r[t]!==255)throw new TypeError(a+" is ambiguous");r[t]=s}var l=e.length,u=e.charAt(0),h=Math.log(l)/Math.log(256),T=Math.log(256)/Math.log(l);function v(K){if(K instanceof Uint8Array||(ArrayBuffer.isView(K)?K=new Uint8Array(K.buffer,K.byteOffset,K.byteLength):Array.isArray(K)&&(K=Uint8Array.from(K))),!(K instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(K.length===0)return"";for(var q=0,j=0,F=0,ie=K.length;F!==ie&&K[F]===0;)F++,q++;for(var re=(ie-F)*T+1>>>0,N=new Uint8Array(re);F!==ie;){for(var Y=K[F],ke=0,fe=re-1;(Y!==0||ke<j)&&fe!==-1;fe--,ke++)Y+=256*N[fe]>>>0,N[fe]=Y%l>>>0,Y=Y/l>>>0;if(Y!==0)throw new Error("Non-zero carry");j=ke,F++}for(var we=re-j;we!==re&&N[we]===0;)we++;for(var rr=u.repeat(q);we<re;++we)rr+=e.charAt(N[we]);return rr}function x(K){if(typeof K!="string")throw new TypeError("Expected String");if(K.length===0)return new Uint8Array;var q=0;if(K[q]!==" "){for(var j=0,F=0;K[q]===u;)j++,q++;for(var ie=(K.length-q)*h+1>>>0,re=new Uint8Array(ie);K[q];){var N=r[K.charCodeAt(q)];if(N===255)return;for(var Y=0,ke=ie-1;(N!==0||Y<F)&&ke!==-1;ke--,Y++)N+=l*re[ke]>>>0,re[ke]=N%256>>>0,N=N/256>>>0;if(N!==0)throw new Error("Non-zero carry");F=Y,q++}if(K[q]!==" "){for(var fe=ie-F;fe!==ie&&re[fe]===0;)fe++;for(var we=new Uint8Array(j+(ie-fe)),rr=j;fe!==ie;)we[rr++]=re[fe++];return we}}}function X(K){var q=x(K);if(q)return q;throw new Error(`Non-${i} character`)}return{encode:v,decodeUnsafe:x,decode:X}}var Qu=Ju,Yu=Qu,ef=Yu,tf=class{constructor(e,i,r){this.name=e,this.prefix=i,this.baseEncode=r}encode(e){if(e instanceof Uint8Array)return`${this.prefix}${this.baseEncode(e)}`;throw Error("Unknown type, must be binary type")}},rf=class{constructor(e,i,r){if(this.name=e,this.prefix=i,i.codePointAt(0)===void 0)throw new Error("Invalid prefix character");this.prefixCodePoint=i.codePointAt(0),this.baseDecode=r}decode(e){if(typeof e=="string"){if(e.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(e)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(e.slice(this.prefix.length))}else throw Error("Can only multibase decode strings")}or(e){return ii(this,e)}},nf=class{constructor(e){this.decoders=e}or(e){return ii(this,e)}decode(e){const i=e[0],r=this.decoders[i];if(r)return r.decode(e);throw RangeError(`Unable to decode multibase string ${JSON.stringify(e)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}},ii=(e,i)=>new nf({...e.decoders||{[e.prefix]:e},...i.decoders||{[i.prefix]:i}}),sf=class{constructor(e,i,r,n){this.name=e,this.prefix=i,this.baseEncode=r,this.baseDecode=n,this.encoder=new tf(e,i,r),this.decoder=new rf(e,i,n)}encode(e){return this.encoder.encode(e)}decode(e){return this.decoder.decode(e)}},Gt=({name:e,prefix:i,encode:r,decode:n})=>new sf(e,i,r,n),ct=({prefix:e,name:i,alphabet:r})=>{const{encode:n,decode:s}=ef(r,i);return Gt({prefix:e,name:i,encode:n,decode:a=>$t(s(a))})},af=(e,i,r,n)=>{const s={};for(let T=0;T<i.length;++T)s[i[T]]=T;let a=e.length;for(;e[a-1]==="=";)--a;const t=new Uint8Array(a*r/8|0);let l=0,u=0,h=0;for(let T=0;T<a;++T){const v=s[e[T]];if(v===void 0)throw new SyntaxError(`Non-${n} character`);u=u<<r|v,l+=r,l>=8&&(l-=8,t[h++]=255&u>>l)}if(l>=r||255&u<<8-l)throw new SyntaxError("Unexpected end of data");return t},of=(e,i,r)=>{const n=i[i.length-1]==="=",s=(1<<r)-1;let a="",t=0,l=0;for(let u=0;u<e.length;++u)for(l=l<<8|e[u],t+=8;t>r;)t-=r,a+=i[s&l>>t];if(t&&(a+=i[s&l<<r-t]),n)for(;a.length*r&7;)a+="=";return a},J=({name:e,prefix:i,bitsPerChar:r,alphabet:n})=>Gt({prefix:i,name:e,encode(s){return of(s,n,r)},decode(s){return af(s,n,r,e)}}),Ce=ct({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}),lf=ct({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"}),ni={};p(ni,{base32:()=>dt,base32hex:()=>cf,base32hexpad:()=>mf,base32hexpadupper:()=>yf,base32hexupper:()=>df,base32pad:()=>uf,base32padupper:()=>ff,base32upper:()=>pf,base32z:()=>Ef});var dt=J({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5}),pf=J({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),uf=J({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),ff=J({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),cf=J({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),df=J({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),mf=J({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),yf=J({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),Ef=J({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5}),$=class{constructor(e,i,r,n){this.code=i,this.version=e,this.multihash=r,this.bytes=n,this.byteOffset=n.byteOffset,this.byteLength=n.byteLength,this.asCID=this,this._baseCache=new Map,Object.defineProperties(this,{byteOffset:zt,byteLength:zt,code:Xt,version:Xt,multihash:Xt,bytes:Xt,_baseCache:zt,asCID:zt})}toV0(){switch(this.version){case 0:return this;default:{const{code:e,multihash:i}=this;if(e!==mt)throw new Error("Cannot convert a non dag-pb CID to CIDv0");if(i.code!==bf)throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");return $.createV0(i)}}}toV1(){switch(this.version){case 0:{const{code:e,digest:i}=this.multihash,r=Ot(e,i);return $.createV1(this.code,r)}case 1:return this;default:throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`)}}equals(e){return e&&this.code===e.code&&this.version===e.version&&Wu(this.multihash,e.multihash)}toString(e){const{bytes:i,version:r,_baseCache:n}=this;switch(r){case 0:return Rf(i,n,e||Ce.encoder);default:return gf(i,n,e||dt.encoder)}}toJSON(){return{code:this.code,version:this.version,hash:this.multihash.bytes}}get[Symbol.toStringTag](){return"CID"}[Symbol.for("nodejs.util.inspect.custom")](){return"CID("+this.toString()+")"}static isCID(e){return Tf(/^0\.0/,vf),!!(e&&(e[ai]||e.asCID===e))}get toBaseEncodedString(){throw new Error("Deprecated, use .toString()")}get codec(){throw new Error('"codec" property is deprecated, use integer "code" property instead')}get buffer(){throw new Error("Deprecated .buffer property, use .bytes to get Uint8Array instead")}get multibaseName(){throw new Error('"multibaseName" property is deprecated')}get prefix(){throw new Error('"prefix" property is deprecated')}static asCID(e){if(e instanceof $)return e;if(e!=null&&e.asCID===e){const{version:i,code:r,multihash:n,bytes:s}=e;return new $(i,r,n,s||si(i,r,n.bytes))}else if(e!=null&&e[ai]===!0){const{version:i,multihash:r,code:n}=e,s=Zu(r);return $.create(i,n,s)}else return null}static create(e,i,r){if(typeof i!="number")throw new Error("String codecs are no longer supported");switch(e){case 0:{if(i!==mt)throw new Error(`Version 0 CID must use dag-pb (code: ${mt}) block encoding`);return new $(e,i,r,r.bytes)}case 1:{const n=si(e,i,r.bytes);return new $(e,i,r,n)}default:throw new Error("Invalid version")}}static createV0(e){return $.create(0,mt,e)}static createV1(e,i){return $.create(1,e,i)}static decode(e){const[i,r]=$.decodeFirst(e);if(r.length)throw new Error("Incorrect length");return i}static decodeFirst(e){const i=$.inspectBytes(e),r=i.size-i.multihashSize,n=$t(e.subarray(r,r+i.multihashSize));if(n.byteLength!==i.multihashSize)throw new Error("Incorrect length");const s=n.subarray(i.multihashSize-i.digestSize),a=new gr(i.multihashCode,i.digestSize,s,n);return[i.version===0?$.createV0(a):$.createV1(i.codec,a),e.subarray(i.size)]}static inspectBytes(e){let i=0;const r=()=>{const[T,v]=Rr(e.subarray(i));return i+=v,T};let n=r(),s=mt;if(n===18?(n=0,i=0):n===1&&(s=r()),n!==0&&n!==1)throw new RangeError(`Invalid CID version ${n}`);const a=i,t=r(),l=r(),u=i+l,h=u-a;return{version:n,codec:s,multihashCode:t,digestSize:l,multihashSize:h,size:u}}static parse(e,i){const[r,n]=hf(e,i),s=$.decode(n);return s._baseCache.set(r,e),s}},hf=(e,i)=>{switch(e[0]){case"Q":{const r=i||Ce;return[Ce.prefix,r.decode(`${Ce.prefix}${e}`)]}case Ce.prefix:{const r=i||Ce;return[Ce.prefix,r.decode(e)]}case dt.prefix:{const r=i||dt;return[dt.prefix,r.decode(e)]}default:{if(i==null)throw Error("To parse non base32 or base58btc encoded CID multibase decoder must be provided");return[e[0],i.decode(e)]}}},Rf=(e,i,r)=>{const{prefix:n}=r;if(n!==Ce.prefix)throw Error(`Cannot string encode V0 in ${r.name} encoding`);const s=i.get(n);if(s==null){const a=r.encode(e).slice(1);return i.set(n,a),a}else return s},gf=(e,i,r)=>{const{prefix:n}=r,s=i.get(n);if(s==null){const a=r.encode(e);return i.set(n,a),a}else return s},mt=112,bf=18,si=(e,i,r)=>{const n=Mt(e),s=n+Mt(i),a=new Uint8Array(s+r.byteLength);return qt(e,a,0),qt(i,a,n),a.set(r,s),a},ai=Symbol.for("@ipld/js-cid/CID"),Xt={writable:!1,configurable:!1,enumerable:!0},zt={writable:!1,enumerable:!1,configurable:!1},Af="0.0.0-dev",Tf=(e,i)=>{if(e.test(Af))console.warn(i);else throw new Error(i)},vf=`CID.isCID(v) is deprecated and will be removed in the next major release.
Following code pattern:

if (CID.isCID(value)) {
  doSomethingWithCID(value)
}

Is replaced with:

const cid = CID.asCID(value)
if (cid) {
  // Make sure to use cid instead of value
  doSomethingWithCID(cid)
}
`,oi={};p(oi,{identity:()=>Lf});var Lf=Gt({prefix:"\0",name:"identity",encode:e=>Hu(e),decode:e=>zu(e)}),li={};p(li,{base2:()=>_f});var _f=J({prefix:"0",name:"base2",alphabet:"01",bitsPerChar:1}),pi={};p(pi,{base8:()=>Cf});var Cf=J({prefix:"7",name:"base8",alphabet:"01234567",bitsPerChar:3}),ui={};p(ui,{base10:()=>wf});var wf=ct({prefix:"9",name:"base10",alphabet:"0123456789"}),fi={};p(fi,{base16:()=>Sf,base16upper:()=>Bf});var Sf=J({prefix:"f",name:"base16",alphabet:"0123456789abcdef",bitsPerChar:4}),Bf=J({prefix:"F",name:"base16upper",alphabet:"0123456789ABCDEF",bitsPerChar:4}),ci={};p(ci,{base36:()=>kf,base36upper:()=>xf});var kf=ct({prefix:"k",name:"base36",alphabet:"0123456789abcdefghijklmnopqrstuvwxyz"}),xf=ct({prefix:"K",name:"base36upper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"}),di={};p(di,{base64:()=>Kf,base64pad:()=>Uf,base64url:()=>Vf,base64urlpad:()=>Df});var Kf=J({prefix:"m",name:"base64",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",bitsPerChar:6}),Uf=J({prefix:"M",name:"base64pad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",bitsPerChar:6}),Vf=J({prefix:"u",name:"base64url",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",bitsPerChar:6}),Df=J({prefix:"U",name:"base64urlpad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",bitsPerChar:6}),mi={};p(mi,{base256emoji:()=>Ff});var yi=Array.from("🚀🪐☄🛰🌌🌑🌒🌓🌔🌕🌖🌗🌘🌍🌏🌎🐉☀💻🖥💾💿😂❤😍🤣😊🙏💕😭😘👍😅👏😁🔥🥰💔💖💙😢🤔😆🙄💪😉☺👌🤗💜😔😎😇🌹🤦🎉💞✌✨🤷😱😌🌸🙌😋💗💚😏💛🙂💓🤩😄😀🖤😃💯🙈👇🎶😒🤭❣😜💋👀😪😑💥🙋😞😩😡🤪👊🥳😥🤤👉💃😳✋😚😝😴🌟😬🙃🍀🌷😻😓⭐✅🥺🌈😈🤘💦✔😣🏃💐☹🎊💘😠☝😕🌺🎂🌻😐🖕💝🙊😹🗣💫💀👑🎵🤞😛🔴😤🌼😫⚽🤙☕🏆🤫👈😮🙆🍻🍃🐶💁😲🌿🧡🎁⚡🌞🎈❌✊👋😰🤨😶🤝🚶💰🍓💢🤟🙁🚨💨🤬✈🎀🍺🤓😙💟🌱😖👶🥴▶➡❓💎💸⬇😨🌚🦋😷🕺⚠🙅😟😵👎🤲🤠🤧📌🔵💅🧐🐾🍒😗🤑🌊🤯🐷☎💧😯💆👆🎤🙇🍑❄🌴💣🐸💌📍🥀🤢👅💡💩👐📸👻🤐🤮🎼🥵🚩🍎🍊👼💍📣🥂"),Nf=yi.reduce((e,i,r)=>(e[r]=i,e),[]),Pf=yi.reduce((e,i,r)=>(e[i.codePointAt(0)]=r,e),[]);function If(e){return e.reduce((i,r)=>(i+=Nf[r],i),"")}function jf(e){const i=[];for(const r of e){const n=Pf[r.codePointAt(0)];if(n===void 0)throw new Error(`Non-base256emoji character: ${r}`);i.push(n)}return new Uint8Array(i)}var Ff=Gt({prefix:"🚀",name:"base256emoji",encode:If,decode:jf}),Ei={};p(Ei,{sha256:()=>Mf,sha512:()=>$f});var hi=({name:e,code:i,encode:r})=>new qf(e,i,r),qf=class{constructor(e,i,r){this.name=e,this.code=i,this.encode=r}digest(e){if(e instanceof Uint8Array){const i=this.encode(e);return i instanceof Uint8Array?Ot(this.code,i):i.then(r=>Ot(this.code,r))}else throw Error("Unknown type, must be binary type")}},Ri=e=>async i=>new Uint8Array(await crypto.subtle.digest(e,i)),Mf=hi({name:"sha2-256",code:18,encode:Ri("SHA-256")}),$f=hi({name:"sha2-512",code:19,encode:Ri("SHA-512")}),gi={};p(gi,{identity:()=>Xf});var bi=0,Of="identity",Ai=$t,Gf=e=>Ot(bi,Ai(e)),Xf={code:bi,name:Of,encode:Ai,digest:Gf};new TextEncoder,new TextDecoder;var Ti={...oi,...li,...pi,...ui,...fi,...ni,...ci,...ri,...di,...mi};({...Ei,...gi});function vi(e,i,r,n){return{name:e,prefix:i,encoder:{name:e,prefix:i,encode:r},decoder:{decode:n}}}var Li=vi("utf8","u",e=>"u"+new TextDecoder("utf8").decode(e),e=>new TextEncoder().encode(e.substring(1))),br=vi("ascii","a",e=>{let i="a";for(let r=0;r<e.length;r++)i+=String.fromCharCode(e[r]);return i},e=>{e=e.substring(1);const i=new Uint8Array(e.length);for(let r=0;r<e.length;r++)i[r]=e.charCodeAt(r);return i}),zf={utf8:Li,"utf-8":Li,hex:Ti.base16,latin1:br,ascii:br,binary:br,...Ti},_i=zf;function Hf(e,i="utf8"){const r=_i[i];if(!r)throw new Error(`Unsupported encoding "${i}"`);return r.decoder.decode(`${r.prefix}${e}`)}function Zf(e,i="utf8"){const r=_i[i];if(!r)throw new Error(`Unsupported encoding "${i}"`);return r.encoder.encode(e).substring(1)}var Ar=e=>{if(Array.isArray(e))return e.map(i=>Ar(i));if(e&&typeof e=="object"){if(typeof e.$link=="string"&&Object.keys(e).length===1)return $.parse(e.$link);if(typeof e.$bytes=="string"&&Object.keys(e).length===1)return Hf(e.$bytes,"base64");const i={};for(const r of Object.keys(e))i[r]=Ar(e[r]);return i}return e},Ht=e=>{if(Array.isArray(e))return e.map(i=>Ht(i));if(e&&typeof e=="object"){if(e instanceof Uint8Array)return{$bytes:Zf(e,"base64")};if($.asCID(e))return{$link:e.toString()};const i={};for(const r of Object.keys(e))i[r]=Ht(e[r]);return i}return e},Wf=f.any().refine(e=>$.asCID(e)!==null,{message:"Not a CID"}).transform(e=>$.asCID(e)),Jf={cid:Wf,bytes:f.instanceof(Uint8Array),string:f.string(),array:f.array(f.unknown()),map:f.record(f.string(),f.unknown()),unknown:f.unknown()},Qf=vt(Qe()),Ci=e=>new TextEncoder().encode(e).byteLength,Tr=e=>new Qf.default().countGraphemes(e),Yf=e=>{const i=e.match(wi);if(!(i!=null&&i.groups))return null;const r=i.groups;return{grandfathered:r.grandfathered,language:r.language,extlang:r.extlang,script:r.script,region:r.region,variant:r.variant,extension:r.extension,privateUse:r.privateUseA||r.privateUseB}},ec=e=>wi.test(e),wi=/^((?<grandfathered>(en-GB-oed|i-ami|i-bnn|i-default|i-enochian|i-hak|i-klingon|i-lux|i-mingo|i-navajo|i-pwn|i-tao|i-tay|i-tsu|sgn-BE-FR|sgn-BE-NL|sgn-CH-DE)|(art-lojban|cel-gaulish|no-bok|no-nyn|zh-guoyu|zh-hakka|zh-min|zh-min-nan|zh-xiang))|((?<language>([A-Za-z]{2,3}(-(?<extlang>[A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-(?<script>[A-Za-z]{4}))?(-(?<region>[A-Za-z]{2}|[0-9]{3}))?(-(?<variant>[A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-(?<extension>[0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(?<privateUseA>x(-[A-Za-z0-9]{1,8})+))?)|(?<privateUseB>x(-[A-Za-z0-9]{1,8})+))$/,tc=e=>lc.safeParse(e).success,rc=e=>{const i=e.id;if(typeof i!="string")throw new Error("No `id` on document");return i},ic=e=>nc(e,{id:"#atproto_pds",type:"AtprotoPersonalDataServer"}),nc=(e,i)=>{const r=rc(e);let n=e.service;if(!n||typeof n!="object")return;Array.isArray(n)||(n=[n]);const s=n.find(a=>a.id===i.id||a.id===`${r}${i.id}`);if(s&&s.type===i.type&&typeof s.serviceEndpoint=="string")return sc(s.serviceEndpoint)},sc=e=>{let i;try{i=new URL(e)}catch{return}if(["http:","https:"].includes(i.protocol))return i.hostname?e:void 0},ac=f.object({id:f.string(),type:f.string(),controller:f.string(),publicKeyMultibase:f.string().optional()}),oc=f.object({id:f.string(),type:f.string(),serviceEndpoint:f.union([f.string(),f.record(f.unknown())])}),lc=f.object({id:f.string(),alsoKnownAs:f.array(f.string()).optional(),verificationMethod:f.array(ac).optional(),service:f.array(oc).optional()}),pc=vt(lr());function uc(e,i){try{if(!(0,pc.isValidISODateString)(i))throw new Error}catch{return{success:!1,error:new S(`${e} must be an valid atproto datetime (both RFC-3339 and ISO-8601)`)}}return{success:!0,value:i}}function fc(e,i){return i.match(/^\w+:(?:\/\/)?[^\s/][^\s]*$/)!==null?{success:!0,value:i}:{success:!1,error:new S(`${e} must be a uri`)}}function cc(e,i){try{pr(i)}catch{return{success:!1,error:new S(`${e} must be a valid at-uri`)}}return{success:!0,value:i}}function Si(e,i){try{et(i)}catch{return{success:!1,error:new S(`${e} must be a valid did`)}}return{success:!0,value:i}}function Bi(e,i){try{Ye(i)}catch{return{success:!1,error:new S(`${e} must be a valid handle`)}}return{success:!0,value:i}}function dc(e,i){return!Si(e,i).success&&!Bi(e,i).success?{success:!1,error:new S(`${e} must be a valid did or a handle`)}:{success:!0,value:i}}function mc(e,i){try{tt(i)}catch{return{success:!1,error:new S(`${e} must be a valid nsid`)}}return{success:!0,value:i}}function yc(e,i){try{$.parse(i)}catch{return{success:!1,error:new S(`${e} must be a cid string`)}}return{success:!0,value:i}}function Ec(e,i){return ec(i)?{success:!0,value:i}:{success:!1,error:new S(`${e} must be a well-formed BCP 47 language tag`)}}function hc(e,i,r,n){switch(r.type){case"boolean":return ki(e,i,r,n);case"integer":return xi(e,i,r,n);case"string":return Ki(e,i,r,n);case"bytes":return Ui(e,i,r,n);case"cid-link":return Vi(e,i,r,n);case"unknown":return Di(e,i,r,n);default:return{success:!1,error:new S(`Unexpected lexicon type: ${r.type}`)}}}function ki(e,i,r,n){r=r;const s=typeof n;return s==="undefined"?typeof r.default=="boolean"?{success:!0,value:r.default}:{success:!1,error:new S(`${i} must be a boolean`)}:s!=="boolean"?{success:!1,error:new S(`${i} must be a boolean`)}:typeof r.const=="boolean"&&n!==r.const?{success:!1,error:new S(`${i} must be ${r.const}`)}:{success:!0,value:n}}function xi(e,i,r,n){return r=r,typeof n==="undefined"?typeof r.default=="number"?{success:!0,value:r.default}:{success:!1,error:new S(`${i} must be an integer`)}:Number.isInteger(n)?typeof r.const=="number"&&n!==r.const?{success:!1,error:new S(`${i} must be ${r.const}`)}:Array.isArray(r.enum)&&!r.enum.includes(n)?{success:!1,error:new S(`${i} must be one of (${r.enum.join("|")})`)}:typeof r.maximum=="number"&&n>r.maximum?{success:!1,error:new S(`${i} can not be greater than ${r.maximum}`)}:typeof r.minimum=="number"&&n<r.minimum?{success:!1,error:new S(`${i} can not be less than ${r.minimum}`)}:{success:!0,value:n}:{success:!1,error:new S(`${i} must be an integer`)}}function Ki(e,i,r,n){if(r=r,typeof n>"u")return typeof r.default=="string"?{success:!0,value:r.default}:{success:!1,error:new S(`${i} must be a string`)};if(typeof n!="string")return{success:!1,error:new S(`${i} must be a string`)};if(typeof r.const=="string"&&n!==r.const)return{success:!1,error:new S(`${i} must be ${r.const}`)};if(Array.isArray(r.enum)&&!r.enum.includes(n))return{success:!1,error:new S(`${i} must be one of (${r.enum.join("|")})`)};if(typeof r.maxLength=="number"&&Ci(n)>r.maxLength)return{success:!1,error:new S(`${i} must not be longer than ${r.maxLength} characters`)};if(typeof r.minLength=="number"&&Ci(n)<r.minLength)return{success:!1,error:new S(`${i} must not be shorter than ${r.minLength} characters`)};if(typeof r.maxGraphemes=="number"&&Tr(n)>r.maxGraphemes)return{success:!1,error:new S(`${i} must not be longer than ${r.maxGraphemes} graphemes`)};if(typeof r.minGraphemes=="number"&&Tr(n)<r.minGraphemes)return{success:!1,error:new S(`${i} must not be shorter than ${r.minGraphemes} graphemes`)};if(typeof r.format=="string")switch(r.format){case"datetime":return uc(i,n);case"uri":return fc(i,n);case"at-uri":return cc(i,n);case"did":return Si(i,n);case"handle":return Bi(i,n);case"at-identifier":return dc(i,n);case"nsid":return mc(i,n);case"cid":return yc(i,n);case"language":return Ec(i,n)}return{success:!0,value:n}}function Ui(e,i,r,n){return r=r,!n||!(n instanceof Uint8Array)?{success:!1,error:new S(`${i} must be a byte array`)}:typeof r.maxLength=="number"&&n.byteLength>r.maxLength?{success:!1,error:new S(`${i} must not be larger than ${r.maxLength} bytes`)}:typeof r.minLength=="number"&&n.byteLength<r.minLength?{success:!1,error:new S(`${i} must not be smaller than ${r.minLength} bytes`)}:{success:!0,value:n}}function Vi(e,i,r,n){return $.asCID(n)===null?{success:!1,error:new S(`${i} must be a CID`)}:{success:!0,value:n}}function Di(e,i,r,n){return!n||typeof n!="object"?{success:!1,error:new S(`${i} must be an object`)}:{success:!0,value:n}}var Ni=f.object({$type:f.literal("blob"),ref:Jf.cid,mimeType:f.string(),size:f.number()}).strict(),Rc=f.object({cid:f.string(),mimeType:f.string()}).strict(),Pi=f.union([Ni,Rc]),Ne=class{constructor(e,i,r,n){this.ref=e,this.mimeType=i,this.size=r,this.original=n??{$type:"blob",ref:e,mimeType:i,size:r}}static asBlobRef(e){return jt.is(e,Pi)?Ne.fromJsonRef(e):null}static fromJsonRef(e){return jt.is(e,Ni)?new Ne(e.ref,e.mimeType,e.size):new Ne($.parse(e.cid),e.mimeType,-1,e)}ipld(){return{$type:"blob",ref:this.ref,mimeType:this.mimeType,size:this.size}}toJSON(){return Ht(this.ipld())}};function gc(e,i,r,n){return!n||!(n instanceof Ne)?{success:!1,error:new S(`${i} should be a blob ref`)}:{success:!0,value:n}}function bc(e,i,r,n){switch(r.type){case"boolean":return ki(e,i,r,n);case"integer":return xi(e,i,r,n);case"string":return Ki(e,i,r,n);case"bytes":return Ui(e,i,r,n);case"cid-link":return Vi(e,i,r,n);case"unknown":return Di(e,i,r,n);case"object":return yt(e,i,r,n);case"array":return Ii(e,i,r,n);case"blob":return gc(e,i,r,n);default:return{success:!1,error:new S(`Unexpected lexicon type: ${r.type}`)}}}function Ii(e,i,r,n){if(!Array.isArray(n))return{success:!1,error:new S(`${i} must be an array`)};if(typeof r.maxLength=="number"&&n.length>r.maxLength)return{success:!1,error:new S(`${i} must not have more than ${r.maxLength} elements`)};if(typeof r.minLength=="number"&&n.length<r.minLength)return{success:!1,error:new S(`${i} must not have fewer than ${r.minLength} elements`)};const s=r.items;for(let a=0;a<n.length;a++){const t=n[a],l=`${i}/${a}`,u=vr(e,l,s,t);if(!u.success)return u}return{success:!0,value:n}}function yt(e,i,r,n){if(r=r,!n||typeof n!="object")return{success:!1,error:new S(`${i} must be an object`)};const s=new Set(r.required),a=new Set(r.nullable);let t=n;if(typeof r.properties=="object")for(const l in r.properties){if(n[l]===null&&a.has(l))continue;const u=r.properties[l],h=`${i}/${l}`,T=vr(e,h,u,n[l]),v=T.success?T.value:n[l],x=typeof v>"u";if(x&&s.has(l))return{success:!1,error:new S(`${i} must have the property "${l}"`)};if(!x&&!T.success)return T;v!==n[l]&&(t===n&&(t={...n}),t[l]=v)}return{success:!0,value:t}}function Q(e,i){if(e.split("#").length>2)throw new Error("Uri can only have one hash segment");if(e.startsWith("lex:"))return e;if(e.startsWith("#")){if(!i)throw new Error(`Unable to resolve uri without anchor: ${e}`);return`${i}${e}`}return`lex:${e}`}function vr(e,i,r,n,s=!1){let a,t;if(r.type==="union"){if(!Dc(n))return{success:!1,error:new S(`${i} must be an object which includes the "$type" property`)};if(Ac(r.refs,n.$type))t=ji(e,{type:"ref",ref:n.$type});else return r.closed?{success:!1,error:new S(`${i} $type must be one of ${r.refs.join(", ")}`)}:{success:!0,value:n}}else t=ji(e,r);for(const l of t){const u=s?yt(e,i,l,n):bc(e,i,l,n);if(u.success)return u;a??(a=u.error)}return t.length>1?{success:!1,error:new S(`${i} did not match any of the expected definitions`)}:{success:!1,error:a}}function Lr(e,i,r,n,s=!1){const a=vr(e,i,r,n,s);if(!a.success)throw a.error;return a.value}function ji(e,i){return i.type==="ref"?[e.getDefOrThrow(i.ref)]:i.type==="union"?i.refs.map(r=>e.getDefOrThrow(r)).flat():[i]}function Fi(e,i){if(e.required!==void 0){if(!Array.isArray(e.required)){i.addIssue({code:f.ZodIssueCode.invalid_type,received:typeof e.required,expected:"array"});return}if(e.properties===void 0){e.required.length>0&&i.addIssue({code:f.ZodIssueCode.custom,message:"Required fields defined but no properties defined"});return}for(const r of e.required)e.properties[r]===void 0&&i.addIssue({code:f.ZodIssueCode.custom,message:`Required field "${r}" not defined`})}}var Ac=(e,i)=>{const r=Q(i);return e.includes(r)?!0:r.endsWith("#main")?e.includes(r.replace("#main","")):e.includes(r+"#main")},qi=f.object({type:f.literal("boolean"),description:f.string().optional(),default:f.boolean().optional(),const:f.boolean().optional()}).strict(),Mi=f.object({type:f.literal("integer"),description:f.string().optional(),default:f.number().int().optional(),minimum:f.number().int().optional(),maximum:f.number().int().optional(),enum:f.number().int().array().optional(),const:f.number().int().optional()}).strict(),Tc=f.enum(["datetime","uri","at-uri","did","handle","at-identifier","nsid","cid","language"]),$i=f.object({type:f.literal("string"),format:Tc.optional(),description:f.string().optional(),default:f.string().optional(),minLength:f.number().int().optional(),maxLength:f.number().int().optional(),minGraphemes:f.number().int().optional(),maxGraphemes:f.number().int().optional(),enum:f.string().array().optional(),const:f.string().optional(),knownValues:f.string().array().optional()}).strict(),Oi=f.object({type:f.literal("unknown"),description:f.string().optional()}).strict(),Zt=f.discriminatedUnion("type",[qi,Mi,$i,Oi]),Gi=f.object({type:f.literal("bytes"),description:f.string().optional(),maxLength:f.number().optional(),minLength:f.number().optional()}).strict(),Xi=f.object({type:f.literal("cid-link"),description:f.string().optional()}).strict(),zi=f.discriminatedUnion("type",[Gi,Xi]),vc=f.object({type:f.literal("ref"),description:f.string().optional(),ref:f.string()}).strict(),Lc=f.object({type:f.literal("union"),description:f.string().optional(),refs:f.string().array(),closed:f.boolean().optional()}).strict(),Wt=f.discriminatedUnion("type",[vc,Lc]),_r=f.object({type:f.literal("blob"),description:f.string().optional(),accept:f.string().array().optional(),maxSize:f.number().optional()}).strict(),Cr=f.object({type:f.literal("array"),description:f.string().optional(),items:f.union([Zt,zi,_r,Wt]),minLength:f.number().int().optional(),maxLength:f.number().int().optional()}).strict(),_c=Cr.merge(f.object({items:Zt}).strict()),Cc=f.object({type:f.literal("token"),description:f.string().optional()}).strict(),Jt=f.object({type:f.literal("object"),description:f.string().optional(),required:f.string().array().optional(),nullable:f.string().array().optional(),properties:f.record(f.union([Wt,zi,Cr,_r,Zt]))}).strict().superRefine(Fi),wr=f.object({type:f.literal("params"),description:f.string().optional(),required:f.string().array().optional(),properties:f.record(f.union([Zt,_c]))}).strict().superRefine(Fi),Sr=f.object({description:f.string().optional(),encoding:f.string(),schema:f.union([Wt,Jt]).optional()}).strict(),wc=f.object({description:f.string().optional(),schema:f.union([Wt,Jt]).optional()}).strict(),Br=f.object({name:f.string(),description:f.string().optional()}).strict(),Sc=f.object({type:f.literal("query"),description:f.string().optional(),parameters:wr.optional(),output:Sr.optional(),errors:Br.array().optional()}).strict(),Bc=f.object({type:f.literal("procedure"),description:f.string().optional(),parameters:wr.optional(),input:Sr.optional(),output:Sr.optional(),errors:Br.array().optional()}).strict(),kc=f.object({type:f.literal("subscription"),description:f.string().optional(),parameters:wr.optional(),message:wc.optional(),errors:Br.array().optional()}).strict(),xc=f.object({type:f.literal("record"),description:f.string().optional(),key:f.string().optional(),record:Jt}).strict(),Kc=f.custom(e=>{if(!(!e||typeof e!="object")&&e.type!==void 0)switch(e.type){case"record":return xc.parse(e);case"query":return Sc.parse(e);case"procedure":return Bc.parse(e);case"subscription":return kc.parse(e);case"blob":return _r.parse(e);case"array":return Cr.parse(e);case"token":return Cc.parse(e);case"object":return Jt.parse(e);case"boolean":return qi.parse(e);case"integer":return Mi.parse(e);case"string":return $i.parse(e);case"bytes":return Gi.parse(e);case"cid-link":return Xi.parse(e);case"unknown":return Oi.parse(e)}},e=>!e||typeof e!="object"?{message:"Must be an object",fatal:!0}:e.type===void 0?{message:"Must have a type",fatal:!0}:{message:`Invalid type: ${e.type} must be one of: record, query, procedure, subscription, blob, array, token, object, boolean, integer, string, bytes, cid-link, unknown`,fatal:!0});f.object({lexicon:f.literal(1),id:f.string().refine(e=>Ie.isValid(e),{message:"Must be a valid NSID"}),revision:f.number().optional(),description:f.string().optional(),defs:f.record(Kc)}).strict().superRefine((e,i)=>{for(const r in e.defs){const n=e.defs[r];r!=="main"&&(n.type==="record"||n.type==="procedure"||n.type==="query"||n.type==="subscription")&&i.addIssue({code:f.ZodIssueCode.custom,message:"Records, procedures, queries, and subscriptions must be the main definition."})}});function Hi(e){return e!==null&&typeof e=="object"}function Uc(e,i){return i in e}var Vc=f.object({$type:f.string()});function Dc(e){return Vc.safeParse(e).success}var S=class extends Error{},Zi=class extends Error{},Nc=class extends Error{};function Pc(e,i,r,n){const s=n&&typeof n=="object"?n:{},a=new Set(r.required??[]);let t=s;if(typeof r.properties=="object")for(const l in r.properties){const u=r.properties[l],h=u.type==="array"?Ii(e,l,u,s[l]):hc(e,l,u,s[l]),T=h.success?h.value:s[l],v=typeof T>"u";if(v&&a.has(l))return{success:!1,error:new S(`${i} must have the property "${l}"`)};if(!v&&!h.success)return h;T!==s[l]&&(t===s&&(t={...s}),t[l]=T)}return{success:!0,value:t}}function Ic(e,i,r){const n=yt(e,"Record",i.record,r);if(!n.success)throw n.error;return n.value}function jc(e,i,r){if(i.parameters){const n=Pc(e,"Params",i.parameters,r);if(!n.success)throw n.error;return n.value}}function Fc(e,i,r){var n;if((n=i.input)!=null&&n.schema)return Lr(e,"Input",i.input.schema,r,!0)}function qc(e,i,r){var n;if((n=i.output)!=null&&n.schema)return Lr(e,"Output",i.output.schema,r,!0)}function Mc(e,i,r){var n;if((n=i.message)!=null&&n.schema)return Lr(e,"Message",i.message.schema,r,!0)}var Wi=class{constructor(e){if(this.docs=new Map,this.defs=new Map,e!=null&&e.length)for(const i of e)this.add(i)}add(e){const i=Q(e.id);if(this.docs.has(i))throw new Error(`${i} has already been registered`);kr(e,i),this.docs.set(i,e);for(const[r,n]of Ji(e))this.defs.set(r,n)}remove(e){e=Q(e);const i=this.docs.get(e);if(!i)throw new Error(`Unable to remove "${e}": does not exist`);for(const[r,n]of Ji(i))this.defs.delete(r);this.docs.delete(e)}get(e){return e=Q(e),this.docs.get(e)}getDef(e){return e=Q(e),this.defs.get(e)}getDefOrThrow(e,i){const r=this.getDef(e);if(!r)throw new Nc(`Lexicon not found: ${e}`);if(i&&!i.includes(r.type))throw new Zi(`Not a ${i.join(" or ")} lexicon: ${e}`);return r}validate(e,i){e=Q(e);const r=this.getDefOrThrow(e,["record","object"]);if(!Hi(i))throw new S("Value must be an object");if(r.type==="record")return yt(this,"Record",r.record,i);if(r.type==="object")return yt(this,"Object",r,i);throw new Zi("Definition must be a record or object")}assertValidRecord(e,i){e=Q(e);const r=this.getDefOrThrow(e,["record"]);if(!Hi(i))throw new S("Record must be an object");if(!Uc(i,"$type")||typeof i.$type!="string")throw new S("Record/$type must be a string");const n=i.$type||"";if(Q(n)!==e)throw new S(`Invalid $type: must be ${e}, got ${n}`);return Ic(this,r,i)}assertValidXrpcParams(e,i){e=Q(e);const r=this.getDefOrThrow(e,["query","procedure","subscription"]);return jc(this,r,i)}assertValidXrpcInput(e,i){e=Q(e);const r=this.getDefOrThrow(e,["procedure"]);return Fc(this,r,i)}assertValidXrpcOutput(e,i){e=Q(e);const r=this.getDefOrThrow(e,["query","procedure"]);return qc(this,r,i)}assertValidXrpcMessage(e,i){e=Q(e);const r=this.getDefOrThrow(e,["subscription"]);return Mc(this,r,i)}resolveLexUri(e,i){return e=Q(e),Q(i,e)}};function*Ji(e){for(const i in e.defs)yield[`lex:${e.id}#${i}`,e.defs[i]],i==="main"&&(yield[`lex:${e.id}`,e.defs[i]])}function kr(e,i){for(const r in e)e.type==="ref"?e.ref=Q(e.ref,i):e.type==="union"?e.refs=e.refs.map(n=>Q(n,i)):Array.isArray(e[r])?e[r]=e[r].map(n=>typeof n=="string"?n.startsWith("#")?Q(n,i):n:n&&typeof n=="object"?kr(n,i):n):e[r]&&typeof e[r]=="object"&&(e[r]=kr(e[r],i));return e}var xr=e=>{if(Array.isArray(e))return e.map(i=>xr(i));if(e&&typeof e=="object"){if(e instanceof Ne)return e.original;if($.asCID(e)||e instanceof Uint8Array)return e;const i={};for(const r of Object.keys(e))i[r]=xr(e[r]);return i}return e},Kr=e=>{if(Array.isArray(e))return e.map(i=>Kr(i));if(e&&typeof e=="object"){if((e.$type==="blob"||typeof e.cid=="string"&&typeof e.mimeType=="string")&&jt.is(e,Pi))return Ne.fromJsonRef(e);if($.asCID(e)||e instanceof Uint8Array)return e;const i={};for(const r of Object.keys(e))i[r]=Kr(e[r]);return i}return e},Qi=e=>Ht(xr(e)),Yi=e=>JSON.stringify(Qi(e)),en=e=>Kr(Ar(e)),tn=e=>en(JSON.parse(e)),rn="did:plc:ar7c4by46qjdydhdevvrndac";function Ur(e){return e.trim().replace(/^#(?!\ufe0f)/,"").replace(/[\r\n\u00AD\u2060\u200D\u200C\u200B]+/,"")}var nn=f.object({error:f.string().optional(),message:f.string().optional()}),sn=(e=>(e[e.Unknown=1]="Unknown",e[e.InvalidResponse=2]="InvalidResponse",e[e.Success=200]="Success",e[e.InvalidRequest=400]="InvalidRequest",e[e.AuthRequired=401]="AuthRequired",e[e.Forbidden=403]="Forbidden",e[e.XRPCNotSupported=404]="XRPCNotSupported",e[e.PayloadTooLarge=413]="PayloadTooLarge",e[e.RateLimitExceeded=429]="RateLimitExceeded",e[e.InternalServerError=500]="InternalServerError",e[e.MethodNotImplemented=501]="MethodNotImplemented",e[e.UpstreamFailure=502]="UpstreamFailure",e[e.NotEnoughResources=503]="NotEnoughResources",e[e.UpstreamTimeout=504]="UpstreamTimeout",e))(sn||{}),$c={2:"InvalidResponse",200:"Success",400:"InvalidRequest",401:"AuthenticationRequired",403:"Forbidden",404:"XRPCNotSupported",413:"PayloadTooLarge",429:"RateLimitExceeded",500:"InternalServerError",501:"MethodNotImplemented",502:"UpstreamFailure",503:"NotEnoughResources",504:"UpstreamTimeout"},an={2:"Invalid Response",200:"Success",400:"Invalid Request",401:"Authentication Required",403:"Forbidden",404:"XRPC Not Supported",413:"Payload Too Large",429:"Rate Limit Exceeded",500:"Internal Server Error",501:"Method Not Implemented",502:"Upstream Failure",503:"Not Enough Resources",504:"Upstream Timeout"},Oc=class{constructor(e,i){this.data=e,this.headers=i,this.success=!0}},b=class extends Error{constructor(e,i,r,n){super(r||i||an[e]),this.status=e,this.error=i,this.success=!1,this.error||(this.error=$c[e]),this.headers=n}},Gc=class extends b{constructor(e,i,r){super(2,an[2],"The server gave an invalid response and may be out of date."),this.lexiconNsid=e,this.validationError=i,this.responseBody=r}};function Xc(e){return e.type==="procedure"?"post":"get"}function zc(e,i,r,n){var a,t;const s=new URL(r);if(s.pathname=`/xrpc/${e}`,n)for(const[l,u]of Object.entries(n)){const h=(t=(a=i.parameters)==null?void 0:a.properties)==null?void 0:t[l];if(!h)throw new Error(`Invalid query parameter: ${l}`);u!==void 0&&(h.type==="array"?[].concat(u).forEach(v=>{s.searchParams.append(l,on(h.items.type,v))}):s.searchParams.set(l,on(h.type,u)))}return s.toString()}function on(e,i){if(e==="string"||e==="unknown")return String(i);if(e==="float")return String(Number(i));if(e==="integer")return String(Number(i)|0);if(e==="boolean")return i?"true":"false";if(e==="datetime")return i instanceof Date?i.toISOString():String(i);throw new Error(`Unsupported query param type: ${e}`)}function Hc(e){const i={};for(const[r,n]of Object.entries(e))i[r.toLowerCase()]=n;return i}function Zc(e,i,r){const n=(r==null?void 0:r.headers)||{};return e.type==="procedure"&&(r!=null&&r.encoding&&(n["Content-Type"]=r.encoding),i&&typeof i=="object"&&(n["Content-Type"]||(n["Content-Type"]="application/json"))),n}function Wc(e,i){if(!(!e["content-type"]||typeof i>"u"))return i instanceof ArrayBuffer?i:e["content-type"].startsWith("text/")?new TextEncoder().encode(i.toString()):e["content-type"].startsWith("application/json")?new TextEncoder().encode(Yi(i)):i}function Jc(e){let i;return e in sn?i=e:e>=100&&e<200?i=404:e>=200&&e<300?i=200:e>=300&&e<400?i=404:e>=400&&e<500?i=400:i=500,i}function Qc(e,i){if(e){if(e.includes("application/json")&&(i!=null&&i.byteLength))try{const r=new TextDecoder().decode(i);return tn(r)}catch(r){throw new b(2,`Failed to parse response body: ${String(r)}`)}if(e.startsWith("text/")&&(i!=null&&i.byteLength))try{return new TextDecoder().decode(i)}catch(r){throw new b(2,`Failed to parse response body: ${String(r)}`)}}return i instanceof ArrayBuffer?new Uint8Array(i):i}var ln=class{constructor(){this.fetch=pn,this.lex=new Wi}async call(e,i,r,n,s){return this.service(e).call(i,r,n,s)}service(e){return new Yc(this,e)}addLexicon(e){this.lex.add(e)}addLexicons(e){for(const i of e)this.addLexicon(i)}removeLexicon(e){this.lex.remove(e)}},Yc=class{constructor(e,i){this.headers={},this.baseClient=e,this.uri=typeof i=="string"?new URL(i):i}setHeader(e,i){this.headers[e]=i}unsetHeader(e){delete this.headers[e]}async call(e,i,r,n){const s=this.baseClient.lex.getDefOrThrow(e);if(!s||s.type!=="query"&&s.type!=="procedure")throw new Error(`Invalid lexicon: ${e}. Must be a query or procedure.`);const a=Xc(s),t=zc(e,s,this.uri,i),l=Zc(s,r,{headers:{...this.headers,...n==null?void 0:n.headers},encoding:n==null?void 0:n.encoding}),u=await this.baseClient.fetch(t,a,l,r),h=Jc(u.status);if(h===200){try{this.baseClient.lex.assertValidXrpcOutput(e,u.body)}catch(T){throw T instanceof S?new Gc(e,T,u.body):T}return new Oc(u.body,u.headers)}else throw u.body&&ed(u.body)?new b(h,u.body.error,u.body.message,u.headers):new b(h)}};async function pn(e,i,r,n){try{const s=Hc(r),a={method:i,headers:s,body:Wc(s,n),duplex:"half"},t=await fetch(e,a),l=await t.arrayBuffer();return{status:t.status,headers:Object.fromEntries(t.headers.entries()),body:Qc(t.headers.get("content-type"),l)}}catch(s){throw new b(1,String(s))}}function ed(e){return nn.safeParse(e).success}new ln;var td={ComAtprotoAdminDefs:{lexicon:1,id:"com.atproto.admin.defs",defs:{statusAttr:{type:"object",required:["applied"],properties:{applied:{type:"boolean"},ref:{type:"string"}}},accountView:{type:"object",required:["did","handle","indexedAt"],properties:{did:{type:"string",format:"did"},handle:{type:"string",format:"handle"},email:{type:"string"},relatedRecords:{type:"array",items:{type:"unknown"}},indexedAt:{type:"string",format:"datetime"},invitedBy:{type:"ref",ref:"lex:com.atproto.server.defs#inviteCode"},invites:{type:"array",items:{type:"ref",ref:"lex:com.atproto.server.defs#inviteCode"}},invitesDisabled:{type:"boolean"},emailConfirmedAt:{type:"string",format:"datetime"},inviteNote:{type:"string"}}},repoRef:{type:"object",required:["did"],properties:{did:{type:"string",format:"did"}}},repoBlobRef:{type:"object",required:["did","cid"],properties:{did:{type:"string",format:"did"},cid:{type:"string",format:"cid"},recordUri:{type:"string",format:"at-uri"}}}}},ComAtprotoAdminDeleteAccount:{lexicon:1,id:"com.atproto.admin.deleteAccount",defs:{main:{type:"procedure",description:"Delete a user account as an administrator.",input:{encoding:"application/json",schema:{type:"object",required:["did"],properties:{did:{type:"string",format:"did"}}}}}}},ComAtprotoAdminDisableAccountInvites:{lexicon:1,id:"com.atproto.admin.disableAccountInvites",defs:{main:{type:"procedure",description:"Disable an account from receiving new invite codes, but does not invalidate existing codes.",input:{encoding:"application/json",schema:{type:"object",required:["account"],properties:{account:{type:"string",format:"did"},note:{type:"string",description:"Optional reason for disabled invites."}}}}}}},ComAtprotoAdminDisableInviteCodes:{lexicon:1,id:"com.atproto.admin.disableInviteCodes",defs:{main:{type:"procedure",description:"Disable some set of codes and/or all codes associated with a set of users.",input:{encoding:"application/json",schema:{type:"object",properties:{codes:{type:"array",items:{type:"string"}},accounts:{type:"array",items:{type:"string"}}}}}}}},ComAtprotoAdminEnableAccountInvites:{lexicon:1,id:"com.atproto.admin.enableAccountInvites",defs:{main:{type:"procedure",description:"Re-enable an account's ability to receive invite codes.",input:{encoding:"application/json",schema:{type:"object",required:["account"],properties:{account:{type:"string",format:"did"},note:{type:"string",description:"Optional reason for enabled invites."}}}}}}},ComAtprotoAdminGetAccountInfo:{lexicon:1,id:"com.atproto.admin.getAccountInfo",defs:{main:{type:"query",description:"Get details about an account.",parameters:{type:"params",required:["did"],properties:{did:{type:"string",format:"did"}}},output:{encoding:"application/json",schema:{type:"ref",ref:"lex:com.atproto.admin.defs#accountView"}}}}},ComAtprotoAdminGetAccountInfos:{lexicon:1,id:"com.atproto.admin.getAccountInfos",defs:{main:{type:"query",description:"Get details about some accounts.",parameters:{type:"params",required:["dids"],properties:{dids:{type:"array",items:{type:"string",format:"did"}}}},output:{encoding:"application/json",schema:{type:"object",required:["infos"],properties:{infos:{type:"array",items:{type:"ref",ref:"lex:com.atproto.admin.defs#accountView"}}}}}}}},ComAtprotoAdminGetInviteCodes:{lexicon:1,id:"com.atproto.admin.getInviteCodes",defs:{main:{type:"query",description:"Get an admin view of invite codes.",parameters:{type:"params",properties:{sort:{type:"string",knownValues:["recent","usage"],default:"recent"},limit:{type:"integer",minimum:1,maximum:500,default:100},cursor:{type:"string"}}},output:{encoding:"application/json",schema:{type:"object",required:["codes"],properties:{cursor:{type:"string"},codes:{type:"array",items:{type:"ref",ref:"lex:com.atproto.server.defs#inviteCode"}}}}}}}},ComAtprotoAdminGetSubjectStatus:{lexicon:1,id:"com.atproto.admin.getSubjectStatus",defs:{main:{type:"query",description:"Get the service-specific admin status of a subject (account, record, or blob).",parameters:{type:"params",properties:{did:{type:"string",format:"did"},uri:{type:"string",format:"at-uri"},blob:{type:"string",format:"cid"}}},output:{encoding:"application/json",schema:{type:"object",required:["subject"],properties:{subject:{type:"union",refs:["lex:com.atproto.admin.defs#repoRef","lex:com.atproto.repo.strongRef","lex:com.atproto.admin.defs#repoBlobRef"]},takedown:{type:"ref",ref:"lex:com.atproto.admin.defs#statusAttr"}}}}}}},ComAtprotoAdminSendEmail:{lexicon:1,id:"com.atproto.admin.sendEmail",defs:{main:{type:"procedure",description:"Send email to a user's account email address.",input:{encoding:"application/json",schema:{type:"object",required:["recipientDid","content","senderDid"],properties:{recipientDid:{type:"string",format:"did"},content:{type:"string"},subject:{type:"string"},senderDid:{type:"string",format:"did"},comment:{type:"string",description:"Additional comment by the sender that won't be used in the email itself but helpful to provide more context for moderators/reviewers"}}}},output:{encoding:"application/json",schema:{type:"object",required:["sent"],properties:{sent:{type:"boolean"}}}}}}},ComAtprotoAdminUpdateAccountEmail:{lexicon:1,id:"com.atproto.admin.updateAccountEmail",defs:{main:{type:"procedure",description:"Administrative action to update an account's email.",input:{encoding:"application/json",schema:{type:"object",required:["account","email"],properties:{account:{type:"string",format:"at-identifier",description:"The handle or DID of the repo."},email:{type:"string"}}}}}}},ComAtprotoAdminUpdateAccountHandle:{lexicon:1,id:"com.atproto.admin.updateAccountHandle",defs:{main:{type:"procedure",description:"Administrative action to update an account's handle.",input:{encoding:"application/json",schema:{type:"object",required:["did","handle"],properties:{did:{type:"string",format:"did"},handle:{type:"string",format:"handle"}}}}}}},ComAtprotoAdminUpdateAccountPassword:{lexicon:1,id:"com.atproto.admin.updateAccountPassword",defs:{main:{type:"procedure",description:"Update the password for a user account as an administrator.",input:{encoding:"application/json",schema:{type:"object",required:["did","password"],properties:{did:{type:"string",format:"did"},password:{type:"string"}}}}}}},ComAtprotoAdminUpdateSubjectStatus:{lexicon:1,id:"com.atproto.admin.updateSubjectStatus",defs:{main:{type:"procedure",description:"Update the service-specific admin status of a subject (account, record, or blob).",input:{encoding:"application/json",schema:{type:"object",required:["subject"],properties:{subject:{type:"union",refs:["lex:com.atproto.admin.defs#repoRef","lex:com.atproto.repo.strongRef","lex:com.atproto.admin.defs#repoBlobRef"]},takedown:{type:"ref",ref:"lex:com.atproto.admin.defs#statusAttr"}}}},output:{encoding:"application/json",schema:{type:"object",required:["subject"],properties:{subject:{type:"union",refs:["lex:com.atproto.admin.defs#repoRef","lex:com.atproto.repo.strongRef","lex:com.atproto.admin.defs#repoBlobRef"]},takedown:{type:"ref",ref:"lex:com.atproto.admin.defs#statusAttr"}}}}}}},ComAtprotoIdentityGetRecommendedDidCredentials:{lexicon:1,id:"com.atproto.identity.getRecommendedDidCredentials",defs:{main:{type:"query",description:"Describe the credentials that should be included in the DID doc of an account that is migrating to this service.",output:{encoding:"application/json",schema:{type:"object",properties:{rotationKeys:{description:"Recommended rotation keys for PLC dids. Should be undefined (or ignored) for did:webs.",type:"array",items:{type:"string"}},alsoKnownAs:{type:"array",items:{type:"string"}},verificationMethods:{type:"unknown"},services:{type:"unknown"}}}}}}},ComAtprotoIdentityRequestPlcOperationSignature:{lexicon:1,id:"com.atproto.identity.requestPlcOperationSignature",defs:{main:{type:"procedure",description:"Request an email with a code to in order to request a signed PLC operation. Requires Auth."}}},ComAtprotoIdentityResolveHandle:{lexicon:1,id:"com.atproto.identity.resolveHandle",defs:{main:{type:"query",description:"Resolves a handle (domain name) to a DID.",parameters:{type:"params",required:["handle"],properties:{handle:{type:"string",format:"handle",description:"The handle to resolve."}}},output:{encoding:"application/json",schema:{type:"object",required:["did"],properties:{did:{type:"string",format:"did"}}}}}}},ComAtprotoIdentitySignPlcOperation:{lexicon:1,id:"com.atproto.identity.signPlcOperation",defs:{main:{type:"procedure",description:"Signs a PLC operation to update some value(s) in the requesting DID's document.",input:{encoding:"application/json",schema:{type:"object",properties:{token:{description:"A token received through com.atproto.identity.requestPlcOperationSignature",type:"string"},rotationKeys:{type:"array",items:{type:"string"}},alsoKnownAs:{type:"array",items:{type:"string"}},verificationMethods:{type:"unknown"},services:{type:"unknown"}}}},output:{encoding:"application/json",schema:{type:"object",required:["operation"],properties:{operation:{type:"unknown",description:"A signed DID PLC operation."}}}}}}},ComAtprotoIdentitySubmitPlcOperation:{lexicon:1,id:"com.atproto.identity.submitPlcOperation",defs:{main:{type:"procedure",description:"Validates a PLC operation to ensure that it doesn't violate a service's constraints or get the identity into a bad state, then submits it to the PLC registry",input:{encoding:"application/json",schema:{type:"object",required:["operation"],properties:{operation:{type:"unknown"}}}}}}},ComAtprotoIdentityUpdateHandle:{lexicon:1,id:"com.atproto.identity.updateHandle",defs:{main:{type:"procedure",description:"Updates the current account's handle. Verifies handle validity, and updates did:plc document if necessary. Implemented by PDS, and requires auth.",input:{encoding:"application/json",schema:{type:"object",required:["handle"],properties:{handle:{type:"string",format:"handle",description:"The new handle."}}}}}}},ComAtprotoLabelDefs:{lexicon:1,id:"com.atproto.label.defs",defs:{label:{type:"object",description:"Metadata tag on an atproto resource (eg, repo or record).",required:["src","uri","val","cts"],properties:{ver:{type:"integer",description:"The AT Protocol version of the label object."},src:{type:"string",format:"did",description:"DID of the actor who created this label."},uri:{type:"string",format:"uri",description:"AT URI of the record, repository (account), or other resource that this label applies to."},cid:{type:"string",format:"cid",description:"Optionally, CID specifying the specific version of 'uri' resource this label applies to."},val:{type:"string",maxLength:128,description:"The short string name of the value or type of this label."},neg:{type:"boolean",description:"If true, this is a negation label, overwriting a previous label."},cts:{type:"string",format:"datetime",description:"Timestamp when this label was created."},exp:{type:"string",format:"datetime",description:"Timestamp at which this label expires (no longer applies)."},sig:{type:"bytes",description:"Signature of dag-cbor encoded label."}}},selfLabels:{type:"object",description:"Metadata tags on an atproto record, published by the author within the record.",required:["values"],properties:{values:{type:"array",items:{type:"ref",ref:"lex:com.atproto.label.defs#selfLabel"},maxLength:10}}},selfLabel:{type:"object",description:"Metadata tag on an atproto record, published by the author within the record. Note that schemas should use #selfLabels, not #selfLabel.",required:["val"],properties:{val:{type:"string",maxLength:128,description:"The short string name of the value or type of this label."}}},labelValueDefinition:{type:"object",description:"Declares a label value and its expected interpertations and behaviors.",required:["identifier","severity","blurs","locales"],properties:{identifier:{type:"string",description:"The value of the label being defined. Must only include lowercase ascii and the '-' character ([a-z-]+).",maxLength:100,maxGraphemes:100},severity:{type:"string",description:"How should a client visually convey this label? 'inform' means neutral and informational; 'alert' means negative and warning; 'none' means show nothing.",knownValues:["inform","alert","none"]},blurs:{type:"string",description:"What should this label hide in the UI, if applied? 'content' hides all of the target; 'media' hides the images/video/audio; 'none' hides nothing.",knownValues:["content","media","none"]},defaultSetting:{type:"string",description:"The default setting for this label.",knownValues:["ignore","warn","hide"],default:"warn"},adultOnly:{type:"boolean",description:"Does the user need to have adult content enabled in order to configure this label?"},locales:{type:"array",items:{type:"ref",ref:"lex:com.atproto.label.defs#labelValueDefinitionStrings"}}}},labelValueDefinitionStrings:{type:"object",description:"Strings which describe the label in the UI, localized into a specific language.",required:["lang","name","description"],properties:{lang:{type:"string",description:"The code of the language these strings are written in.",format:"language"},name:{type:"string",description:"A short human-readable name for the label.",maxGraphemes:64,maxLength:640},description:{type:"string",description:"A longer description of what the label means and why it might be applied.",maxGraphemes:1e4,maxLength:1e5}}},labelValue:{type:"string",knownValues:["!hide","!no-promote","!warn","!no-unauthenticated","dmca-violation","doxxing","porn","sexual","nudity","nsfl","gore"]}}},ComAtprotoLabelQueryLabels:{lexicon:1,id:"com.atproto.label.queryLabels",defs:{main:{type:"query",description:"Find labels relevant to the provided AT-URI patterns. Public endpoint for moderation services, though may return different or additional results with auth.",parameters:{type:"params",required:["uriPatterns"],properties:{uriPatterns:{type:"array",items:{type:"string"},description:"List of AT URI patterns to match (boolean 'OR'). Each may be a prefix (ending with '*'; will match inclusive of the string leading to '*'), or a full URI."},sources:{type:"array",items:{type:"string",format:"did"},description:"Optional list of label sources (DIDs) to filter on."},limit:{type:"integer",minimum:1,maximum:250,default:50},cursor:{type:"string"}}},output:{encoding:"application/json",schema:{type:"object",required:["labels"],properties:{cursor:{type:"string"},labels:{type:"array",items:{type:"ref",ref:"lex:com.atproto.label.defs#label"}}}}}}}},ComAtprotoLabelSubscribeLabels:{lexicon:1,id:"com.atproto.label.subscribeLabels",defs:{main:{type:"subscription",description:"Subscribe to stream of labels (and negations). Public endpoint implemented by mod services. Uses same sequencing scheme as repo event stream.",parameters:{type:"params",properties:{cursor:{type:"integer",description:"The last known event seq number to backfill from."}}},message:{schema:{type:"union",refs:["lex:com.atproto.label.subscribeLabels#labels","lex:com.atproto.label.subscribeLabels#info"]}},errors:[{name:"FutureCursor"}]},labels:{type:"object",required:["seq","labels"],properties:{seq:{type:"integer"},labels:{type:"array",items:{type:"ref",ref:"lex:com.atproto.label.defs#label"}}}},info:{type:"object",required:["name"],properties:{name:{type:"string",knownValues:["OutdatedCursor"]},message:{type:"string"}}}}},ComAtprotoModerationCreateReport:{lexicon:1,id:"com.atproto.moderation.createReport",defs:{main:{type:"procedure",description:"Submit a moderation report regarding an atproto account or record. Implemented by moderation services (with PDS proxying), and requires auth.",input:{encoding:"application/json",schema:{type:"object",required:["reasonType","subject"],properties:{reasonType:{type:"ref",description:"Indicates the broad category of violation the report is for.",ref:"lex:com.atproto.moderation.defs#reasonType"},reason:{type:"string",description:"Additional context about the content and violation."},subject:{type:"union",refs:["lex:com.atproto.admin.defs#repoRef","lex:com.atproto.repo.strongRef"]}}}},output:{encoding:"application/json",schema:{type:"object",required:["id","reasonType","subject","reportedBy","createdAt"],properties:{id:{type:"integer"},reasonType:{type:"ref",ref:"lex:com.atproto.moderation.defs#reasonType"},reason:{type:"string",maxGraphemes:2e3,maxLength:2e4},subject:{type:"union",refs:["lex:com.atproto.admin.defs#repoRef","lex:com.atproto.repo.strongRef"]},reportedBy:{type:"string",format:"did"},createdAt:{type:"string",format:"datetime"}}}}}}},ComAtprotoModerationDefs:{lexicon:1,id:"com.atproto.moderation.defs",defs:{reasonType:{type:"string",knownValues:["com.atproto.moderation.defs#reasonSpam","com.atproto.moderation.defs#reasonViolation","com.atproto.moderation.defs#reasonMisleading","com.atproto.moderation.defs#reasonSexual","com.atproto.moderation.defs#reasonRude","com.atproto.moderation.defs#reasonOther","com.atproto.moderation.defs#reasonAppeal"]},reasonSpam:{type:"token",description:"Spam: frequent unwanted promotion, replies, mentions"},reasonViolation:{type:"token",description:"Direct violation of server rules, laws, terms of service"},reasonMisleading:{type:"token",description:"Misleading identity, affiliation, or content"},reasonSexual:{type:"token",description:"Unwanted or mislabeled sexual content"},reasonRude:{type:"token",description:"Rude, harassing, explicit, or otherwise unwelcoming behavior"},reasonOther:{type:"token",description:"Other: reports not falling under another report category"},reasonAppeal:{type:"token",description:"Appeal: appeal a previously taken moderation action"}}},ComAtprotoRepoApplyWrites:{lexicon:1,id:"com.atproto.repo.applyWrites",defs:{main:{type:"procedure",description:"Apply a batch transaction of repository creates, updates, and deletes. Requires auth, implemented by PDS.",input:{encoding:"application/json",schema:{type:"object",required:["repo","writes"],properties:{repo:{type:"string",format:"at-identifier",description:"The handle or DID of the repo (aka, current account)."},validate:{type:"boolean",default:!0,description:"Can be set to 'false' to skip Lexicon schema validation of record data, for all operations."},writes:{type:"array",items:{type:"union",refs:["lex:com.atproto.repo.applyWrites#create","lex:com.atproto.repo.applyWrites#update","lex:com.atproto.repo.applyWrites#delete"],closed:!0}},swapCommit:{type:"string",description:"If provided, the entire operation will fail if the current repo commit CID does not match this value. Used to prevent conflicting repo mutations.",format:"cid"}}}},errors:[{name:"InvalidSwap",description:"Indicates that the 'swapCommit' parameter did not match current commit."}]},create:{type:"object",description:"Operation which creates a new record.",required:["collection","value"],properties:{collection:{type:"string",format:"nsid"},rkey:{type:"string",maxLength:15},value:{type:"unknown"}}},update:{type:"object",description:"Operation which updates an existing record.",required:["collection","rkey","value"],properties:{collection:{type:"string",format:"nsid"},rkey:{type:"string"},value:{type:"unknown"}}},delete:{type:"object",description:"Operation which deletes an existing record.",required:["collection","rkey"],properties:{collection:{type:"string",format:"nsid"},rkey:{type:"string"}}}}},ComAtprotoRepoCreateRecord:{lexicon:1,id:"com.atproto.repo.createRecord",defs:{main:{type:"procedure",description:"Create a single new repository record. Requires auth, implemented by PDS.",input:{encoding:"application/json",schema:{type:"object",required:["repo","collection","record"],properties:{repo:{type:"string",format:"at-identifier",description:"The handle or DID of the repo (aka, current account)."},collection:{type:"string",format:"nsid",description:"The NSID of the record collection."},rkey:{type:"string",description:"The Record Key.",maxLength:15},validate:{type:"boolean",default:!0,description:"Can be set to 'false' to skip Lexicon schema validation of record data."},record:{type:"unknown",description:"The record itself. Must contain a $type field."},swapCommit:{type:"string",format:"cid",description:"Compare and swap with the previous commit by CID."}}}},output:{encoding:"application/json",schema:{type:"object",required:["uri","cid"],properties:{uri:{type:"string",format:"at-uri"},cid:{type:"string",format:"cid"}}}},errors:[{name:"InvalidSwap",description:"Indicates that 'swapCommit' didn't match current repo commit."}]}}},ComAtprotoRepoDeleteRecord:{lexicon:1,id:"com.atproto.repo.deleteRecord",defs:{main:{type:"procedure",description:"Delete a repository record, or ensure it doesn't exist. Requires auth, implemented by PDS.",input:{encoding:"application/json",schema:{type:"object",required:["repo","collection","rkey"],properties:{repo:{type:"string",format:"at-identifier",description:"The handle or DID of the repo (aka, current account)."},collection:{type:"string",format:"nsid",description:"The NSID of the record collection."},rkey:{type:"string",description:"The Record Key."},swapRecord:{type:"string",format:"cid",description:"Compare and swap with the previous record by CID."},swapCommit:{type:"string",format:"cid",description:"Compare and swap with the previous commit by CID."}}}},errors:[{name:"InvalidSwap"}]}}},ComAtprotoRepoDescribeRepo:{lexicon:1,id:"com.atproto.repo.describeRepo",defs:{main:{type:"query",description:"Get information about an account and repository, including the list of collections. Does not require auth.",parameters:{type:"params",required:["repo"],properties:{repo:{type:"string",format:"at-identifier",description:"The handle or DID of the repo."}}},output:{encoding:"application/json",schema:{type:"object",required:["handle","did","didDoc","collections","handleIsCorrect"],properties:{handle:{type:"string",format:"handle"},did:{type:"string",format:"did"},didDoc:{type:"unknown",description:"The complete DID document for this account."},collections:{type:"array",description:"List of all the collections (NSIDs) for which this repo contains at least one record.",items:{type:"string",format:"nsid"}},handleIsCorrect:{type:"boolean",description:"Indicates if handle is currently valid (resolves bi-directionally)"}}}}}}},ComAtprotoRepoGetRecord:{lexicon:1,id:"com.atproto.repo.getRecord",defs:{main:{type:"query",description:"Get a single record from a repository. Does not require auth.",parameters:{type:"params",required:["repo","collection","rkey"],properties:{repo:{type:"string",format:"at-identifier",description:"The handle or DID of the repo."},collection:{type:"string",format:"nsid",description:"The NSID of the record collection."},rkey:{type:"string",description:"The Record Key."},cid:{type:"string",format:"cid",description:"The CID of the version of the record. If not specified, then return the most recent version."}}},output:{encoding:"application/json",schema:{type:"object",required:["uri","value"],properties:{uri:{type:"string",format:"at-uri"},cid:{type:"string",format:"cid"},value:{type:"unknown"}}}}}}},ComAtprotoRepoImportRepo:{lexicon:1,id:"com.atproto.repo.importRepo",defs:{main:{type:"procedure",description:"Import a repo in the form of a CAR file. Requires Content-Length HTTP header to be set.",input:{encoding:"application/vnd.ipld.car"}}}},ComAtprotoRepoListMissingBlobs:{lexicon:1,id:"com.atproto.repo.listMissingBlobs",defs:{main:{type:"query",description:"Returns a list of missing blobs for the requesting account. Intended to be used in the account migration flow.",parameters:{type:"params",properties:{limit:{type:"integer",minimum:1,maximum:1e3,default:500},cursor:{type:"string"}}},output:{encoding:"application/json",schema:{type:"object",required:["blobs"],properties:{cursor:{type:"string"},blobs:{type:"array",items:{type:"ref",ref:"lex:com.atproto.repo.listMissingBlobs#recordBlob"}}}}}},recordBlob:{type:"object",required:["cid","recordUri"],properties:{cid:{type:"string",format:"cid"},recordUri:{type:"string",format:"at-uri"}}}}},ComAtprotoRepoListRecords:{lexicon:1,id:"com.atproto.repo.listRecords",defs:{main:{type:"query",description:"List a range of records in a repository, matching a specific collection. Does not require auth.",parameters:{type:"params",required:["repo","collection"],properties:{repo:{type:"string",format:"at-identifier",description:"The handle or DID of the repo."},collection:{type:"string",format:"nsid",description:"The NSID of the record type."},limit:{type:"integer",minimum:1,maximum:100,default:50,description:"The number of records to return."},cursor:{type:"string"},rkeyStart:{type:"string",description:"DEPRECATED: The lowest sort-ordered rkey to start from (exclusive)"},rkeyEnd:{type:"string",description:"DEPRECATED: The highest sort-ordered rkey to stop at (exclusive)"},reverse:{type:"boolean",description:"Flag to reverse the order of the returned records."}}},output:{encoding:"application/json",schema:{type:"object",required:["records"],properties:{cursor:{type:"string"},records:{type:"array",items:{type:"ref",ref:"lex:com.atproto.repo.listRecords#record"}}}}}},record:{type:"object",required:["uri","cid","value"],properties:{uri:{type:"string",format:"at-uri"},cid:{type:"string",format:"cid"},value:{type:"unknown"}}}}},ComAtprotoRepoPutRecord:{lexicon:1,id:"com.atproto.repo.putRecord",defs:{main:{type:"procedure",description:"Write a repository record, creating or updating it as needed. Requires auth, implemented by PDS.",input:{encoding:"application/json",schema:{type:"object",required:["repo","collection","rkey","record"],nullable:["swapRecord"],properties:{repo:{type:"string",format:"at-identifier",description:"The handle or DID of the repo (aka, current account)."},collection:{type:"string",format:"nsid",description:"The NSID of the record collection."},rkey:{type:"string",description:"The Record Key.",maxLength:15},validate:{type:"boolean",default:!0,description:"Can be set to 'false' to skip Lexicon schema validation of record data."},record:{type:"unknown",description:"The record to write."},swapRecord:{type:"string",format:"cid",description:"Compare and swap with the previous record by CID. WARNING: nullable and optional field; may cause problems with golang implementation"},swapCommit:{type:"string",format:"cid",description:"Compare and swap with the previous commit by CID."}}}},output:{encoding:"application/json",schema:{type:"object",required:["uri","cid"],properties:{uri:{type:"string",format:"at-uri"},cid:{type:"string",format:"cid"}}}},errors:[{name:"InvalidSwap"}]}}},ComAtprotoRepoStrongRef:{lexicon:1,id:"com.atproto.repo.strongRef",description:"A URI with a content-hash fingerprint.",defs:{main:{type:"object",required:["uri","cid"],properties:{uri:{type:"string",format:"at-uri"},cid:{type:"string",format:"cid"}}}}},ComAtprotoRepoUploadBlob:{lexicon:1,id:"com.atproto.repo.uploadBlob",defs:{main:{type:"procedure",description:"Upload a new blob, to be referenced from a repository record. The blob will be deleted if it is not referenced within a time window (eg, minutes). Blob restrictions (mimetype, size, etc) are enforced when the reference is created. Requires auth, implemented by PDS.",input:{encoding:"*/*"},output:{encoding:"application/json",schema:{type:"object",required:["blob"],properties:{blob:{type:"blob"}}}}}}},ComAtprotoServerActivateAccount:{lexicon:1,id:"com.atproto.server.activateAccount",defs:{main:{type:"procedure",description:"Activates a currently deactivated account. Used to finalize account migration after the account's repo is imported and identity is setup."}}},ComAtprotoServerCheckAccountStatus:{lexicon:1,id:"com.atproto.server.checkAccountStatus",defs:{main:{type:"query",description:"Returns the status of an account, especially as pertaining to import or recovery. Can be called many times over the course of an account migration. Requires auth and can only be called pertaining to oneself.",output:{encoding:"application/json",schema:{type:"object",required:["activated","validDid","repoCommit","repoRev","repoBlocks","indexedRecords","privateStateValues","expectedBlobs","importedBlobs"],properties:{activated:{type:"boolean"},validDid:{type:"boolean"},repoCommit:{type:"string",format:"cid"},repoRev:{type:"string"},repoBlocks:{type:"integer"},indexedRecords:{type:"integer"},privateStateValues:{type:"integer"},expectedBlobs:{type:"integer"},importedBlobs:{type:"integer"}}}}}}},ComAtprotoServerConfirmEmail:{lexicon:1,id:"com.atproto.server.confirmEmail",defs:{main:{type:"procedure",description:"Confirm an email using a token from com.atproto.server.requestEmailConfirmation.",input:{encoding:"application/json",schema:{type:"object",required:["email","token"],properties:{email:{type:"string"},token:{type:"string"}}}},errors:[{name:"AccountNotFound"},{name:"ExpiredToken"},{name:"InvalidToken"},{name:"InvalidEmail"}]}}},ComAtprotoServerCreateAccount:{lexicon:1,id:"com.atproto.server.createAccount",defs:{main:{type:"procedure",description:"Create an account. Implemented by PDS.",input:{encoding:"application/json",schema:{type:"object",required:["handle"],properties:{email:{type:"string"},handle:{type:"string",format:"handle",description:"Requested handle for the account."},did:{type:"string",format:"did",description:"Pre-existing atproto DID, being imported to a new account."},inviteCode:{type:"string"},verificationCode:{type:"string"},verificationPhone:{type:"string"},password:{type:"string",description:"Initial account password. May need to meet instance-specific password strength requirements."},recoveryKey:{type:"string",description:"DID PLC rotation key (aka, recovery key) to be included in PLC creation operation."},plcOp:{type:"unknown",description:"A signed DID PLC operation to be submitted as part of importing an existing account to this instance. NOTE: this optional field may be updated when full account migration is implemented."}}}},output:{encoding:"application/json",schema:{type:"object",description:"Account login session returned on successful account creation.",required:["accessJwt","refreshJwt","handle","did"],properties:{accessJwt:{type:"string"},refreshJwt:{type:"string"},handle:{type:"string",format:"handle"},did:{type:"string",format:"did",description:"The DID of the new account."},didDoc:{type:"unknown",description:"Complete DID document."}}}},errors:[{name:"InvalidHandle"},{name:"InvalidPassword"},{name:"InvalidInviteCode"},{name:"HandleNotAvailable"},{name:"UnsupportedDomain"},{name:"UnresolvableDid"},{name:"IncompatibleDidDoc"}]}}},ComAtprotoServerCreateAppPassword:{lexicon:1,id:"com.atproto.server.createAppPassword",defs:{main:{type:"procedure",description:"Create an App Password.",input:{encoding:"application/json",schema:{type:"object",required:["name"],properties:{name:{type:"string",description:"A short name for the App Password, to help distinguish them."}}}},output:{encoding:"application/json",schema:{type:"ref",ref:"lex:com.atproto.server.createAppPassword#appPassword"}},errors:[{name:"AccountTakedown"}]},appPassword:{type:"object",required:["name","password","createdAt"],properties:{name:{type:"string"},password:{type:"string"},createdAt:{type:"string",format:"datetime"}}}}},ComAtprotoServerCreateInviteCode:{lexicon:1,id:"com.atproto.server.createInviteCode",defs:{main:{type:"procedure",description:"Create an invite code.",input:{encoding:"application/json",schema:{type:"object",required:["useCount"],properties:{useCount:{type:"integer"},forAccount:{type:"string",format:"did"}}}},output:{encoding:"application/json",schema:{type:"object",required:["code"],properties:{code:{type:"string"}}}}}}},ComAtprotoServerCreateInviteCodes:{lexicon:1,id:"com.atproto.server.createInviteCodes",defs:{main:{type:"procedure",description:"Create invite codes.",input:{encoding:"application/json",schema:{type:"object",required:["codeCount","useCount"],properties:{codeCount:{type:"integer",default:1},useCount:{type:"integer"},forAccounts:{type:"array",items:{type:"string",format:"did"}}}}},output:{encoding:"application/json",schema:{type:"object",required:["codes"],properties:{codes:{type:"array",items:{type:"ref",ref:"lex:com.atproto.server.createInviteCodes#accountCodes"}}}}}},accountCodes:{type:"object",required:["account","codes"],properties:{account:{type:"string"},codes:{type:"array",items:{type:"string"}}}}}},ComAtprotoServerCreateSession:{lexicon:1,id:"com.atproto.server.createSession",defs:{main:{type:"procedure",description:"Create an authentication session.",input:{encoding:"application/json",schema:{type:"object",required:["identifier","password"],properties:{identifier:{type:"string",description:"Handle or other identifier supported by the server for the authenticating user."},password:{type:"string"}}}},output:{encoding:"application/json",schema:{type:"object",required:["accessJwt","refreshJwt","handle","did"],properties:{accessJwt:{type:"string"},refreshJwt:{type:"string"},handle:{type:"string",format:"handle"},did:{type:"string",format:"did"},didDoc:{type:"unknown"},email:{type:"string"},emailConfirmed:{type:"boolean"}}}},errors:[{name:"AccountTakedown"}]}}},ComAtprotoServerDeactivateAccount:{lexicon:1,id:"com.atproto.server.deactivateAccount",defs:{main:{type:"procedure",description:"Deactivates a currently active account. Stops serving of repo, and future writes to repo until reactivated. Used to finalize account migration with the old host after the account has been activated on the new host.",input:{encoding:"application/json",schema:{type:"object",properties:{deleteAfter:{type:"string",format:"datetime",description:"A recommendation to server as to how long they should hold onto the deactivated account before deleting."}}}}}}},ComAtprotoServerDefs:{lexicon:1,id:"com.atproto.server.defs",defs:{inviteCode:{type:"object",required:["code","available","disabled","forAccount","createdBy","createdAt","uses"],properties:{code:{type:"string"},available:{type:"integer"},disabled:{type:"boolean"},forAccount:{type:"string"},createdBy:{type:"string"},createdAt:{type:"string",format:"datetime"},uses:{type:"array",items:{type:"ref",ref:"lex:com.atproto.server.defs#inviteCodeUse"}}}},inviteCodeUse:{type:"object",required:["usedBy","usedAt"],properties:{usedBy:{type:"string",format:"did"},usedAt:{type:"string",format:"datetime"}}}}},ComAtprotoServerDeleteAccount:{lexicon:1,id:"com.atproto.server.deleteAccount",defs:{main:{type:"procedure",description:"Delete an actor's account with a token and password. Can only be called after requesting a deletion token. Requires auth.",input:{encoding:"application/json",schema:{type:"object",required:["did","password","token"],properties:{did:{type:"string",format:"did"},password:{type:"string"},token:{type:"string"}}}},errors:[{name:"ExpiredToken"},{name:"InvalidToken"}]}}},ComAtprotoServerDeleteSession:{lexicon:1,id:"com.atproto.server.deleteSession",defs:{main:{type:"procedure",description:"Delete the current session. Requires auth."}}},ComAtprotoServerDescribeServer:{lexicon:1,id:"com.atproto.server.describeServer",defs:{main:{type:"query",description:"Describes the server's account creation requirements and capabilities. Implemented by PDS.",output:{encoding:"application/json",schema:{type:"object",required:["did","availableUserDomains"],properties:{inviteCodeRequired:{type:"boolean",description:"If true, an invite code must be supplied to create an account on this instance."},phoneVerificationRequired:{type:"boolean",description:"If true, a phone verification token must be supplied to create an account on this instance."},availableUserDomains:{type:"array",description:"List of domain suffixes that can be used in account handles.",items:{type:"string"}},links:{type:"ref",description:"URLs of service policy documents.",ref:"lex:com.atproto.server.describeServer#links"},contact:{type:"ref",description:"Contact information",ref:"lex:com.atproto.server.describeServer#contact"},did:{type:"string",format:"did"}}}}},links:{type:"object",properties:{privacyPolicy:{type:"string"},termsOfService:{type:"string"}}},contact:{type:"object",properties:{email:{type:"string"}}}}},ComAtprotoServerGetAccountInviteCodes:{lexicon:1,id:"com.atproto.server.getAccountInviteCodes",defs:{main:{type:"query",description:"Get all invite codes for the current account. Requires auth.",parameters:{type:"params",properties:{includeUsed:{type:"boolean",default:!0},createAvailable:{type:"boolean",default:!0,description:"Controls whether any new 'earned' but not 'created' invites should be created."}}},output:{encoding:"application/json",schema:{type:"object",required:["codes"],properties:{codes:{type:"array",items:{type:"ref",ref:"lex:com.atproto.server.defs#inviteCode"}}}}},errors:[{name:"DuplicateCreate"}]}}},ComAtprotoServerGetServiceAuth:{lexicon:1,id:"com.atproto.server.getServiceAuth",defs:{main:{type:"query",description:"Get a signed token on behalf of the requesting DID for the requested service.",parameters:{type:"params",required:["aud"],properties:{aud:{type:"string",format:"did",description:"The DID of the service that the token will be used to authenticate with"}}},output:{encoding:"application/json",schema:{type:"object",required:["token"],properties:{token:{type:"string"}}}}}}},ComAtprotoServerGetSession:{lexicon:1,id:"com.atproto.server.getSession",defs:{main:{type:"query",description:"Get information about the current auth session. Requires auth.",output:{encoding:"application/json",schema:{type:"object",required:["handle","did"],properties:{handle:{type:"string",format:"handle"},did:{type:"string",format:"did"},email:{type:"string"},emailConfirmed:{type:"boolean"},didDoc:{type:"unknown"}}}}}}},ComAtprotoServerListAppPasswords:{lexicon:1,id:"com.atproto.server.listAppPasswords",defs:{main:{type:"query",description:"List all App Passwords.",output:{encoding:"application/json",schema:{type:"object",required:["passwords"],properties:{passwords:{type:"array",items:{type:"ref",ref:"lex:com.atproto.server.listAppPasswords#appPassword"}}}}},errors:[{name:"AccountTakedown"}]},appPassword:{type:"object",required:["name","createdAt"],properties:{name:{type:"string"},createdAt:{type:"string",format:"datetime"}}}}},ComAtprotoServerRefreshSession:{lexicon:1,id:"com.atproto.server.refreshSession",defs:{main:{type:"procedure",description:"Refresh an authentication session. Requires auth using the 'refreshJwt' (not the 'accessJwt').",output:{encoding:"application/json",schema:{type:"object",required:["accessJwt","refreshJwt","handle","did"],properties:{accessJwt:{type:"string"},refreshJwt:{type:"string"},handle:{type:"string",format:"handle"},did:{type:"string",format:"did"},didDoc:{type:"unknown"}}}},errors:[{name:"AccountTakedown"}]}}},ComAtprotoServerRequestAccountDelete:{lexicon:1,id:"com.atproto.server.requestAccountDelete",defs:{main:{type:"procedure",description:"Initiate a user account deletion via email."}}},ComAtprotoServerRequestEmailConfirmation:{lexicon:1,id:"com.atproto.server.requestEmailConfirmation",defs:{main:{type:"procedure",description:"Request an email with a code to confirm ownership of email."}}},ComAtprotoServerRequestEmailUpdate:{lexicon:1,id:"com.atproto.server.requestEmailUpdate",defs:{main:{type:"procedure",description:"Request a token in order to update email.",output:{encoding:"application/json",schema:{type:"object",required:["tokenRequired"],properties:{tokenRequired:{type:"boolean"}}}}}}},ComAtprotoServerRequestPasswordReset:{lexicon:1,id:"com.atproto.server.requestPasswordReset",defs:{main:{type:"procedure",description:"Initiate a user account password reset via email.",input:{encoding:"application/json",schema:{type:"object",required:["email"],properties:{email:{type:"string"}}}}}}},ComAtprotoServerReserveSigningKey:{lexicon:1,id:"com.atproto.server.reserveSigningKey",defs:{main:{type:"procedure",description:"Reserve a repo signing key, for use with account creation. Necessary so that a DID PLC update operation can be constructed during an account migraiton. Public and does not require auth; implemented by PDS. NOTE: this endpoint may change when full account migration is implemented.",input:{encoding:"application/json",schema:{type:"object",properties:{did:{type:"string",format:"did",description:"The DID to reserve a key for."}}}},output:{encoding:"application/json",schema:{type:"object",required:["signingKey"],properties:{signingKey:{type:"string",description:"The public key for the reserved signing key, in did:key serialization."}}}}}}},ComAtprotoServerResetPassword:{lexicon:1,id:"com.atproto.server.resetPassword",defs:{main:{type:"procedure",description:"Reset a user account password using a token.",input:{encoding:"application/json",schema:{type:"object",required:["token","password"],properties:{token:{type:"string"},password:{type:"string"}}}},errors:[{name:"ExpiredToken"},{name:"InvalidToken"}]}}},ComAtprotoServerRevokeAppPassword:{lexicon:1,id:"com.atproto.server.revokeAppPassword",defs:{main:{type:"procedure",description:"Revoke an App Password by name.",input:{encoding:"application/json",schema:{type:"object",required:["name"],properties:{name:{type:"string"}}}}}}},ComAtprotoServerUpdateEmail:{lexicon:1,id:"com.atproto.server.updateEmail",defs:{main:{type:"procedure",description:"Update an account's email.",input:{encoding:"application/json",schema:{type:"object",required:["email"],properties:{email:{type:"string"},token:{type:"string",description:"Requires a token from com.atproto.sever.requestEmailUpdate if the account's email has been confirmed."}}}},errors:[{name:"ExpiredToken"},{name:"InvalidToken"},{name:"TokenRequired"}]}}},ComAtprotoSyncGetBlob:{lexicon:1,id:"com.atproto.sync.getBlob",defs:{main:{type:"query",description:"Get a blob associated with a given account. Returns the full blob as originally uploaded. Does not require auth; implemented by PDS.",parameters:{type:"params",required:["did","cid"],properties:{did:{type:"string",format:"did",description:"The DID of the account."},cid:{type:"string",format:"cid",description:"The CID of the blob to fetch"}}},output:{encoding:"*/*"}}}},ComAtprotoSyncGetBlocks:{lexicon:1,id:"com.atproto.sync.getBlocks",defs:{main:{type:"query",description:"Get data blocks from a given repo, by CID. For example, intermediate MST nodes, or records. Does not require auth; implemented by PDS.",parameters:{type:"params",required:["did","cids"],properties:{did:{type:"string",format:"did",description:"The DID of the repo."},cids:{type:"array",items:{type:"string",format:"cid"}}}},output:{encoding:"application/vnd.ipld.car"}}}},ComAtprotoSyncGetCheckout:{lexicon:1,id:"com.atproto.sync.getCheckout",defs:{main:{type:"query",description:"DEPRECATED - please use com.atproto.sync.getRepo instead",parameters:{type:"params",required:["did"],properties:{did:{type:"string",format:"did",description:"The DID of the repo."}}},output:{encoding:"application/vnd.ipld.car"}}}},ComAtprotoSyncGetHead:{lexicon:1,id:"com.atproto.sync.getHead",defs:{main:{type:"query",description:"DEPRECATED - please use com.atproto.sync.getLatestCommit instead",parameters:{type:"params",required:["did"],properties:{did:{type:"string",format:"did",description:"The DID of the repo."}}},output:{encoding:"application/json",schema:{type:"object",required:["root"],properties:{root:{type:"string",format:"cid"}}}},errors:[{name:"HeadNotFound"}]}}},ComAtprotoSyncGetLatestCommit:{lexicon:1,id:"com.atproto.sync.getLatestCommit",defs:{main:{type:"query",description:"Get the current commit CID & revision of the specified repo. Does not require auth.",parameters:{type:"params",required:["did"],properties:{did:{type:"string",format:"did",description:"The DID of the repo."}}},output:{encoding:"application/json",schema:{type:"object",required:["cid","rev"],properties:{cid:{type:"string",format:"cid"},rev:{type:"string"}}}},errors:[{name:"RepoNotFound"}]}}},ComAtprotoSyncGetRecord:{lexicon:1,id:"com.atproto.sync.getRecord",defs:{main:{type:"query",description:"Get data blocks needed to prove the existence or non-existence of record in the current version of repo. Does not require auth.",parameters:{type:"params",required:["did","collection","rkey"],properties:{did:{type:"string",format:"did",description:"The DID of the repo."},collection:{type:"string",format:"nsid"},rkey:{type:"string",description:"Record Key"},commit:{type:"string",format:"cid",description:"An optional past commit CID."}}},output:{encoding:"application/vnd.ipld.car"}}}},ComAtprotoSyncGetRepo:{lexicon:1,id:"com.atproto.sync.getRepo",defs:{main:{type:"query",description:"Download a repository export as CAR file. Optionally only a 'diff' since a previous revision. Does not require auth; implemented by PDS.",parameters:{type:"params",required:["did"],properties:{did:{type:"string",format:"did",description:"The DID of the repo."},since:{type:"string",description:"The revision ('rev') of the repo to create a diff from."}}},output:{encoding:"application/vnd.ipld.car"}}}},ComAtprotoSyncListBlobs:{lexicon:1,id:"com.atproto.sync.listBlobs",defs:{main:{type:"query",description:"List blob CIDso for an account, since some repo revision. Does not require auth; implemented by PDS.",parameters:{type:"params",required:["did"],properties:{did:{type:"string",format:"did",description:"The DID of the repo."},since:{type:"string",description:"Optional revision of the repo to list blobs since."},limit:{type:"integer",minimum:1,maximum:1e3,default:500},cursor:{type:"string"}}},output:{encoding:"application/json",schema:{type:"object",required:["cids"],properties:{cursor:{type:"string"},cids:{type:"array",items:{type:"string",format:"cid"}}}}}}}},ComAtprotoSyncListRepos:{lexicon:1,id:"com.atproto.sync.listRepos",defs:{main:{type:"query",description:"Enumerates all the DID, rev, and commit CID for all repos hosted by this service. Does not require auth; implemented by PDS and Relay.",parameters:{type:"params",properties:{limit:{type:"integer",minimum:1,maximum:1e3,default:500},cursor:{type:"string"}}},output:{encoding:"application/json",schema:{type:"object",required:["repos"],properties:{cursor:{type:"string"},repos:{type:"array",items:{type:"ref",ref:"lex:com.atproto.sync.listRepos#repo"}}}}}},repo:{type:"object",required:["did","head","rev"],properties:{did:{type:"string",format:"did"},head:{type:"string",format:"cid",description:"Current repo commit CID"},rev:{type:"string"}}}}},ComAtprotoSyncNotifyOfUpdate:{lexicon:1,id:"com.atproto.sync.notifyOfUpdate",defs:{main:{type:"procedure",description:"Notify a crawling service of a recent update, and that crawling should resume. Intended use is after a gap between repo stream events caused the crawling service to disconnect. Does not require auth; implemented by Relay.",input:{encoding:"application/json",schema:{type:"object",required:["hostname"],properties:{hostname:{type:"string",description:"Hostname of the current service (usually a PDS) that is notifying of update."}}}}}}},ComAtprotoSyncRequestCrawl:{lexicon:1,id:"com.atproto.sync.requestCrawl",defs:{main:{type:"procedure",description:"Request a service to persistently crawl hosted repos. Expected use is new PDS instances declaring their existence to Relays. Does not require auth.",input:{encoding:"application/json",schema:{type:"object",required:["hostname"],properties:{hostname:{type:"string",description:"Hostname of the current service (eg, PDS) that is requesting to be crawled."}}}}}}},ComAtprotoSyncSubscribeRepos:{lexicon:1,id:"com.atproto.sync.subscribeRepos",defs:{main:{type:"subscription",description:"Repository event stream, aka Firehose endpoint. Outputs repo commits with diff data, and identity update events, for all repositories on the current server. See the atproto specifications for details around stream sequencing, repo versioning, CAR diff format, and more. Public and does not require auth; implemented by PDS and Relay.",parameters:{type:"params",properties:{cursor:{type:"integer",description:"The last known event seq number to backfill from."}}},message:{schema:{type:"union",refs:["lex:com.atproto.sync.subscribeRepos#commit","lex:com.atproto.sync.subscribeRepos#identity","lex:com.atproto.sync.subscribeRepos#handle","lex:com.atproto.sync.subscribeRepos#migrate","lex:com.atproto.sync.subscribeRepos#tombstone","lex:com.atproto.sync.subscribeRepos#info"]}},errors:[{name:"FutureCursor"},{name:"ConsumerTooSlow",description:"If the consumer of the stream can not keep up with events, and a backlog gets too large, the server will drop the connection."}]},commit:{type:"object",description:"Represents an update of repository state. Note that empty commits are allowed, which include no repo data changes, but an update to rev and signature.",required:["seq","rebase","tooBig","repo","commit","rev","since","blocks","ops","blobs","time"],nullable:["prev","since"],properties:{seq:{type:"integer",description:"The stream sequence number of this message."},rebase:{type:"boolean",description:"DEPRECATED -- unused"},tooBig:{type:"boolean",description:"Indicates that this commit contained too many ops, or data size was too large. Consumers will need to make a separate request to get missing data."},repo:{type:"string",format:"did",description:"The repo this event comes from."},commit:{type:"cid-link",description:"Repo commit object CID."},prev:{type:"cid-link",description:"DEPRECATED -- unused. WARNING -- nullable and optional; stick with optional to ensure golang interoperability."},rev:{type:"string",description:"The rev of the emitted commit. Note that this information is also in the commit object included in blocks, unless this is a tooBig event."},since:{type:"string",description:"The rev of the last emitted commit from this repo (if any)."},blocks:{type:"bytes",description:"CAR file containing relevant blocks, as a diff since the previous repo state.",maxLength:1e6},ops:{type:"array",items:{type:"ref",ref:"lex:com.atproto.sync.subscribeRepos#repoOp",description:"List of repo mutation operations in this commit (eg, records created, updated, or deleted)."},maxLength:200},blobs:{type:"array",items:{type:"cid-link",description:"List of new blobs (by CID) referenced by records in this commit."}},time:{type:"string",format:"datetime",description:"Timestamp of when this message was originally broadcast."}}},identity:{type:"object",description:"Represents a change to an account's identity. Could be an updated handle, signing key, or pds hosting endpoint. Serves as a prod to all downstream services to refresh their identity cache.",required:["seq","did","time"],properties:{seq:{type:"integer"},did:{type:"string",format:"did"},time:{type:"string",format:"datetime"}}},handle:{type:"object",description:"Represents an update of the account's handle, or transition to/from invalid state. NOTE: Will be deprecated in favor of #identity.",required:["seq","did","handle","time"],properties:{seq:{type:"integer"},did:{type:"string",format:"did"},handle:{type:"string",format:"handle"},time:{type:"string",format:"datetime"}}},migrate:{type:"object",description:"Represents an account moving from one PDS instance to another. NOTE: not implemented; account migration uses #identity instead",required:["seq","did","migrateTo","time"],nullable:["migrateTo"],properties:{seq:{type:"integer"},did:{type:"string",format:"did"},migrateTo:{type:"string"},time:{type:"string",format:"datetime"}}},tombstone:{type:"object",description:"Indicates that an account has been deleted. NOTE: may be deprecated in favor of #identity or a future #account event",required:["seq","did","time"],properties:{seq:{type:"integer"},did:{type:"string",format:"did"},time:{type:"string",format:"datetime"}}},info:{type:"object",required:["name"],properties:{name:{type:"string",knownValues:["OutdatedCursor"]},message:{type:"string"}}},repoOp:{type:"object",description:"A repo operation, ie a mutation of a single record.",required:["action","path","cid"],nullable:["cid"],properties:{action:{type:"string",knownValues:["create","update","delete"]},path:{type:"string"},cid:{type:"cid-link",description:"For creates and updates, the new record CID. For deletions, null."}}}}},ComAtprotoTempCheckSignupQueue:{lexicon:1,id:"com.atproto.temp.checkSignupQueue",defs:{main:{type:"query",description:"Check accounts location in signup queue.",output:{encoding:"application/json",schema:{type:"object",required:["activated"],properties:{activated:{type:"boolean"},placeInQueue:{type:"integer"},estimatedTimeMs:{type:"integer"}}}}}}},ComAtprotoTempFetchLabels:{lexicon:1,id:"com.atproto.temp.fetchLabels",defs:{main:{type:"query",description:"DEPRECATED: use queryLabels or subscribeLabels instead -- Fetch all labels from a labeler created after a certain date.",parameters:{type:"params",properties:{since:{type:"integer"},limit:{type:"integer",minimum:1,maximum:250,default:50}}},output:{encoding:"application/json",schema:{type:"object",required:["labels"],properties:{labels:{type:"array",items:{type:"ref",ref:"lex:com.atproto.label.defs#label"}}}}}}}},ComAtprotoTempRequestPhoneVerification:{lexicon:1,id:"com.atproto.temp.requestPhoneVerification",defs:{main:{type:"procedure",description:"Request a verification code to be sent to the supplied phone number",input:{encoding:"application/json",schema:{type:"object",required:["phoneNumber"],properties:{phoneNumber:{type:"string"}}}}}}},AppBskyActorDefs:{lexicon:1,id:"app.bsky.actor.defs",defs:{profileViewBasic:{type:"object",required:["did","handle"],properties:{did:{type:"string",format:"did"},handle:{type:"string",format:"handle"},displayName:{type:"string",maxGraphemes:64,maxLength:640},avatar:{type:"string"},viewer:{type:"ref",ref:"lex:app.bsky.actor.defs#viewerState"},labels:{type:"array",items:{type:"ref",ref:"lex:com.atproto.label.defs#label"}}}},profileView:{type:"object",required:["did","handle"],properties:{did:{type:"string",format:"did"},handle:{type:"string",format:"handle"},displayName:{type:"string",maxGraphemes:64,maxLength:640},description:{type:"string",maxGraphemes:256,maxLength:2560},avatar:{type:"string"},indexedAt:{type:"string",format:"datetime"},viewer:{type:"ref",ref:"lex:app.bsky.actor.defs#viewerState"},labels:{type:"array",items:{type:"ref",ref:"lex:com.atproto.label.defs#label"}}}},profileViewDetailed:{type:"object",required:["did","handle"],properties:{did:{type:"string",format:"did"},handle:{type:"string",format:"handle"},displayName:{type:"string",maxGraphemes:64,maxLength:640},description:{type:"string",maxGraphemes:256,maxLength:2560},avatar:{type:"string"},banner:{type:"string"},followersCount:{type:"integer"},followsCount:{type:"integer"},postsCount:{type:"integer"},associated:{type:"ref",ref:"lex:app.bsky.actor.defs#profileAssociated"},indexedAt:{type:"string",format:"datetime"},viewer:{type:"ref",ref:"lex:app.bsky.actor.defs#viewerState"},labels:{type:"array",items:{type:"ref",ref:"lex:com.atproto.label.defs#label"}}}},profileAssociated:{type:"object",properties:{lists:{type:"integer"},feedgens:{type:"integer"},labeler:{type:"boolean"}}},viewerState:{type:"object",description:"Metadata about the requesting account's relationship with the subject account. Only has meaningful content for authed requests.",properties:{muted:{type:"boolean"},mutedByList:{type:"ref",ref:"lex:app.bsky.graph.defs#listViewBasic"},blockedBy:{type:"boolean"},blocking:{type:"string",format:"at-uri"},blockingByList:{type:"ref",ref:"lex:app.bsky.graph.defs#listViewBasic"},following:{type:"string",format:"at-uri"},followedBy:{type:"string",format:"at-uri"}}},preferences:{type:"array",items:{type:"union",refs:["lex:app.bsky.actor.defs#adultContentPref","lex:app.bsky.actor.defs#contentLabelPref","lex:app.bsky.actor.defs#savedFeedsPref","lex:app.bsky.actor.defs#personalDetailsPref","lex:app.bsky.actor.defs#feedViewPref","lex:app.bsky.actor.defs#threadViewPref","lex:app.bsky.actor.defs#interestsPref","lex:app.bsky.actor.defs#mutedWordsPref","lex:app.bsky.actor.defs#hiddenPostsPref"]}},adultContentPref:{type:"object",required:["enabled"],properties:{enabled:{type:"boolean",default:!1}}},contentLabelPref:{type:"object",required:["label","visibility"],properties:{labelerDid:{type:"string",description:"Which labeler does this preference apply to? If undefined, applies globally.",format:"did"},label:{type:"string"},visibility:{type:"string",knownValues:["ignore","show","warn","hide"]}}},savedFeedsPref:{type:"object",required:["pinned","saved"],properties:{pinned:{type:"array",items:{type:"string",format:"at-uri"}},saved:{type:"array",items:{type:"string",format:"at-uri"}},timelineIndex:{type:"integer"}}},personalDetailsPref:{type:"object",properties:{birthDate:{type:"string",format:"datetime",description:"The birth date of account owner."}}},feedViewPref:{type:"object",required:["feed"],properties:{feed:{type:"string",description:"The URI of the feed, or an identifier which describes the feed."},hideReplies:{type:"boolean",description:"Hide replies in the feed."},hideRepliesByUnfollowed:{type:"boolean",description:"Hide replies in the feed if they are not by followed users.",default:!0},hideRepliesByLikeCount:{type:"integer",description:"Hide replies in the feed if they do not have this number of likes."},hideReposts:{type:"boolean",description:"Hide reposts in the feed."},hideQuotePosts:{type:"boolean",description:"Hide quote posts in the feed."}}},threadViewPref:{type:"object",properties:{sort:{type:"string",description:"Sorting mode for threads.",knownValues:["oldest","newest","most-likes","random"]},prioritizeFollowedUsers:{type:"boolean",description:"Show followed users at the top of all replies."}}},interestsPref:{type:"object",required:["tags"],properties:{tags:{type:"array",maxLength:100,items:{type:"string",maxLength:640,maxGraphemes:64},description:"A list of tags which describe the account owner's interests gathered during onboarding."}}},mutedWordTarget:{type:"string",knownValues:["content","tag"],maxLength:640,maxGraphemes:64},mutedWord:{type:"object",description:"A word that the account owner has muted.",required:["value","targets"],properties:{value:{type:"string",description:"The muted word itself.",maxLength:1e4,maxGraphemes:1e3},targets:{type:"array",description:"The intended targets of the muted word.",items:{type:"ref",ref:"lex:app.bsky.actor.defs#mutedWordTarget"}}}},mutedWordsPref:{type:"object",required:["items"],properties:{items:{type:"array",items:{type:"ref",ref:"lex:app.bsky.actor.defs#mutedWord"},description:"A list of words the account owner has muted."}}},hiddenPostsPref:{type:"object",required:["items"],properties:{items:{type:"array",items:{type:"string",format:"at-uri"},description:"A list of URIs of posts the account owner has hidden."}}},labelersPref:{type:"object",required:["labelers"],properties:{labelers:{type:"array",items:{type:"ref",ref:"lex:app.bsky.actor.defs#labelerPrefItem"}}}},labelerPrefItem:{type:"object",required:["did"],properties:{did:{type:"string",format:"did"}}}}},AppBskyActorGetPreferences:{lexicon:1,id:"app.bsky.actor.getPreferences",defs:{main:{type:"query",description:"Get private preferences attached to the current account. Expected use is synchronization between multiple devices, and import/export during account migration. Requires auth.",parameters:{type:"params",properties:{}},output:{encoding:"application/json",schema:{type:"object",required:["preferences"],properties:{preferences:{type:"ref",ref:"lex:app.bsky.actor.defs#preferences"}}}}}}},AppBskyActorGetProfile:{lexicon:1,id:"app.bsky.actor.getProfile",defs:{main:{type:"query",description:"Get detailed profile view of an actor. Does not require auth, but contains relevant metadata with auth.",parameters:{type:"params",required:["actor"],properties:{actor:{type:"string",format:"at-identifier",description:"Handle or DID of account to fetch profile of."}}},output:{encoding:"application/json",schema:{type:"ref",ref:"lex:app.bsky.actor.defs#profileViewDetailed"}}}}},AppBskyActorGetProfiles:{lexicon:1,id:"app.bsky.actor.getProfiles",defs:{main:{type:"query",description:"Get detailed profile views of multiple actors.",parameters:{type:"params",required:["actors"],properties:{actors:{type:"array",items:{type:"string",format:"at-identifier"},maxLength:25}}},output:{encoding:"application/json",schema:{type:"object",required:["profiles"],properties:{profiles:{type:"array",items:{type:"ref",ref:"lex:app.bsky.actor.defs#profileViewDetailed"}}}}}}}},AppBskyActorGetSuggestions:{lexicon:1,id:"app.bsky.actor.getSuggestions",defs:{main:{type:"query",description:"Get a list of suggested actors. Expected use is discovery of accounts to follow during new account onboarding.",parameters:{type:"params",properties:{limit:{type:"integer",minimum:1,maximum:100,default:50},cursor:{type:"string"}}},output:{encoding:"application/json",schema:{type:"object",required:["actors"],properties:{cursor:{type:"string"},actors:{type:"array",items:{type:"ref",ref:"lex:app.bsky.actor.defs#profileView"}}}}}}}},AppBskyActorProfile:{lexicon:1,id:"app.bsky.actor.profile",defs:{main:{type:"record",description:"A declaration of a Bluesky account profile.",key:"literal:self",record:{type:"object",properties:{displayName:{type:"string",maxGraphemes:64,maxLength:640},description:{type:"string",description:"Free-form profile description text.",maxGraphemes:256,maxLength:2560},avatar:{type:"blob",description:"Small image to be displayed next to posts from account. AKA, 'profile picture'",accept:["image/png","image/jpeg"],maxSize:1e6},banner:{type:"blob",description:"Larger horizontal image to display behind profile view.",accept:["image/png","image/jpeg"],maxSize:1e6},labels:{type:"union",description:"Self-label values, specific to the Bluesky application, on the overall account.",refs:["lex:com.atproto.label.defs#selfLabels"]}}}}}},AppBskyActorPutPreferences:{lexicon:1,id:"app.bsky.actor.putPreferences",defs:{main:{type:"procedure",description:"Set the private preferences attached to the account.",input:{encoding:"application/json",schema:{type:"object",required:["preferences"],properties:{preferences:{type:"ref",ref:"lex:app.bsky.actor.defs#preferences"}}}}}}},AppBskyActorSearchActors:{lexicon:1,id:"app.bsky.actor.searchActors",defs:{main:{type:"query",description:"Find actors (profiles) matching search criteria. Does not require auth.",parameters:{type:"params",properties:{term:{type:"string",description:"DEPRECATED: use 'q' instead."},q:{type:"string",description:"Search query string. Syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended."},limit:{type:"integer",minimum:1,maximum:100,default:25},cursor:{type:"string"}}},output:{encoding:"application/json",schema:{type:"object",required:["actors"],properties:{cursor:{type:"string"},actors:{type:"array",items:{type:"ref",ref:"lex:app.bsky.actor.defs#profileView"}}}}}}}},AppBskyActorSearchActorsTypeahead:{lexicon:1,id:"app.bsky.actor.searchActorsTypeahead",defs:{main:{type:"query",description:"Find actor suggestions for a prefix search term. Expected use is for auto-completion during text field entry. Does not require auth.",parameters:{type:"params",properties:{term:{type:"string",description:"DEPRECATED: use 'q' instead."},q:{type:"string",description:"Search query prefix; not a full query string."},limit:{type:"integer",minimum:1,maximum:100,default:10}}},output:{encoding:"application/json",schema:{type:"object",required:["actors"],properties:{actors:{type:"array",items:{type:"ref",ref:"lex:app.bsky.actor.defs#profileViewBasic"}}}}}}}},AppBskyEmbedExternal:{lexicon:1,id:"app.bsky.embed.external",defs:{main:{type:"object",description:"A representation of some externally linked content (eg, a URL and 'card'), embedded in a Bluesky record (eg, a post).",required:["external"],properties:{external:{type:"ref",ref:"lex:app.bsky.embed.external#external"}}},external:{type:"object",required:["uri","title","description"],properties:{uri:{type:"string",format:"uri"},title:{type:"string"},description:{type:"string"},thumb:{type:"blob",accept:["image/*"],maxSize:1e6}}},view:{type:"object",required:["external"],properties:{external:{type:"ref",ref:"lex:app.bsky.embed.external#viewExternal"}}},viewExternal:{type:"object",required:["uri","title","description"],properties:{uri:{type:"string",format:"uri"},title:{type:"string"},description:{type:"string"},thumb:{type:"string"}}}}},AppBskyEmbedImages:{lexicon:1,id:"app.bsky.embed.images",description:"A set of images embedded in a Bluesky record (eg, a post).",defs:{main:{type:"object",required:["images"],properties:{images:{type:"array",items:{type:"ref",ref:"lex:app.bsky.embed.images#image"},maxLength:4}}},image:{type:"object",required:["image","alt"],properties:{image:{type:"blob",accept:["image/*"],maxSize:1e6},alt:{type:"string",description:"Alt text description of the image, for accessibility."},aspectRatio:{type:"ref",ref:"lex:app.bsky.embed.images#aspectRatio"}}},aspectRatio:{type:"object",description:"width:height represents an aspect ratio. It may be approximate, and may not correspond to absolute dimensions in any given unit.",required:["width","height"],properties:{width:{type:"integer",minimum:1},height:{type:"integer",minimum:1}}},view:{type:"object",required:["images"],properties:{images:{type:"array",items:{type:"ref",ref:"lex:app.bsky.embed.images#viewImage"},maxLength:4}}},viewImage:{type:"object",required:["thumb","fullsize","alt"],properties:{thumb:{type:"string",description:"Fully-qualified URL where a thumbnail of the image can be fetched. For example, CDN location provided by the App View."},fullsize:{type:"string",description:"Fully-qualified URL where a large version of the image can be fetched. May or may not be the exact original blob. For example, CDN location provided by the App View."},alt:{type:"string",description:"Alt text description of the image, for accessibility."},aspectRatio:{type:"ref",ref:"lex:app.bsky.embed.images#aspectRatio"}}}}},AppBskyEmbedRecord:{lexicon:1,id:"app.bsky.embed.record",description:"A representation of a record embedded in a Bluesky record (eg, a post). For example, a quote-post, or sharing a feed generator record.",defs:{main:{type:"object",required:["record"],properties:{record:{type:"ref",ref:"lex:com.atproto.repo.strongRef"}}},view:{type:"object",required:["record"],properties:{record:{type:"union",refs:["lex:app.bsky.embed.record#viewRecord","lex:app.bsky.embed.record#viewNotFound","lex:app.bsky.embed.record#viewBlocked","lex:app.bsky.feed.defs#generatorView","lex:app.bsky.graph.defs#listView","lex:app.bsky.labeler.defs#labelerView"]}}},viewRecord:{type:"object",required:["uri","cid","author","value","indexedAt"],properties:{uri:{type:"string",format:"at-uri"},cid:{type:"string",format:"cid"},author:{type:"ref",ref:"lex:app.bsky.actor.defs#profileViewBasic"},value:{type:"unknown",description:"The record data itself."},labels:{type:"array",items:{type:"ref",ref:"lex:com.atproto.label.defs#label"}},embeds:{type:"array",items:{type:"union",refs:["lex:app.bsky.embed.images#view","lex:app.bsky.embed.external#view","lex:app.bsky.embed.record#view","lex:app.bsky.embed.recordWithMedia#view"]}},indexedAt:{type:"string",format:"datetime"}}},viewNotFound:{type:"object",required:["uri","notFound"],properties:{uri:{type:"string",format:"at-uri"},notFound:{type:"boolean",const:!0}}},viewBlocked:{type:"object",required:["uri","blocked","author"],properties:{uri:{type:"string",format:"at-uri"},blocked:{type:"boolean",const:!0},author:{type:"ref",ref:"lex:app.bsky.feed.defs#blockedAuthor"}}}}},AppBskyEmbedRecordWithMedia:{lexicon:1,id:"app.bsky.embed.recordWithMedia",description:"A representation of a record embedded in a Bluesky record (eg, a post), alongside other compatible embeds. For example, a quote post and image, or a quote post and external URL card.",defs:{main:{type:"object",required:["record","media"],properties:{record:{type:"ref",ref:"lex:app.bsky.embed.record"},media:{type:"union",refs:["lex:app.bsky.embed.images","lex:app.bsky.embed.external"]}}},view:{type:"object",required:["record","media"],properties:{record:{type:"ref",ref:"lex:app.bsky.embed.record#view"},media:{type:"union",refs:["lex:app.bsky.embed.images#view","lex:app.bsky.embed.external#view"]}}}}},AppBskyFeedDefs:{lexicon:1,id:"app.bsky.feed.defs",defs:{postView:{type:"object",required:["uri","cid","author","record","indexedAt"],properties:{uri:{type:"string",format:"at-uri"},cid:{type:"string",format:"cid"},author:{type:"ref",ref:"lex:app.bsky.actor.defs#profileViewBasic"},record:{type:"unknown"},embed:{type:"union",refs:["lex:app.bsky.embed.images#view","lex:app.bsky.embed.external#view","lex:app.bsky.embed.record#view","lex:app.bsky.embed.recordWithMedia#view"]},replyCount:{type:"integer"},repostCount:{type:"integer"},likeCount:{type:"integer"},indexedAt:{type:"string",format:"datetime"},viewer:{type:"ref",ref:"lex:app.bsky.feed.defs#viewerState"},labels:{type:"array",items:{type:"ref",ref:"lex:com.atproto.label.defs#label"}},threadgate:{type:"ref",ref:"lex:app.bsky.feed.defs#threadgateView"}}},viewerState:{type:"object",description:"Metadata about the requesting account's relationship with the subject content. Only has meaningful content for authed requests.",properties:{repost:{type:"string",format:"at-uri"},like:{type:"string",format:"at-uri"},replyDisabled:{type:"boolean"}}},feedViewPost:{type:"object",required:["post"],properties:{post:{type:"ref",ref:"lex:app.bsky.feed.defs#postView"},reply:{type:"ref",ref:"lex:app.bsky.feed.defs#replyRef"},reason:{type:"union",refs:["lex:app.bsky.feed.defs#reasonRepost"]}}},replyRef:{type:"object",required:["root","parent"],properties:{root:{type:"union",refs:["lex:app.bsky.feed.defs#postView","lex:app.bsky.feed.defs#notFoundPost","lex:app.bsky.feed.defs#blockedPost"]},parent:{type:"union",refs:["lex:app.bsky.feed.defs#postView","lex:app.bsky.feed.defs#notFoundPost","lex:app.bsky.feed.defs#blockedPost"]}}},reasonRepost:{type:"object",required:["by","indexedAt"],properties:{by:{type:"ref",ref:"lex:app.bsky.actor.defs#profileViewBasic"},indexedAt:{type:"string",format:"datetime"}}},threadViewPost:{type:"object",required:["post"],properties:{post:{type:"ref",ref:"lex:app.bsky.feed.defs#postView"},parent:{type:"union",refs:["lex:app.bsky.feed.defs#threadViewPost","lex:app.bsky.feed.defs#notFoundPost","lex:app.bsky.feed.defs#blockedPost"]},replies:{type:"array",items:{type:"union",refs:["lex:app.bsky.feed.defs#threadViewPost","lex:app.bsky.feed.defs#notFoundPost","lex:app.bsky.feed.defs#blockedPost"]}}}},notFoundPost:{type:"object",required:["uri","notFound"],properties:{uri:{type:"string",format:"at-uri"},notFound:{type:"boolean",const:!0}}},blockedPost:{type:"object",required:["uri","blocked","author"],properties:{uri:{type:"string",format:"at-uri"},blocked:{type:"boolean",const:!0},author:{type:"ref",ref:"lex:app.bsky.feed.defs#blockedAuthor"}}},blockedAuthor:{type:"object",required:["did"],properties:{did:{type:"string",format:"did"},viewer:{type:"ref",ref:"lex:app.bsky.actor.defs#viewerState"}}},generatorView:{type:"object",required:["uri","cid","did","creator","displayName","indexedAt"],properties:{uri:{type:"string",format:"at-uri"},cid:{type:"string",format:"cid"},did:{type:"string",format:"did"},creator:{type:"ref",ref:"lex:app.bsky.actor.defs#profileView"},displayName:{type:"string"},description:{type:"string",maxGraphemes:300,maxLength:3e3},descriptionFacets:{type:"array",items:{type:"ref",ref:"lex:app.bsky.richtext.facet"}},avatar:{type:"string"},likeCount:{type:"integer",minimum:0},labels:{type:"array",items:{type:"ref",ref:"lex:com.atproto.label.defs#label"}},viewer:{type:"ref",ref:"lex:app.bsky.feed.defs#generatorViewerState"},indexedAt:{type:"string",format:"datetime"}}},generatorViewerState:{type:"object",properties:{like:{type:"string",format:"at-uri"}}},skeletonFeedPost:{type:"object",required:["post"],properties:{post:{type:"string",format:"at-uri"},reason:{type:"union",refs:["lex:app.bsky.feed.defs#skeletonReasonRepost"]}}},skeletonReasonRepost:{type:"object",required:["repost"],properties:{repost:{type:"string",format:"at-uri"}}},threadgateView:{type:"object",properties:{uri:{type:"string",format:"at-uri"},cid:{type:"string",format:"cid"},record:{type:"unknown"},lists:{type:"array",items:{type:"ref",ref:"lex:app.bsky.graph.defs#listViewBasic"}}}}}},AppBskyFeedDescribeFeedGenerator:{lexicon:1,id:"app.bsky.feed.describeFeedGenerator",defs:{main:{type:"query",description:"Get information about a feed generator, including policies and offered feed URIs. Does not require auth; implemented by Feed Generator services (not App View).",output:{encoding:"application/json",schema:{type:"object",required:["did","feeds"],properties:{did:{type:"string",format:"did"},feeds:{type:"array",items:{type:"ref",ref:"lex:app.bsky.feed.describeFeedGenerator#feed"}},links:{type:"ref",ref:"lex:app.bsky.feed.describeFeedGenerator#links"}}}}},feed:{type:"object",required:["uri"],properties:{uri:{type:"string",format:"at-uri"}}},links:{type:"object",properties:{privacyPolicy:{type:"string"},termsOfService:{type:"string"}}}}},AppBskyFeedGenerator:{lexicon:1,id:"app.bsky.feed.generator",defs:{main:{type:"record",description:"Record declaring of the existence of a feed generator, and containing metadata about it. The record can exist in any repository.",key:"any",record:{type:"object",required:["did","displayName","createdAt"],properties:{did:{type:"string",format:"did"},displayName:{type:"string",maxGraphemes:24,maxLength:240},description:{type:"string",maxGraphemes:300,maxLength:3e3},descriptionFacets:{type:"array",items:{type:"ref",ref:"lex:app.bsky.richtext.facet"}},avatar:{type:"blob",accept:["image/png","image/jpeg"],maxSize:1e6},labels:{type:"union",description:"Self-label values",refs:["lex:com.atproto.label.defs#selfLabels"]},createdAt:{type:"string",format:"datetime"}}}}}},AppBskyFeedGetActorFeeds:{lexicon:1,id:"app.bsky.feed.getActorFeeds",defs:{main:{type:"query",description:"Get a list of feeds (feed generator records) created by the actor (in the actor's repo).",parameters:{type:"params",required:["actor"],properties:{actor:{type:"string",format:"at-identifier"},limit:{type:"integer",minimum:1,maximum:100,default:50},cursor:{type:"string"}}},output:{encoding:"application/json",schema:{type:"object",required:["feeds"],properties:{cursor:{type:"string"},feeds:{type:"array",items:{type:"ref",ref:"lex:app.bsky.feed.defs#generatorView"}}}}}}}},AppBskyFeedGetActorLikes:{lexicon:1,id:"app.bsky.feed.getActorLikes",defs:{main:{type:"query",description:"Get a list of posts liked by an actor. Does not require auth.",parameters:{type:"params",required:["actor"],properties:{actor:{type:"string",format:"at-identifier"},limit:{type:"integer",minimum:1,maximum:100,default:50},cursor:{type:"string"}}},output:{encoding:"application/json",schema:{type:"object",required:["feed"],properties:{cursor:{type:"string"},feed:{type:"array",items:{type:"ref",ref:"lex:app.bsky.feed.defs#feedViewPost"}}}}},errors:[{name:"BlockedActor"},{name:"BlockedByActor"}]}}},AppBskyFeedGetAuthorFeed:{lexicon:1,id:"app.bsky.feed.getAuthorFeed",defs:{main:{type:"query",description:"Get a view of an actor's 'author feed' (post and reposts by the author). Does not require auth.",parameters:{type:"params",required:["actor"],properties:{actor:{type:"string",format:"at-identifier"},limit:{type:"integer",minimum:1,maximum:100,default:50},cursor:{type:"string"},filter:{type:"string",description:"Combinations of post/repost types to include in response.",knownValues:["posts_with_replies","posts_no_replies","posts_with_media","posts_and_author_threads"],default:"posts_with_replies"}}},output:{encoding:"application/json",schema:{type:"object",required:["feed"],properties:{cursor:{type:"string"},feed:{type:"array",items:{type:"ref",ref:"lex:app.bsky.feed.defs#feedViewPost"}}}}},errors:[{name:"BlockedActor"},{name:"BlockedByActor"}]}}},AppBskyFeedGetFeed:{lexicon:1,id:"app.bsky.feed.getFeed",defs:{main:{type:"query",description:"Get a hydrated feed from an actor's selected feed generator. Implemented by App View.",parameters:{type:"params",required:["feed"],properties:{feed:{type:"string",format:"at-uri"},limit:{type:"integer",minimum:1,maximum:100,default:50},cursor:{type:"string"}}},output:{encoding:"application/json",schema:{type:"object",required:["feed"],properties:{cursor:{type:"string"},feed:{type:"array",items:{type:"ref",ref:"lex:app.bsky.feed.defs#feedViewPost"}}}}},errors:[{name:"UnknownFeed"}]}}},AppBskyFeedGetFeedGenerator:{lexicon:1,id:"app.bsky.feed.getFeedGenerator",defs:{main:{type:"query",description:"Get information about a feed generator. Implemented by AppView.",parameters:{type:"params",required:["feed"],properties:{feed:{type:"string",format:"at-uri",description:"AT-URI of the feed generator record."}}},output:{encoding:"application/json",schema:{type:"object",required:["view","isOnline","isValid"],properties:{view:{type:"ref",ref:"lex:app.bsky.feed.defs#generatorView"},isOnline:{type:"boolean",description:"Indicates whether the feed generator service has been online recently, or else seems to be inactive."},isValid:{type:"boolean",description:"Indicates whether the feed generator service is compatible with the record declaration."}}}}}}},AppBskyFeedGetFeedGenerators:{lexicon:1,id:"app.bsky.feed.getFeedGenerators",defs:{main:{type:"query",description:"Get information about a list of feed generators.",parameters:{type:"params",required:["feeds"],properties:{feeds:{type:"array",items:{type:"string",format:"at-uri"}}}},output:{encoding:"application/json",schema:{type:"object",required:["feeds"],properties:{feeds:{type:"array",items:{type:"ref",ref:"lex:app.bsky.feed.defs#generatorView"}}}}}}}},AppBskyFeedGetFeedSkeleton:{lexicon:1,id:"app.bsky.feed.getFeedSkeleton",defs:{main:{type:"query",description:"Get a skeleton of a feed provided by a feed generator. Auth is optional, depending on provider requirements, and provides the DID of the requester. Implemented by Feed Generator Service.",parameters:{type:"params",required:["feed"],properties:{feed:{type:"string",format:"at-uri",description:"Reference to feed generator record describing the specific feed being requested."},limit:{type:"integer",minimum:1,maximum:100,default:50},cursor:{type:"string"}}},output:{encoding:"application/json",schema:{type:"object",required:["feed"],properties:{cursor:{type:"string"},feed:{type:"array",items:{type:"ref",ref:"lex:app.bsky.feed.defs#skeletonFeedPost"}}}}},errors:[{name:"UnknownFeed"}]}}},AppBskyFeedGetLikes:{lexicon:1,id:"app.bsky.feed.getLikes",defs:{main:{type:"query",description:"Get like records which reference a subject (by AT-URI and CID).",parameters:{type:"params",required:["uri"],properties:{uri:{type:"string",format:"at-uri",description:"AT-URI of the subject (eg, a post record)."},cid:{type:"string",format:"cid",description:"CID of the subject record (aka, specific version of record), to filter likes."},limit:{type:"integer",minimum:1,maximum:100,default:50},cursor:{type:"string"}}},output:{encoding:"application/json",schema:{type:"object",required:["uri","likes"],properties:{uri:{type:"string",format:"at-uri"},cid:{type:"string",format:"cid"},cursor:{type:"string"},likes:{type:"array",items:{type:"ref",ref:"lex:app.bsky.feed.getLikes#like"}}}}}},like:{type:"object",required:["indexedAt","createdAt","actor"],properties:{indexedAt:{type:"string",format:"datetime"},createdAt:{type:"string",format:"datetime"},actor:{type:"ref",ref:"lex:app.bsky.actor.defs#profileView"}}}}},AppBskyFeedGetListFeed:{lexicon:1,id:"app.bsky.feed.getListFeed",defs:{main:{type:"query",description:"Get a feed of recent posts from a list (posts and reposts from any actors on the list). Does not require auth.",parameters:{type:"params",required:["list"],properties:{list:{type:"string",format:"at-uri",description:"Reference (AT-URI) to the list record."},limit:{type:"integer",minimum:1,maximum:100,default:50},cursor:{type:"string"}}},output:{encoding:"application/json",schema:{type:"object",required:["feed"],properties:{cursor:{type:"string"},feed:{type:"array",items:{type:"ref",ref:"lex:app.bsky.feed.defs#feedViewPost"}}}}},errors:[{name:"UnknownList"}]}}},AppBskyFeedGetPostThread:{lexicon:1,id:"app.bsky.feed.getPostThread",defs:{main:{type:"query",description:"Get posts in a thread. Does not require auth, but additional metadata and filtering will be applied for authed requests.",parameters:{type:"params",required:["uri"],properties:{uri:{type:"string",format:"at-uri",description:"Reference (AT-URI) to post record."},depth:{type:"integer",description:"How many levels of reply depth should be included in response.",default:6,minimum:0,maximum:1e3},parentHeight:{type:"integer",description:"How many levels of parent (and grandparent, etc) post to include.",default:80,minimum:0,maximum:1e3}}},output:{encoding:"application/json",schema:{type:"object",required:["thread"],properties:{thread:{type:"union",refs:["lex:app.bsky.feed.defs#threadViewPost","lex:app.bsky.feed.defs#notFoundPost","lex:app.bsky.feed.defs#blockedPost"]}}}},errors:[{name:"NotFound"}]}}},AppBskyFeedGetPosts:{lexicon:1,id:"app.bsky.feed.getPosts",defs:{main:{type:"query",description:"Gets post views for a specified list of posts (by AT-URI). This is sometimes referred to as 'hydrating' a 'feed skeleton'.",parameters:{type:"params",required:["uris"],properties:{uris:{type:"array",description:"List of post AT-URIs to return hydrated views for.",items:{type:"string",format:"at-uri"},maxLength:25}}},output:{encoding:"application/json",schema:{type:"object",required:["posts"],properties:{posts:{type:"array",items:{type:"ref",ref:"lex:app.bsky.feed.defs#postView"}}}}}}}},AppBskyFeedGetRepostedBy:{lexicon:1,id:"app.bsky.feed.getRepostedBy",defs:{main:{type:"query",description:"Get a list of reposts for a given post.",parameters:{type:"params",required:["uri"],properties:{uri:{type:"string",format:"at-uri",description:"Reference (AT-URI) of post record"},cid:{type:"string",format:"cid",description:"If supplied, filters to reposts of specific version (by CID) of the post record."},limit:{type:"integer",minimum:1,maximum:100,default:50},cursor:{type:"string"}}},output:{encoding:"application/json",schema:{type:"object",required:["uri","repostedBy"],properties:{uri:{type:"string",format:"at-uri"},cid:{type:"string",format:"cid"},cursor:{type:"string"},repostedBy:{type:"array",items:{type:"ref",ref:"lex:app.bsky.actor.defs#profileView"}}}}}}}},AppBskyFeedGetSuggestedFeeds:{lexicon:1,id:"app.bsky.feed.getSuggestedFeeds",defs:{main:{type:"query",description:"Get a list of suggested feeds (feed generators) for the requesting account.",parameters:{type:"params",properties:{limit:{type:"integer",minimum:1,maximum:100,default:50},cursor:{type:"string"}}},output:{encoding:"application/json",schema:{type:"object",required:["feeds"],properties:{cursor:{type:"string"},feeds:{type:"array",items:{type:"ref",ref:"lex:app.bsky.feed.defs#generatorView"}}}}}}}},AppBskyFeedGetTimeline:{lexicon:1,id:"app.bsky.feed.getTimeline",defs:{main:{type:"query",description:"Get a view of the requesting account's home timeline. This is expected to be some form of reverse-chronological feed.",parameters:{type:"params",properties:{algorithm:{type:"string",description:"Variant 'algorithm' for timeline. Implementation-specific. NOTE: most feed flexibility has been moved to feed generator mechanism."},limit:{type:"integer",minimum:1,maximum:100,default:50},cursor:{type:"string"}}},output:{encoding:"application/json",schema:{type:"object",required:["feed"],properties:{cursor:{type:"string"},feed:{type:"array",items:{type:"ref",ref:"lex:app.bsky.feed.defs#feedViewPost"}}}}}}}},AppBskyFeedLike:{lexicon:1,id:"app.bsky.feed.like",defs:{main:{type:"record",description:"Record declaring a 'like' of a piece of subject content.",key:"tid",record:{type:"object",required:["subject","createdAt"],properties:{subject:{type:"ref",ref:"lex:com.atproto.repo.strongRef"},createdAt:{type:"string",format:"datetime"}}}}}},AppBskyFeedPost:{lexicon:1,id:"app.bsky.feed.post",defs:{main:{type:"record",description:"Record containing a Bluesky post.",key:"tid",record:{type:"object",required:["text","createdAt"],properties:{text:{type:"string",maxLength:3e3,maxGraphemes:300,description:"The primary post content. May be an empty string, if there are embeds."},entities:{type:"array",description:"DEPRECATED: replaced by app.bsky.richtext.facet.",items:{type:"ref",ref:"lex:app.bsky.feed.post#entity"}},facets:{type:"array",description:"Annotations of text (mentions, URLs, hashtags, etc)",items:{type:"ref",ref:"lex:app.bsky.richtext.facet"}},reply:{type:"ref",ref:"lex:app.bsky.feed.post#replyRef"},embed:{type:"union",refs:["lex:app.bsky.embed.images","lex:app.bsky.embed.external","lex:app.bsky.embed.record","lex:app.bsky.embed.recordWithMedia"]},langs:{type:"array",description:"Indicates human language of post primary text content.",maxLength:3,items:{type:"string",format:"language"}},labels:{type:"union",description:"Self-label values for this post. Effectively content warnings.",refs:["lex:com.atproto.label.defs#selfLabels"]},tags:{type:"array",description:"Additional hashtags, in addition to any included in post text and facets.",maxLength:8,items:{type:"string",maxLength:640,maxGraphemes:64}},createdAt:{type:"string",format:"datetime",description:"Client-declared timestamp when this post was originally created."}}}},replyRef:{type:"object",required:["root","parent"],properties:{root:{type:"ref",ref:"lex:com.atproto.repo.strongRef"},parent:{type:"ref",ref:"lex:com.atproto.repo.strongRef"}}},entity:{type:"object",description:"Deprecated: use facets instead.",required:["index","type","value"],properties:{index:{type:"ref",ref:"lex:app.bsky.feed.post#textSlice"},type:{type:"string",description:"Expected values are 'mention' and 'link'."},value:{type:"string"}}},textSlice:{type:"object",description:"Deprecated. Use app.bsky.richtext instead -- A text segment. Start is inclusive, end is exclusive. Indices are for utf16-encoded strings.",required:["start","end"],properties:{start:{type:"integer",minimum:0},end:{type:"integer",minimum:0}}}}},AppBskyFeedRepost:{lexicon:1,id:"app.bsky.feed.repost",defs:{main:{description:"Record representing a 'repost' of an existing Bluesky post.",type:"record",key:"tid",record:{type:"object",required:["subject","createdAt"],properties:{subject:{type:"ref",ref:"lex:com.atproto.repo.strongRef"},createdAt:{type:"string",format:"datetime"}}}}}},AppBskyFeedSearchPosts:{lexicon:1,id:"app.bsky.feed.searchPosts",defs:{main:{type:"query",description:"Find posts matching search criteria, returning views of those posts.",parameters:{type:"params",required:["q"],properties:{q:{type:"string",description:"Search query string; syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended."},limit:{type:"integer",minimum:1,maximum:100,default:25},cursor:{type:"string",description:"Optional pagination mechanism; may not necessarily allow scrolling through entire result set."}}},output:{encoding:"application/json",schema:{type:"object",required:["posts"],properties:{cursor:{type:"string"},hitsTotal:{type:"integer",description:"Count of search hits. Optional, may be rounded/truncated, and may not be possible to paginate through all hits."},posts:{type:"array",items:{type:"ref",ref:"lex:app.bsky.feed.defs#postView"}}}}},errors:[{name:"BadQueryString"}]}}},AppBskyFeedThreadgate:{lexicon:1,id:"app.bsky.feed.threadgate",defs:{main:{type:"record",key:"tid",description:"Record defining interaction gating rules for a thread (aka, reply controls). The record key (rkey) of the threadgate record must match the record key of the thread's root post, and that record must be in the same repository..",record:{type:"object",required:["post","createdAt"],properties:{post:{type:"string",format:"at-uri",description:"Reference (AT-URI) to the post record."},allow:{type:"array",maxLength:5,items:{type:"union",refs:["lex:app.bsky.feed.threadgate#mentionRule","lex:app.bsky.feed.threadgate#followingRule","lex:app.bsky.feed.threadgate#listRule"]}},createdAt:{type:"string",format:"datetime"}}}},mentionRule:{type:"object",description:"Allow replies from actors mentioned in your post.",properties:{}},followingRule:{type:"object",description:"Allow replies from actors you follow.",properties:{}},listRule:{type:"object",description:"Allow replies from actors on a list.",required:["list"],properties:{list:{type:"string",format:"at-uri"}}}}},AppBskyGraphBlock:{lexicon:1,id:"app.bsky.graph.block",defs:{main:{type:"record",description:"Record declaring a 'block' relationship against another account. NOTE: blocks are public in Bluesky; see blog posts for details.",key:"tid",record:{type:"object",required:["subject","createdAt"],properties:{subject:{type:"string",format:"did",description:"DID of the account to be blocked."},createdAt:{type:"string",format:"datetime"}}}}}},AppBskyGraphDefs:{lexicon:1,id:"app.bsky.graph.defs",defs:{listViewBasic:{type:"object",required:["uri","cid","name","purpose"],properties:{uri:{type:"string",format:"at-uri"},cid:{type:"string",format:"cid"},name:{type:"string",maxLength:64,minLength:1},purpose:{type:"ref",ref:"lex:app.bsky.graph.defs#listPurpose"},avatar:{type:"string"},labels:{type:"array",items:{type:"ref",ref:"lex:com.atproto.label.defs#label"}},viewer:{type:"ref",ref:"lex:app.bsky.graph.defs#listViewerState"},indexedAt:{type:"string",format:"datetime"}}},listView:{type:"object",required:["uri","cid","creator","name","purpose","indexedAt"],properties:{uri:{type:"string",format:"at-uri"},cid:{type:"string",format:"cid"},creator:{type:"ref",ref:"lex:app.bsky.actor.defs#profileView"},name:{type:"string",maxLength:64,minLength:1},purpose:{type:"ref",ref:"lex:app.bsky.graph.defs#listPurpose"},description:{type:"string",maxGraphemes:300,maxLength:3e3},descriptionFacets:{type:"array",items:{type:"ref",ref:"lex:app.bsky.richtext.facet"}},avatar:{type:"string"},labels:{type:"array",items:{type:"ref",ref:"lex:com.atproto.label.defs#label"}},viewer:{type:"ref",ref:"lex:app.bsky.graph.defs#listViewerState"},indexedAt:{type:"string",format:"datetime"}}},listItemView:{type:"object",required:["uri","subject"],properties:{uri:{type:"string",format:"at-uri"},subject:{type:"ref",ref:"lex:app.bsky.actor.defs#profileView"}}},listPurpose:{type:"string",knownValues:["app.bsky.graph.defs#modlist","app.bsky.graph.defs#curatelist"]},modlist:{type:"token",description:"A list of actors to apply an aggregate moderation action (mute/block) on."},curatelist:{type:"token",description:"A list of actors used for curation purposes such as list feeds or interaction gating."},listViewerState:{type:"object",properties:{muted:{type:"boolean"},blocked:{type:"string",format:"at-uri"}}},notFoundActor:{type:"object",description:"indicates that a handle or DID could not be resolved",required:["actor","notFound"],properties:{actor:{type:"string",format:"at-identifier"},notFound:{type:"boolean",const:!0}}},relationship:{type:"object",description:"lists the bi-directional graph relationships between one actor (not indicated in the object), and the target actors (the DID included in the object)",required:["did"],properties:{did:{type:"string",format:"did"},following:{type:"string",format:"at-uri",description:"if the actor follows this DID, this is the AT-URI of the follow record"},followedBy:{type:"string",format:"at-uri",description:"if the actor is followed by this DID, contains the AT-URI of the follow record"}}}}},AppBskyGraphFollow:{lexicon:1,id:"app.bsky.graph.follow",defs:{main:{type:"record",description:"Record declaring a social 'follow' relationship of another account. Duplicate follows will be ignored by the AppView.",key:"tid",record:{type:"object",required:["subject","createdAt"],properties:{subject:{type:"string",format:"did"},createdAt:{type:"string",format:"datetime"}}}}}},AppBskyGraphGetBlocks:{lexicon:1,id:"app.bsky.graph.getBlocks",defs:{main:{type:"query",description:"Enumerates which accounts the requesting account is currently blocking. Requires auth.",parameters:{type:"params",properties:{limit:{type:"integer",minimum:1,maximum:100,default:50},cursor:{type:"string"}}},output:{encoding:"application/json",schema:{type:"object",required:["blocks"],properties:{cursor:{type:"string"},blocks:{type:"array",items:{type:"ref",ref:"lex:app.bsky.actor.defs#profileView"}}}}}}}},AppBskyGraphGetFollowers:{lexicon:1,id:"app.bsky.graph.getFollowers",defs:{main:{type:"query",description:"Enumerates accounts which follow a specified account (actor).",parameters:{type:"params",required:["actor"],properties:{actor:{type:"string",format:"at-identifier"},limit:{type:"integer",minimum:1,maximum:100,default:50},cursor:{type:"string"}}},output:{encoding:"application/json",schema:{type:"object",required:["subject","followers"],properties:{subject:{type:"ref",ref:"lex:app.bsky.actor.defs#profileView"},cursor:{type:"string"},followers:{type:"array",items:{type:"ref",ref:"lex:app.bsky.actor.defs#profileView"}}}}}}}},AppBskyGraphGetFollows:{lexicon:1,id:"app.bsky.graph.getFollows",defs:{main:{type:"query",description:"Enumerates accounts which a specified account (actor) follows.",parameters:{type:"params",required:["actor"],properties:{actor:{type:"string",format:"at-identifier"},limit:{type:"integer",minimum:1,maximum:100,default:50},cursor:{type:"string"}}},output:{encoding:"application/json",schema:{type:"object",required:["subject","follows"],properties:{subject:{type:"ref",ref:"lex:app.bsky.actor.defs#profileView"},cursor:{type:"string"},follows:{type:"array",items:{type:"ref",ref:"lex:app.bsky.actor.defs#profileView"}}}}}}}},AppBskyGraphGetList:{lexicon:1,id:"app.bsky.graph.getList",defs:{main:{type:"query",description:"Gets a 'view' (with additional context) of a specified list.",parameters:{type:"params",required:["list"],properties:{list:{type:"string",format:"at-uri",description:"Reference (AT-URI) of the list record to hydrate."},limit:{type:"integer",minimum:1,maximum:100,default:50},cursor:{type:"string"}}},output:{encoding:"application/json",schema:{type:"object",required:["list","items"],properties:{cursor:{type:"string"},list:{type:"ref",ref:"lex:app.bsky.graph.defs#listView"},items:{type:"array",items:{type:"ref",ref:"lex:app.bsky.graph.defs#listItemView"}}}}}}}},AppBskyGraphGetListBlocks:{lexicon:1,id:"app.bsky.graph.getListBlocks",defs:{main:{type:"query",description:"Get mod lists that the requesting account (actor) is blocking. Requires auth.",parameters:{type:"params",properties:{limit:{type:"integer",minimum:1,maximum:100,default:50},cursor:{type:"string"}}},output:{encoding:"application/json",schema:{type:"object",required:["lists"],properties:{cursor:{type:"string"},lists:{type:"array",items:{type:"ref",ref:"lex:app.bsky.graph.defs#listView"}}}}}}}},AppBskyGraphGetListMutes:{lexicon:1,id:"app.bsky.graph.getListMutes",defs:{main:{type:"query",description:"Enumerates mod lists that the requesting account (actor) currently has muted. Requires auth.",parameters:{type:"params",properties:{limit:{type:"integer",minimum:1,maximum:100,default:50},cursor:{type:"string"}}},output:{encoding:"application/json",schema:{type:"object",required:["lists"],properties:{cursor:{type:"string"},lists:{type:"array",items:{type:"ref",ref:"lex:app.bsky.graph.defs#listView"}}}}}}}},AppBskyGraphGetLists:{lexicon:1,id:"app.bsky.graph.getLists",defs:{main:{type:"query",description:"Enumerates the lists created by a specified account (actor).",parameters:{type:"params",required:["actor"],properties:{actor:{type:"string",format:"at-identifier",description:"The account (actor) to enumerate lists from."},limit:{type:"integer",minimum:1,maximum:100,default:50},cursor:{type:"string"}}},output:{encoding:"application/json",schema:{type:"object",required:["lists"],properties:{cursor:{type:"string"},lists:{type:"array",items:{type:"ref",ref:"lex:app.bsky.graph.defs#listView"}}}}}}}},AppBskyGraphGetMutes:{lexicon:1,id:"app.bsky.graph.getMutes",defs:{main:{type:"query",description:"Enumerates accounts that the requesting account (actor) currently has muted. Requires auth.",parameters:{type:"params",properties:{limit:{type:"integer",minimum:1,maximum:100,default:50},cursor:{type:"string"}}},output:{encoding:"application/json",schema:{type:"object",required:["mutes"],properties:{cursor:{type:"string"},mutes:{type:"array",items:{type:"ref",ref:"lex:app.bsky.actor.defs#profileView"}}}}}}}},AppBskyGraphGetRelationships:{lexicon:1,id:"app.bsky.graph.getRelationships",defs:{main:{type:"query",description:"Enumerates public relationships between one account, and a list of other accounts. Does not require auth.",parameters:{type:"params",required:["actor"],properties:{actor:{type:"string",format:"at-identifier",description:"Primary account requesting relationships for."},others:{type:"array",description:"List of 'other' accounts to be related back to the primary.",maxLength:30,items:{type:"string",format:"at-identifier"}}}},output:{encoding:"application/json",schema:{type:"object",required:["relationships"],properties:{actor:{type:"string",format:"did"},relationships:{type:"array",items:{type:"union",refs:["lex:app.bsky.graph.defs#relationship","lex:app.bsky.graph.defs#notFoundActor"]}}}}},errors:[{name:"ActorNotFound",description:"the primary actor at-identifier could not be resolved"}]}}},AppBskyGraphGetSuggestedFollowsByActor:{lexicon:1,id:"app.bsky.graph.getSuggestedFollowsByActor",defs:{main:{type:"query",description:"Enumerates follows similar to a given account (actor). Expected use is to recommend additional accounts immediately after following one account.",parameters:{type:"params",required:["actor"],properties:{actor:{type:"string",format:"at-identifier"}}},output:{encoding:"application/json",schema:{type:"object",required:["suggestions"],properties:{suggestions:{type:"array",items:{type:"ref",ref:"lex:app.bsky.actor.defs#profileView"}}}}}}}},AppBskyGraphList:{lexicon:1,id:"app.bsky.graph.list",defs:{main:{type:"record",description:"Record representing a list of accounts (actors). Scope includes both moderation-oriented lists and curration-oriented lists.",key:"tid",record:{type:"object",required:["name","purpose","createdAt"],properties:{purpose:{type:"ref",description:"Defines the purpose of the list (aka, moderation-oriented or curration-oriented)",ref:"lex:app.bsky.graph.defs#listPurpose"},name:{type:"string",maxLength:64,minLength:1,description:"Display name for list; can not be empty."},description:{type:"string",maxGraphemes:300,maxLength:3e3},descriptionFacets:{type:"array",items:{type:"ref",ref:"lex:app.bsky.richtext.facet"}},avatar:{type:"blob",accept:["image/png","image/jpeg"],maxSize:1e6},labels:{type:"union",refs:["lex:com.atproto.label.defs#selfLabels"]},createdAt:{type:"string",format:"datetime"}}}}}},AppBskyGraphListblock:{lexicon:1,id:"app.bsky.graph.listblock",defs:{main:{type:"record",description:"Record representing a block relationship against an entire an entire list of accounts (actors).",key:"tid",record:{type:"object",required:["subject","createdAt"],properties:{subject:{type:"string",format:"at-uri",description:"Reference (AT-URI) to the mod list record."},createdAt:{type:"string",format:"datetime"}}}}}},AppBskyGraphListitem:{lexicon:1,id:"app.bsky.graph.listitem",defs:{main:{type:"record",description:"Record representing an account's inclusion on a specific list. The AppView will ignore duplicate listitem records.",key:"tid",record:{type:"object",required:["subject","list","createdAt"],properties:{subject:{type:"string",format:"did",description:"The account which is included on the list."},list:{type:"string",format:"at-uri",description:"Reference (AT-URI) to the list record (app.bsky.graph.list)."},createdAt:{type:"string",format:"datetime"}}}}}},AppBskyGraphMuteActor:{lexicon:1,id:"app.bsky.graph.muteActor",defs:{main:{type:"procedure",description:"Creates a mute relationship for the specified account. Mutes are private in Bluesky. Requires auth.",input:{encoding:"application/json",schema:{type:"object",required:["actor"],properties:{actor:{type:"string",format:"at-identifier"}}}}}}},AppBskyGraphMuteActorList:{lexicon:1,id:"app.bsky.graph.muteActorList",defs:{main:{type:"procedure",description:"Creates a mute relationship for the specified list of accounts. Mutes are private in Bluesky. Requires auth.",input:{encoding:"application/json",schema:{type:"object",required:["list"],properties:{list:{type:"string",format:"at-uri"}}}}}}},AppBskyGraphUnmuteActor:{lexicon:1,id:"app.bsky.graph.unmuteActor",defs:{main:{type:"procedure",description:"Unmutes the specified account. Requires auth.",input:{encoding:"application/json",schema:{type:"object",required:["actor"],properties:{actor:{type:"string",format:"at-identifier"}}}}}}},AppBskyGraphUnmuteActorList:{lexicon:1,id:"app.bsky.graph.unmuteActorList",defs:{main:{type:"procedure",description:"Unmutes the specified list of accounts. Requires auth.",input:{encoding:"application/json",schema:{type:"object",required:["list"],properties:{list:{type:"string",format:"at-uri"}}}}}}},AppBskyLabelerDefs:{lexicon:1,id:"app.bsky.labeler.defs",defs:{labelerView:{type:"object",required:["uri","cid","creator","indexedAt"],properties:{uri:{type:"string",format:"at-uri"},cid:{type:"string",format:"cid"},creator:{type:"ref",ref:"lex:app.bsky.actor.defs#profileView"},likeCount:{type:"integer",minimum:0},viewer:{type:"ref",ref:"lex:app.bsky.labeler.defs#labelerViewerState"},indexedAt:{type:"string",format:"datetime"},labels:{type:"array",items:{type:"ref",ref:"lex:com.atproto.label.defs#label"}}}},labelerViewDetailed:{type:"object",required:["uri","cid","creator","policies","indexedAt"],properties:{uri:{type:"string",format:"at-uri"},cid:{type:"string",format:"cid"},creator:{type:"ref",ref:"lex:app.bsky.actor.defs#profileView"},policies:{type:"ref",ref:"lex:app.bsky.labeler.defs#labelerPolicies"},likeCount:{type:"integer",minimum:0},viewer:{type:"ref",ref:"lex:app.bsky.labeler.defs#labelerViewerState"},indexedAt:{type:"string",format:"datetime"},labels:{type:"array",items:{type:"ref",ref:"lex:com.atproto.label.defs#label"}}}},labelerViewerState:{type:"object",properties:{like:{type:"string",format:"at-uri"}}},labelerPolicies:{type:"object",required:["labelValues"],properties:{labelValues:{type:"array",description:"The label values which this labeler publishes. May include global or custom labels.",items:{type:"ref",ref:"lex:com.atproto.label.defs#labelValue"}},labelValueDefinitions:{type:"array",description:"Label values created by this labeler and scoped exclusively to it. Labels defined here will override global label definitions for this labeler.",items:{type:"ref",ref:"lex:com.atproto.label.defs#labelValueDefinition"}}}}}},AppBskyLabelerGetServices:{lexicon:1,id:"app.bsky.labeler.getServices",defs:{main:{type:"query",description:"Get information about a list of labeler services.",parameters:{type:"params",required:["dids"],properties:{dids:{type:"array",items:{type:"string",format:"did"}},detailed:{type:"boolean",default:!1}}},output:{encoding:"application/json",schema:{type:"object",required:["views"],properties:{views:{type:"array",items:{type:"union",refs:["lex:app.bsky.labeler.defs#labelerView","lex:app.bsky.labeler.defs#labelerViewDetailed"]}}}}}}}},AppBskyLabelerService:{lexicon:1,id:"app.bsky.labeler.service",defs:{main:{type:"record",description:"A declaration of the existence of labeler service.",key:"literal:self",record:{type:"object",required:["policies","createdAt"],properties:{policies:{type:"ref",ref:"lex:app.bsky.labeler.defs#labelerPolicies"},labels:{type:"union",refs:["lex:com.atproto.label.defs#selfLabels"]},createdAt:{type:"string",format:"datetime"}}}}}},AppBskyNotificationGetUnreadCount:{lexicon:1,id:"app.bsky.notification.getUnreadCount",defs:{main:{type:"query",description:"Count the number of unread notifications for the requesting account. Requires auth.",parameters:{type:"params",properties:{seenAt:{type:"string",format:"datetime"}}},output:{encoding:"application/json",schema:{type:"object",required:["count"],properties:{count:{type:"integer"}}}}}}},AppBskyNotificationListNotifications:{lexicon:1,id:"app.bsky.notification.listNotifications",defs:{main:{type:"query",description:"Enumerate notifications for the requesting account. Requires auth.",parameters:{type:"params",properties:{limit:{type:"integer",minimum:1,maximum:100,default:50},cursor:{type:"string"},seenAt:{type:"string",format:"datetime"}}},output:{encoding:"application/json",schema:{type:"object",required:["notifications"],properties:{cursor:{type:"string"},notifications:{type:"array",items:{type:"ref",ref:"lex:app.bsky.notification.listNotifications#notification"}},seenAt:{type:"string",format:"datetime"}}}}},notification:{type:"object",required:["uri","cid","author","reason","record","isRead","indexedAt"],properties:{uri:{type:"string",format:"at-uri"},cid:{type:"string",format:"cid"},author:{type:"ref",ref:"lex:app.bsky.actor.defs#profileView"},reason:{type:"string",description:"Expected values are 'like', 'repost', 'follow', 'mention', 'reply', and 'quote'.",knownValues:["like","repost","follow","mention","reply","quote"]},reasonSubject:{type:"string",format:"at-uri"},record:{type:"unknown"},isRead:{type:"boolean"},indexedAt:{type:"string",format:"datetime"},labels:{type:"array",items:{type:"ref",ref:"lex:com.atproto.label.defs#label"}}}}}},AppBskyNotificationRegisterPush:{lexicon:1,id:"app.bsky.notification.registerPush",defs:{main:{type:"procedure",description:"Register to receive push notifications, via a specified service, for the requesting account. Requires auth.",input:{encoding:"application/json",schema:{type:"object",required:["serviceDid","token","platform","appId"],properties:{serviceDid:{type:"string",format:"did"},token:{type:"string"},platform:{type:"string",knownValues:["ios","android","web"]},appId:{type:"string"}}}}}}},AppBskyNotificationUpdateSeen:{lexicon:1,id:"app.bsky.notification.updateSeen",defs:{main:{type:"procedure",description:"Notify server that the requesting account has seen notifications. Requires auth.",input:{encoding:"application/json",schema:{type:"object",required:["seenAt"],properties:{seenAt:{type:"string",format:"datetime"}}}}}}},AppBskyRichtextFacet:{lexicon:1,id:"app.bsky.richtext.facet",defs:{main:{type:"object",description:"Annotation of a sub-string within rich text.",required:["index","features"],properties:{index:{type:"ref",ref:"lex:app.bsky.richtext.facet#byteSlice"},features:{type:"array",items:{type:"union",refs:["lex:app.bsky.richtext.facet#mention","lex:app.bsky.richtext.facet#link","lex:app.bsky.richtext.facet#tag"]}}}},mention:{type:"object",description:"Facet feature for mention of another account. The text is usually a handle, including a '@' prefix, but the facet reference is a DID.",required:["did"],properties:{did:{type:"string",format:"did"}}},link:{type:"object",description:"Facet feature for a URL. The text URL may have been simplified or truncated, but the facet reference should be a complete URL.",required:["uri"],properties:{uri:{type:"string",format:"uri"}}},tag:{type:"object",description:"Facet feature for a hashtag. The text usually includes a '#' prefix, but the facet reference should not (except in the case of 'double hash tags').",required:["tag"],properties:{tag:{type:"string",maxLength:640,maxGraphemes:64}}},byteSlice:{type:"object",description:"Specifies the sub-string range a facet feature applies to. Start index is inclusive, end index is exclusive. Indices are zero-indexed, counting bytes of the UTF-8 encoded text. NOTE: some languages, like Javascript, use UTF-16 or Unicode codepoints for string slice indexing; in these languages, convert to byte arrays before working with facets.",required:["byteStart","byteEnd"],properties:{byteStart:{type:"integer",minimum:0},byteEnd:{type:"integer",minimum:0}}}}},AppBskyUnspeccedDefs:{lexicon:1,id:"app.bsky.unspecced.defs",defs:{skeletonSearchPost:{type:"object",required:["uri"],properties:{uri:{type:"string",format:"at-uri"}}},skeletonSearchActor:{type:"object",required:["did"],properties:{did:{type:"string",format:"did"}}}}},AppBskyUnspeccedGetPopularFeedGenerators:{lexicon:1,id:"app.bsky.unspecced.getPopularFeedGenerators",defs:{main:{type:"query",description:"An unspecced view of globally popular feed generators.",parameters:{type:"params",properties:{limit:{type:"integer",minimum:1,maximum:100,default:50},cursor:{type:"string"},query:{type:"string"}}},output:{encoding:"application/json",schema:{type:"object",required:["feeds"],properties:{cursor:{type:"string"},feeds:{type:"array",items:{type:"ref",ref:"lex:app.bsky.feed.defs#generatorView"}}}}}}}},AppBskyUnspeccedGetTaggedSuggestions:{lexicon:1,id:"app.bsky.unspecced.getTaggedSuggestions",defs:{main:{type:"query",description:"Get a list of suggestions (feeds and users) tagged with categories",parameters:{type:"params",properties:{}},output:{encoding:"application/json",schema:{type:"object",required:["suggestions"],properties:{suggestions:{type:"array",items:{type:"ref",ref:"lex:app.bsky.unspecced.getTaggedSuggestions#suggestion"}}}}}},suggestion:{type:"object",required:["tag","subjectType","subject"],properties:{tag:{type:"string"},subjectType:{type:"string",knownValues:["actor","feed"]},subject:{type:"string",format:"uri"}}}}},AppBskyUnspeccedSearchActorsSkeleton:{lexicon:1,id:"app.bsky.unspecced.searchActorsSkeleton",defs:{main:{type:"query",description:"Backend Actors (profile) search, returns only skeleton.",parameters:{type:"params",required:["q"],properties:{q:{type:"string",description:"Search query string; syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended. For typeahead search, only simple term match is supported, not full syntax."},typeahead:{type:"boolean",description:"If true, acts as fast/simple 'typeahead' query."},limit:{type:"integer",minimum:1,maximum:100,default:25},cursor:{type:"string",description:"Optional pagination mechanism; may not necessarily allow scrolling through entire result set."}}},output:{encoding:"application/json",schema:{type:"object",required:["actors"],properties:{cursor:{type:"string"},hitsTotal:{type:"integer",description:"Count of search hits. Optional, may be rounded/truncated, and may not be possible to paginate through all hits."},actors:{type:"array",items:{type:"ref",ref:"lex:app.bsky.unspecced.defs#skeletonSearchActor"}}}}},errors:[{name:"BadQueryString"}]}}},AppBskyUnspeccedSearchPostsSkeleton:{lexicon:1,id:"app.bsky.unspecced.searchPostsSkeleton",defs:{main:{type:"query",description:"Backend Posts search, returns only skeleton",parameters:{type:"params",required:["q"],properties:{q:{type:"string",description:"Search query string; syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended."},limit:{type:"integer",minimum:1,maximum:100,default:25},cursor:{type:"string",description:"Optional pagination mechanism; may not necessarily allow scrolling through entire result set."}}},output:{encoding:"application/json",schema:{type:"object",required:["posts"],properties:{cursor:{type:"string"},hitsTotal:{type:"integer",description:"Count of search hits. Optional, may be rounded/truncated, and may not be possible to paginate through all hits."},posts:{type:"array",items:{type:"ref",ref:"lex:app.bsky.unspecced.defs#skeletonSearchPost"}}}}},errors:[{name:"BadQueryString"}]}}},ToolsOzoneCommunicationCreateTemplate:{lexicon:1,id:"tools.ozone.communication.createTemplate",defs:{main:{type:"procedure",description:"Administrative action to create a new, re-usable communication (email for now) template.",input:{encoding:"application/json",schema:{type:"object",required:["subject","contentMarkdown","name"],properties:{name:{type:"string",description:"Name of the template."},contentMarkdown:{type:"string",description:"Content of the template, markdown supported, can contain variable placeholders."},subject:{type:"string",description:"Subject of the message, used in emails."},createdBy:{type:"string",format:"did",description:"DID of the user who is creating the template."}}}},output:{encoding:"application/json",schema:{type:"ref",ref:"lex:tools.ozone.communication.defs#templateView"}}}}},ToolsOzoneCommunicationDefs:{lexicon:1,id:"tools.ozone.communication.defs",defs:{templateView:{type:"object",required:["id","name","contentMarkdown","disabled","lastUpdatedBy","createdAt","updatedAt"],properties:{id:{type:"string"},name:{type:"string",description:"Name of the template."},subject:{type:"string",description:"Content of the template, can contain markdown and variable placeholders."},contentMarkdown:{type:"string",description:"Subject of the message, used in emails."},disabled:{type:"boolean"},lastUpdatedBy:{type:"string",format:"did",description:"DID of the user who last updated the template."},createdAt:{type:"string",format:"datetime"},updatedAt:{type:"string",format:"datetime"}}}}},ToolsOzoneCommunicationDeleteTemplate:{lexicon:1,id:"tools.ozone.communication.deleteTemplate",defs:{main:{type:"procedure",description:"Delete a communication template.",input:{encoding:"application/json",schema:{type:"object",required:["id"],properties:{id:{type:"string"}}}}}}},ToolsOzoneCommunicationListTemplates:{lexicon:1,id:"tools.ozone.communication.listTemplates",defs:{main:{type:"query",description:"Get list of all communication templates.",output:{encoding:"application/json",schema:{type:"object",required:["communicationTemplates"],properties:{communicationTemplates:{type:"array",items:{type:"ref",ref:"lex:tools.ozone.communication.defs#templateView"}}}}}}}},ToolsOzoneCommunicationUpdateTemplate:{lexicon:1,id:"tools.ozone.communication.updateTemplate",defs:{main:{type:"procedure",description:"Administrative action to update an existing communication template. Allows passing partial fields to patch specific fields only.",input:{encoding:"application/json",schema:{type:"object",required:["id"],properties:{id:{type:"string",description:"ID of the template to be updated."},name:{type:"string",description:"Name of the template."},contentMarkdown:{type:"string",description:"Content of the template, markdown supported, can contain variable placeholders."},subject:{type:"string",description:"Subject of the message, used in emails."},updatedBy:{type:"string",format:"did",description:"DID of the user who is updating the template."},disabled:{type:"boolean"}}}},output:{encoding:"application/json",schema:{type:"ref",ref:"lex:tools.ozone.communication.defs#templateView"}}}}},ToolsOzoneModerationDefs:{lexicon:1,id:"tools.ozone.moderation.defs",defs:{modEventView:{type:"object",required:["id","event","subject","subjectBlobCids","createdBy","createdAt"],properties:{id:{type:"integer"},event:{type:"union",refs:["lex:tools.ozone.moderation.defs#modEventTakedown","lex:tools.ozone.moderation.defs#modEventReverseTakedown","lex:tools.ozone.moderation.defs#modEventComment","lex:tools.ozone.moderation.defs#modEventReport","lex:tools.ozone.moderation.defs#modEventLabel","lex:tools.ozone.moderation.defs#modEventAcknowledge","lex:tools.ozone.moderation.defs#modEventEscalate","lex:tools.ozone.moderation.defs#modEventMute","lex:tools.ozone.moderation.defs#modEventEmail","lex:tools.ozone.moderation.defs#modEventResolveAppeal","lex:tools.ozone.moderation.defs#modEventDivert"]},subject:{type:"union",refs:["lex:com.atproto.admin.defs#repoRef","lex:com.atproto.repo.strongRef"]},subjectBlobCids:{type:"array",items:{type:"string"}},createdBy:{type:"string",format:"did"},createdAt:{type:"string",format:"datetime"},creatorHandle:{type:"string"},subjectHandle:{type:"string"}}},modEventViewDetail:{type:"object",required:["id","event","subject","subjectBlobs","createdBy","createdAt"],properties:{id:{type:"integer"},event:{type:"union",refs:["lex:tools.ozone.moderation.defs#modEventTakedown","lex:tools.ozone.moderation.defs#modEventReverseTakedown","lex:tools.ozone.moderation.defs#modEventComment","lex:tools.ozone.moderation.defs#modEventReport","lex:tools.ozone.moderation.defs#modEventLabel","lex:tools.ozone.moderation.defs#modEventAcknowledge","lex:tools.ozone.moderation.defs#modEventEscalate","lex:tools.ozone.moderation.defs#modEventMute","lex:tools.ozone.moderation.defs#modEventEmail","lex:tools.ozone.moderation.defs#modEventResolveAppeal","lex:tools.ozone.moderation.defs#modEventDivert"]},subject:{type:"union",refs:["lex:tools.ozone.moderation.defs#repoView","lex:tools.ozone.moderation.defs#repoViewNotFound","lex:tools.ozone.moderation.defs#recordView","lex:tools.ozone.moderation.defs#recordViewNotFound"]},subjectBlobs:{type:"array",items:{type:"ref",ref:"lex:tools.ozone.moderation.defs#blobView"}},createdBy:{type:"string",format:"did"},createdAt:{type:"string",format:"datetime"}}},subjectStatusView:{type:"object",required:["id","subject","createdAt","updatedAt","reviewState"],properties:{id:{type:"integer"},subject:{type:"union",refs:["lex:com.atproto.admin.defs#repoRef","lex:com.atproto.repo.strongRef"]},subjectBlobCids:{type:"array",items:{type:"string",format:"cid"}},subjectRepoHandle:{type:"string"},updatedAt:{type:"string",format:"datetime",description:"Timestamp referencing when the last update was made to the moderation status of the subject"},createdAt:{type:"string",format:"datetime",description:"Timestamp referencing the first moderation status impacting event was emitted on the subject"},reviewState:{type:"ref",ref:"lex:tools.ozone.moderation.defs#subjectReviewState"},comment:{type:"string",description:"Sticky comment on the subject."},muteUntil:{type:"string",format:"datetime"},lastReviewedBy:{type:"string",format:"did"},lastReviewedAt:{type:"string",format:"datetime"},lastReportedAt:{type:"string",format:"datetime"},lastAppealedAt:{type:"string",format:"datetime",description:"Timestamp referencing when the author of the subject appealed a moderation action"},takendown:{type:"boolean"},appealed:{type:"boolean",description:"True indicates that the a previously taken moderator action was appealed against, by the author of the content. False indicates last appeal was resolved by moderators."},suspendUntil:{type:"string",format:"datetime"},tags:{type:"array",items:{type:"string"}}}},subjectReviewState:{type:"string",knownValues:["lex:tools.ozone.moderation.defs#reviewOpen","lex:tools.ozone.moderation.defs#reviewEscalated","lex:tools.ozone.moderation.defs#reviewClosed","lex:tools.ozone.moderation.defs#reviewNone"]},reviewOpen:{type:"token",description:"Moderator review status of a subject: Open. Indicates that the subject needs to be reviewed by a moderator"},reviewEscalated:{type:"token",description:"Moderator review status of a subject: Escalated. Indicates that the subject was escalated for review by a moderator"},reviewClosed:{type:"token",description:"Moderator review status of a subject: Closed. Indicates that the subject was already reviewed and resolved by a moderator"},reviewNone:{type:"token",description:"Moderator review status of a subject: Unnecessary. Indicates that the subject does not need a review at the moment but there is probably some moderation related metadata available for it"},modEventTakedown:{type:"object",description:"Take down a subject permanently or temporarily",properties:{comment:{type:"string"},durationInHours:{type:"integer",description:"Indicates how long the takedown should be in effect before automatically expiring."}}},modEventReverseTakedown:{type:"object",description:"Revert take down action on a subject",properties:{comment:{type:"string",description:"Describe reasoning behind the reversal."}}},modEventResolveAppeal:{type:"object",description:"Resolve appeal on a subject",properties:{comment:{type:"string",description:"Describe resolution."}}},modEventComment:{type:"object",description:"Add a comment to a subject",required:["comment"],properties:{comment:{type:"string"},sticky:{type:"boolean",description:"Make the comment persistent on the subject"}}},modEventReport:{type:"object",description:"Report a subject",required:["reportType"],properties:{comment:{type:"string"},reportType:{type:"ref",ref:"lex:com.atproto.moderation.defs#reasonType"}}},modEventLabel:{type:"object",description:"Apply/Negate labels on a subject",required:["createLabelVals","negateLabelVals"],properties:{comment:{type:"string"},createLabelVals:{type:"array",items:{type:"string"}},negateLabelVals:{type:"array",items:{type:"string"}}}},modEventAcknowledge:{type:"object",properties:{comment:{type:"string"}}},modEventEscalate:{type:"object",properties:{comment:{type:"string"}}},modEventMute:{type:"object",description:"Mute incoming reports on a subject",required:["durationInHours"],properties:{comment:{type:"string"},durationInHours:{type:"integer",description:"Indicates how long the subject should remain muted."}}},modEventUnmute:{type:"object",description:"Unmute action on a subject",properties:{comment:{type:"string",description:"Describe reasoning behind the reversal."}}},modEventEmail:{type:"object",description:"Keep a log of outgoing email to a user",required:["subjectLine"],properties:{subjectLine:{type:"string",description:"The subject line of the email sent to the user."},content:{type:"string",description:"The content of the email sent to the user."},comment:{type:"string",description:"Additional comment about the outgoing comm."}}},modEventDivert:{type:"object",description:"Divert a record's blobs to a 3rd party service for further scanning/tagging",properties:{comment:{type:"string"}}},modEventTag:{type:"object",description:"Add/Remove a tag on a subject",required:["add","remove"],properties:{add:{type:"array",items:{type:"string"},description:"Tags to be added to the subject. If already exists, won't be duplicated."},remove:{type:"array",items:{type:"string"},description:"Tags to be removed to the subject. Ignores a tag If it doesn't exist, won't be duplicated."},comment:{type:"string",description:"Additional comment about added/removed tags."}}},repoView:{type:"object",required:["did","handle","relatedRecords","indexedAt","moderation"],properties:{did:{type:"string",format:"did"},handle:{type:"string",format:"handle"},email:{type:"string"},relatedRecords:{type:"array",items:{type:"unknown"}},indexedAt:{type:"string",format:"datetime"},moderation:{type:"ref",ref:"lex:tools.ozone.moderation.defs#moderation"},invitedBy:{type:"ref",ref:"lex:com.atproto.server.defs#inviteCode"},invitesDisabled:{type:"boolean"},inviteNote:{type:"string"}}},repoViewDetail:{type:"object",required:["did","handle","relatedRecords","indexedAt","moderation"],properties:{did:{type:"string",format:"did"},handle:{type:"string",format:"handle"},email:{type:"string"},relatedRecords:{type:"array",items:{type:"unknown"}},indexedAt:{type:"string",format:"datetime"},moderation:{type:"ref",ref:"lex:tools.ozone.moderation.defs#moderationDetail"},labels:{type:"array",items:{type:"ref",ref:"lex:com.atproto.label.defs#label"}},invitedBy:{type:"ref",ref:"lex:com.atproto.server.defs#inviteCode"},invites:{type:"array",items:{type:"ref",ref:"lex:com.atproto.server.defs#inviteCode"}},invitesDisabled:{type:"boolean"},inviteNote:{type:"string"},emailConfirmedAt:{type:"string",format:"datetime"}}},repoViewNotFound:{type:"object",required:["did"],properties:{did:{type:"string",format:"did"}}},recordView:{type:"object",required:["uri","cid","value","blobCids","indexedAt","moderation","repo"],properties:{uri:{type:"string",format:"at-uri"},cid:{type:"string",format:"cid"},value:{type:"unknown"},blobCids:{type:"array",items:{type:"string",format:"cid"}},indexedAt:{type:"string",format:"datetime"},moderation:{type:"ref",ref:"lex:tools.ozone.moderation.defs#moderation"},repo:{type:"ref",ref:"lex:tools.ozone.moderation.defs#repoView"}}},recordViewDetail:{type:"object",required:["uri","cid","value","blobs","indexedAt","moderation","repo"],properties:{uri:{type:"string",format:"at-uri"},cid:{type:"string",format:"cid"},value:{type:"unknown"},blobs:{type:"array",items:{type:"ref",ref:"lex:tools.ozone.moderation.defs#blobView"}},labels:{type:"array",items:{type:"ref",ref:"lex:com.atproto.label.defs#label"}},indexedAt:{type:"string",format:"datetime"},moderation:{type:"ref",ref:"lex:tools.ozone.moderation.defs#moderationDetail"},repo:{type:"ref",ref:"lex:tools.ozone.moderation.defs#repoView"}}},recordViewNotFound:{type:"object",required:["uri"],properties:{uri:{type:"string",format:"at-uri"}}},moderation:{type:"object",properties:{subjectStatus:{type:"ref",ref:"lex:tools.ozone.moderation.defs#subjectStatusView"}}},moderationDetail:{type:"object",properties:{subjectStatus:{type:"ref",ref:"lex:tools.ozone.moderation.defs#subjectStatusView"}}},blobView:{type:"object",required:["cid","mimeType","size","createdAt"],properties:{cid:{type:"string",format:"cid"},mimeType:{type:"string"},size:{type:"integer"},createdAt:{type:"string",format:"datetime"},details:{type:"union",refs:["lex:tools.ozone.moderation.defs#imageDetails","lex:tools.ozone.moderation.defs#videoDetails"]},moderation:{type:"ref",ref:"lex:tools.ozone.moderation.defs#moderation"}}},imageDetails:{type:"object",required:["width","height"],properties:{width:{type:"integer"},height:{type:"integer"}}},videoDetails:{type:"object",required:["width","height","length"],properties:{width:{type:"integer"},height:{type:"integer"},length:{type:"integer"}}}}},ToolsOzoneModerationEmitEvent:{lexicon:1,id:"tools.ozone.moderation.emitEvent",defs:{main:{type:"procedure",description:"Take a moderation action on an actor.",input:{encoding:"application/json",schema:{type:"object",required:["event","subject","createdBy"],properties:{event:{type:"union",refs:["lex:tools.ozone.moderation.defs#modEventTakedown","lex:tools.ozone.moderation.defs#modEventAcknowledge","lex:tools.ozone.moderation.defs#modEventEscalate","lex:tools.ozone.moderation.defs#modEventComment","lex:tools.ozone.moderation.defs#modEventLabel","lex:tools.ozone.moderation.defs#modEventReport","lex:tools.ozone.moderation.defs#modEventMute","lex:tools.ozone.moderation.defs#modEventReverseTakedown","lex:tools.ozone.moderation.defs#modEventUnmute","lex:tools.ozone.moderation.defs#modEventEmail","lex:tools.ozone.moderation.defs#modEventTag"]},subject:{type:"union",refs:["lex:com.atproto.admin.defs#repoRef","lex:com.atproto.repo.strongRef"]},subjectBlobCids:{type:"array",items:{type:"string",format:"cid"}},createdBy:{type:"string",format:"did"}}}},output:{encoding:"application/json",schema:{type:"ref",ref:"lex:tools.ozone.moderation.defs#modEventView"}},errors:[{name:"SubjectHasAction"}]}}},ToolsOzoneModerationGetEvent:{lexicon:1,id:"tools.ozone.moderation.getEvent",defs:{main:{type:"query",description:"Get details about a moderation event.",parameters:{type:"params",required:["id"],properties:{id:{type:"integer"}}},output:{encoding:"application/json",schema:{type:"ref",ref:"lex:tools.ozone.moderation.defs#modEventViewDetail"}}}}},ToolsOzoneModerationGetRecord:{lexicon:1,id:"tools.ozone.moderation.getRecord",defs:{main:{type:"query",description:"Get details about a record.",parameters:{type:"params",required:["uri"],properties:{uri:{type:"string",format:"at-uri"},cid:{type:"string",format:"cid"}}},output:{encoding:"application/json",schema:{type:"ref",ref:"lex:tools.ozone.moderation.defs#recordViewDetail"}},errors:[{name:"RecordNotFound"}]}}},ToolsOzoneModerationGetRepo:{lexicon:1,id:"tools.ozone.moderation.getRepo",defs:{main:{type:"query",description:"Get details about a repository.",parameters:{type:"params",required:["did"],properties:{did:{type:"string",format:"did"}}},output:{encoding:"application/json",schema:{type:"ref",ref:"lex:tools.ozone.moderation.defs#repoViewDetail"}},errors:[{name:"RepoNotFound"}]}}},ToolsOzoneModerationQueryEvents:{lexicon:1,id:"tools.ozone.moderation.queryEvents",defs:{main:{type:"query",description:"List moderation events related to a subject.",parameters:{type:"params",properties:{types:{type:"array",items:{type:"string"},description:"The types of events (fully qualified string in the format of tools.ozone.moderation.defs#modEvent<name>) to filter by. If not specified, all events are returned."},createdBy:{type:"string",format:"did"},sortDirection:{type:"string",default:"desc",enum:["asc","desc"],description:"Sort direction for the events. Defaults to descending order of created at timestamp."},createdAfter:{type:"string",format:"datetime",description:"Retrieve events created after a given timestamp"},createdBefore:{type:"string",format:"datetime",description:"Retrieve events created before a given timestamp"},subject:{type:"string",format:"uri"},includeAllUserRecords:{type:"boolean",default:!1,description:"If true, events on all record types (posts, lists, profile etc.) owned by the did are returned"},limit:{type:"integer",minimum:1,maximum:100,default:50},hasComment:{type:"boolean",description:"If true, only events with comments are returned"},comment:{type:"string",description:"If specified, only events with comments containing the keyword are returned"},addedLabels:{type:"array",items:{type:"string"},description:"If specified, only events where all of these labels were added are returned"},removedLabels:{type:"array",items:{type:"string"},description:"If specified, only events where all of these labels were removed are returned"},addedTags:{type:"array",items:{type:"string"},description:"If specified, only events where all of these tags were added are returned"},removedTags:{type:"array",items:{type:"string"},description:"If specified, only events where all of these tags were removed are returned"},reportTypes:{type:"array",items:{type:"string"}},cursor:{type:"string"}}},output:{encoding:"application/json",schema:{type:"object",required:["events"],properties:{cursor:{type:"string"},events:{type:"array",items:{type:"ref",ref:"lex:tools.ozone.moderation.defs#modEventView"}}}}}}}},ToolsOzoneModerationQueryStatuses:{lexicon:1,id:"tools.ozone.moderation.queryStatuses",defs:{main:{type:"query",description:"View moderation statuses of subjects (record or repo).",parameters:{type:"params",properties:{subject:{type:"string",format:"uri"},comment:{type:"string",description:"Search subjects by keyword from comments"},reportedAfter:{type:"string",format:"datetime",description:"Search subjects reported after a given timestamp"},reportedBefore:{type:"string",format:"datetime",description:"Search subjects reported before a given timestamp"},reviewedAfter:{type:"string",format:"datetime",description:"Search subjects reviewed after a given timestamp"},reviewedBefore:{type:"string",format:"datetime",description:"Search subjects reviewed before a given timestamp"},includeMuted:{type:"boolean",description:"By default, we don't include muted subjects in the results. Set this to true to include them."},reviewState:{type:"string",description:"Specify when fetching subjects in a certain state"},ignoreSubjects:{type:"array",items:{type:"string",format:"uri"}},lastReviewedBy:{type:"string",format:"did",description:"Get all subject statuses that were reviewed by a specific moderator"},sortField:{type:"string",default:"lastReportedAt",enum:["lastReviewedAt","lastReportedAt"]},sortDirection:{type:"string",default:"desc",enum:["asc","desc"]},takendown:{type:"boolean",description:"Get subjects that were taken down"},appealed:{type:"boolean",description:"Get subjects in unresolved appealed status"},limit:{type:"integer",minimum:1,maximum:100,default:50},tags:{type:"array",items:{type:"string"}},excludeTags:{type:"array",items:{type:"string"}},cursor:{type:"string"}}},output:{encoding:"application/json",schema:{type:"object",required:["subjectStatuses"],properties:{cursor:{type:"string"},subjectStatuses:{type:"array",items:{type:"ref",ref:"lex:tools.ozone.moderation.defs#subjectStatusView"}}}}}}}},ToolsOzoneModerationSearchRepos:{lexicon:1,id:"tools.ozone.moderation.searchRepos",defs:{main:{type:"query",description:"Find repositories based on a search term.",parameters:{type:"params",properties:{term:{type:"string",description:"DEPRECATED: use 'q' instead"},q:{type:"string"},limit:{type:"integer",minimum:1,maximum:100,default:50},cursor:{type:"string"}}},output:{encoding:"application/json",schema:{type:"object",required:["repos"],properties:{cursor:{type:"string"},repos:{type:"array",items:{type:"ref",ref:"lex:tools.ozone.moderation.defs#repoView"}}}}}}}}},un=Object.values(td),c=new Wi(un),fn={};p(fn,{toKnownErr:()=>rd});function rd(e){return e}var cn={};p(cn,{toKnownErr:()=>id});function id(e){return e}var dn={};p(dn,{toKnownErr:()=>nd});function nd(e){return e}var mn={};p(mn,{toKnownErr:()=>sd});function sd(e){return e}var yn={};p(yn,{toKnownErr:()=>ad});function ad(e){return e}var En={};p(En,{toKnownErr:()=>od});function od(e){return e}var hn={};p(hn,{toKnownErr:()=>ld});function ld(e){return e}var Rn={};p(Rn,{toKnownErr:()=>pd});function pd(e){return e}var gn={};p(gn,{toKnownErr:()=>ud});function ud(e){return e}var bn={};p(bn,{toKnownErr:()=>fd});function fd(e){return e}var An={};p(An,{toKnownErr:()=>cd});function cd(e){return e}var Tn={};p(Tn,{toKnownErr:()=>dd});function dd(e){return e}var vn={};p(vn,{toKnownErr:()=>md});function md(e){return e}var Ln={};p(Ln,{toKnownErr:()=>yd});function yd(e){return e}var _n={};p(_n,{toKnownErr:()=>Ed});function Ed(e){return e}var Cn={};p(Cn,{toKnownErr:()=>hd});function hd(e){return e}var wn={};p(wn,{toKnownErr:()=>Rd});function Rd(e){return e}var Sn={};p(Sn,{toKnownErr:()=>gd});function gd(e){return e}var Bn={};p(Bn,{toKnownErr:()=>bd});function bd(e){return e}var kn={};p(kn,{toKnownErr:()=>Ad});function Ad(e){return e}var xn={};p(xn,{toKnownErr:()=>Td});function Td(e){return e}var Kn={};p(Kn,{InvalidSwapError:()=>Un,isCreate:()=>vd,isDelete:()=>wd,isUpdate:()=>_d,toKnownErr:()=>Vn,validateCreate:()=>Ld,validateDelete:()=>Sd,validateUpdate:()=>Cd});function d(e){return typeof e=="object"&&e!==null}function m(e,i){return i in e}var Un=class extends b{constructor(e){super(e.status,e.error,e.message,e.headers)}};function Vn(e){return e instanceof b&&e.error==="InvalidSwap"?new Un(e):e}function vd(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.repo.applyWrites#create"}function Ld(e){return c.validate("com.atproto.repo.applyWrites#create",e)}function _d(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.repo.applyWrites#update"}function Cd(e){return c.validate("com.atproto.repo.applyWrites#update",e)}function wd(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.repo.applyWrites#delete"}function Sd(e){return c.validate("com.atproto.repo.applyWrites#delete",e)}var Dn={};p(Dn,{InvalidSwapError:()=>Nn,toKnownErr:()=>Pn});var Nn=class extends b{constructor(e){super(e.status,e.error,e.message,e.headers)}};function Pn(e){return e instanceof b&&e.error==="InvalidSwap"?new Nn(e):e}var In={};p(In,{InvalidSwapError:()=>jn,toKnownErr:()=>Fn});var jn=class extends b{constructor(e){super(e.status,e.error,e.message,e.headers)}};function Fn(e){return e instanceof b&&e.error==="InvalidSwap"?new jn(e):e}var qn={};p(qn,{toKnownErr:()=>Bd});function Bd(e){return e}var Mn={};p(Mn,{toKnownErr:()=>kd});function kd(e){return e}var $n={};p($n,{toKnownErr:()=>xd});function xd(e){return e}var On={};p(On,{isRecordBlob:()=>Ud,toKnownErr:()=>Kd,validateRecordBlob:()=>Vd});function Kd(e){return e}function Ud(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.repo.listMissingBlobs#recordBlob"}function Vd(e){return c.validate("com.atproto.repo.listMissingBlobs#recordBlob",e)}var Gn={};p(Gn,{isRecord:()=>Nd,toKnownErr:()=>Dd,validateRecord:()=>Pd});function Dd(e){return e}function Nd(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.repo.listRecords#record"}function Pd(e){return c.validate("com.atproto.repo.listRecords#record",e)}var Vr={};p(Vr,{InvalidSwapError:()=>Xn,toKnownErr:()=>zn});var Xn=class extends b{constructor(e){super(e.status,e.error,e.message,e.headers)}};function zn(e){return e instanceof b&&e.error==="InvalidSwap"?new Xn(e):e}var Hn={};p(Hn,{toKnownErr:()=>Id});function Id(e){return e}var Zn={};p(Zn,{toKnownErr:()=>jd});function jd(e){return e}var Wn={};p(Wn,{toKnownErr:()=>Fd});function Fd(e){return e}var Jn={};p(Jn,{AccountNotFoundError:()=>Qn,ExpiredTokenError:()=>Yn,InvalidEmailError:()=>ts,InvalidTokenError:()=>es,toKnownErr:()=>rs});var Qn=class extends b{constructor(e){super(e.status,e.error,e.message,e.headers)}},Yn=class extends b{constructor(e){super(e.status,e.error,e.message,e.headers)}},es=class extends b{constructor(e){super(e.status,e.error,e.message,e.headers)}},ts=class extends b{constructor(e){super(e.status,e.error,e.message,e.headers)}};function rs(e){if(e instanceof b){if(e.error==="AccountNotFound")return new Qn(e);if(e.error==="ExpiredToken")return new Yn(e);if(e.error==="InvalidToken")return new es(e);if(e.error==="InvalidEmail")return new ts(e)}return e}var is={};p(is,{HandleNotAvailableError:()=>os,IncompatibleDidDocError:()=>us,InvalidHandleError:()=>ns,InvalidInviteCodeError:()=>as,InvalidPasswordError:()=>ss,UnresolvableDidError:()=>ps,UnsupportedDomainError:()=>ls,toKnownErr:()=>fs});var ns=class extends b{constructor(e){super(e.status,e.error,e.message,e.headers)}},ss=class extends b{constructor(e){super(e.status,e.error,e.message,e.headers)}},as=class extends b{constructor(e){super(e.status,e.error,e.message,e.headers)}},os=class extends b{constructor(e){super(e.status,e.error,e.message,e.headers)}},ls=class extends b{constructor(e){super(e.status,e.error,e.message,e.headers)}},ps=class extends b{constructor(e){super(e.status,e.error,e.message,e.headers)}},us=class extends b{constructor(e){super(e.status,e.error,e.message,e.headers)}};function fs(e){if(e instanceof b){if(e.error==="InvalidHandle")return new ns(e);if(e.error==="InvalidPassword")return new ss(e);if(e.error==="InvalidInviteCode")return new as(e);if(e.error==="HandleNotAvailable")return new os(e);if(e.error==="UnsupportedDomain")return new ls(e);if(e.error==="UnresolvableDid")return new ps(e);if(e.error==="IncompatibleDidDoc")return new us(e)}return e}var cs={};p(cs,{AccountTakedownError:()=>ds,isAppPassword:()=>qd,toKnownErr:()=>ms,validateAppPassword:()=>Md});var ds=class extends b{constructor(e){super(e.status,e.error,e.message,e.headers)}};function ms(e){return e instanceof b&&e.error==="AccountTakedown"?new ds(e):e}function qd(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.server.createAppPassword#appPassword"}function Md(e){return c.validate("com.atproto.server.createAppPassword#appPassword",e)}var ys={};p(ys,{toKnownErr:()=>$d});function $d(e){return e}var Es={};p(Es,{isAccountCodes:()=>Gd,toKnownErr:()=>Od,validateAccountCodes:()=>Xd});function Od(e){return e}function Gd(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.server.createInviteCodes#accountCodes"}function Xd(e){return c.validate("com.atproto.server.createInviteCodes#accountCodes",e)}var hs={};p(hs,{AccountTakedownError:()=>Rs,toKnownErr:()=>gs});var Rs=class extends b{constructor(e){super(e.status,e.error,e.message,e.headers)}};function gs(e){return e instanceof b&&e.error==="AccountTakedown"?new Rs(e):e}var bs={};p(bs,{toKnownErr:()=>zd});function zd(e){return e}var As={};p(As,{ExpiredTokenError:()=>Ts,InvalidTokenError:()=>vs,toKnownErr:()=>Ls});var Ts=class extends b{constructor(e){super(e.status,e.error,e.message,e.headers)}},vs=class extends b{constructor(e){super(e.status,e.error,e.message,e.headers)}};function Ls(e){if(e instanceof b){if(e.error==="ExpiredToken")return new Ts(e);if(e.error==="InvalidToken")return new vs(e)}return e}var _s={};p(_s,{toKnownErr:()=>Hd});function Hd(e){return e}var Cs={};p(Cs,{isContact:()=>Qd,isLinks:()=>Wd,toKnownErr:()=>Zd,validateContact:()=>Yd,validateLinks:()=>Jd});function Zd(e){return e}function Wd(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.server.describeServer#links"}function Jd(e){return c.validate("com.atproto.server.describeServer#links",e)}function Qd(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.server.describeServer#contact"}function Yd(e){return c.validate("com.atproto.server.describeServer#contact",e)}var ws={};p(ws,{DuplicateCreateError:()=>Ss,toKnownErr:()=>Bs});var Ss=class extends b{constructor(e){super(e.status,e.error,e.message,e.headers)}};function Bs(e){return e instanceof b&&e.error==="DuplicateCreate"?new Ss(e):e}var ks={};p(ks,{toKnownErr:()=>em});function em(e){return e}var xs={};p(xs,{toKnownErr:()=>tm});function tm(e){return e}var Ks={};p(Ks,{AccountTakedownError:()=>Us,isAppPassword:()=>rm,toKnownErr:()=>Vs,validateAppPassword:()=>im});var Us=class extends b{constructor(e){super(e.status,e.error,e.message,e.headers)}};function Vs(e){return e instanceof b&&e.error==="AccountTakedown"?new Us(e):e}function rm(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.server.listAppPasswords#appPassword"}function im(e){return c.validate("com.atproto.server.listAppPasswords#appPassword",e)}var Ds={};p(Ds,{AccountTakedownError:()=>Ns,toKnownErr:()=>Ps});var Ns=class extends b{constructor(e){super(e.status,e.error,e.message,e.headers)}};function Ps(e){return e instanceof b&&e.error==="AccountTakedown"?new Ns(e):e}var Is={};p(Is,{toKnownErr:()=>nm});function nm(e){return e}var js={};p(js,{toKnownErr:()=>sm});function sm(e){return e}var Fs={};p(Fs,{toKnownErr:()=>am});function am(e){return e}var qs={};p(qs,{toKnownErr:()=>om});function om(e){return e}var Ms={};p(Ms,{toKnownErr:()=>lm});function lm(e){return e}var $s={};p($s,{ExpiredTokenError:()=>Os,InvalidTokenError:()=>Gs,toKnownErr:()=>Xs});var Os=class extends b{constructor(e){super(e.status,e.error,e.message,e.headers)}},Gs=class extends b{constructor(e){super(e.status,e.error,e.message,e.headers)}};function Xs(e){if(e instanceof b){if(e.error==="ExpiredToken")return new Os(e);if(e.error==="InvalidToken")return new Gs(e)}return e}var zs={};p(zs,{toKnownErr:()=>pm});function pm(e){return e}var Hs={};p(Hs,{ExpiredTokenError:()=>Zs,InvalidTokenError:()=>Ws,TokenRequiredError:()=>Js,toKnownErr:()=>Qs});var Zs=class extends b{constructor(e){super(e.status,e.error,e.message,e.headers)}},Ws=class extends b{constructor(e){super(e.status,e.error,e.message,e.headers)}},Js=class extends b{constructor(e){super(e.status,e.error,e.message,e.headers)}};function Qs(e){if(e instanceof b){if(e.error==="ExpiredToken")return new Zs(e);if(e.error==="InvalidToken")return new Ws(e);if(e.error==="TokenRequired")return new Js(e)}return e}var Ys={};p(Ys,{toKnownErr:()=>um});function um(e){return e}var ea={};p(ea,{toKnownErr:()=>fm});function fm(e){return e}var ta={};p(ta,{toKnownErr:()=>cm});function cm(e){return e}var ra={};p(ra,{HeadNotFoundError:()=>ia,toKnownErr:()=>na});var ia=class extends b{constructor(e){super(e.status,e.error,e.message,e.headers)}};function na(e){return e instanceof b&&e.error==="HeadNotFound"?new ia(e):e}var sa={};p(sa,{RepoNotFoundError:()=>aa,toKnownErr:()=>oa});var aa=class extends b{constructor(e){super(e.status,e.error,e.message,e.headers)}};function oa(e){return e instanceof b&&e.error==="RepoNotFound"?new aa(e):e}var la={};p(la,{toKnownErr:()=>dm});function dm(e){return e}var pa={};p(pa,{toKnownErr:()=>mm});function mm(e){return e}var ua={};p(ua,{toKnownErr:()=>ym});function ym(e){return e}var fa={};p(fa,{isRepo:()=>hm,toKnownErr:()=>Em,validateRepo:()=>Rm});function Em(e){return e}function hm(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.sync.listRepos#repo"}function Rm(e){return c.validate("com.atproto.sync.listRepos#repo",e)}var ca={};p(ca,{toKnownErr:()=>gm});function gm(e){return e}var da={};p(da,{toKnownErr:()=>bm});function bm(e){return e}var ma={};p(ma,{toKnownErr:()=>Am});function Am(e){return e}var ya={};p(ya,{toKnownErr:()=>Tm});function Tm(e){return e}var Ea={};p(Ea,{toKnownErr:()=>vm});function vm(e){return e}var ha={};p(ha,{toKnownErr:()=>Lm});function Lm(e){return e}var Ra={};p(Ra,{toKnownErr:()=>_m});function _m(e){return e}var ga={};p(ga,{toKnownErr:()=>Cm});function Cm(e){return e}var ba={};p(ba,{toKnownErr:()=>wm});function wm(e){return e}var Aa={};p(Aa,{toKnownErr:()=>Sm});function Sm(e){return e}var Ta={};p(Ta,{toKnownErr:()=>Bm});function Bm(e){return e}var va={};p(va,{toKnownErr:()=>km});function km(e){return e}var La={};p(La,{isFeed:()=>Km,isLinks:()=>Vm,toKnownErr:()=>xm,validateFeed:()=>Um,validateLinks:()=>Dm});function xm(e){return e}function Km(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.feed.describeFeedGenerator#feed"}function Um(e){return c.validate("app.bsky.feed.describeFeedGenerator#feed",e)}function Vm(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.feed.describeFeedGenerator#links"}function Dm(e){return c.validate("app.bsky.feed.describeFeedGenerator#links",e)}var _a={};p(_a,{toKnownErr:()=>Nm});function Nm(e){return e}var Ca={};p(Ca,{BlockedActorError:()=>wa,BlockedByActorError:()=>Sa,toKnownErr:()=>Ba});var wa=class extends b{constructor(e){super(e.status,e.error,e.message,e.headers)}},Sa=class extends b{constructor(e){super(e.status,e.error,e.message,e.headers)}};function Ba(e){if(e instanceof b){if(e.error==="BlockedActor")return new wa(e);if(e.error==="BlockedByActor")return new Sa(e)}return e}var ka={};p(ka,{BlockedActorError:()=>xa,BlockedByActorError:()=>Ka,toKnownErr:()=>Ua});var xa=class extends b{constructor(e){super(e.status,e.error,e.message,e.headers)}},Ka=class extends b{constructor(e){super(e.status,e.error,e.message,e.headers)}};function Ua(e){if(e instanceof b){if(e.error==="BlockedActor")return new xa(e);if(e.error==="BlockedByActor")return new Ka(e)}return e}var Va={};p(Va,{UnknownFeedError:()=>Da,toKnownErr:()=>Na});var Da=class extends b{constructor(e){super(e.status,e.error,e.message,e.headers)}};function Na(e){return e instanceof b&&e.error==="UnknownFeed"?new Da(e):e}var Pa={};p(Pa,{toKnownErr:()=>Pm});function Pm(e){return e}var Ia={};p(Ia,{toKnownErr:()=>Im});function Im(e){return e}var ja={};p(ja,{UnknownFeedError:()=>Fa,toKnownErr:()=>qa});var Fa=class extends b{constructor(e){super(e.status,e.error,e.message,e.headers)}};function qa(e){return e instanceof b&&e.error==="UnknownFeed"?new Fa(e):e}var Ma={};p(Ma,{isLike:()=>Fm,toKnownErr:()=>jm,validateLike:()=>qm});function jm(e){return e}function Fm(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.feed.getLikes#like"}function qm(e){return c.validate("app.bsky.feed.getLikes#like",e)}var $a={};p($a,{UnknownListError:()=>Oa,toKnownErr:()=>Ga});var Oa=class extends b{constructor(e){super(e.status,e.error,e.message,e.headers)}};function Ga(e){return e instanceof b&&e.error==="UnknownList"?new Oa(e):e}var Xa={};p(Xa,{NotFoundError:()=>za,toKnownErr:()=>Ha});var za=class extends b{constructor(e){super(e.status,e.error,e.message,e.headers)}};function Ha(e){return e instanceof b&&e.error==="NotFound"?new za(e):e}var Za={};p(Za,{toKnownErr:()=>Mm});function Mm(e){return e}var Wa={};p(Wa,{toKnownErr:()=>$m});function $m(e){return e}var Ja={};p(Ja,{toKnownErr:()=>Om});function Om(e){return e}var Qa={};p(Qa,{toKnownErr:()=>Gm});function Gm(e){return e}var Ya={};p(Ya,{BadQueryStringError:()=>eo,toKnownErr:()=>to});var eo=class extends b{constructor(e){super(e.status,e.error,e.message,e.headers)}};function to(e){return e instanceof b&&e.error==="BadQueryString"?new eo(e):e}var ro={};p(ro,{toKnownErr:()=>Xm});function Xm(e){return e}var io={};p(io,{toKnownErr:()=>zm});function zm(e){return e}var no={};p(no,{toKnownErr:()=>Hm});function Hm(e){return e}var so={};p(so,{toKnownErr:()=>Zm});function Zm(e){return e}var ao={};p(ao,{toKnownErr:()=>Wm});function Wm(e){return e}var oo={};p(oo,{toKnownErr:()=>Jm});function Jm(e){return e}var lo={};p(lo,{toKnownErr:()=>Qm});function Qm(e){return e}var po={};p(po,{toKnownErr:()=>Ym});function Ym(e){return e}var uo={};p(uo,{ActorNotFoundError:()=>fo,toKnownErr:()=>co});var fo=class extends b{constructor(e){super(e.status,e.error,e.message,e.headers)}};function co(e){return e instanceof b&&e.error==="ActorNotFound"?new fo(e):e}var mo={};p(mo,{toKnownErr:()=>ey});function ey(e){return e}var yo={};p(yo,{toKnownErr:()=>ty});function ty(e){return e}var Eo={};p(Eo,{toKnownErr:()=>ry});function ry(e){return e}var ho={};p(ho,{toKnownErr:()=>iy});function iy(e){return e}var Ro={};p(Ro,{toKnownErr:()=>ny});function ny(e){return e}var go={};p(go,{toKnownErr:()=>sy});function sy(e){return e}var bo={};p(bo,{toKnownErr:()=>ay});function ay(e){return e}var Ao={};p(Ao,{isNotification:()=>ly,toKnownErr:()=>oy,validateNotification:()=>py});function oy(e){return e}function ly(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.notification.listNotifications#notification"}function py(e){return c.validate("app.bsky.notification.listNotifications#notification",e)}var To={};p(To,{toKnownErr:()=>uy});function uy(e){return e}var vo={};p(vo,{toKnownErr:()=>fy});function fy(e){return e}var Lo={};p(Lo,{toKnownErr:()=>cy});function cy(e){return e}var _o={};p(_o,{isSuggestion:()=>my,toKnownErr:()=>dy,validateSuggestion:()=>yy});function dy(e){return e}function my(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.unspecced.getTaggedSuggestions#suggestion"}function yy(e){return c.validate("app.bsky.unspecced.getTaggedSuggestions#suggestion",e)}var Co={};p(Co,{BadQueryStringError:()=>wo,toKnownErr:()=>So});var wo=class extends b{constructor(e){super(e.status,e.error,e.message,e.headers)}};function So(e){return e instanceof b&&e.error==="BadQueryString"?new wo(e):e}var Bo={};p(Bo,{BadQueryStringError:()=>ko,toKnownErr:()=>xo});var ko=class extends b{constructor(e){super(e.status,e.error,e.message,e.headers)}};function xo(e){return e instanceof b&&e.error==="BadQueryString"?new ko(e):e}var Ko={};p(Ko,{toKnownErr:()=>Ey});function Ey(e){return e}var Uo={};p(Uo,{toKnownErr:()=>hy});function hy(e){return e}var Vo={};p(Vo,{toKnownErr:()=>Ry});function Ry(e){return e}var Do={};p(Do,{toKnownErr:()=>gy});function gy(e){return e}var No={};p(No,{SubjectHasActionError:()=>Po,toKnownErr:()=>Io});var Po=class extends b{constructor(e){super(e.status,e.error,e.message,e.headers)}};function Io(e){return e instanceof b&&e.error==="SubjectHasAction"?new Po(e):e}var jo={};p(jo,{toKnownErr:()=>by});function by(e){return e}var Fo={};p(Fo,{RecordNotFoundError:()=>qo,toKnownErr:()=>Mo});var qo=class extends b{constructor(e){super(e.status,e.error,e.message,e.headers)}};function Mo(e){return e instanceof b&&e.error==="RecordNotFound"?new qo(e):e}var $o={};p($o,{RepoNotFoundError:()=>Oo,toKnownErr:()=>Go});var Oo=class extends b{constructor(e){super(e.status,e.error,e.message,e.headers)}};function Go(e){return e instanceof b&&e.error==="RepoNotFound"?new Oo(e):e}var Xo={};p(Xo,{toKnownErr:()=>Ay});function Ay(e){return e}var zo={};p(zo,{toKnownErr:()=>Ty});function Ty(e){return e}var Ho={};p(Ho,{toKnownErr:()=>vy});function vy(e){return e}var Zo={};p(Zo,{isAccountView:()=>Cy,isRepoBlobRef:()=>ky,isRepoRef:()=>Sy,isStatusAttr:()=>Ly,validateAccountView:()=>wy,validateRepoBlobRef:()=>xy,validateRepoRef:()=>By,validateStatusAttr:()=>_y});function Ly(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.admin.defs#statusAttr"}function _y(e){return c.validate("com.atproto.admin.defs#statusAttr",e)}function Cy(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.admin.defs#accountView"}function wy(e){return c.validate("com.atproto.admin.defs#accountView",e)}function Sy(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.admin.defs#repoRef"}function By(e){return c.validate("com.atproto.admin.defs#repoRef",e)}function ky(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.admin.defs#repoBlobRef"}function xy(e){return c.validate("com.atproto.admin.defs#repoBlobRef",e)}var Dr={};p(Dr,{isLabel:()=>Ky,isLabelValueDefinition:()=>Iy,isLabelValueDefinitionStrings:()=>Fy,isSelfLabel:()=>Ny,isSelfLabels:()=>Vy,validateLabel:()=>Uy,validateLabelValueDefinition:()=>jy,validateLabelValueDefinitionStrings:()=>qy,validateSelfLabel:()=>Py,validateSelfLabels:()=>Dy});function Ky(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.label.defs#label"}function Uy(e){return c.validate("com.atproto.label.defs#label",e)}function Vy(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.label.defs#selfLabels"}function Dy(e){return c.validate("com.atproto.label.defs#selfLabels",e)}function Ny(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.label.defs#selfLabel"}function Py(e){return c.validate("com.atproto.label.defs#selfLabel",e)}function Iy(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.label.defs#labelValueDefinition"}function jy(e){return c.validate("com.atproto.label.defs#labelValueDefinition",e)}function Fy(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.label.defs#labelValueDefinitionStrings"}function qy(e){return c.validate("com.atproto.label.defs#labelValueDefinitionStrings",e)}var Wo={};p(Wo,{isInfo:()=>Oy,isLabels:()=>My,validateInfo:()=>Gy,validateLabels:()=>$y});function My(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.label.subscribeLabels#labels"}function $y(e){return c.validate("com.atproto.label.subscribeLabels#labels",e)}function Oy(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.label.subscribeLabels#info"}function Gy(e){return c.validate("com.atproto.label.subscribeLabels#info",e)}var Jo={};p(Jo,{REASONAPPEAL:()=>Qy,REASONMISLEADING:()=>Hy,REASONOTHER:()=>Jy,REASONRUDE:()=>Wy,REASONSEXUAL:()=>Zy,REASONSPAM:()=>Xy,REASONVIOLATION:()=>zy});var Xy="com.atproto.moderation.defs#reasonSpam",zy="com.atproto.moderation.defs#reasonViolation",Hy="com.atproto.moderation.defs#reasonMisleading",Zy="com.atproto.moderation.defs#reasonSexual",Wy="com.atproto.moderation.defs#reasonRude",Jy="com.atproto.moderation.defs#reasonOther",Qy="com.atproto.moderation.defs#reasonAppeal",Qo={};p(Qo,{isMain:()=>Yy,validateMain:()=>eE});function Yy(e){return d(e)&&m(e,"$type")&&(e.$type==="com.atproto.repo.strongRef#main"||e.$type==="com.atproto.repo.strongRef")}function eE(e){return c.validate("com.atproto.repo.strongRef#main",e)}var Yo={};p(Yo,{isInviteCode:()=>tE,isInviteCodeUse:()=>iE,validateInviteCode:()=>rE,validateInviteCodeUse:()=>nE});function tE(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.server.defs#inviteCode"}function rE(e){return c.validate("com.atproto.server.defs#inviteCode",e)}function iE(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.server.defs#inviteCodeUse"}function nE(e){return c.validate("com.atproto.server.defs#inviteCodeUse",e)}var el={};p(el,{isCommit:()=>sE,isHandle:()=>pE,isIdentity:()=>oE,isInfo:()=>yE,isMigrate:()=>fE,isRepoOp:()=>hE,isTombstone:()=>dE,validateCommit:()=>aE,validateHandle:()=>uE,validateIdentity:()=>lE,validateInfo:()=>EE,validateMigrate:()=>cE,validateRepoOp:()=>RE,validateTombstone:()=>mE});function sE(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.sync.subscribeRepos#commit"}function aE(e){return c.validate("com.atproto.sync.subscribeRepos#commit",e)}function oE(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.sync.subscribeRepos#identity"}function lE(e){return c.validate("com.atproto.sync.subscribeRepos#identity",e)}function pE(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.sync.subscribeRepos#handle"}function uE(e){return c.validate("com.atproto.sync.subscribeRepos#handle",e)}function fE(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.sync.subscribeRepos#migrate"}function cE(e){return c.validate("com.atproto.sync.subscribeRepos#migrate",e)}function dE(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.sync.subscribeRepos#tombstone"}function mE(e){return c.validate("com.atproto.sync.subscribeRepos#tombstone",e)}function yE(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.sync.subscribeRepos#info"}function EE(e){return c.validate("com.atproto.sync.subscribeRepos#info",e)}function hE(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.sync.subscribeRepos#repoOp"}function RE(e){return c.validate("com.atproto.sync.subscribeRepos#repoOp",e)}var _={};p(_,{isAdultContentPref:()=>BE,isContentLabelPref:()=>xE,isFeedViewPref:()=>PE,isHiddenPostsPref:()=>zE,isInterestsPref:()=>qE,isLabelerPrefItem:()=>JE,isLabelersPref:()=>ZE,isMutedWord:()=>$E,isMutedWordsPref:()=>GE,isPersonalDetailsPref:()=>DE,isProfileAssociated:()=>_E,isProfileView:()=>AE,isProfileViewBasic:()=>gE,isProfileViewDetailed:()=>vE,isSavedFeedsPref:()=>UE,isThreadViewPref:()=>jE,isViewerState:()=>wE,validateAdultContentPref:()=>kE,validateContentLabelPref:()=>KE,validateFeedViewPref:()=>IE,validateHiddenPostsPref:()=>HE,validateInterestsPref:()=>ME,validateLabelerPrefItem:()=>QE,validateLabelersPref:()=>WE,validateMutedWord:()=>OE,validateMutedWordsPref:()=>XE,validatePersonalDetailsPref:()=>NE,validateProfileAssociated:()=>CE,validateProfileView:()=>TE,validateProfileViewBasic:()=>bE,validateProfileViewDetailed:()=>LE,validateSavedFeedsPref:()=>VE,validateThreadViewPref:()=>FE,validateViewerState:()=>SE});function gE(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.actor.defs#profileViewBasic"}function bE(e){return c.validate("app.bsky.actor.defs#profileViewBasic",e)}function AE(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.actor.defs#profileView"}function TE(e){return c.validate("app.bsky.actor.defs#profileView",e)}function vE(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.actor.defs#profileViewDetailed"}function LE(e){return c.validate("app.bsky.actor.defs#profileViewDetailed",e)}function _E(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.actor.defs#profileAssociated"}function CE(e){return c.validate("app.bsky.actor.defs#profileAssociated",e)}function wE(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.actor.defs#viewerState"}function SE(e){return c.validate("app.bsky.actor.defs#viewerState",e)}function BE(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.actor.defs#adultContentPref"}function kE(e){return c.validate("app.bsky.actor.defs#adultContentPref",e)}function xE(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.actor.defs#contentLabelPref"}function KE(e){return c.validate("app.bsky.actor.defs#contentLabelPref",e)}function UE(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.actor.defs#savedFeedsPref"}function VE(e){return c.validate("app.bsky.actor.defs#savedFeedsPref",e)}function DE(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.actor.defs#personalDetailsPref"}function NE(e){return c.validate("app.bsky.actor.defs#personalDetailsPref",e)}function PE(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.actor.defs#feedViewPref"}function IE(e){return c.validate("app.bsky.actor.defs#feedViewPref",e)}function jE(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.actor.defs#threadViewPref"}function FE(e){return c.validate("app.bsky.actor.defs#threadViewPref",e)}function qE(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.actor.defs#interestsPref"}function ME(e){return c.validate("app.bsky.actor.defs#interestsPref",e)}function $E(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.actor.defs#mutedWord"}function OE(e){return c.validate("app.bsky.actor.defs#mutedWord",e)}function GE(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.actor.defs#mutedWordsPref"}function XE(e){return c.validate("app.bsky.actor.defs#mutedWordsPref",e)}function zE(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.actor.defs#hiddenPostsPref"}function HE(e){return c.validate("app.bsky.actor.defs#hiddenPostsPref",e)}function ZE(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.actor.defs#labelersPref"}function WE(e){return c.validate("app.bsky.actor.defs#labelersPref",e)}function JE(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.actor.defs#labelerPrefItem"}function QE(e){return c.validate("app.bsky.actor.defs#labelerPrefItem",e)}var Nr={};p(Nr,{isRecord:()=>YE,validateRecord:()=>eh});function YE(e){return d(e)&&m(e,"$type")&&(e.$type==="app.bsky.actor.profile#main"||e.$type==="app.bsky.actor.profile")}function eh(e){return c.validate("app.bsky.actor.profile#main",e)}var Et={};p(Et,{isExternal:()=>ih,isMain:()=>th,isView:()=>sh,isViewExternal:()=>oh,validateExternal:()=>nh,validateMain:()=>rh,validateView:()=>ah,validateViewExternal:()=>lh});function th(e){return d(e)&&m(e,"$type")&&(e.$type==="app.bsky.embed.external#main"||e.$type==="app.bsky.embed.external")}function rh(e){return c.validate("app.bsky.embed.external#main",e)}function ih(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.embed.external#external"}function nh(e){return c.validate("app.bsky.embed.external#external",e)}function sh(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.embed.external#view"}function ah(e){return c.validate("app.bsky.embed.external#view",e)}function oh(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.embed.external#viewExternal"}function lh(e){return c.validate("app.bsky.embed.external#viewExternal",e)}var Oe={};p(Oe,{isAspectRatio:()=>dh,isImage:()=>fh,isMain:()=>ph,isView:()=>yh,isViewImage:()=>hh,validateAspectRatio:()=>mh,validateImage:()=>ch,validateMain:()=>uh,validateView:()=>Eh,validateViewImage:()=>Rh});function ph(e){return d(e)&&m(e,"$type")&&(e.$type==="app.bsky.embed.images#main"||e.$type==="app.bsky.embed.images")}function uh(e){return c.validate("app.bsky.embed.images#main",e)}function fh(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.embed.images#image"}function ch(e){return c.validate("app.bsky.embed.images#image",e)}function dh(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.embed.images#aspectRatio"}function mh(e){return c.validate("app.bsky.embed.images#aspectRatio",e)}function yh(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.embed.images#view"}function Eh(e){return c.validate("app.bsky.embed.images#view",e)}function hh(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.embed.images#viewImage"}function Rh(e){return c.validate("app.bsky.embed.images#viewImage",e)}var Be={};p(Be,{isMain:()=>gh,isView:()=>Ah,isViewBlocked:()=>wh,isViewNotFound:()=>_h,isViewRecord:()=>vh,validateMain:()=>bh,validateView:()=>Th,validateViewBlocked:()=>Sh,validateViewNotFound:()=>Ch,validateViewRecord:()=>Lh});function gh(e){return d(e)&&m(e,"$type")&&(e.$type==="app.bsky.embed.record#main"||e.$type==="app.bsky.embed.record")}function bh(e){return c.validate("app.bsky.embed.record#main",e)}function Ah(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.embed.record#view"}function Th(e){return c.validate("app.bsky.embed.record#view",e)}function vh(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.embed.record#viewRecord"}function Lh(e){return c.validate("app.bsky.embed.record#viewRecord",e)}function _h(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.embed.record#viewNotFound"}function Ch(e){return c.validate("app.bsky.embed.record#viewNotFound",e)}function wh(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.embed.record#viewBlocked"}function Sh(e){return c.validate("app.bsky.embed.record#viewBlocked",e)}var Ge={};p(Ge,{isMain:()=>Bh,isView:()=>xh,validateMain:()=>kh,validateView:()=>Kh});function Bh(e){return d(e)&&m(e,"$type")&&(e.$type==="app.bsky.embed.recordWithMedia#main"||e.$type==="app.bsky.embed.recordWithMedia")}function kh(e){return c.validate("app.bsky.embed.recordWithMedia#main",e)}function xh(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.embed.recordWithMedia#view"}function Kh(e){return c.validate("app.bsky.embed.recordWithMedia#view",e)}var tl={};p(tl,{isBlockedAuthor:()=>Zh,isBlockedPost:()=>zh,isFeedViewPost:()=>Ph,isGeneratorView:()=>Jh,isGeneratorViewerState:()=>Yh,isNotFoundPost:()=>Gh,isPostView:()=>Uh,isReasonRepost:()=>qh,isReplyRef:()=>jh,isSkeletonFeedPost:()=>tR,isSkeletonReasonRepost:()=>iR,isThreadViewPost:()=>$h,isThreadgateView:()=>sR,isViewerState:()=>Dh,validateBlockedAuthor:()=>Wh,validateBlockedPost:()=>Hh,validateFeedViewPost:()=>Ih,validateGeneratorView:()=>Qh,validateGeneratorViewerState:()=>eR,validateNotFoundPost:()=>Xh,validatePostView:()=>Vh,validateReasonRepost:()=>Mh,validateReplyRef:()=>Fh,validateSkeletonFeedPost:()=>rR,validateSkeletonReasonRepost:()=>nR,validateThreadViewPost:()=>Oh,validateThreadgateView:()=>aR,validateViewerState:()=>Nh});function Uh(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.feed.defs#postView"}function Vh(e){return c.validate("app.bsky.feed.defs#postView",e)}function Dh(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.feed.defs#viewerState"}function Nh(e){return c.validate("app.bsky.feed.defs#viewerState",e)}function Ph(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.feed.defs#feedViewPost"}function Ih(e){return c.validate("app.bsky.feed.defs#feedViewPost",e)}function jh(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.feed.defs#replyRef"}function Fh(e){return c.validate("app.bsky.feed.defs#replyRef",e)}function qh(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.feed.defs#reasonRepost"}function Mh(e){return c.validate("app.bsky.feed.defs#reasonRepost",e)}function $h(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.feed.defs#threadViewPost"}function Oh(e){return c.validate("app.bsky.feed.defs#threadViewPost",e)}function Gh(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.feed.defs#notFoundPost"}function Xh(e){return c.validate("app.bsky.feed.defs#notFoundPost",e)}function zh(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.feed.defs#blockedPost"}function Hh(e){return c.validate("app.bsky.feed.defs#blockedPost",e)}function Zh(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.feed.defs#blockedAuthor"}function Wh(e){return c.validate("app.bsky.feed.defs#blockedAuthor",e)}function Jh(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.feed.defs#generatorView"}function Qh(e){return c.validate("app.bsky.feed.defs#generatorView",e)}function Yh(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.feed.defs#generatorViewerState"}function eR(e){return c.validate("app.bsky.feed.defs#generatorViewerState",e)}function tR(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.feed.defs#skeletonFeedPost"}function rR(e){return c.validate("app.bsky.feed.defs#skeletonFeedPost",e)}function iR(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.feed.defs#skeletonReasonRepost"}function nR(e){return c.validate("app.bsky.feed.defs#skeletonReasonRepost",e)}function sR(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.feed.defs#threadgateView"}function aR(e){return c.validate("app.bsky.feed.defs#threadgateView",e)}var rl={};p(rl,{isRecord:()=>oR,validateRecord:()=>lR});function oR(e){return d(e)&&m(e,"$type")&&(e.$type==="app.bsky.feed.generator#main"||e.$type==="app.bsky.feed.generator")}function lR(e){return c.validate("app.bsky.feed.generator#main",e)}var il={};p(il,{isRecord:()=>pR,validateRecord:()=>uR});function pR(e){return d(e)&&m(e,"$type")&&(e.$type==="app.bsky.feed.like#main"||e.$type==="app.bsky.feed.like")}function uR(e){return c.validate("app.bsky.feed.like#main",e)}var Pe={};p(Pe,{isEntity:()=>yR,isRecord:()=>fR,isReplyRef:()=>dR,isTextSlice:()=>hR,validateEntity:()=>ER,validateRecord:()=>cR,validateReplyRef:()=>mR,validateTextSlice:()=>RR});function fR(e){return d(e)&&m(e,"$type")&&(e.$type==="app.bsky.feed.post#main"||e.$type==="app.bsky.feed.post")}function cR(e){return c.validate("app.bsky.feed.post#main",e)}function dR(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.feed.post#replyRef"}function mR(e){return c.validate("app.bsky.feed.post#replyRef",e)}function yR(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.feed.post#entity"}function ER(e){return c.validate("app.bsky.feed.post#entity",e)}function hR(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.feed.post#textSlice"}function RR(e){return c.validate("app.bsky.feed.post#textSlice",e)}var nl={};p(nl,{isRecord:()=>gR,validateRecord:()=>bR});function gR(e){return d(e)&&m(e,"$type")&&(e.$type==="app.bsky.feed.repost#main"||e.$type==="app.bsky.feed.repost")}function bR(e){return c.validate("app.bsky.feed.repost#main",e)}var sl={};p(sl,{isFollowingRule:()=>_R,isListRule:()=>wR,isMentionRule:()=>vR,isRecord:()=>AR,validateFollowingRule:()=>CR,validateListRule:()=>SR,validateMentionRule:()=>LR,validateRecord:()=>TR});function AR(e){return d(e)&&m(e,"$type")&&(e.$type==="app.bsky.feed.threadgate#main"||e.$type==="app.bsky.feed.threadgate")}function TR(e){return c.validate("app.bsky.feed.threadgate#main",e)}function vR(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.feed.threadgate#mentionRule"}function LR(e){return c.validate("app.bsky.feed.threadgate#mentionRule",e)}function _R(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.feed.threadgate#followingRule"}function CR(e){return c.validate("app.bsky.feed.threadgate#followingRule",e)}function wR(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.feed.threadgate#listRule"}function SR(e){return c.validate("app.bsky.feed.threadgate#listRule",e)}var al={};p(al,{isRecord:()=>BR,validateRecord:()=>kR});function BR(e){return d(e)&&m(e,"$type")&&(e.$type==="app.bsky.graph.block#main"||e.$type==="app.bsky.graph.block")}function kR(e){return c.validate("app.bsky.graph.block#main",e)}var ol={};p(ol,{CURATELIST:()=>IR,MODLIST:()=>PR,isListItemView:()=>DR,isListView:()=>UR,isListViewBasic:()=>xR,isListViewerState:()=>jR,isNotFoundActor:()=>qR,isRelationship:()=>$R,validateListItemView:()=>NR,validateListView:()=>VR,validateListViewBasic:()=>KR,validateListViewerState:()=>FR,validateNotFoundActor:()=>MR,validateRelationship:()=>OR});function xR(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.graph.defs#listViewBasic"}function KR(e){return c.validate("app.bsky.graph.defs#listViewBasic",e)}function UR(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.graph.defs#listView"}function VR(e){return c.validate("app.bsky.graph.defs#listView",e)}function DR(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.graph.defs#listItemView"}function NR(e){return c.validate("app.bsky.graph.defs#listItemView",e)}var PR="app.bsky.graph.defs#modlist",IR="app.bsky.graph.defs#curatelist";function jR(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.graph.defs#listViewerState"}function FR(e){return c.validate("app.bsky.graph.defs#listViewerState",e)}function qR(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.graph.defs#notFoundActor"}function MR(e){return c.validate("app.bsky.graph.defs#notFoundActor",e)}function $R(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.graph.defs#relationship"}function OR(e){return c.validate("app.bsky.graph.defs#relationship",e)}var ll={};p(ll,{isRecord:()=>GR,validateRecord:()=>XR});function GR(e){return d(e)&&m(e,"$type")&&(e.$type==="app.bsky.graph.follow#main"||e.$type==="app.bsky.graph.follow")}function XR(e){return c.validate("app.bsky.graph.follow#main",e)}var pl={};p(pl,{isRecord:()=>zR,validateRecord:()=>HR});function zR(e){return d(e)&&m(e,"$type")&&(e.$type==="app.bsky.graph.list#main"||e.$type==="app.bsky.graph.list")}function HR(e){return c.validate("app.bsky.graph.list#main",e)}var ul={};p(ul,{isRecord:()=>ZR,validateRecord:()=>WR});function ZR(e){return d(e)&&m(e,"$type")&&(e.$type==="app.bsky.graph.listblock#main"||e.$type==="app.bsky.graph.listblock")}function WR(e){return c.validate("app.bsky.graph.listblock#main",e)}var fl={};p(fl,{isRecord:()=>JR,validateRecord:()=>QR});function JR(e){return d(e)&&m(e,"$type")&&(e.$type==="app.bsky.graph.listitem#main"||e.$type==="app.bsky.graph.listitem")}function QR(e){return c.validate("app.bsky.graph.listitem#main",e)}var cl={};p(cl,{isLabelerPolicies:()=>sg,isLabelerView:()=>YR,isLabelerViewDetailed:()=>tg,isLabelerViewerState:()=>ig,validateLabelerPolicies:()=>ag,validateLabelerView:()=>eg,validateLabelerViewDetailed:()=>rg,validateLabelerViewerState:()=>ng});function YR(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.labeler.defs#labelerView"}function eg(e){return c.validate("app.bsky.labeler.defs#labelerView",e)}function tg(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.labeler.defs#labelerViewDetailed"}function rg(e){return c.validate("app.bsky.labeler.defs#labelerViewDetailed",e)}function ig(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.labeler.defs#labelerViewerState"}function ng(e){return c.validate("app.bsky.labeler.defs#labelerViewerState",e)}function sg(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.labeler.defs#labelerPolicies"}function ag(e){return c.validate("app.bsky.labeler.defs#labelerPolicies",e)}var dl={};p(dl,{isRecord:()=>og,validateRecord:()=>lg});function og(e){return d(e)&&m(e,"$type")&&(e.$type==="app.bsky.labeler.service#main"||e.$type==="app.bsky.labeler.service")}function lg(e){return c.validate("app.bsky.labeler.service#main",e)}var ge={};p(ge,{isByteSlice:()=>hg,isLink:()=>dg,isMain:()=>pg,isMention:()=>fg,isTag:()=>yg,validateByteSlice:()=>Rg,validateLink:()=>mg,validateMain:()=>ug,validateMention:()=>cg,validateTag:()=>Eg});function pg(e){return d(e)&&m(e,"$type")&&(e.$type==="app.bsky.richtext.facet#main"||e.$type==="app.bsky.richtext.facet")}function ug(e){return c.validate("app.bsky.richtext.facet#main",e)}function fg(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.richtext.facet#mention"}function cg(e){return c.validate("app.bsky.richtext.facet#mention",e)}function dg(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.richtext.facet#link"}function mg(e){return c.validate("app.bsky.richtext.facet#link",e)}function yg(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.richtext.facet#tag"}function Eg(e){return c.validate("app.bsky.richtext.facet#tag",e)}function hg(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.richtext.facet#byteSlice"}function Rg(e){return c.validate("app.bsky.richtext.facet#byteSlice",e)}var ml={};p(ml,{isSkeletonSearchActor:()=>Ag,isSkeletonSearchPost:()=>gg,validateSkeletonSearchActor:()=>Tg,validateSkeletonSearchPost:()=>bg});function gg(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.unspecced.defs#skeletonSearchPost"}function bg(e){return c.validate("app.bsky.unspecced.defs#skeletonSearchPost",e)}function Ag(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.unspecced.defs#skeletonSearchActor"}function Tg(e){return c.validate("app.bsky.unspecced.defs#skeletonSearchActor",e)}var yl={};p(yl,{isTemplateView:()=>vg,validateTemplateView:()=>Lg});function vg(e){return d(e)&&m(e,"$type")&&e.$type==="tools.ozone.communication.defs#templateView"}function Lg(e){return c.validate("tools.ozone.communication.defs#templateView",e)}var El={};p(El,{REVIEWCLOSED:()=>Ug,REVIEWESCALATED:()=>Kg,REVIEWNONE:()=>Vg,REVIEWOPEN:()=>xg,isBlobView:()=>vb,isImageDetails:()=>_b,isModEventAcknowledge:()=>zg,isModEventComment:()=>qg,isModEventDivert:()=>ib,isModEventEmail:()=>tb,isModEventEscalate:()=>Zg,isModEventLabel:()=>Gg,isModEventMute:()=>Jg,isModEventReport:()=>$g,isModEventResolveAppeal:()=>jg,isModEventReverseTakedown:()=>Pg,isModEventTag:()=>sb,isModEventTakedown:()=>Dg,isModEventUnmute:()=>Yg,isModEventView:()=>_g,isModEventViewDetail:()=>wg,isModeration:()=>gb,isModerationDetail:()=>Ab,isRecordView:()=>db,isRecordViewDetail:()=>yb,isRecordViewNotFound:()=>hb,isRepoView:()=>ob,isRepoViewDetail:()=>pb,isRepoViewNotFound:()=>fb,isSubjectStatusView:()=>Bg,isVideoDetails:()=>wb,validateBlobView:()=>Lb,validateImageDetails:()=>Cb,validateModEventAcknowledge:()=>Hg,validateModEventComment:()=>Mg,validateModEventDivert:()=>nb,validateModEventEmail:()=>rb,validateModEventEscalate:()=>Wg,validateModEventLabel:()=>Xg,validateModEventMute:()=>Qg,validateModEventReport:()=>Og,validateModEventResolveAppeal:()=>Fg,validateModEventReverseTakedown:()=>Ig,validateModEventTag:()=>ab,validateModEventTakedown:()=>Ng,validateModEventUnmute:()=>eb,validateModEventView:()=>Cg,validateModEventViewDetail:()=>Sg,validateModeration:()=>bb,validateModerationDetail:()=>Tb,validateRecordView:()=>mb,validateRecordViewDetail:()=>Eb,validateRecordViewNotFound:()=>Rb,validateRepoView:()=>lb,validateRepoViewDetail:()=>ub,validateRepoViewNotFound:()=>cb,validateSubjectStatusView:()=>kg,validateVideoDetails:()=>Sb});function _g(e){return d(e)&&m(e,"$type")&&e.$type==="tools.ozone.moderation.defs#modEventView"}function Cg(e){return c.validate("tools.ozone.moderation.defs#modEventView",e)}function wg(e){return d(e)&&m(e,"$type")&&e.$type==="tools.ozone.moderation.defs#modEventViewDetail"}function Sg(e){return c.validate("tools.ozone.moderation.defs#modEventViewDetail",e)}function Bg(e){return d(e)&&m(e,"$type")&&e.$type==="tools.ozone.moderation.defs#subjectStatusView"}function kg(e){return c.validate("tools.ozone.moderation.defs#subjectStatusView",e)}var xg="tools.ozone.moderation.defs#reviewOpen",Kg="tools.ozone.moderation.defs#reviewEscalated",Ug="tools.ozone.moderation.defs#reviewClosed",Vg="tools.ozone.moderation.defs#reviewNone";function Dg(e){return d(e)&&m(e,"$type")&&e.$type==="tools.ozone.moderation.defs#modEventTakedown"}function Ng(e){return c.validate("tools.ozone.moderation.defs#modEventTakedown",e)}function Pg(e){return d(e)&&m(e,"$type")&&e.$type==="tools.ozone.moderation.defs#modEventReverseTakedown"}function Ig(e){return c.validate("tools.ozone.moderation.defs#modEventReverseTakedown",e)}function jg(e){return d(e)&&m(e,"$type")&&e.$type==="tools.ozone.moderation.defs#modEventResolveAppeal"}function Fg(e){return c.validate("tools.ozone.moderation.defs#modEventResolveAppeal",e)}function qg(e){return d(e)&&m(e,"$type")&&e.$type==="tools.ozone.moderation.defs#modEventComment"}function Mg(e){return c.validate("tools.ozone.moderation.defs#modEventComment",e)}function $g(e){return d(e)&&m(e,"$type")&&e.$type==="tools.ozone.moderation.defs#modEventReport"}function Og(e){return c.validate("tools.ozone.moderation.defs#modEventReport",e)}function Gg(e){return d(e)&&m(e,"$type")&&e.$type==="tools.ozone.moderation.defs#modEventLabel"}function Xg(e){return c.validate("tools.ozone.moderation.defs#modEventLabel",e)}function zg(e){return d(e)&&m(e,"$type")&&e.$type==="tools.ozone.moderation.defs#modEventAcknowledge"}function Hg(e){return c.validate("tools.ozone.moderation.defs#modEventAcknowledge",e)}function Zg(e){return d(e)&&m(e,"$type")&&e.$type==="tools.ozone.moderation.defs#modEventEscalate"}function Wg(e){return c.validate("tools.ozone.moderation.defs#modEventEscalate",e)}function Jg(e){return d(e)&&m(e,"$type")&&e.$type==="tools.ozone.moderation.defs#modEventMute"}function Qg(e){return c.validate("tools.ozone.moderation.defs#modEventMute",e)}function Yg(e){return d(e)&&m(e,"$type")&&e.$type==="tools.ozone.moderation.defs#modEventUnmute"}function eb(e){return c.validate("tools.ozone.moderation.defs#modEventUnmute",e)}function tb(e){return d(e)&&m(e,"$type")&&e.$type==="tools.ozone.moderation.defs#modEventEmail"}function rb(e){return c.validate("tools.ozone.moderation.defs#modEventEmail",e)}function ib(e){return d(e)&&m(e,"$type")&&e.$type==="tools.ozone.moderation.defs#modEventDivert"}function nb(e){return c.validate("tools.ozone.moderation.defs#modEventDivert",e)}function sb(e){return d(e)&&m(e,"$type")&&e.$type==="tools.ozone.moderation.defs#modEventTag"}function ab(e){return c.validate("tools.ozone.moderation.defs#modEventTag",e)}function ob(e){return d(e)&&m(e,"$type")&&e.$type==="tools.ozone.moderation.defs#repoView"}function lb(e){return c.validate("tools.ozone.moderation.defs#repoView",e)}function pb(e){return d(e)&&m(e,"$type")&&e.$type==="tools.ozone.moderation.defs#repoViewDetail"}function ub(e){return c.validate("tools.ozone.moderation.defs#repoViewDetail",e)}function fb(e){return d(e)&&m(e,"$type")&&e.$type==="tools.ozone.moderation.defs#repoViewNotFound"}function cb(e){return c.validate("tools.ozone.moderation.defs#repoViewNotFound",e)}function db(e){return d(e)&&m(e,"$type")&&e.$type==="tools.ozone.moderation.defs#recordView"}function mb(e){return c.validate("tools.ozone.moderation.defs#recordView",e)}function yb(e){return d(e)&&m(e,"$type")&&e.$type==="tools.ozone.moderation.defs#recordViewDetail"}function Eb(e){return c.validate("tools.ozone.moderation.defs#recordViewDetail",e)}function hb(e){return d(e)&&m(e,"$type")&&e.$type==="tools.ozone.moderation.defs#recordViewNotFound"}function Rb(e){return c.validate("tools.ozone.moderation.defs#recordViewNotFound",e)}function gb(e){return d(e)&&m(e,"$type")&&e.$type==="tools.ozone.moderation.defs#moderation"}function bb(e){return c.validate("tools.ozone.moderation.defs#moderation",e)}function Ab(e){return d(e)&&m(e,"$type")&&e.$type==="tools.ozone.moderation.defs#moderationDetail"}function Tb(e){return c.validate("tools.ozone.moderation.defs#moderationDetail",e)}function vb(e){return d(e)&&m(e,"$type")&&e.$type==="tools.ozone.moderation.defs#blobView"}function Lb(e){return c.validate("tools.ozone.moderation.defs#blobView",e)}function _b(e){return d(e)&&m(e,"$type")&&e.$type==="tools.ozone.moderation.defs#imageDetails"}function Cb(e){return c.validate("tools.ozone.moderation.defs#imageDetails",e)}function wb(e){return d(e)&&m(e,"$type")&&e.$type==="tools.ozone.moderation.defs#videoDetails"}function Sb(e){return c.validate("tools.ozone.moderation.defs#videoDetails",e)}var Bb={DefsReasonSpam:"com.atproto.moderation.defs#reasonSpam",DefsReasonViolation:"com.atproto.moderation.defs#reasonViolation",DefsReasonMisleading:"com.atproto.moderation.defs#reasonMisleading",DefsReasonSexual:"com.atproto.moderation.defs#reasonSexual",DefsReasonRude:"com.atproto.moderation.defs#reasonRude",DefsReasonOther:"com.atproto.moderation.defs#reasonOther",DefsReasonAppeal:"com.atproto.moderation.defs#reasonAppeal"},kb={DefsModlist:"app.bsky.graph.defs#modlist",DefsCuratelist:"app.bsky.graph.defs#curatelist"},xb={DefsReviewOpen:"tools.ozone.moderation.defs#reviewOpen",DefsReviewEscalated:"tools.ozone.moderation.defs#reviewEscalated",DefsReviewClosed:"tools.ozone.moderation.defs#reviewClosed",DefsReviewNone:"tools.ozone.moderation.defs#reviewNone"},hl=class{constructor(){this.xrpc=new ln,this.xrpc.addLexicons(un)}service(e){return new Rl(this,this.xrpc.service(e))}},Rl=class{constructor(e,i){this._baseClient=e,this.xrpc=i,this.com=new gl(this),this.app=new Bl(this),this.tools=new Jl(this)}setHeader(e,i){this.xrpc.setHeader(e,i)}},gl=class{constructor(e){this._service=e,this.atproto=new bl(e)}},bl=class{constructor(e){this._service=e,this.admin=new Al(e),this.identity=new Tl(e),this.label=new vl(e),this.moderation=new Ll(e),this.repo=new _l(e),this.server=new Cl(e),this.sync=new wl(e),this.temp=new Sl(e)}},Al=class{constructor(e){this._service=e}deleteAccount(e,i){return this._service.xrpc.call("com.atproto.admin.deleteAccount",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}disableAccountInvites(e,i){return this._service.xrpc.call("com.atproto.admin.disableAccountInvites",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}disableInviteCodes(e,i){return this._service.xrpc.call("com.atproto.admin.disableInviteCodes",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}enableAccountInvites(e,i){return this._service.xrpc.call("com.atproto.admin.enableAccountInvites",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}getAccountInfo(e,i){return this._service.xrpc.call("com.atproto.admin.getAccountInfo",e,void 0,i).catch(r=>{throw r})}getAccountInfos(e,i){return this._service.xrpc.call("com.atproto.admin.getAccountInfos",e,void 0,i).catch(r=>{throw r})}getInviteCodes(e,i){return this._service.xrpc.call("com.atproto.admin.getInviteCodes",e,void 0,i).catch(r=>{throw r})}getSubjectStatus(e,i){return this._service.xrpc.call("com.atproto.admin.getSubjectStatus",e,void 0,i).catch(r=>{throw r})}sendEmail(e,i){return this._service.xrpc.call("com.atproto.admin.sendEmail",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}updateAccountEmail(e,i){return this._service.xrpc.call("com.atproto.admin.updateAccountEmail",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}updateAccountHandle(e,i){return this._service.xrpc.call("com.atproto.admin.updateAccountHandle",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}updateAccountPassword(e,i){return this._service.xrpc.call("com.atproto.admin.updateAccountPassword",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}updateSubjectStatus(e,i){return this._service.xrpc.call("com.atproto.admin.updateSubjectStatus",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}},Tl=class{constructor(e){this._service=e}getRecommendedDidCredentials(e,i){return this._service.xrpc.call("com.atproto.identity.getRecommendedDidCredentials",e,void 0,i).catch(r=>{throw r})}requestPlcOperationSignature(e,i){return this._service.xrpc.call("com.atproto.identity.requestPlcOperationSignature",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}resolveHandle(e,i){return this._service.xrpc.call("com.atproto.identity.resolveHandle",e,void 0,i).catch(r=>{throw r})}signPlcOperation(e,i){return this._service.xrpc.call("com.atproto.identity.signPlcOperation",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}submitPlcOperation(e,i){return this._service.xrpc.call("com.atproto.identity.submitPlcOperation",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}updateHandle(e,i){return this._service.xrpc.call("com.atproto.identity.updateHandle",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}},vl=class{constructor(e){this._service=e}queryLabels(e,i){return this._service.xrpc.call("com.atproto.label.queryLabels",e,void 0,i).catch(r=>{throw r})}},Ll=class{constructor(e){this._service=e}createReport(e,i){return this._service.xrpc.call("com.atproto.moderation.createReport",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}},_l=class{constructor(e){this._service=e}applyWrites(e,i){return this._service.xrpc.call("com.atproto.repo.applyWrites",i==null?void 0:i.qp,e,i).catch(r=>{throw Vn(r)})}createRecord(e,i){return this._service.xrpc.call("com.atproto.repo.createRecord",i==null?void 0:i.qp,e,i).catch(r=>{throw Pn(r)})}deleteRecord(e,i){return this._service.xrpc.call("com.atproto.repo.deleteRecord",i==null?void 0:i.qp,e,i).catch(r=>{throw Fn(r)})}describeRepo(e,i){return this._service.xrpc.call("com.atproto.repo.describeRepo",e,void 0,i).catch(r=>{throw r})}getRecord(e,i){return this._service.xrpc.call("com.atproto.repo.getRecord",e,void 0,i).catch(r=>{throw r})}importRepo(e,i){return this._service.xrpc.call("com.atproto.repo.importRepo",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}listMissingBlobs(e,i){return this._service.xrpc.call("com.atproto.repo.listMissingBlobs",e,void 0,i).catch(r=>{throw r})}listRecords(e,i){return this._service.xrpc.call("com.atproto.repo.listRecords",e,void 0,i).catch(r=>{throw r})}putRecord(e,i){return this._service.xrpc.call("com.atproto.repo.putRecord",i==null?void 0:i.qp,e,i).catch(r=>{throw zn(r)})}uploadBlob(e,i){return this._service.xrpc.call("com.atproto.repo.uploadBlob",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}},Cl=class{constructor(e){this._service=e}activateAccount(e,i){return this._service.xrpc.call("com.atproto.server.activateAccount",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}checkAccountStatus(e,i){return this._service.xrpc.call("com.atproto.server.checkAccountStatus",e,void 0,i).catch(r=>{throw r})}confirmEmail(e,i){return this._service.xrpc.call("com.atproto.server.confirmEmail",i==null?void 0:i.qp,e,i).catch(r=>{throw rs(r)})}createAccount(e,i){return this._service.xrpc.call("com.atproto.server.createAccount",i==null?void 0:i.qp,e,i).catch(r=>{throw fs(r)})}createAppPassword(e,i){return this._service.xrpc.call("com.atproto.server.createAppPassword",i==null?void 0:i.qp,e,i).catch(r=>{throw ms(r)})}createInviteCode(e,i){return this._service.xrpc.call("com.atproto.server.createInviteCode",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}createInviteCodes(e,i){return this._service.xrpc.call("com.atproto.server.createInviteCodes",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}createSession(e,i){return this._service.xrpc.call("com.atproto.server.createSession",i==null?void 0:i.qp,e,i).catch(r=>{throw gs(r)})}deactivateAccount(e,i){return this._service.xrpc.call("com.atproto.server.deactivateAccount",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}deleteAccount(e,i){return this._service.xrpc.call("com.atproto.server.deleteAccount",i==null?void 0:i.qp,e,i).catch(r=>{throw Ls(r)})}deleteSession(e,i){return this._service.xrpc.call("com.atproto.server.deleteSession",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}describeServer(e,i){return this._service.xrpc.call("com.atproto.server.describeServer",e,void 0,i).catch(r=>{throw r})}getAccountInviteCodes(e,i){return this._service.xrpc.call("com.atproto.server.getAccountInviteCodes",e,void 0,i).catch(r=>{throw Bs(r)})}getServiceAuth(e,i){return this._service.xrpc.call("com.atproto.server.getServiceAuth",e,void 0,i).catch(r=>{throw r})}getSession(e,i){return this._service.xrpc.call("com.atproto.server.getSession",e,void 0,i).catch(r=>{throw r})}listAppPasswords(e,i){return this._service.xrpc.call("com.atproto.server.listAppPasswords",e,void 0,i).catch(r=>{throw Vs(r)})}refreshSession(e,i){return this._service.xrpc.call("com.atproto.server.refreshSession",i==null?void 0:i.qp,e,i).catch(r=>{throw Ps(r)})}requestAccountDelete(e,i){return this._service.xrpc.call("com.atproto.server.requestAccountDelete",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}requestEmailConfirmation(e,i){return this._service.xrpc.call("com.atproto.server.requestEmailConfirmation",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}requestEmailUpdate(e,i){return this._service.xrpc.call("com.atproto.server.requestEmailUpdate",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}requestPasswordReset(e,i){return this._service.xrpc.call("com.atproto.server.requestPasswordReset",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}reserveSigningKey(e,i){return this._service.xrpc.call("com.atproto.server.reserveSigningKey",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}resetPassword(e,i){return this._service.xrpc.call("com.atproto.server.resetPassword",i==null?void 0:i.qp,e,i).catch(r=>{throw Xs(r)})}revokeAppPassword(e,i){return this._service.xrpc.call("com.atproto.server.revokeAppPassword",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}updateEmail(e,i){return this._service.xrpc.call("com.atproto.server.updateEmail",i==null?void 0:i.qp,e,i).catch(r=>{throw Qs(r)})}},wl=class{constructor(e){this._service=e}getBlob(e,i){return this._service.xrpc.call("com.atproto.sync.getBlob",e,void 0,i).catch(r=>{throw r})}getBlocks(e,i){return this._service.xrpc.call("com.atproto.sync.getBlocks",e,void 0,i).catch(r=>{throw r})}getCheckout(e,i){return this._service.xrpc.call("com.atproto.sync.getCheckout",e,void 0,i).catch(r=>{throw r})}getHead(e,i){return this._service.xrpc.call("com.atproto.sync.getHead",e,void 0,i).catch(r=>{throw na(r)})}getLatestCommit(e,i){return this._service.xrpc.call("com.atproto.sync.getLatestCommit",e,void 0,i).catch(r=>{throw oa(r)})}getRecord(e,i){return this._service.xrpc.call("com.atproto.sync.getRecord",e,void 0,i).catch(r=>{throw r})}getRepo(e,i){return this._service.xrpc.call("com.atproto.sync.getRepo",e,void 0,i).catch(r=>{throw r})}listBlobs(e,i){return this._service.xrpc.call("com.atproto.sync.listBlobs",e,void 0,i).catch(r=>{throw r})}listRepos(e,i){return this._service.xrpc.call("com.atproto.sync.listRepos",e,void 0,i).catch(r=>{throw r})}notifyOfUpdate(e,i){return this._service.xrpc.call("com.atproto.sync.notifyOfUpdate",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}requestCrawl(e,i){return this._service.xrpc.call("com.atproto.sync.requestCrawl",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}},Sl=class{constructor(e){this._service=e}checkSignupQueue(e,i){return this._service.xrpc.call("com.atproto.temp.checkSignupQueue",e,void 0,i).catch(r=>{throw r})}fetchLabels(e,i){return this._service.xrpc.call("com.atproto.temp.fetchLabels",e,void 0,i).catch(r=>{throw r})}requestPhoneVerification(e,i){return this._service.xrpc.call("com.atproto.temp.requestPhoneVerification",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}},Bl=class{constructor(e){this._service=e,this.bsky=new kl(e)}},kl=class{constructor(e){this._service=e,this.actor=new xl(e),this.embed=new Ul(e),this.feed=new Vl(e),this.graph=new Fl(e),this.labeler=new Xl(e),this.notification=new Hl(e),this.richtext=new Zl(e),this.unspecced=new Wl(e)}},xl=class{constructor(e){this._service=e,this.profile=new Kl(e)}getPreferences(e,i){return this._service.xrpc.call("app.bsky.actor.getPreferences",e,void 0,i).catch(r=>{throw r})}getProfile(e,i){return this._service.xrpc.call("app.bsky.actor.getProfile",e,void 0,i).catch(r=>{throw r})}getProfiles(e,i){return this._service.xrpc.call("app.bsky.actor.getProfiles",e,void 0,i).catch(r=>{throw r})}getSuggestions(e,i){return this._service.xrpc.call("app.bsky.actor.getSuggestions",e,void 0,i).catch(r=>{throw r})}putPreferences(e,i){return this._service.xrpc.call("app.bsky.actor.putPreferences",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}searchActors(e,i){return this._service.xrpc.call("app.bsky.actor.searchActors",e,void 0,i).catch(r=>{throw r})}searchActorsTypeahead(e,i){return this._service.xrpc.call("app.bsky.actor.searchActorsTypeahead",e,void 0,i).catch(r=>{throw r})}},Kl=class{constructor(e){this._service=e}async list(e){return(await this._service.xrpc.call("com.atproto.repo.listRecords",{collection:"app.bsky.actor.profile",...e})).data}async get(e){return(await this._service.xrpc.call("com.atproto.repo.getRecord",{collection:"app.bsky.actor.profile",...e})).data}async create(e,i,r){return i.$type="app.bsky.actor.profile",(await this._service.xrpc.call("com.atproto.repo.createRecord",void 0,{collection:"app.bsky.actor.profile",rkey:"self",...e,record:i},{encoding:"application/json",headers:r})).data}async delete(e,i){await this._service.xrpc.call("com.atproto.repo.deleteRecord",void 0,{collection:"app.bsky.actor.profile",...e},{headers:i})}},Ul=class{constructor(e){this._service=e}},Vl=class{constructor(e){this._service=e,this.generator=new Dl(e),this.like=new Nl(e),this.post=new Pl(e),this.repost=new Il(e),this.threadgate=new jl(e)}describeFeedGenerator(e,i){return this._service.xrpc.call("app.bsky.feed.describeFeedGenerator",e,void 0,i).catch(r=>{throw r})}getActorFeeds(e,i){return this._service.xrpc.call("app.bsky.feed.getActorFeeds",e,void 0,i).catch(r=>{throw r})}getActorLikes(e,i){return this._service.xrpc.call("app.bsky.feed.getActorLikes",e,void 0,i).catch(r=>{throw Ba(r)})}getAuthorFeed(e,i){return this._service.xrpc.call("app.bsky.feed.getAuthorFeed",e,void 0,i).catch(r=>{throw Ua(r)})}getFeed(e,i){return this._service.xrpc.call("app.bsky.feed.getFeed",e,void 0,i).catch(r=>{throw Na(r)})}getFeedGenerator(e,i){return this._service.xrpc.call("app.bsky.feed.getFeedGenerator",e,void 0,i).catch(r=>{throw r})}getFeedGenerators(e,i){return this._service.xrpc.call("app.bsky.feed.getFeedGenerators",e,void 0,i).catch(r=>{throw r})}getFeedSkeleton(e,i){return this._service.xrpc.call("app.bsky.feed.getFeedSkeleton",e,void 0,i).catch(r=>{throw qa(r)})}getLikes(e,i){return this._service.xrpc.call("app.bsky.feed.getLikes",e,void 0,i).catch(r=>{throw r})}getListFeed(e,i){return this._service.xrpc.call("app.bsky.feed.getListFeed",e,void 0,i).catch(r=>{throw Ga(r)})}getPostThread(e,i){return this._service.xrpc.call("app.bsky.feed.getPostThread",e,void 0,i).catch(r=>{throw Ha(r)})}getPosts(e,i){return this._service.xrpc.call("app.bsky.feed.getPosts",e,void 0,i).catch(r=>{throw r})}getRepostedBy(e,i){return this._service.xrpc.call("app.bsky.feed.getRepostedBy",e,void 0,i).catch(r=>{throw r})}getSuggestedFeeds(e,i){return this._service.xrpc.call("app.bsky.feed.getSuggestedFeeds",e,void 0,i).catch(r=>{throw r})}getTimeline(e,i){return this._service.xrpc.call("app.bsky.feed.getTimeline",e,void 0,i).catch(r=>{throw r})}searchPosts(e,i){return this._service.xrpc.call("app.bsky.feed.searchPosts",e,void 0,i).catch(r=>{throw to(r)})}},Dl=class{constructor(e){this._service=e}async list(e){return(await this._service.xrpc.call("com.atproto.repo.listRecords",{collection:"app.bsky.feed.generator",...e})).data}async get(e){return(await this._service.xrpc.call("com.atproto.repo.getRecord",{collection:"app.bsky.feed.generator",...e})).data}async create(e,i,r){return i.$type="app.bsky.feed.generator",(await this._service.xrpc.call("com.atproto.repo.createRecord",void 0,{collection:"app.bsky.feed.generator",...e,record:i},{encoding:"application/json",headers:r})).data}async delete(e,i){await this._service.xrpc.call("com.atproto.repo.deleteRecord",void 0,{collection:"app.bsky.feed.generator",...e},{headers:i})}},Nl=class{constructor(e){this._service=e}async list(e){return(await this._service.xrpc.call("com.atproto.repo.listRecords",{collection:"app.bsky.feed.like",...e})).data}async get(e){return(await this._service.xrpc.call("com.atproto.repo.getRecord",{collection:"app.bsky.feed.like",...e})).data}async create(e,i,r){return i.$type="app.bsky.feed.like",(await this._service.xrpc.call("com.atproto.repo.createRecord",void 0,{collection:"app.bsky.feed.like",...e,record:i},{encoding:"application/json",headers:r})).data}async delete(e,i){await this._service.xrpc.call("com.atproto.repo.deleteRecord",void 0,{collection:"app.bsky.feed.like",...e},{headers:i})}},Pl=class{constructor(e){this._service=e}async list(e){return(await this._service.xrpc.call("com.atproto.repo.listRecords",{collection:"app.bsky.feed.post",...e})).data}async get(e){return(await this._service.xrpc.call("com.atproto.repo.getRecord",{collection:"app.bsky.feed.post",...e})).data}async create(e,i,r){return i.$type="app.bsky.feed.post",(await this._service.xrpc.call("com.atproto.repo.createRecord",void 0,{collection:"app.bsky.feed.post",...e,record:i},{encoding:"application/json",headers:r})).data}async delete(e,i){await this._service.xrpc.call("com.atproto.repo.deleteRecord",void 0,{collection:"app.bsky.feed.post",...e},{headers:i})}},Il=class{constructor(e){this._service=e}async list(e){return(await this._service.xrpc.call("com.atproto.repo.listRecords",{collection:"app.bsky.feed.repost",...e})).data}async get(e){return(await this._service.xrpc.call("com.atproto.repo.getRecord",{collection:"app.bsky.feed.repost",...e})).data}async create(e,i,r){return i.$type="app.bsky.feed.repost",(await this._service.xrpc.call("com.atproto.repo.createRecord",void 0,{collection:"app.bsky.feed.repost",...e,record:i},{encoding:"application/json",headers:r})).data}async delete(e,i){await this._service.xrpc.call("com.atproto.repo.deleteRecord",void 0,{collection:"app.bsky.feed.repost",...e},{headers:i})}},jl=class{constructor(e){this._service=e}async list(e){return(await this._service.xrpc.call("com.atproto.repo.listRecords",{collection:"app.bsky.feed.threadgate",...e})).data}async get(e){return(await this._service.xrpc.call("com.atproto.repo.getRecord",{collection:"app.bsky.feed.threadgate",...e})).data}async create(e,i,r){return i.$type="app.bsky.feed.threadgate",(await this._service.xrpc.call("com.atproto.repo.createRecord",void 0,{collection:"app.bsky.feed.threadgate",...e,record:i},{encoding:"application/json",headers:r})).data}async delete(e,i){await this._service.xrpc.call("com.atproto.repo.deleteRecord",void 0,{collection:"app.bsky.feed.threadgate",...e},{headers:i})}},Fl=class{constructor(e){this._service=e,this.block=new ql(e),this.follow=new Ml(e),this.list=new $l(e),this.listblock=new Ol(e),this.listitem=new Gl(e)}getBlocks(e,i){return this._service.xrpc.call("app.bsky.graph.getBlocks",e,void 0,i).catch(r=>{throw r})}getFollowers(e,i){return this._service.xrpc.call("app.bsky.graph.getFollowers",e,void 0,i).catch(r=>{throw r})}getFollows(e,i){return this._service.xrpc.call("app.bsky.graph.getFollows",e,void 0,i).catch(r=>{throw r})}getList(e,i){return this._service.xrpc.call("app.bsky.graph.getList",e,void 0,i).catch(r=>{throw r})}getListBlocks(e,i){return this._service.xrpc.call("app.bsky.graph.getListBlocks",e,void 0,i).catch(r=>{throw r})}getListMutes(e,i){return this._service.xrpc.call("app.bsky.graph.getListMutes",e,void 0,i).catch(r=>{throw r})}getLists(e,i){return this._service.xrpc.call("app.bsky.graph.getLists",e,void 0,i).catch(r=>{throw r})}getMutes(e,i){return this._service.xrpc.call("app.bsky.graph.getMutes",e,void 0,i).catch(r=>{throw r})}getRelationships(e,i){return this._service.xrpc.call("app.bsky.graph.getRelationships",e,void 0,i).catch(r=>{throw co(r)})}getSuggestedFollowsByActor(e,i){return this._service.xrpc.call("app.bsky.graph.getSuggestedFollowsByActor",e,void 0,i).catch(r=>{throw r})}muteActor(e,i){return this._service.xrpc.call("app.bsky.graph.muteActor",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}muteActorList(e,i){return this._service.xrpc.call("app.bsky.graph.muteActorList",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}unmuteActor(e,i){return this._service.xrpc.call("app.bsky.graph.unmuteActor",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}unmuteActorList(e,i){return this._service.xrpc.call("app.bsky.graph.unmuteActorList",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}},ql=class{constructor(e){this._service=e}async list(e){return(await this._service.xrpc.call("com.atproto.repo.listRecords",{collection:"app.bsky.graph.block",...e})).data}async get(e){return(await this._service.xrpc.call("com.atproto.repo.getRecord",{collection:"app.bsky.graph.block",...e})).data}async create(e,i,r){return i.$type="app.bsky.graph.block",(await this._service.xrpc.call("com.atproto.repo.createRecord",void 0,{collection:"app.bsky.graph.block",...e,record:i},{encoding:"application/json",headers:r})).data}async delete(e,i){await this._service.xrpc.call("com.atproto.repo.deleteRecord",void 0,{collection:"app.bsky.graph.block",...e},{headers:i})}},Ml=class{constructor(e){this._service=e}async list(e){return(await this._service.xrpc.call("com.atproto.repo.listRecords",{collection:"app.bsky.graph.follow",...e})).data}async get(e){return(await this._service.xrpc.call("com.atproto.repo.getRecord",{collection:"app.bsky.graph.follow",...e})).data}async create(e,i,r){return i.$type="app.bsky.graph.follow",(await this._service.xrpc.call("com.atproto.repo.createRecord",void 0,{collection:"app.bsky.graph.follow",...e,record:i},{encoding:"application/json",headers:r})).data}async delete(e,i){await this._service.xrpc.call("com.atproto.repo.deleteRecord",void 0,{collection:"app.bsky.graph.follow",...e},{headers:i})}},$l=class{constructor(e){this._service=e}async list(e){return(await this._service.xrpc.call("com.atproto.repo.listRecords",{collection:"app.bsky.graph.list",...e})).data}async get(e){return(await this._service.xrpc.call("com.atproto.repo.getRecord",{collection:"app.bsky.graph.list",...e})).data}async create(e,i,r){return i.$type="app.bsky.graph.list",(await this._service.xrpc.call("com.atproto.repo.createRecord",void 0,{collection:"app.bsky.graph.list",...e,record:i},{encoding:"application/json",headers:r})).data}async delete(e,i){await this._service.xrpc.call("com.atproto.repo.deleteRecord",void 0,{collection:"app.bsky.graph.list",...e},{headers:i})}},Ol=class{constructor(e){this._service=e}async list(e){return(await this._service.xrpc.call("com.atproto.repo.listRecords",{collection:"app.bsky.graph.listblock",...e})).data}async get(e){return(await this._service.xrpc.call("com.atproto.repo.getRecord",{collection:"app.bsky.graph.listblock",...e})).data}async create(e,i,r){return i.$type="app.bsky.graph.listblock",(await this._service.xrpc.call("com.atproto.repo.createRecord",void 0,{collection:"app.bsky.graph.listblock",...e,record:i},{encoding:"application/json",headers:r})).data}async delete(e,i){await this._service.xrpc.call("com.atproto.repo.deleteRecord",void 0,{collection:"app.bsky.graph.listblock",...e},{headers:i})}},Gl=class{constructor(e){this._service=e}async list(e){return(await this._service.xrpc.call("com.atproto.repo.listRecords",{collection:"app.bsky.graph.listitem",...e})).data}async get(e){return(await this._service.xrpc.call("com.atproto.repo.getRecord",{collection:"app.bsky.graph.listitem",...e})).data}async create(e,i,r){return i.$type="app.bsky.graph.listitem",(await this._service.xrpc.call("com.atproto.repo.createRecord",void 0,{collection:"app.bsky.graph.listitem",...e,record:i},{encoding:"application/json",headers:r})).data}async delete(e,i){await this._service.xrpc.call("com.atproto.repo.deleteRecord",void 0,{collection:"app.bsky.graph.listitem",...e},{headers:i})}},Xl=class{constructor(e){this._service=e,this.service=new zl(e)}getServices(e,i){return this._service.xrpc.call("app.bsky.labeler.getServices",e,void 0,i).catch(r=>{throw r})}},zl=class{constructor(e){this._service=e}async list(e){return(await this._service.xrpc.call("com.atproto.repo.listRecords",{collection:"app.bsky.labeler.service",...e})).data}async get(e){return(await this._service.xrpc.call("com.atproto.repo.getRecord",{collection:"app.bsky.labeler.service",...e})).data}async create(e,i,r){return i.$type="app.bsky.labeler.service",(await this._service.xrpc.call("com.atproto.repo.createRecord",void 0,{collection:"app.bsky.labeler.service",rkey:"self",...e,record:i},{encoding:"application/json",headers:r})).data}async delete(e,i){await this._service.xrpc.call("com.atproto.repo.deleteRecord",void 0,{collection:"app.bsky.labeler.service",...e},{headers:i})}},Hl=class{constructor(e){this._service=e}getUnreadCount(e,i){return this._service.xrpc.call("app.bsky.notification.getUnreadCount",e,void 0,i).catch(r=>{throw r})}listNotifications(e,i){return this._service.xrpc.call("app.bsky.notification.listNotifications",e,void 0,i).catch(r=>{throw r})}registerPush(e,i){return this._service.xrpc.call("app.bsky.notification.registerPush",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}updateSeen(e,i){return this._service.xrpc.call("app.bsky.notification.updateSeen",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}},Zl=class{constructor(e){this._service=e}},Wl=class{constructor(e){this._service=e}getPopularFeedGenerators(e,i){return this._service.xrpc.call("app.bsky.unspecced.getPopularFeedGenerators",e,void 0,i).catch(r=>{throw r})}getTaggedSuggestions(e,i){return this._service.xrpc.call("app.bsky.unspecced.getTaggedSuggestions",e,void 0,i).catch(r=>{throw r})}searchActorsSkeleton(e,i){return this._service.xrpc.call("app.bsky.unspecced.searchActorsSkeleton",e,void 0,i).catch(r=>{throw So(r)})}searchPostsSkeleton(e,i){return this._service.xrpc.call("app.bsky.unspecced.searchPostsSkeleton",e,void 0,i).catch(r=>{throw xo(r)})}},Jl=class{constructor(e){this._service=e,this.ozone=new Ql(e)}},Ql=class{constructor(e){this._service=e,this.communication=new Yl(e),this.moderation=new ep(e)}},Yl=class{constructor(e){this._service=e}createTemplate(e,i){return this._service.xrpc.call("tools.ozone.communication.createTemplate",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}deleteTemplate(e,i){return this._service.xrpc.call("tools.ozone.communication.deleteTemplate",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}listTemplates(e,i){return this._service.xrpc.call("tools.ozone.communication.listTemplates",e,void 0,i).catch(r=>{throw r})}updateTemplate(e,i){return this._service.xrpc.call("tools.ozone.communication.updateTemplate",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}},ep=class{constructor(e){this._service=e}emitEvent(e,i){return this._service.xrpc.call("tools.ozone.moderation.emitEvent",i==null?void 0:i.qp,e,i).catch(r=>{throw Io(r)})}getEvent(e,i){return this._service.xrpc.call("tools.ozone.moderation.getEvent",e,void 0,i).catch(r=>{throw r})}getRecord(e,i){return this._service.xrpc.call("tools.ozone.moderation.getRecord",e,void 0,i).catch(r=>{throw Mo(r)})}getRepo(e,i){return this._service.xrpc.call("tools.ozone.moderation.getRepo",e,void 0,i).catch(r=>{throw Go(r)})}queryEvents(e,i){return this._service.xrpc.call("tools.ozone.moderation.queryEvents",e,void 0,i).catch(r=>{throw r})}queryStatuses(e,i){return this._service.xrpc.call("tools.ozone.moderation.queryStatuses",e,void 0,i).catch(r=>{throw r})}searchRepos(e,i){return this._service.xrpc.call("tools.ozone.moderation.searchRepos",e,void 0,i).catch(r=>{throw r})}},Kb=10,Ub="com.atproto.server.refreshSession",be=class{constructor(e){this.labelersHeader=[],this.uploadBlob=(i,r)=>this.api.com.atproto.repo.uploadBlob(i,r),this.resolveHandle=(i,r)=>this.api.com.atproto.identity.resolveHandle(i,r),this.updateHandle=(i,r)=>this.api.com.atproto.identity.updateHandle(i,r),this.createModerationReport=(i,r)=>this.api.com.atproto.moderation.createReport(i,r),this.service=e.service instanceof URL?e.service:new URL(e.service),this._persistSession=e.persistSession,this._baseClient=new hl,this._baseClient.xrpc.fetch=this._fetch.bind(this),this.api=this._baseClient.service(e.service)}get com(){return this.api.com}static configure(e){e.fetch&&(be.fetch=e.fetch),e.appLabelers&&(be.appLabelers=e.appLabelers)}clone(){const e=new be({service:this.service});return this.copyInto(e),e}copyInto(e){e.session=this.session,e.labelersHeader=this.labelersHeader,e.proxyHeader=this.proxyHeader,e.pdsUrl=this.pdsUrl,e.api.xrpc.uri=this.pdsUrl||this.service}withProxy(e,i){const r=this.clone();return r.configureProxyHeader(e,i),r}get hasSession(){return!!this.session}setPersistSessionHandler(e){this._persistSession=e}configureLabelersHeader(e){this.labelersHeader=e}configureProxyHeader(e,i){i.startsWith("did:")&&(this.proxyHeader=`${i}#${e}`)}async createAccount(e){var i,r;try{const n=await this.api.com.atproto.server.createAccount(e);return this.session={accessJwt:n.data.accessJwt,refreshJwt:n.data.refreshJwt,handle:n.data.handle,did:n.data.did,email:e.email,emailConfirmed:!1},this._updateApiEndpoint(n.data.didDoc),n}catch(n){throw this.session=void 0,n}finally{this.session?(i=this._persistSession)==null||i.call(this,"create",this.session):(r=this._persistSession)==null||r.call(this,"create-failed",void 0)}}async login(e){var i,r;try{const n=await this.api.com.atproto.server.createSession({identifier:e.identifier,password:e.password});return this.session={accessJwt:n.data.accessJwt,refreshJwt:n.data.refreshJwt,handle:n.data.handle,did:n.data.did,email:n.data.email,emailConfirmed:n.data.emailConfirmed},this._updateApiEndpoint(n.data.didDoc),n}catch(n){throw this.session=void 0,n}finally{this.session?(i=this._persistSession)==null||i.call(this,"create",this.session):(r=this._persistSession)==null||r.call(this,"create-failed",void 0)}}async resumeSession(e){var i,r,n,s;try{this.session=e;const a=await this.api.com.atproto.server.getSession();if(a.data.did!==this.session.did)throw new b(400,"Invalid session","InvalidDID");return this.session.email=a.data.email,this.session.handle=a.data.handle,this.session.emailConfirmed=a.data.emailConfirmed,this._updateApiEndpoint(a.data.didDoc),(i=this._persistSession)==null||i.call(this,"update",this.session),a}catch(a){throw this.session=void 0,a instanceof b?[1,408,425,429,500,502,503,504,522,524].includes(a.status)?(r=this._persistSession)==null||r.call(this,"network-error",void 0):(n=this._persistSession)==null||n.call(this,"expired",void 0):(s=this._persistSession)==null||s.call(this,"network-error",void 0),a}}_addHeaders(e){var i;return!e.authorization&&((i=this.session)!=null&&i.accessJwt)&&(e={...e,authorization:`Bearer ${this.session.accessJwt}`}),this.proxyHeader&&(e={...e,"atproto-proxy":this.proxyHeader}),e={...e,"atproto-accept-labelers":be.appLabelers.map(r=>`${r};redact`).concat(this.labelersHeader.filter(r=>r.startsWith("did:"))).slice(0,Kb).join(", ")},e}async _fetch(e,i,r,n){var a;if(!be.fetch)throw new Error("AtpAgent fetch() method not configured");await this._refreshSessionPromise;let s=await be.fetch(e,i,this._addHeaders(r),n);return tp(s,["ExpiredToken"])&&((a=this.session)!=null&&a.refreshJwt)&&(await this.refreshSession(),s=await be.fetch(e,i,this._addHeaders(r),n)),s}async refreshSession(){if(this._refreshSessionPromise)return this._refreshSessionPromise;this._refreshSessionPromise=this._refreshSessionInner();try{await this._refreshSessionPromise}finally{this._refreshSessionPromise=void 0}}async _refreshSessionInner(){var r,n,s;if(!be.fetch)throw new Error("AtpAgent fetch() method not configured");if(!((r=this.session)!=null&&r.refreshJwt))return;const e=new URL((this.pdsUrl||this.service).origin);e.pathname=`/xrpc/${Ub}`;const i=await be.fetch(e.toString(),"POST",{authorization:`Bearer ${this.session.refreshJwt}`},void 0);tp(i,["ExpiredToken","InvalidToken"])?(this.session=void 0,(n=this._persistSession)==null||n.call(this,"expired",void 0)):Db(this._baseClient,i.body)&&(this.session={...this.session||{},accessJwt:i.body.accessJwt,refreshJwt:i.body.refreshJwt,handle:i.body.handle,did:i.body.did},this._updateApiEndpoint(i.body.didDoc),(s=this._persistSession)==null||s.call(this,"update",this.session))}_updateApiEndpoint(e){if(tc(e)){const i=ic(e);this.pdsUrl=i?new URL(i):void 0}this.api.xrpc.uri=this.pdsUrl||this.service}},ht=be;ht.fetch=pn,ht.appLabelers=[rn];function Vb(e){return nn.safeParse(e).success}function tp(e,i){return e.status!==400||!Vb(e.body)?!1:typeof e.body.error=="string"&&i.includes(e.body.error)}function Db(e,i){try{return e.xrpc.lex.assertValidXrpcOutput("com.atproto.server.refreshSession",i),!0}catch{return!1}}var rp=new TextEncoder,Nb=new TextDecoder,Rt=class{constructor(e){this.utf16=e,this.utf8=rp.encode(e)}get length(){return this.utf8.byteLength}get graphemeLength(){return this._graphemeLen||(this._graphemeLen=Tr(this.utf16)),this._graphemeLen}slice(e,i){return Nb.decode(this.utf8.slice(e,i))}utf16IndexToUtf8Index(e){return rp.encode(this.utf16.slice(0,e)).byteLength}toString(){return this.utf16}},Pb=/[\r\n]([\u00AD\u2060\u200D\u200C\u200B\s]*[\r\n]){2,}/,Ib=`

`;function ip(e,i){return i.cleanNewlines&&(e=jb(e,Pb,Ib)),e}function jb(e,i,r){e=e.clone();let n=e.unicodeText.utf16.match(i);for(;n&&typeof n.index<"u";){const s=e.unicodeText,a=e.unicodeText.utf16IndexToUtf8Index(n.index),t=a+new Rt(n[0]).length;if(e.delete(a,t),e.unicodeText.utf16===s.utf16)break;e.insert(a,r),n=e.unicodeText.utf16.match(i)}return e}var Fb=["aaa","aarp","abarth","abb","abbott","abbvie","abc","able","abogado","abudhabi","ac","academy","accenture","accountant","accountants","aco","actor","ad","ads","adult","ae","aeg","aero","aetna","af","afl","africa","ag","agakhan","agency","ai","aig","airbus","airforce","airtel","akdn","al","alfaromeo","alibaba","alipay","allfinanz","allstate","ally","alsace","alstom","am","amazon","americanexpress","americanfamily","amex","amfam","amica","amsterdam","analytics","android","anquan","anz","ao","aol","apartments","app","apple","aq","aquarelle","ar","arab","aramco","archi","army","arpa","art","arte","as","asda","asia","associates","at","athleta","attorney","au","auction","audi","audible","audio","auspost","author","auto","autos","avianca","aw","aws","ax","axa","az","azure","ba","baby","baidu","banamex","bananarepublic","band","bank","bar","barcelona","barclaycard","barclays","barefoot","bargains","baseball","basketball","bauhaus","bayern","bb","bbc","bbt","bbva","bcg","bcn","bd","be","beats","beauty","beer","bentley","berlin","best","bestbuy","bet","bf","bg","bh","bharti","bi","bible","bid","bike","bing","bingo","bio","biz","bj","black","blackfriday","blockbuster","blog","bloomberg","blue","bm","bms","bmw","bn","bnpparibas","bo","boats","boehringer","bofa","bom","bond","boo","book","booking","bosch","bostik","boston","bot","boutique","box","br","bradesco","bridgestone","broadway","broker","brother","brussels","bs","bt","build","builders","business","buy","buzz","bv","bw","by","bz","bzh","ca","cab","cafe","cal","call","calvinklein","cam","camera","camp","canon","capetown","capital","capitalone","car","caravan","cards","care","career","careers","cars","casa","case","cash","casino","cat","catering","catholic","cba","cbn","cbre","cbs","cc","cd","center","ceo","cern","cf","cfa","cfd","cg","ch","chanel","channel","charity","chase","chat","cheap","chintai","christmas","chrome","church","ci","cipriani","circle","cisco","citadel","citi","citic","city","cityeats","ck","cl","claims","cleaning","click","clinic","clinique","clothing","cloud","club","clubmed","cm","cn","co","coach","codes","coffee","college","cologne","com","comcast","commbank","community","company","compare","computer","comsec","condos","construction","consulting","contact","contractors","cooking","cookingchannel","cool","coop","corsica","country","coupon","coupons","courses","cpa","cr","credit","creditcard","creditunion","cricket","crown","crs","cruise","cruises","cu","cuisinella","cv","cw","cx","cy","cymru","cyou","cz","dabur","dad","dance","data","date","dating","datsun","day","dclk","dds","de","deal","dealer","deals","degree","delivery","dell","deloitte","delta","democrat","dental","dentist","desi","design","dev","dhl","diamonds","diet","digital","direct","directory","discount","discover","dish","diy","dj","dk","dm","dnp","do","docs","doctor","dog","domains","dot","download","drive","dtv","dubai","dunlop","dupont","durban","dvag","dvr","dz","earth","eat","ec","eco","edeka","edu","education","ee","eg","email","emerck","energy","engineer","engineering","enterprises","epson","equipment","er","ericsson","erni","es","esq","estate","et","etisalat","eu","eurovision","eus","events","exchange","expert","exposed","express","extraspace","fage","fail","fairwinds","faith","family","fan","fans","farm","farmers","fashion","fast","fedex","feedback","ferrari","ferrero","fi","fiat","fidelity","fido","film","final","finance","financial","fire","firestone","firmdale","fish","fishing","fit","fitness","fj","fk","flickr","flights","flir","florist","flowers","fly","fm","fo","foo","food","foodnetwork","football","ford","forex","forsale","forum","foundation","fox","fr","free","fresenius","frl","frogans","frontdoor","frontier","ftr","fujitsu","fun","fund","furniture","futbol","fyi","ga","gal","gallery","gallo","gallup","game","games","gap","garden","gay","gb","gbiz","gd","gdn","ge","gea","gent","genting","george","gf","gg","ggee","gh","gi","gift","gifts","gives","giving","gl","glass","gle","global","globo","gm","gmail","gmbh","gmo","gmx","gn","godaddy","gold","goldpoint","golf","goo","goodyear","goog","google","gop","got","gov","gp","gq","gr","grainger","graphics","gratis","green","gripe","grocery","group","gs","gt","gu","guardian","gucci","guge","guide","guitars","guru","gw","gy","hair","hamburg","hangout","haus","hbo","hdfc","hdfcbank","health","healthcare","help","helsinki","here","hermes","hgtv","hiphop","hisamitsu","hitachi","hiv","hk","hkt","hm","hn","hockey","holdings","holiday","homedepot","homegoods","homes","homesense","honda","horse","hospital","host","hosting","hot","hoteles","hotels","hotmail","house","how","hr","hsbc","ht","hu","hughes","hyatt","hyundai","ibm","icbc","ice","icu","id","ie","ieee","ifm","ikano","il","im","imamat","imdb","immo","immobilien","in","inc","industries","infiniti","info","ing","ink","institute","insurance","insure","int","international","intuit","investments","io","ipiranga","iq","ir","irish","is","ismaili","ist","istanbul","it","itau","itv","jaguar","java","jcb","je","jeep","jetzt","jewelry","jio","jll","jm","jmp","jnj","jo","jobs","joburg","jot","joy","jp","jpmorgan","jprs","juegos","juniper","kaufen","kddi","ke","kerryhotels","kerrylogistics","kerryproperties","kfh","kg","kh","ki","kia","kids","kim","kinder","kindle","kitchen","kiwi","km","kn","koeln","komatsu","kosher","kp","kpmg","kpn","kr","krd","kred","kuokgroup","kw","ky","kyoto","kz","la","lacaixa","lamborghini","lamer","lancaster","lancia","land","landrover","lanxess","lasalle","lat","latino","latrobe","law","lawyer","lb","lc","lds","lease","leclerc","lefrak","legal","lego","lexus","lgbt","li","lidl","life","lifeinsurance","lifestyle","lighting","like","lilly","limited","limo","lincoln","linde","link","lipsy","live","living","lk","llc","llp","loan","loans","locker","locus","loft","lol","london","lotte","lotto","love","lpl","lplfinancial","lr","ls","lt","ltd","ltda","lu","lundbeck","luxe","luxury","lv","ly","ma","macys","madrid","maif","maison","makeup","man","management","mango","map","market","marketing","markets","marriott","marshalls","maserati","mattel","mba","mc","mckinsey","md","me","med","media","meet","melbourne","meme","memorial","men","menu","merckmsd","mg","mh","miami","microsoft","mil","mini","mint","mit","mitsubishi","mk","ml","mlb","mls","mm","mma","mn","mo","mobi","mobile","moda","moe","moi","mom","monash","money","monster","mormon","mortgage","moscow","moto","motorcycles","mov","movie","mp","mq","mr","ms","msd","mt","mtn","mtr","mu","museum","music","mutual","mv","mw","mx","my","mz","na","nab","nagoya","name","natura","navy","nba","nc","ne","nec","net","netbank","netflix","network","neustar","new","news","next","nextdirect","nexus","nf","nfl","ng","ngo","nhk","ni","nico","nike","nikon","ninja","nissan","nissay","nl","no","nokia","northwesternmutual","norton","now","nowruz","nowtv","np","nr","nra","nrw","ntt","nu","nyc","nz","obi","observer","office","okinawa","olayan","olayangroup","oldnavy","ollo","om","omega","one","ong","onl","online","ooo","open","oracle","orange","org","organic","origins","osaka","otsuka","ott","ovh","pa","page","panasonic","paris","pars","partners","parts","party","passagens","pay","pccw","pe","pet","pf","pfizer","pg","ph","pharmacy","phd","philips","phone","photo","photography","photos","physio","pics","pictet","pictures","pid","pin","ping","pink","pioneer","pizza","pk","pl","place","play","playstation","plumbing","plus","pm","pn","pnc","pohl","poker","politie","porn","post","pr","pramerica","praxi","press","prime","pro","prod","productions","prof","progressive","promo","properties","property","protection","pru","prudential","ps","pt","pub","pw","pwc","py","qa","qpon","quebec","quest","racing","radio","re","read","realestate","realtor","realty","recipes","red","redstone","redumbrella","rehab","reise","reisen","reit","reliance","ren","rent","rentals","repair","report","republican","rest","restaurant","review","reviews","rexroth","rich","richardli","ricoh","ril","rio","rip","ro","rocher","rocks","rodeo","rogers","room","rs","rsvp","ru","rugby","ruhr","run","rw","rwe","ryukyu","sa","saarland","safe","safety","sakura","sale","salon","samsclub","samsung","sandvik","sandvikcoromant","sanofi","sap","sarl","sas","save","saxo","sb","sbi","sbs","sc","sca","scb","schaeffler","schmidt","scholarships","school","schule","schwarz","science","scot","sd","se","search","seat","secure","security","seek","select","sener","services","ses","seven","sew","sex","sexy","sfr","sg","sh","shangrila","sharp","shaw","shell","shia","shiksha","shoes","shop","shopping","shouji","show","showtime","si","silk","sina","singles","site","sj","sk","ski","skin","sky","skype","sl","sling","sm","smart","smile","sn","sncf","so","soccer","social","softbank","software","sohu","solar","solutions","song","sony","soy","spa","space","sport","spot","sr","srl","ss","st","stada","staples","star","statebank","statefarm","stc","stcgroup","stockholm","storage","store","stream","studio","study","style","su","sucks","supplies","supply","support","surf","surgery","suzuki","sv","swatch","swiss","sx","sy","sydney","systems","sz","tab","taipei","talk","taobao","target","tatamotors","tatar","tattoo","tax","taxi","tc","tci","td","tdk","team","tech","technology","tel","temasek","tennis","teva","tf","tg","th","thd","theater","theatre","tiaa","tickets","tienda","tiffany","tips","tires","tirol","tj","tjmaxx","tjx","tk","tkmaxx","tl","tm","tmall","tn","to","today","tokyo","tools","top","toray","toshiba","total","tours","town","toyota","toys","tr","trade","trading","training","travel","travelchannel","travelers","travelersinsurance","trust","trv","tt","tube","tui","tunes","tushu","tv","tvs","tw","tz","ua","ubank","ubs","ug","uk","unicom","university","uno","uol","ups","us","uy","uz","va","vacations","vana","vanguard","vc","ve","vegas","ventures","verisign","vermögensberater","vermögensberatung","versicherung","vet","vg","vi","viajes","video","vig","viking","villas","vin","vip","virgin","visa","vision","viva","vivo","vlaanderen","vn","vodka","volkswagen","volvo","vote","voting","voto","voyage","vu","vuelos","wales","walmart","walter","wang","wanggou","watch","watches","weather","weatherchannel","webcam","weber","website","wed","wedding","weibo","weir","wf","whoswho","wien","wiki","williamhill","win","windows","wine","winners","wme","wolterskluwer","woodside","work","works","world","wow","ws","wtc","wtf","xbox","xerox","xfinity","xihuan","xin","xxx","xyz","yachts","yahoo","yamaxun","yandex","ye","yodobashi","yoga","yokohama","you","youtube","yt","yun","za","zappos","zara","zero","zip","zm","zone","zuerich","zw","ελ","ευ","бг","бел","дети","ею","католик","ком","мкд","мон","москва","онлайн","орг","рус","рф","сайт","срб","укр","қаз","հայ","ישראל","קום","ابوظبي","اتصالات","ارامكو","الاردن","البحرين","الجزائر","السعودية","العليان","المغرب","امارات","ایران","بارت","بازار","بيتك","بھارت","تونس","سودان","سورية","شبكة","عراق","عرب","عمان","فلسطين","قطر","كاثوليك","كوم","مصر","مليسيا","موريتانيا","موقع","همراه","پاکستان","ڀارت","कॉम","नेट","भारत","भारतम्","भारोत","संगठन","বাংলা","ভারত","ভাৰত","ਭਾਰਤ","ભારત","ଭାରତ","இந்தியா","இலங்கை","சிங்கப்பூர்","భారత్","ಭಾರತ","ഭാരതം","ලංකා","คอม","ไทย","ລາວ","გე","みんな","アマゾン","クラウド","グーグル","コム","ストア","セール","ファッション","ポイント","世界","中信","中国","中國","中文网","亚马逊","企业","佛山","信息","健康","八卦","公司","公益","台湾","台灣","商城","商店","商标","嘉里","嘉里大酒店","在线","大拿","天主教","娱乐","家電","广东","微博","慈善","我爱你","手机","招聘","政务","政府","新加坡","新闻","时尚","書籍","机构","淡马锡","游戏","澳門","点看","移动","组织机构","网址","网店","网站","网络","联通","诺基亚","谷歌","购物","通販","集团","電訊盈科","飞利浦","食品","餐厅","香格里拉","香港","닷넷","닷컴","삼성","한국"],np=/(^|\s|\()(@)([a-zA-Z0-9.-]+)(\b)/g,sp=/(^|\s|\()((https?:\/\/[\S]+)|((?<domain>[a-z][a-z0-9]*(\.[a-z0-9]+)+)[\S]*))/gim,ap=new RegExp("\\p{P}+$","gu"),op=/(^|\s)[#＃]((?!\ufe0f)[^\s\u00AD\u2060\u200A\u200B\u200C\u200D\u20e2]*[^\d\s\p{P}\u00AD\u2060\u200A\u200B\u200C\u200D\u20e2]+[^\s\u00AD\u2060\u200A\u200B\u200C\u200D\u20e2]*)?/gu;function lp(e){var n;let i;const r=[];{const s=np;for(;i=s.exec(e.utf16);){if(!pp(i[3])&&!i[3].endsWith(".test"))continue;const a=e.utf16.indexOf(i[3],i.index)-1;r.push({$type:"app.bsky.richtext.facet",index:{byteStart:e.utf16IndexToUtf8Index(a),byteEnd:e.utf16IndexToUtf8Index(a+i[3].length+1)},features:[{$type:"app.bsky.richtext.facet#mention",did:i[3]}]})}}{const s=sp;for(;i=s.exec(e.utf16);){let a=i[2];if(!a.startsWith("http")){const u=(n=i.groups)==null?void 0:n.domain;if(!u||!pp(u))continue;a=`https://${a}`}const t=e.utf16.indexOf(i[2],i.index),l={start:t,end:t+i[2].length};/[.,;:!?]$/.test(a)&&(a=a.slice(0,-1),l.end--),/[)]$/.test(a)&&!a.includes("(")&&(a=a.slice(0,-1),l.end--),r.push({index:{byteStart:e.utf16IndexToUtf8Index(l.start),byteEnd:e.utf16IndexToUtf8Index(l.end)},features:[{$type:"app.bsky.richtext.facet#link",uri:a}]})}}{const s=op;for(;i=s.exec(e.utf16);){let[,a,t]=i;if(!t||(t=t.trim().replace(ap,""),t.length===0||t.length>64))continue;const l=i.index+a.length;r.push({index:{byteStart:e.utf16IndexToUtf8Index(l),byteEnd:e.utf16IndexToUtf8Index(l+1+t.length)},features:[{$type:"app.bsky.richtext.facet#tag",tag:t}]})}}return r.length>0?r:void 0}function pp(e){return!!Fb.find(i=>{const r=e.lastIndexOf(i);return r===-1?!1:e.charAt(r-1)==="."&&r===e.length-i.length})}var Xe=class{constructor(e,i){this.text=e,this.facet=i}get link(){var i;const e=(i=this.facet)==null?void 0:i.features.find(ge.isLink);if(ge.isLink(e))return e}isLink(){return!!this.link}get mention(){var i;const e=(i=this.facet)==null?void 0:i.features.find(ge.isMention);if(ge.isMention(e))return e}isMention(){return!!this.mention}get tag(){var i;const e=(i=this.facet)==null?void 0:i.features.find(ge.isTag);if(ge.isTag(e))return e}isTag(){return!!this.tag}},up=class{constructor(e,i){var r,n;this.unicodeText=new Rt(e.text),this.facets=e.facets,!((r=this.facets)!=null&&r.length)&&((n=e.entities)!=null&&n.length)&&(this.facets=qb(this.unicodeText,e.entities)),this.facets&&this.facets.sort(Pr),i!=null&&i.cleanNewlines&&ip(this,{cleanNewlines:!0}).copyInto(this)}get text(){return this.unicodeText.toString()}get length(){return this.unicodeText.length}get graphemeLength(){return this.unicodeText.graphemeLength}clone(){return new up({text:this.unicodeText.utf16,facets:fp(this.facets)})}copyInto(e){e.unicodeText=this.unicodeText,e.facets=fp(this.facets)}*segments(){const e=this.facets||[];if(!e.length){yield new Xe(this.unicodeText.utf16);return}let i=0,r=0;do{const n=e[r];if(i<n.index.byteStart)yield new Xe(this.unicodeText.slice(i,n.index.byteStart));else if(i>n.index.byteStart){r++;continue}if(n.index.byteStart<n.index.byteEnd){const s=this.unicodeText.slice(n.index.byteStart,n.index.byteEnd);s.trim()?yield new Xe(s,n):yield new Xe(s)}i=n.index.byteEnd,r++}while(r<e.length);i<this.unicodeText.length&&(yield new Xe(this.unicodeText.slice(i,this.unicodeText.length)))}insert(e,i){var n;if(this.unicodeText=new Rt(this.unicodeText.slice(0,e)+i+this.unicodeText.slice(e)),!((n=this.facets)!=null&&n.length))return this;const r=i.length;for(const s of this.facets)e<=s.index.byteStart?(s.index.byteStart+=r,s.index.byteEnd+=r):e>=s.index.byteStart&&e<s.index.byteEnd&&(s.index.byteEnd+=r);return this}delete(e,i){var n;if(this.unicodeText=new Rt(this.unicodeText.slice(0,e)+this.unicodeText.slice(i)),!((n=this.facets)!=null&&n.length))return this;const r=i-e;for(const s of this.facets)e<=s.index.byteStart&&i>=s.index.byteEnd?(s.index.byteStart=0,s.index.byteEnd=0):e>s.index.byteEnd||(e>s.index.byteStart&&e<=s.index.byteEnd&&i>s.index.byteEnd?s.index.byteEnd=e:e>=s.index.byteStart&&i<=s.index.byteEnd?s.index.byteEnd-=r:e<s.index.byteStart&&i>=s.index.byteStart&&i<=s.index.byteEnd?(s.index.byteStart=e,s.index.byteEnd-=r):i<s.index.byteStart&&(s.index.byteStart-=r,s.index.byteEnd-=r));return this.facets=this.facets.filter(s=>s.index.byteStart<s.index.byteEnd),this}async detectFacets(e){if(this.facets=lp(this.unicodeText),this.facets){for(const i of this.facets)for(const r of i.features)if(ge.isMention(r)){const n=await e.resolveHandle({handle:r.did}).catch(s=>{}).then(s=>s==null?void 0:s.data.did);r.did=n||""}this.facets.sort(Pr)}}detectFacetsWithoutResolution(){this.facets=lp(this.unicodeText),this.facets&&this.facets.sort(Pr)}},Pr=(e,i)=>e.index.byteStart-i.index.byteStart;function qb(e,i){const r=[];for(const n of i)n.type==="link"?r.push({$type:"app.bsky.richtext.facet",index:{byteStart:e.utf16IndexToUtf8Index(n.index.start),byteEnd:e.utf16IndexToUtf8Index(n.index.end)},features:[{$type:"app.bsky.richtext.facet#link",uri:n.value}]}):n.type==="mention"&&r.push({$type:"app.bsky.richtext.facet",index:{byteStart:e.utf16IndexToUtf8Index(n.index.start),byteEnd:e.utf16IndexToUtf8Index(n.index.end)},features:[{$type:"app.bsky.richtext.facet#mention",did:n.value}]});return r}function fp(e){return typeof e>"u"?e:JSON.parse(JSON.stringify(e))}var cp=/^[a-z-]+$/,Qt={profileList:"blur",profileView:"alert",avatar:"blur",banner:"blur",contentList:"blur",contentView:"blur"},Yt={profileList:"inform",profileView:"alert",contentList:"blur",contentView:"inform"},er={contentList:"blur",contentView:"blur"},tr={contentList:"blur",contentView:"blur"},dp={},mp=class{constructor(){this.noOverride=!1,this.filters=[],this.blurs=[],this.alerts=[],this.informs=[]}get filter(){return this.filters.length!==0}get blur(){return this.blurs.length!==0}get alert(){return this.alerts.length!==0}get inform(){return this.informs.length!==0}},yp={porn:"hide",sexual:"warn",nudity:"ignore","graphic-media":"warn"},Ir={"!hide":{identifier:"!hide",configurable:!1,defaultSetting:"hide",flags:["no-override","no-self"],severity:"alert",blurs:"content",behaviors:{account:{profileList:"blur",profileView:"blur",avatar:"blur",banner:"blur",displayName:"blur",contentList:"blur",contentView:"blur"},profile:{avatar:"blur",banner:"blur",displayName:"blur"},content:{contentList:"blur",contentView:"blur"}},locales:[]},"!warn":{identifier:"!warn",configurable:!1,defaultSetting:"warn",flags:["no-self"],severity:"none",blurs:"content",behaviors:{account:{profileList:"blur",profileView:"blur",avatar:"blur",banner:"blur",contentList:"blur",contentView:"blur"},profile:{avatar:"blur",banner:"blur",displayName:"blur"},content:{contentList:"blur",contentView:"blur"}},locales:[]},"!no-unauthenticated":{identifier:"!no-unauthenticated",configurable:!1,defaultSetting:"hide",flags:["no-override","unauthed"],severity:"none",blurs:"content",behaviors:{account:{profileList:"blur",profileView:"blur",avatar:"blur",banner:"blur",displayName:"blur",contentList:"blur",contentView:"blur"},profile:{avatar:"blur",banner:"blur",displayName:"blur"},content:{contentList:"blur",contentView:"blur"}},locales:[]},porn:{identifier:"porn",configurable:!0,defaultSetting:"hide",flags:["adult"],severity:"none",blurs:"media",behaviors:{account:{avatar:"blur",banner:"blur"},profile:{avatar:"blur",banner:"blur"},content:{contentMedia:"blur"}},locales:[]},sexual:{identifier:"sexual",configurable:!0,defaultSetting:"warn",flags:["adult"],severity:"none",blurs:"media",behaviors:{account:{avatar:"blur",banner:"blur"},profile:{avatar:"blur",banner:"blur"},content:{contentMedia:"blur"}},locales:[]},nudity:{identifier:"nudity",configurable:!0,defaultSetting:"ignore",flags:[],severity:"none",blurs:"media",behaviors:{account:{avatar:"blur",banner:"blur"},profile:{avatar:"blur",banner:"blur"},content:{contentMedia:"blur"}},locales:[]},"graphic-media":{identifier:"graphic-media",flags:["adult"],configurable:!0,defaultSetting:"warn",severity:"none",blurs:"media",behaviors:{account:{avatar:"blur",banner:"blur"},profile:{avatar:"blur",banner:"blur"},content:{contentMedia:"blur"}},locales:[]}},te=class{constructor(){this.did="",this.isMe=!1,this.causes=[]}static merge(...e){const i=e.filter(n=>!!n),r=new te;return i[0]&&(r.did=i[0].did,r.isMe=i[0].isMe),r.causes=i.flatMap(n=>n.causes),r}downgrade(){for(const e of this.causes)e.downgraded=!0;return this}get blocked(){return!!this.blockCause}get muted(){return!!this.muteCause}get blockCause(){return this.causes.find(e=>e.type==="blocking"||e.type==="blocked-by"||e.type==="block-other")}get muteCause(){return this.causes.find(e=>e.type==="muted")}get labelCauses(){return this.causes.filter(e=>e.type==="label")}ui(e){const i=new mp;if(this.isMe)return i;for(const r of this.causes)r.type==="blocking"||r.type==="blocked-by"||r.type==="block-other"?((e==="profileList"||e==="contentList")&&i.filters.push(r),r.downgraded||(Qt[e]==="blur"?(i.noOverride=!0,i.blurs.push(r)):Qt[e]==="alert"?i.alerts.push(r):Qt[e]==="inform"&&i.informs.push(r))):r.type==="muted"?((e==="profileList"||e==="contentList")&&i.filters.push(r),r.downgraded||(Yt[e]==="blur"?i.blurs.push(r):Yt[e]==="alert"?i.alerts.push(r):Yt[e]==="inform"&&i.informs.push(r))):r.type==="mute-word"?(e==="contentList"&&i.filters.push(r),r.downgraded||(er[e]==="blur"?i.blurs.push(r):er[e]==="alert"?i.alerts.push(r):er[e]==="inform"&&i.informs.push(r))):r.type==="hidden"?((e==="profileList"||e==="contentList")&&i.filters.push(r),r.downgraded||(tr[e]==="blur"?i.blurs.push(r):tr[e]==="alert"?i.alerts.push(r):tr[e]==="inform"&&i.informs.push(r))):r.type==="label"&&(e==="profileList"&&r.target==="account"?r.setting==="hide"&&i.filters.push(r):e==="contentList"&&(r.target==="account"||r.target==="content")&&r.setting==="hide"&&i.filters.push(r),r.downgraded||(r.behavior[e]==="blur"?(i.blurs.push(r),r.noOverride&&(i.noOverride=!0)):r.behavior[e]==="alert"?i.alerts.push(r):r.behavior[e]==="inform"&&i.informs.push(r)));return i.filters.sort(Ep),i.blurs.sort(Ep),i}setDid(e){this.did=e}setIsMe(e){this.isMe=e}addHidden(e){e&&this.causes.push({type:"hidden",source:{type:"user"},priority:6})}addMutedWord(e){e&&this.causes.push({type:"mute-word",source:{type:"user"},priority:6})}addBlocking(e){e&&this.causes.push({type:"blocking",source:{type:"user"},priority:3})}addBlockingByList(e){e&&this.causes.push({type:"blocking",source:{type:"list",list:e},priority:3})}addBlockedBy(e){e&&this.causes.push({type:"blocked-by",source:{type:"user"},priority:4})}addBlockOther(e){e&&this.causes.push({type:"block-other",source:{type:"user"},priority:4})}addLabel(e,i,r){var T,v;const n=cp.test(i.val)&&((v=(T=r.labelDefs)==null?void 0:T[i.src])==null?void 0:v.find(x=>x.identifier===i.val))||Ir[i.val];if(!n)return;const s=i.src===this.did,a=s?void 0:r.prefs.labelers.find(x=>x.did===i.src);if(!s&&!a||s&&n.flags.includes("no-self"))return;let t=n.defaultSetting||"ignore";if(n.configurable?n.flags.includes("adult")&&!r.prefs.adultContentEnabled?t="hide":a!=null&&a.labels[n.identifier]?t=a==null?void 0:a.labels[n.identifier]:r.prefs.labels[n.identifier]&&(t=r.prefs.labels[n.identifier]):t=n.defaultSetting||"hide",t==="ignore"||n.flags.includes("unauthed")&&r.userDid)return;let l;const u=Mb(n.behaviors[e]);n.flags.includes("no-override")||n.flags.includes("adult")&&!r.prefs.adultContentEnabled?l=1:t==="hide"?l=2:u===0?l=5:u===1?l=7:l=8;let h=!1;(n.flags.includes("no-override")||n.flags.includes("adult")&&!r.prefs.adultContentEnabled)&&(h=!0),this.causes.push({type:"label",source:s||!a?{type:"user"}:{type:"labeler",did:a.did},label:i,labelDef:n,target:e,setting:t,behavior:n.behaviors[e]||dp,noOverride:h,priority:l})}addMuted(e){e&&this.causes.push({type:"muted",source:{type:"user"},priority:6})}addMutedByList(e){e&&this.causes.push({type:"muted",source:{type:"list",list:e},priority:6})}};function Mb(e){return e?e.profileView==="blur"||e.contentView==="blur"?0:e.contentList==="blur"||e.contentMedia==="blur"?1:2:2}function Ep(e,i){return e.priority-i.priority}function ze(e,i){var n,s,a,t,l,u,h,T,v;const r=new te;r.setDid(e.did),r.setIsMe(e.did===i.userDid),(n=e.viewer)!=null&&n.muted&&((s=e.viewer)!=null&&s.mutedByList?r.addMutedByList((a=e.viewer)==null?void 0:a.mutedByList):r.addMuted((t=e.viewer)==null?void 0:t.muted)),(l=e.viewer)!=null&&l.blocking&&((u=e.viewer)!=null&&u.blockingByList?r.addBlockingByList((h=e.viewer)==null?void 0:h.blockingByList):r.addBlocking((T=e.viewer)==null?void 0:T.blocking)),r.addBlockedBy((v=e.viewer)==null?void 0:v.blockedBy);for(const x of $b(e.labels))r.addLabel("account",x,i);return r}function $b(e){return e?e.filter(i=>!i.uri.endsWith("/app.bsky.actor.profile/self")||i.val==="!no-unauthenticated"):[]}function He(e,i){const r=new te;r.setDid(e.did),r.setIsMe(e.did===i.userDid);for(const n of Ob(e.labels))r.addLabel("profile",n,i);return r}function Ob(e){return e?e.filter(i=>i.uri.endsWith("/app.bsky.actor.profile/self")):[]}function Gb(e,i){var n;const r=new te;if(r.setDid(e.author.did),r.setIsMe(e.author.did===i.userDid),(n=e.labels)!=null&&n.length)for(const s of e.labels)r.addLabel("content",s,i);return te.merge(r,ze(e.author,i),He(e.author,i))}var Ze={LEADING_TRAILING_PUNCTUATION:new RegExp("(?:^\\p{P}+|\\p{P}+$)","gu"),SEPARATORS:/[/\-–—()[\]_]+/g,WORD_BOUNDARY:/[\s\n\t\r\f\v]+?/g},Xb=["ja","zh","ko","th","vi"];function ue({mutedWords:e,text:i,facets:r,outlineTags:n,languages:s}){const a=Xb.includes((s==null?void 0:s[0])||""),t=[].concat(n||[]).concat((r==null?void 0:r.filter(l=>l.features.find(u=>ge.isTag(u))).map(l=>l.features[0].tag))||[]).map(l=>l.toLowerCase());for(const l of e){const u=l.value.toLowerCase(),h=i.toLowerCase();if(t.includes(u))return!0;if(!l.targets.includes("content"))continue;if((u.length===1||a)&&h.includes(u))return!0;if(u.length>h.length)continue;if(u===h||new RegExp("(?:\\s|\\p{P})+?","u").test(u)&&h.includes(u))return!0;const T=h.split(Ze.WORD_BOUNDARY);for(const v of T){if(v===u)return!0;const x=v.replace(Ze.LEADING_TRAILING_PUNCTUATION,"");if(u===x)return!0;if(!(u.length>x.length)&&Ze.SEPARATORS.test(x)){const X=x.replace(Ze.SEPARATORS," "),K=u.replace(Ze.SEPARATORS," ");if(X===K)return!0;const q=x.split(Ze.SEPARATORS);for(const j of q)if(j===u)return!0}}}return!1}function zb(e,i){var s;const r=new te;if(r.setDid(e.author.did),r.setIsMe(e.author.did===i.userDid),(s=e.labels)!=null&&s.length)for(const a of e.labels)r.addLabel("content",a,i);r.addHidden(Hb(e,i.prefs.hiddenPosts)),r.isMe||r.addMutedWord(Zb(e,i.prefs.mutedWords));let n;return e.embed&&(Be.isViewRecord(e.embed.record)?n=hp(e.embed.record,i):Ge.isView(e.embed)&&Be.isViewRecord(e.embed.record.record)&&(n=hp(e.embed.record.record,i))),te.merge(r,n==null?void 0:n.downgrade(),ze(e.author,i),He(e.author,i))}function hp(e,i){var n;const r=new te;if(r.setDid(e.author.did),r.setIsMe(e.author.did===i.userDid),(n=e.labels)!=null&&n.length)for(const s of e.labels)r.addLabel("content",s,i);return te.merge(r,ze(e.author,i),He(e.author,i))}function Hb(e,i){return i!=null&&i.length?!!(i.includes(e.uri)||e.embed&&(Be.isViewRecord(e.embed.record)&&i.includes(e.embed.record.uri)||Ge.isView(e.embed)&&Be.isViewRecord(e.embed.record.record)&&i.includes(e.embed.record.record.uri))):!1}function Zb(e,i){if(!(i!=null&&i.length))return!1;if(Pe.isRecord(e.record)){if(ue({mutedWords:i,text:e.record.text,facets:e.record.facets,outlineTags:e.record.tags,languages:e.record.langs}))return!0;if(e.record.embed&&Oe.isMain(e.record.embed)){for(const r of e.record.embed.images)if(ue({mutedWords:i,text:r.alt,languages:e.record.langs}))return!0}}if(e.embed){if(Be.isViewRecord(e.embed.record)){if(Pe.isRecord(e.embed.record.value)){const r=e.embed.record.value;if(ue({mutedWords:i,text:r.text,facets:r.facets,outlineTags:r.tags,languages:r.langs}))return!0;if(Oe.isMain(r.embed)){for(const n of r.embed.images)if(ue({mutedWords:i,text:n.alt,languages:r.langs}))return!0}if(Et.isMain(r.embed)){const{external:n}=r.embed;if(ue({mutedWords:i,text:n.title+" "+n.description,languages:[]}))return!0}if(Ge.isMain(r.embed)){if(Et.isMain(r.embed.media)){const{external:n}=r.embed.media;if(ue({mutedWords:i,text:n.title+" "+n.description,languages:[]}))return!0}if(Oe.isMain(r.embed.media)){for(const n of r.embed.media.images)if(ue({mutedWords:i,text:n.alt,languages:Pe.isRecord(r.record)?r.langs:[]}))return!0}}}}else if(Et.isView(e.embed)){const{external:r}=e.embed;if(ue({mutedWords:i,text:r.title+" "+r.description,languages:[]}))return!0}else if(Ge.isView(e.embed)&&Be.isViewRecord(e.embed.record.record)){if(Pe.isRecord(e.embed.record.record.value)){const r=e.embed.record.record.value;if(ue({mutedWords:i,text:r.text,facets:r.facets,outlineTags:r.tags,languages:r.langs}))return!0}if(Oe.isView(e.embed.media)){for(const r of e.embed.media.images)if(ue({mutedWords:i,text:r.alt,languages:Pe.isRecord(e.record)?e.record.langs:[]}))return!0}}}return!1}function Wb(e,i){var n;const r=new te;if(r.setDid(e.creator.did),r.setIsMe(e.creator.did===i.userDid),(n=e.labels)!=null&&n.length)for(const s of e.labels)r.addLabel("content",s,i);return te.merge(r,ze(e.creator,i),He(e.creator,i))}function Jb(e,i){var a,t;const r=new te,n=Qb(e.creator)?e.creator:void 0;if(n){if(r.setDid(n.did),r.setIsMe(n.did===i.userDid),(a=e.labels)!=null&&a.length)for(const l of e.labels)r.addLabel("content",l,i);return te.merge(r,ze(n,i),He(n,i))}const s=new de(e.uri).hostname;if(r.setDid(s),r.setIsMe(s===i.userDid),(t=e.labels)!=null&&t.length)for(const l of e.labels)r.addLabel("content",l,i);return r}function Qb(e){return e&&typeof e=="object"&&"did"in e}function Rp(e,i){const r={account:{},profile:{},content:{}},n=e.severity==="alert"?"alert":e.severity==="inform"?"inform":void 0;e.blurs==="content"?(r.account.profileList=n,r.account.profileView=n,r.account.contentList="blur",r.account.contentView=e.adultOnly?"blur":n,r.profile.profileList=n,r.profile.profileView=n,r.content.contentList="blur",r.content.contentView=e.adultOnly?"blur":n):e.blurs==="media"?(r.account.profileList=n,r.account.profileView=n,r.account.avatar="blur",r.account.banner="blur",r.profile.profileList=n,r.profile.profileView=n,r.profile.avatar="blur",r.profile.banner="blur",r.content.contentMedia="blur"):e.blurs==="none"&&(r.account.profileList=n,r.account.profileView=n,r.account.contentList=n,r.account.contentView=n,r.profile.profileList=n,r.profile.profileView=n,r.content.contentList=n,r.content.contentView=n);let s="warn";(e.defaultSetting==="hide"||e.defaultSetting==="ignore")&&(s=e.defaultSetting);const a=["no-self"];return e.adultOnly&&a.push("adult"),{...e,definedBy:i,configurable:!0,defaultSetting:s,flags:a,behaviors:r}}function gp(e){var i;return(((i=e.policies)==null?void 0:i.labelValueDefinitions)||[]).filter(r=>Dr.validateLabelValueDefinition(r).success).map(r=>Rp(r,e.creator.did))}function Yb(e,i){return te.merge(ze(e,i),He(e,i))}function e4(e,i){return zb(e,i)}function t4(e,i){return Gb(e,i)}function r4(e,i){return Wb(e,i)}function i4(e,i){return Jb(e,i)}var gt="bafyreiclp443lavogvhj3d2ob2cxbfuscni2k5jk7bebjzg7khl3esabwq",n4={post({text:e,facets:i,reply:r,embed:n}){return{$type:"app.bsky.feed.post",text:e,facets:i,reply:r,embed:n,langs:["en"],createdAt:new Date().toISOString()}},postView({record:e,author:i,embed:r,replyCount:n,repostCount:s,likeCount:a,viewer:t,labels:l}){return{$type:"app.bsky.feed.defs#postView",uri:`at://${i.did}/app.bsky.feed.post/fake`,cid:gt,author:i,record:e,embed:r,replyCount:n,repostCount:s,likeCount:a,indexedAt:new Date().toISOString(),viewer:t,labels:l}},embedRecordView({record:e,author:i,labels:r}){return{$type:"app.bsky.embed.record#view",record:{$type:"app.bsky.embed.record#viewRecord",uri:`at://${i.did}/app.bsky.feed.post/fake`,cid:gt,author:i,value:e,labels:r,indexedAt:new Date().toISOString()}}},profileViewBasic({handle:e,displayName:i,description:r,viewer:n,labels:s}){return{did:`did:web:${e}`,handle:e,displayName:i,description:r,viewer:n,labels:s}},actorViewerState({muted:e,mutedByList:i,blockedBy:r,blocking:n,blockingByList:s,following:a,followedBy:t}){return{muted:e,mutedByList:i,blockedBy:r,blocking:n,blockingByList:s,following:a,followedBy:t}},listViewBasic({name:e}){return{uri:"at://did:plc:fake/app.bsky.graph.list/fake",cid:gt,name:e,purpose:"app.bsky.graph.defs#modlist",indexedAt:new Date().toISOString()}},replyNotification({author:e,record:i,labels:r}){return{uri:`at://${e.did}/app.bsky.feed.post/fake`,cid:gt,author:e,reason:"reply",reasonSubject:`at://${e.did}/app.bsky.feed.post/fake-parent`,record:i,isRead:!1,indexedAt:new Date().toISOString(),labels:r}},followNotification({author:e,subjectDid:i,labels:r}){return{uri:`at://${e.did}/app.bsky.graph.follow/fake`,cid:gt,author:e,reason:"follow",record:{$type:"app.bsky.graph.follow",createdAt:new Date().toISOString(),subject:i},isRead:!1,indexedAt:new Date().toISOString(),labels:r}},label({val:e,uri:i,src:r}){return{src:r||"did:plc:fake-labeler",uri:i,val:e,cts:new Date().toISOString()}}},bp={hideReplies:!1,hideRepliesByUnfollowed:!0,hideRepliesByLikeCount:0,hideReposts:!1,hideQuotePosts:!1},s4={sort:"oldest",prioritizeFollowedUsers:!0},bt=class extends ht{constructor(){super(...arguments),this.getTimeline=(e,i)=>this.api.app.bsky.feed.getTimeline(e,i),this.getAuthorFeed=(e,i)=>this.api.app.bsky.feed.getAuthorFeed(e,i),this.getActorLikes=(e,i)=>this.api.app.bsky.feed.getActorLikes(e,i),this.getPostThread=(e,i)=>this.api.app.bsky.feed.getPostThread(e,i),this.getPost=e=>this.api.app.bsky.feed.post.get(e),this.getPosts=(e,i)=>this.api.app.bsky.feed.getPosts(e,i),this.getLikes=(e,i)=>this.api.app.bsky.feed.getLikes(e,i),this.getRepostedBy=(e,i)=>this.api.app.bsky.feed.getRepostedBy(e,i),this.getFollows=(e,i)=>this.api.app.bsky.graph.getFollows(e,i),this.getFollowers=(e,i)=>this.api.app.bsky.graph.getFollowers(e,i),this.getProfile=(e,i)=>this.api.app.bsky.actor.getProfile(e,i),this.getProfiles=(e,i)=>this.api.app.bsky.actor.getProfiles(e,i),this.getSuggestions=(e,i)=>this.api.app.bsky.actor.getSuggestions(e,i),this.searchActors=(e,i)=>this.api.app.bsky.actor.searchActors(e,i),this.searchActorsTypeahead=(e,i)=>this.api.app.bsky.actor.searchActorsTypeahead(e,i),this.listNotifications=(e,i)=>this.api.app.bsky.notification.listNotifications(e,i),this.countUnreadNotifications=(e,i)=>this.api.app.bsky.notification.getUnreadCount(e,i),this.getLabelers=(e,i)=>this.api.app.bsky.labeler.getServices(e,i)}clone(){const e=new bt({service:this.service});return this.copyInto(e),e}get app(){return this.api.app}async getLabelDefinitions(e){let i=bt.appLabelers;l4(e)?i=i.concat(e.moderationPrefs.labelers.map(s=>s.did)):Tp(e)?i=i.concat(e.labelers.map(s=>s.did)):i=i.concat(e);const r=await this.getLabelers({dids:i,detailed:!0}),n={};if(r.data)for(const s of r.data.views)n[s.creator.did]=gp(s);return n}async post(e){if(!this.session)throw new Error("Not logged in");return e.createdAt=e.createdAt||new Date().toISOString(),this.api.app.bsky.feed.post.create({repo:this.session.did},e)}async deletePost(e){if(!this.session)throw new Error("Not logged in");const i=new de(e);return await this.api.app.bsky.feed.post.delete({repo:i.hostname,rkey:i.rkey})}async like(e,i){if(!this.session)throw new Error("Not logged in");return await this.api.app.bsky.feed.like.create({repo:this.session.did},{subject:{uri:e,cid:i},createdAt:new Date().toISOString()})}async deleteLike(e){if(!this.session)throw new Error("Not logged in");const i=new de(e);return await this.api.app.bsky.feed.like.delete({repo:i.hostname,rkey:i.rkey})}async repost(e,i){if(!this.session)throw new Error("Not logged in");return await this.api.app.bsky.feed.repost.create({repo:this.session.did},{subject:{uri:e,cid:i},createdAt:new Date().toISOString()})}async deleteRepost(e){if(!this.session)throw new Error("Not logged in");const i=new de(e);return await this.api.app.bsky.feed.repost.delete({repo:i.hostname,rkey:i.rkey})}async follow(e){if(!this.session)throw new Error("Not logged in");return await this.api.app.bsky.graph.follow.create({repo:this.session.did},{subject:e,createdAt:new Date().toISOString()})}async deleteFollow(e){if(!this.session)throw new Error("Not logged in");const i=new de(e);return await this.api.app.bsky.graph.follow.delete({repo:i.hostname,rkey:i.rkey})}async upsertProfile(e){if(!this.session)throw new Error("Not logged in");let i=5;for(;i>=0;){const r=await this.com.atproto.repo.getRecord({repo:this.session.did,collection:"app.bsky.actor.profile",rkey:"self"}).catch(a=>{}),n=await e(r==null?void 0:r.data.value);n&&(n.$type="app.bsky.actor.profile");const s=Nr.validateRecord(n);if(!s.success)throw s.error;try{await this.com.atproto.repo.putRecord({repo:this.session.did,collection:"app.bsky.actor.profile",rkey:"self",record:n,swapRecord:(r==null?void 0:r.data.cid)||null})}catch(a){if(i>0&&a instanceof Vr.InvalidSwapError){i--;continue}else throw a}break}}async mute(e){return this.api.app.bsky.graph.muteActor({actor:e})}async unmute(e){return this.api.app.bsky.graph.unmuteActor({actor:e})}async muteModList(e){return this.api.app.bsky.graph.muteActorList({list:e})}async unmuteModList(e){return this.api.app.bsky.graph.unmuteActorList({list:e})}async blockModList(e){if(!this.session)throw new Error("Not logged in");return await this.api.app.bsky.graph.listblock.create({repo:this.session.did},{subject:e,createdAt:new Date().toISOString()})}async unblockModList(e){var n;if(!this.session)throw new Error("Not logged in");const i=await this.api.app.bsky.graph.getList({list:e,limit:1});if(!((n=i.data.list.viewer)!=null&&n.blocked))return;const{rkey:r}=new de(i.data.list.viewer.blocked);return await this.api.app.bsky.graph.listblock.delete({repo:this.session.did,rkey:r})}async updateSeenNotifications(e){return e=e||new Date().toISOString(),this.api.app.bsky.notification.updateSeen({seenAt:e})}async getPreferences(){const e={feeds:{saved:void 0,pinned:void 0},feedViewPrefs:{home:{...bp}},threadViewPrefs:{...s4},moderationPrefs:{adultContentEnabled:!1,labels:{...yp},labelers:bt.appLabelers.map(n=>({did:n,labels:{}})),mutedWords:[],hiddenPosts:[]},birthDate:void 0,interests:{tags:[]}},i=await this.app.bsky.actor.getPreferences({}),r=[];for(const n of i.data.preferences)if(_.isAdultContentPref(n)&&_.validateAdultContentPref(n).success)e.moderationPrefs.adultContentEnabled=n.enabled;else if(_.isContentLabelPref(n)&&_.validateContentLabelPref(n).success){const s=a4(n);r.push(s)}else if(_.isLabelersPref(n)&&_.validateLabelersPref(n).success)e.moderationPrefs.labelers=bt.appLabelers.map(s=>({did:s,labels:{}})).concat(n.labelers.map(s=>({...s,labels:{}})));else if(_.isSavedFeedsPref(n)&&_.validateSavedFeedsPref(n).success)e.feeds.saved=n.saved,e.feeds.pinned=n.pinned;else if(_.isPersonalDetailsPref(n)&&_.validatePersonalDetailsPref(n).success)n.birthDate&&(e.birthDate=new Date(n.birthDate));else if(_.isFeedViewPref(n)&&_.validateFeedViewPref(n).success){const{$type:s,feed:a,...t}=n;e.feedViewPrefs[n.feed]={...bp,...t}}else if(_.isThreadViewPref(n)&&_.validateThreadViewPref(n).success){const{$type:s,...a}=n;e.threadViewPrefs={...e.threadViewPrefs,...a}}else if(_.isInterestsPref(n)&&_.validateInterestsPref(n).success){const{$type:s,...a}=n;e.interests={...e.interests,...a}}else if(_.isMutedWordsPref(n)&&_.validateMutedWordsPref(n).success){const{$type:s,...a}=n;e.moderationPrefs.mutedWords=a.items}else if(_.isHiddenPostsPref(n)&&_.validateHiddenPostsPref(n).success){const{$type:s,...a}=n;e.moderationPrefs.hiddenPosts=a.items}for(const n of r)if(n.labelerDid){const s=e.moderationPrefs.labelers.find(a=>a.did===n.labelerDid);if(!s)continue;s.labels[n.label]=n.visibility}else e.moderationPrefs.labels[n.label]=n.visibility;return e.moderationPrefs.labels=o4(e.moderationPrefs.labels),this.configureLabelersHeader(jr(i.data.preferences)),e}async setSavedFeeds(e,i){return At(this,()=>({saved:e,pinned:i}))}async addSavedFeed(e){return At(this,(i,r)=>({saved:[...i.filter(n=>n!==e),e],pinned:r}))}async removeSavedFeed(e){return At(this,(i,r)=>({saved:i.filter(n=>n!==e),pinned:r.filter(n=>n!==e)}))}async addPinnedFeed(e){return At(this,(i,r)=>({saved:[...i.filter(n=>n!==e),e],pinned:[...r.filter(n=>n!==e),e]}))}async removePinnedFeed(e){return At(this,(i,r)=>({saved:i,pinned:r.filter(n=>n!==e)}))}async setAdultContentEnabled(e){await ne(this,i=>{let r=i.findLast(n=>_.isAdultContentPref(n)&&_.validateAdultContentPref(n).success);return r?r.enabled=e:r={$type:"app.bsky.actor.defs#adultContentPref",enabled:e},i.filter(n=>!_.isAdultContentPref(n)).concat([r])})}async setContentLabelPref(e,i,r){r&&et(r),await ne(this,n=>{let s=n.findLast(t=>_.isContentLabelPref(t)&&_.validateContentLabelPref(t).success&&t.label===e&&t.labelerDid===r),a;if(s?s.visibility=i:s={$type:"app.bsky.actor.defs#contentLabelPref",label:e,labelerDid:r,visibility:i},_.isContentLabelPref(s)&&!s.labelerDid){const t={"graphic-media":"gore",porn:"nsfw",sexual:"suggestive"}[s.label];t&&(a=n.findLast(l=>_.isContentLabelPref(l)&&_.validateContentLabelPref(l).success&&l.label===t&&l.labelerDid===void 0),a?a.visibility=i:a={$type:"app.bsky.actor.defs#contentLabelPref",label:t,labelerDid:void 0,visibility:i})}return n.filter(t=>!_.isContentLabelPref(t)||!(t.label===e&&t.labelerDid===r)).concat([s]).filter(t=>a?!_.isContentLabelPref(t)||!(t.label===a.label&&t.labelerDid===void 0):!0).concat(a?[a]:[])})}async addLabeler(e){const i=await ne(this,r=>{let n=r.findLast(s=>_.isLabelersPref(s)&&_.validateLabelersPref(s).success);if(n||(n={$type:"app.bsky.actor.defs#labelersPref",labelers:[]}),_.isLabelersPref(n)){let s=n.labelers.find(a=>a.did===e);s||(s={did:e},n.labelers.push(s))}return r.filter(s=>!_.isLabelersPref(s)).concat([n])});this.configureLabelersHeader(jr(i))}async removeLabeler(e){const i=await ne(this,r=>{let n=r.findLast(s=>_.isLabelersPref(s)&&_.validateLabelersPref(s).success);return n||(n={$type:"app.bsky.actor.defs#labelersPref",labelers:[]}),_.isLabelersPref(n)&&(n.labelers=n.labelers.filter(s=>s.did!==e)),r.filter(s=>!_.isLabelersPref(s)).concat([n])});this.configureLabelersHeader(jr(i))}async setPersonalDetails({birthDate:e}){e=e instanceof Date?e.toISOString():e,await ne(this,i=>{let r=i.findLast(n=>_.isPersonalDetailsPref(n)&&_.validatePersonalDetailsPref(n).success);return r?r.birthDate=e:r={$type:"app.bsky.actor.defs#personalDetailsPref",birthDate:e},i.filter(n=>!_.isPersonalDetailsPref(n)).concat([r])})}async setFeedViewPrefs(e,i){await ne(this,r=>{const n=r.findLast(s=>_.isFeedViewPref(s)&&_.validateFeedViewPref(s).success&&s.feed===e);return n&&(i={...n,...i}),r.filter(s=>!_.isFeedViewPref(i)||s.feed!==e).concat([{...i,$type:"app.bsky.actor.defs#feedViewPref",feed:e}])})}async setThreadViewPrefs(e){await ne(this,i=>{const r=i.findLast(n=>_.isThreadViewPref(n)&&_.validateThreadViewPref(n).success);return r&&(e={...r,...e}),i.filter(n=>!_.isThreadViewPref(n)).concat([{...e,$type:"app.bsky.actor.defs#threadViewPref"}])})}async setInterestsPref(e){await ne(this,i=>{const r=i.findLast(n=>_.isInterestsPref(n)&&_.validateInterestsPref(n).success);return r&&(e={...r,...e}),i.filter(n=>!_.isInterestsPref(n)).concat([{...e,$type:"app.bsky.actor.defs#interestsPref"}])})}async upsertMutedWords(e){await ne(this,i=>{let r=i.findLast(n=>_.isMutedWordsPref(n)&&_.validateMutedWordsPref(n).success);if(r&&_.isMutedWordsPref(r))for(const n of e){let s=!1;const a=Ur(n.value);if(a){for(const t of r.items)if(t.value===a){t.targets=Array.from(new Set([...t.targets,...n.targets])),s=!0;break}s||r.items.push({...n,value:a})}}else r={items:e.map(n=>({...n,value:Ur(n.value)}))};return i.filter(n=>!_.isMutedWordsPref(n)).concat([{...r,$type:"app.bsky.actor.defs#mutedWordsPref"}])})}async updateMutedWord(e){await ne(this,i=>{const r=i.findLast(n=>_.isMutedWordsPref(n)&&_.validateMutedWordsPref(n).success);if(r&&_.isMutedWordsPref(r)){for(const n of r.items)if(n.value===e.value){n.targets=e.targets;break}}return i.filter(n=>!_.isMutedWordsPref(n)).concat([{...r,$type:"app.bsky.actor.defs#mutedWordsPref"}])})}async removeMutedWord(e){await ne(this,i=>{const r=i.findLast(n=>_.isMutedWordsPref(n)&&_.validateMutedWordsPref(n).success);if(r&&_.isMutedWordsPref(r)){for(let n=0;n<r.items.length;n++)if(r.items[n].value===e.value){r.items.splice(n,1);break}}return i.filter(n=>!_.isMutedWordsPref(n)).concat([{...r,$type:"app.bsky.actor.defs#mutedWordsPref"}])})}async hidePost(e){await Ap(this,e,"hide")}async unhidePost(e){await Ap(this,e,"unhide")}};async function ne(e,i){const r=await e.app.bsky.actor.getPreferences({}),n=i(r.data.preferences);return n===!1?r.data.preferences:(await e.app.bsky.actor.putPreferences({preferences:n}),n)}async function At(e,i){let r;return await ne(e,n=>{let s=n.findLast(a=>_.isSavedFeedsPref(a)&&_.validateSavedFeedsPref(a).success);return s?(r=i(s.saved,s.pinned),s.saved=r.saved,s.pinned=r.pinned):(r=i([],[]),s={$type:"app.bsky.actor.defs#savedFeedsPref",saved:r.saved,pinned:r.pinned}),n.filter(a=>!_.isSavedFeedsPref(a)).concat([s])}),r}function a4(e){let i=e.visibility;return i==="show"&&(i="ignore"),{...e,visibility:i}}function o4(e){const i={...e},r={gore:"graphic-media",nsfw:"porn",suggestive:"sexual"};for(const n in i){const s=r[n];s&&(i[s]=i[n])}return i}function jr(e){const i=e.findLast(n=>_.isLabelersPref(n)&&_.validateLabelersPref(n).success);let r=[];return i&&(r=i.labelers.map(n=>n.did)),r}async function Ap(e,i,r){await ne(e,n=>{let s=n.findLast(a=>_.isHiddenPostsPref(a)&&_.validateHiddenPostsPref(a).success);return s&&_.isHiddenPostsPref(s)?s.items=r==="hide"?Array.from(new Set([...s.items,i])):s.items.filter(a=>a!==i):r==="hide"&&(s={$type:"app.bsky.actor.defs#hiddenPostsPref",items:[i]}),n.filter(a=>!_.isInterestsPref(a)).concat([{...s,$type:"app.bsky.actor.defs#hiddenPostsPref"}])})}function l4(e){return e&&typeof e=="object"&&"moderationPrefs"in e&&Tp(e.moderationPrefs)}function Tp(e){return e&&typeof e=="object"&&"labelers"in e}}(ir)),ir.exports}var nr=Lp();const sr={authUrl:"https://notisky.symm.app/auth",redirectUrl:"https://notisky.symm.app/auth/callback"};async function _p(){try{if(!R.identity)throw new Error("Identity API not available in this browser");const V=Math.random().toString(36).substring(2,15);await R.storage.local.set({auth_state:V});const M=new URL(sr.authUrl);M.searchParams.append("response_type","code"),M.searchParams.append("redirect_uri",sr.redirectUrl),M.searchParams.append("state",V),M.searchParams.append("client_id","notisky-extension"),console.log("Starting auth flow with URL:",M.toString());try{const D=await R.identity.launchWebAuthFlow({url:M.toString(),interactive:!0});console.log("Received auth response URL:",D);const z=new URL(D),H=z.searchParams.get("code"),se=z.searchParams.get("state"),{auth_state:We}=await R.storage.local.get("auth_state");if(se!==We)throw new Error("State mismatch, possible CSRF attack");if(await R.storage.local.remove("auth_state"),!H)throw new Error("No authorization code received");return{success:!0,token:(await qr(H)).access_token}}catch(D){if(console.error("Auth flow error:",D),D.message.includes("Authorization page could not be loaded"))return console.log("Trying alternative authentication method..."),await Cp(M.toString(),V);throw D}}catch(V){return console.error("Authentication error:",V),{success:!1,error:V instanceof Error?V.message:"Unknown authentication error"}}}async function Cp(V,M){return new Promise(D=>{const z=async H=>{if(!(H.source!=="notisky-auth"||!H.code)){console.log("Received auth message:",H),R.runtime.onMessage.removeListener(z);try{if(H.state!==M)throw new Error("State mismatch, possible CSRF attack");const se=await qr(H.code);D({success:!0,token:se.access_token})}catch(se){console.error("Error in alternative auth flow:",se),D({success:!1,error:se instanceof Error?se.message:"Error in alternative auth flow"})}}};R.runtime.onMessage.addListener(z),R.tabs.create({url:V}),setTimeout(()=>{R.runtime.onMessage.removeListener(z),D({success:!1,error:"Authentication timed out. Please try again."})},12e4)})}async function qr(V){const M=await fetch("https://notisky.symm.app/api/token",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({code:V,redirect_uri:sr.redirectUrl,client_id:"notisky-extension",grant_type:"authorization_code"})});if(!M.ok){const D=await M.json();throw new Error(D.error||"Failed to exchange code for token")}return M.json()}async function wp(V){await R.storage.local.set({auth_token:V})}async function Sp(){const{auth_token:V}=await R.storage.local.get("auth_token");return V||null}const Bp=vp(V=>{console.log("Notisky background script loaded");const M={},D=(()=>{try{return typeof R<"u"&&typeof R.action<"u"&&typeof R.action.setIcon=="function"&&!R.action.setIcon.toString().includes("not implemented")}catch(o){return console.log("Notisky: Not in a real browser environment",o),!1}})();if(D)try{R.alarms.create("notiskyHeartbeat",{periodInMinutes:1}),R.alarms.create("notiskyKeepAlive",{periodInMinutes:.1})}catch(o){console.error("Notisky: Error creating heartbeat alarm",o)}if(D&&R.alarms&&R.alarms.onAlarm)try{R.alarms.onAlarm.addListener(o=>{if(o.name==="notiskyHeartbeat")try{R.storage.local.set({heartbeat:{timestamp:Date.now(),status:"active"}}).catch(g=>{console.error("Notisky: Error writing heartbeat to storage",g)})}catch(g){console.error("Notisky: Error in heartbeat alarm",g)}else if(o.name==="notiskyKeepAlive")try{R.storage.local.set({serviceWorkerKeepAlive:Date.now()}).catch(()=>{})}catch{}})}catch(o){console.error("Notisky: Error setting up alarm listener",o)}if(D&&typeof R<"u"&&typeof R.runtime<"u"&&typeof R.runtime.getManifest=="function"&&R.runtime.getManifest().manifest_version===3){console.log("Notisky: Running in MV3 mode, setting up additional keep-alive strategies"),setInterval(()=>{try{R.storage.local.set({serviceWorkerKeepAlive:Date.now(),serviceWorkerStatus:"active"}).catch(o=>{Math.random()<.1&&console.warn("Notisky: Error in service worker keep-alive storage operation",o)})}catch(o){Math.random()<.1&&console.warn("Notisky: Critical error in service worker keep-alive",o)}},3e3);try{typeof R.runtime.onConnect=="function"&&R.runtime.onConnect.addListener(o=>{console.log("Notisky: Background script received connection from",o.name||"unnamed port"),o.onDisconnect.addListener(()=>{console.log("Notisky: Port disconnected"),R.runtime.lastError&&console.warn("Notisky: Port disconnected with error:",R.runtime.lastError)})})}catch(o){console.error("Notisky: Error setting up connection listener",o)}}if(D&&R.runtime&&R.runtime.onMessage)try{R.runtime.onMessage.addListener((o,g,y)=>{try{console.log("Notisky: Received message from content script",o,g);try{R.storage.local.set({lastMessageTimestamp:Date.now(),lastMessageType:o.action})}catch(A){console.error("Notisky: Error writing to storage",A)}if(o.source==="notisky-auth"&&o.code)return console.log("Notisky: Received authentication response from external page"),y({success:!0}),!0;if(o.action==="getPreferences")y({success:!0,preferences:z});else if(o.action==="updateNotificationCount")p(o.count),y({success:!0});else if(o.action==="sendNotification")Qe(o.title,o.message,o.type),y({success:!0});else if(o.action==="checkForUpdates")Ae(),y({success:!0});else if(o.action==="ping")y({success:!0,message:"pong"});else{if(o.action==="authenticate")return cr().then(A=>{y(A)}).catch(A=>{y({success:!1,error:A instanceof Error?A.message:"Unknown authentication error"})}),!0;if(o.action==="getAuthToken")return Sp().then(A=>{y({success:!0,token:A})}).catch(A=>{y({success:!1,error:A instanceof Error?A.message:"Error retrieving auth token"})}),!0;console.error("Notisky: Unknown message action",o),y({success:!1,error:"Unknown action"})}}catch(A){console.error("Notisky: Error handling message",A),y({success:!1,error:A instanceof Error?A.message:"Unknown error in message handler"})}}),typeof R.runtime.onConnect=="function"&&R.runtime.onConnect.addListener(o=>{console.log("Notisky: Background script received connection attempt from content script to wake up service worker")})}catch(o){console.error("Notisky: Error setting up message listener",o)}let z={updateSiteIcon:!0,updateExtensionIcon:!0,enableNotifications:!0,keepPageAlive:!0,refreshInterval:1,notificationServerUserId:""};function H(){if(!D){console.log("Notisky: In build mode, skipping loading user preferences");return}try{R.storage.sync.get({updateSiteIcon:!0,updateExtensionIcon:!0,enableNotifications:!0,keepPageAlive:!0,refreshInterval:1,notificationServerUserId:""}).then(o=>{z=o,console.log("Notisky: Loaded user preferences",z),z.keepPageAlive&&se()}).catch(o=>{console.error("Notisky: Error accessing storage",o),setTimeout(()=>{H()},5e3)})}catch(o){console.error("Notisky: Error loading preferences",o),setTimeout(()=>{H()},5e3)}}function se(){if(!D)return;const o="notiskyAutoRefresh";R.alarms.clear(o).then(()=>{R.alarms.create(o,{periodInMinutes:15}),console.log("Notisky: Auto-refresh alarm set for every 15 minutes")})}async function We(){if(!D)return null;try{const o=await R.tabs.query({url:["*://bsky.app/*","*://*.bsky.social/*"]});return o.length>0?o[0]:await R.tabs.create({url:"https://bsky.app/",active:!1})}catch(o){return console.error("Notisky: Error finding or creating Bluesky tab",o),null}}async function Ae(){if(!(!D||!z.keepPageAlive))try{const o=await We();o&&o.id&&R.tabs.sendMessage(o.id,{action:"checkForUpdates"}).catch(g=>{console.log("Notisky: Content script not responsive, refreshing tab",g),R.tabs.reload(o.id)})}catch(o){console.error("Notisky: Error refreshing Bluesky tab",o)}}function p(o){if(!(!D||!z.updateExtensionIcon))try{o>0?typeof R.action<"u"||typeof R.browserAction<"u"?Je(o):ce(o):typeof R.action<"u"?(R.action.setIcon({path:{16:"icon/16.png",32:"icon/32.png",48:"icon/48.png",128:"icon/128.png"}}).catch(g=>{console.error("Notisky: Error resetting extension icon",g),ce(0)}),R.action.setBadgeText({text:""}).catch(g=>{console.error("Notisky: Error clearing badge text",g)})):typeof R.browserAction<"u"?(R.browserAction.setIcon({path:{16:"icon/16.png",32:"icon/32.png",48:"icon/48.png",128:"icon/128.png"}}).catch(g=>{console.error("Notisky: Error resetting extension icon",g),ce(0)}),R.browserAction.setBadgeText({text:""}).catch(g=>{console.error("Notisky: Error clearing badge text",g)})):console.warn("Notisky: No action API available for resetting icon")}catch(g){console.error("Notisky: Error updating extension icon",g);try{ce(o)}catch(y){console.error("Notisky: Fallback badge update also failed",y)}}}function Je(o){try{let g;typeof o=="number"?o>30?g="30plus":g=o.toString():g=o,vt(g)?(R.action.setIcon({path:{16:`/icon/notification/${g}_16.png`,32:`/icon/notification/${g}_32.png`,48:`/icon/notification/${g}_48.png`,128:`/icon/notification/${g}_128.png`}}),R.action.setBadgeText({text:""})):or(typeof o=="number"?o:Number.parseInt(o)||9)}catch(g){console.error("Notisky: Error setting notification badge icon",g),ce(typeof o=="number"?o:Number.parseInt(o)||9)}}function vt(o){try{return!0}catch(g){return console.log("Notisky: Error checking badge icon existence, falling back to dynamic generation",g),!1}}function or(o){Lt(o).then(g=>{Object.keys(g).length>0?(R.action.setIcon({imageData:g}),R.action.setBadgeText({text:""})):ce(o)}).catch(g=>{console.error("Notisky: Error generating notification badge",g),ce(o)})}async function Lt(o){const g=[16,32,48,128],y={};try{for(const A of g)if(typeof OffscreenCanvas<"u"){const P=new OffscreenCanvas(A,A).getContext("2d");if(!P)throw new Error("Failed to get canvas context");P.clearRect(0,0,A,A),_t(P,A,o),y[A]=P.getImageData(0,0,A,A)}else{const E=document.createElement("canvas");E.width=A,E.height=A;const P=E.getContext("2d");if(!P)throw new Error("Failed to get canvas context");P.clearRect(0,0,A,A),_t(P,A,o),y[A]=P.getImageData(0,0,A,A)}}catch(A){console.error("Notisky: Error generating badge icon",A),ce(o)}return y}function _t(o,g,y){const A=Math.max(g*.9,14),E=g/2,P=g/2;o.beginPath(),o.arc(E,P,A/2,0,Math.PI*2),o.fillStyle="#FF4A4A",o.fill();let I=y.toString();y>30&&(I="30+"),o.fillStyle="#FFFFFF",o.textAlign="center",o.textBaseline="middle";const O=Math.max(A*.5,7);o.font=`bold ${O}px Arial`,I.length>1&&(o.font=`bold ${O*.8}px Arial`),I.length>2&&(o.font=`bold ${O*.7}px Arial`),o.fillText(I,E,P)}function ce(o){console.log("Notisky: Falling back to badge API");try{if(o>0){const g=o>30?"30+":o.toString();R.action.setBadgeText({text:g}),R.action.setBadgeBackgroundColor({color:"#FF4A4A"}),typeof R.action.setBadgeTextColor=="function"&&R.action.setBadgeTextColor({color:"#FFFFFF"})}else R.action.setBadgeText({text:""})}catch(g){console.error("Notisky: Error in badge API fallback",g)}}async function Ct(){if(!(!D||!z.updateExtensionIcon))try{const o=await R.storage.local.get("badgeState");if(o.badgeState){console.log("Notisky: Recovering badge state");const{count:g,timestamp:y}=o.badgeState;Date.now()-y<60*60*1e3&&g>0?(console.log("Notisky: Restoring notification count:",g),p(g)):(console.log("Notisky: Badge state is outdated, clearing"),R.storage.local.remove("badgeState"),R.action.setIcon({path:{16:"/icon/16.png",32:"/icon/32.png",48:"/icon/48.png",128:"/icon/128.png"}}),R.action.setBadgeText({text:""}))}else console.log("Notisky: No badge state to recover")}catch(o){console.error("Notisky: Error recovering badge state",o),R.action.setIcon({path:{16:"/icon/16.png",32:"/icon/32.png",48:"/icon/48.png",128:"/icon/128.png"}}),R.action.setBadgeText({text:""})}}function Qe(o,g,y="notification"){if(!(!D||!z.enableNotifications))try{const A={type:"basic",title:o,message:g,iconUrl:y==="notification"?R.runtime.getURL("icon/notification/icon-128.png"):R.runtime.getURL("icon/message/icon-128.png")},E=`notisky-${y}-${Date.now()}`;R.notifications.create(E,A).catch(P=>{console.error("Notisky: Error creating notification",P)})}catch(A){console.error("Notisky: Error sending notification",A);try{const E={type:"basic",title:o,message:g,iconUrl:R.runtime.getURL("icon/128.png")};R.notifications.create(`notisky-basic-${Date.now()}`,E).catch(P=>{console.error("Notisky: Error creating basic notification",P)})}catch(E){console.error("Notisky: Error sending fallback notification",E)}}}async function lr(){try{const{accounts:o=[]}=await R.storage.local.get("accounts");console.log(`Initializing ${o.length} headless clients`);for(const g of o)await wt(g)}catch(o){console.error("Error initializing headless clients:",o)}}async function wt(o){try{if(M[o.did]){console.log(`Headless client for ${o.handle} (${o.did}) already running`);return}console.log(`Initializing headless client for ${o.handle} (${o.did})`);const g=new nr.BskyAgent({service:"https://bsky.social"});try{await g.resumeSession({did:o.did,handle:o.handle,refreshJwt:o.refreshJwt,accessJwt:o.accessJwt,active:!0}),console.log(`Resumed session for ${o.handle} (${o.did})`)}catch(E){console.error(`Error resuming session for ${o.handle}:`,E);return}const{preferences:y}=await R.storage.sync.get({preferences:{refreshInterval:3e4}}),A=y.refreshInterval||3e4;M[o.did]={agent:g,interval:null,lastRefresh:0,notificationData:null},M[o.did].interval=window.setInterval(async()=>{await ae(o.did)},A),await ae(o.did)}catch(g){console.error(`Error initializing headless client for ${o.did}:`,g)}}function Ye(o){M[o]&&(console.log(`Stopping headless client for ${o}`),M[o].interval!==null&&clearInterval(M[o].interval),delete M[o])}async function ae(o){if(!M[o]){console.warn(`No headless client found for ${o}`);return}const g=M[o];try{g.lastRefresh=Date.now();const y=g.agent;if(!y.session){console.log(`Session expired for ${o}, attempting to restore from storage`);const{accounts:ye=[]}=await R.storage.local.get("accounts"),le=ye.find(L=>L.did===o);if(!le){console.error(`No account found for ${o}, stopping headless client`),Ye(o);return}try{if(await y.resumeSession({did:le.did,handle:le.handle,refreshJwt:le.refreshJwt,accessJwt:le.accessJwt,active:!0}),console.log(`Resumed session for ${le.handle} (${le.did})`),y.session){const L=ye.findIndex(W=>W.did===o);L!==-1&&(ye[L].accessJwt=y.session.accessJwt||le.accessJwt,ye[L].refreshJwt=y.session.refreshJwt||le.refreshJwt,await R.storage.local.set({accounts:ye}))}}catch(L){console.error(`Failed to resume session for ${o}, stopping headless client`,L),Ye(o);return}}const A=await et(y),E=await Ie(y),P=Date.now(),I={did:y.session.did,handle:y.session.handle},O=await Se(y),Z=await fetchRawMessages(y),Te=A+E,me={notification:A,message:E,total:Te,notifications:O,messages:Z,accountInfo:I,timestamp:P};g.notificationData=me,tt([me])}catch(y){console.error(`Error refreshing notifications for ${o}:`,y)}}async function et(o){try{return(await o.countUnreadNotifications()).data.count||0}catch(g){return console.error("Error fetching unread notification count:",g),0}}async function Se(o){try{return(await o.listNotifications({limit:15})).data.notifications||[]}catch(g){return console.error("Error fetching raw notifications:",g),[]}}async function Ie(o){var g,y;try{return(y=(g=o.app)==null?void 0:g.bsky)!=null&&y.unspecced&&typeof o.app.bsky.unspecced.getUnreadCount=="function"&&(await o.app.bsky.unspecced.getUnreadCount()).data.count||0}catch(A){return console.error("Error fetching unread message count:",A),0}}function tt(o){if(!o||!Array.isArray(o)||o.length===0){console.log("Notisky: No notification data received");return}try{let g=0,y=0,A=0;o.forEach(E=>{g+=E.total||0,y+=E.notification||0,A+=E.message||0}),console.log(`Notisky: Notification update - total: ${g}, notifications: ${y}, messages: ${A}`),R.storage.local.set({notificationCounts:{total:g,notification:y,message:A}}),p(g),z.enableNotifications&&g>0&&o.forEach(E=>{if(E.total>0){const P=`Bluesky Notifications for @${E.accountInfo.handle}`;let I="";E.notification>0&&(I+=`${E.notification} notification${E.notification!==1?"s":""}`),E.message>0&&(I&&(I+=" and "),I+=`${E.message} message${E.message!==1?"s":""}`),Qe(P,I,"notification")}})}catch(g){console.error("Notisky: Error processing notification update",g)}}async function oe(){console.log("Notisky: WebSocket connections are deprecated - using extension-only model")}function pr(){}function ur(){if(console.log("Notisky: Initializing background script"),H(),D&&R.alarms)try{R.alarms.create("notiskyHeartbeat",{periodInMinutes:1})}catch(o){console.error("Notisky: Error creating alarm",o)}if(oe(),setInterval(pr,6e4),D&&R.alarms)try{R.alarms.create("notiskyServerConnect",{periodInMinutes:5}),R.alarms.onAlarm.addListener(o=>{o.name==="notiskyServerConnect"&&void 0})}catch(o){console.error("Notisky: Error creating server connection alarm",o)}lr()}ur(),R.runtime.onMessage.addListener((o,g,y)=>(o.action==="preferencesUpdated"&&(console.log("Notisky: Preferences updated, reconnecting WebSocket if needed"),oe(),fr(),y({success:!0})),!0));async function fr(){try{const{preferences:o}=await R.storage.sync.get({preferences:{refreshInterval:3e4}}),g=o.refreshInterval||3e4;Object.keys(M).forEach(y=>{const A=M[y];A.interval!==null&&clearInterval(A.interval),A.interval=window.setInterval(async()=>{await ae(y)},g)})}catch(o){console.error("Notisky: Error updating polling intervals",o)}}D&&(H(),Ct(),R.runtime&&R.runtime.onStartup&&R.runtime.onStartup.addListener(()=>{console.log("Notisky: Browser starting up, initializing extension"),H(),Ct()}),R.runtime&&R.runtime.onInstalled&&R.runtime.onInstalled.addListener(o=>{console.log("Notisky: Extension installed or updated",o),H(),o.reason==="install"&&Qe("Notisky Installed","Thank you for installing Notisky! The extension will now show notifications for new Bluesky activity.","notification")}));async function de(o){var g,y;try{const A=new nr.BskyAgent({service:"https://bsky.social"});await A.resumeSession({did:o.did,handle:o.handle,accessJwt:o.accessJwt,refreshJwt:o.refreshJwt});const E=await A.listNotifications({limit:30}),P=E.data.notifications.filter(Z=>!Z.isRead).length;let I=0;try{const Z=await A.app.bsky.feed.getTimeline({limit:1});if(Z.success){const Te=Z.data;Te&&Te.view&&(I=(await A.countUnreadNotifications()).count)}}catch(Z){console.error("Error checking unread messages:",Z)}const O={notification:P,message:I,total:P+I,notifications:E.data.notifications,messages:[],accountInfo:{did:o.did,handle:o.handle},timestamp:Date.now()};updateNotificationBadge(o.did,O);try{const{accountNotifications:Z=[]}=await R.storage.local.get("accountNotifications"),Te=Z.findIndex(me=>me.did===o.did);Te>=0?Z[Te]={did:o.did,handle:o.handle,notification:O.notification,message:O.message,total:O.total,timestamp:O.timestamp}:Z.push({did:o.did,handle:o.handle,notification:O.notification,message:O.message,total:O.total,timestamp:O.timestamp}),await R.storage.local.set({accountNotifications:Z}),await R.storage.local.set({notificationCounts:{notification:P,message:I,total:P+I,timestamp:Date.now()}})}catch(Z){console.error("Error storing notification data:",Z)}return O}catch(A){return console.error("Error polling notifications:",A),((g=A.message)!=null&&g.includes("token")||(y=A.message)!=null&&y.includes("authentication"))&&await St(o),null}}async function St(o){try{const y=await new nr.BskyAgent({service:"https://bsky.social"}).resumeSession({did:o.did,handle:o.handle,accessJwt:o.accessJwt,refreshJwt:o.refreshJwt});return await R.storage.local.get("accounts").then(({accounts:A=[]})=>{const E=A.map(P=>P.did===o.did?{...P,accessJwt:y.accessJwt,refreshJwt:y.refreshJwt}:P);return R.storage.local.set({accounts:E})}),!0}catch(g){return console.error("Failed to refresh token:",g),!1}}R.alarms.create("pollNotifications",{periodInMinutes:1}),R.alarms.onAlarm.addListener(async o=>{if(o.name==="pollNotifications"){const{accounts:g=[]}=await R.storage.local.get("accounts");for(const y of g)await de(y)}});async function cr(){try{const o=await _p();return o.success&&o.token?(await wp(o.token),{success:!0,token:o.token}):{success:!1,error:o.error||"Authentication failed"}}catch(o){return console.error("Notisky: Authentication error",o),{success:!1,error:o instanceof Error?o.message:"Unknown authentication error"}}}});function u4(){}function Tt(V,...M){}const kp={debug:(...V)=>Tt(console.debug,...V),log:(...V)=>Tt(console.log,...V),warn:(...V)=>Tt(console.warn,...V),error:(...V)=>Tt(console.error,...V)};let ar;try{ar=Bp.main(),ar instanceof Promise&&console.warn("The background's main() function return a promise, but it must be synchronous")}catch(V){throw kp.error("The background crashed on startup!"),V}return ar}();
background;

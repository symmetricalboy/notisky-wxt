var contentAuthDetector=function(){"use strict";var d,h;const a=(h=(d=globalThis.browser)==null?void 0:d.runtime)!=null&&h.id?globalThis.browser:globalThis.chrome;console.log("Notisky auth detector content script loaded");function r(t,e){console.log("Auth data detected:",{code:t,state:e});try{localStorage.setItem("notisky_auth_code",t),localStorage.setItem("notisky_auth_state",e);const o={type:"oauth_callback",code:t,state:e};if(typeof a<"u"&&a.runtime&&a.runtime.sendMessage)console.log("Sending auth data to extension background script"),a.runtime.sendMessage(o).then(n=>{console.log("Background script response:",n);const c=new CustomEvent("notisky-auth-detected",{detail:{success:!0}});document.dispatchEvent(c);const i=document.getElementById("auth-status");i&&(i.textContent="Authentication data received by extension",i.className="success")}).catch(n=>{console.error("Error sending message to background script:",n);const c=new CustomEvent("notisky-auth-detected",{detail:{success:!1,error:n}});document.dispatchEvent(c)});else throw console.error("Browser runtime API not available for sending messages"),new Error("Browser runtime API not available")}catch(o){console.error("Error processing auth data:",o)}}document.addEventListener("notisky-auth-available",t=>{console.log("Detected notisky-auth-available event");const e=t.detail||{};e.code&&e.state?r(e.code,e.state):console.warn("Event data missing required fields:",e)});function u(){console.log("Checking DOM for auth data attributes");const t=document.getElementById("notisky-auth-data");if(t){const e=t.getAttribute("data-code"),o=t.getAttribute("data-state");if(e&&o)return r(e,o),!0}return!1}function l(){console.log("Checking localStorage for auth data");const t=localStorage.getItem("notisky_auth_code"),e=localStorage.getItem("notisky_auth_state");return t&&e?(r(t,e),!0):!1}function g(){try{return typeof window<"u"&&window.location&&window.location.href?window.location.href.includes("auth-success.html"):!!document.getElementById("notisky-auth-page")||!!document.getElementById("notisky-auth-data")}catch(t){return console.warn("Error checking page type:",t),!1}}document.addEventListener("DOMContentLoaded",()=>{if(console.log("DOM fully loaded, running auth data checks"),!g()){console.log("Not on auth-success page, skipping auth detection");return}if(u()){console.log("Auth data found in DOM elements");return}if(l()){console.log("Auth data found in localStorage");return}console.log("No auth data found on initial check, setting up interval");let t=0;const e=10,o=setInterval(()=>{if(t++,console.log(`Running periodic check ${t}/${e}`),u()||l()){console.log("Auth data found during periodic check"),clearInterval(o);return}if(t>=e){console.warn("Max checks reached, giving up on finding auth data"),clearInterval(o);const n=document.getElementById("auth-status");n&&(n.textContent="Could not find authentication data",n.className="error")}},500)});const f={};function y(){}function s(t,...e){}const m={debug:(...t)=>s(console.debug,...t),log:(...t)=>s(console.log,...t),warn:(...t)=>s(console.warn,...t),error:(...t)=>s(console.error,...t)};return(async()=>{try{return await f.main()}catch(t){throw m.error('The unlisted script "content-auth-detector" crashed on startup!',t),t}})()}();
contentAuthDetector;

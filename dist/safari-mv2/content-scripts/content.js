var content=function(){"use strict";var oe=Object.defineProperty;var ie=(b,r,x)=>r in b?oe(b,r,{enumerable:!0,configurable:!0,writable:!0,value:x}):b[r]=x;var N=(b,r,x)=>ie(b,typeof r!="symbol"?r+"":r,x);var q,D;const r=(D=(q=globalThis.browser)==null?void 0:q.runtime)!=null&&D.id?globalThis.browser:globalThis.chrome;function x(i){return i}const z={matches:["*://bsky.app/*","*://*.bsky.social/*"],main(){console.log("Notisky content script loaded");const i=(()=>{try{return typeof r<"u"&&typeof r.runtime<"u"&&typeof r.runtime.sendMessage=="function"&&!r.runtime.sendMessage.toString().includes("not implemented")}catch(e){return console.log("Notisky: Not in a real browser environment",e),!1}})();let s=0,a=0,u=!1,f=null,c=null,p={updateSiteIcon:!0,updateExtensionIcon:!0,enableNotifications:!0,keepPageAlive:!0,refreshInterval:1},h=!0,y=null,w=0;const O=10,j=5e3;function J(){try{if(console.log("Notisky: Attempting to save original favicon"),c){console.log("Notisky: Original favicon already saved:",c);return}const e=document.querySelectorAll('link[rel="icon"], link[rel="shortcut icon"]');if(e.length>0){if(c=e[0].getAttribute("href"),console.log("Notisky: Saved original favicon:",c),!c){console.log("Notisky: Invalid href attribute on favicon link, using default"),c="https://bsky.app/static/favicon-32x32.png";return}try{let t;if(c.startsWith("data:")){console.log("Notisky: Favicon is a data URL, using as-is");return}else if(c.startsWith("http://")||c.startsWith("https://")){t=new URL(c);const o=new URL(window.location.href);t.origin!==o.origin&&(console.log("Notisky: Favicon is from different origin, using default to avoid CORS issues"),c="https://bsky.app/static/favicon-32x32.png")}else console.log("Notisky: Converting relative favicon URL to absolute"),t=new URL(c,window.location.href),c=t.href}catch(t){console.log("Notisky: Error parsing favicon URL, using default",t),c="https://bsky.app/static/favicon-32x32.png"}}else{const t=document.querySelector('link[rel="apple-touch-icon"]');if(t&&t.getAttribute("href"))c=t.getAttribute("href")||"",console.log("Notisky: Using apple-touch-icon as favicon:",c);else try{const o=window.location.hostname;o.includes("bsky.app")?c="https://bsky.app/static/favicon-32x32.png":o.includes("bsky.social")?c="https://bsky.social/static/favicon-32x32.png":c="/favicon.ico",console.log("Notisky: Using constructed favicon path:",c)}catch{c="https://bsky.app/static/favicon-32x32.png",console.log("Notisky: Using default Bluesky favicon")}}}catch(e){console.error("Notisky: Error saving original favicon",e),c="https://bsky.app/static/favicon-32x32.png"}}function K(e){try{if(e<=0)return console.log("Notisky: Returning original favicon (no notifications)"),Promise.resolve(c||"https://bsky.app/static/favicon-32x32.png");let t;if(e>30?t="30plus":t=e.toString(),i&&h)try{const P=r.runtime.getURL(`/icon/notification/${t}_32.png`);return console.log(`Notisky: Using extension badge icon: ${P}`),Promise.resolve(P)}catch(P){console.log("Notisky: Error getting badge icon URL, falling back to dynamic generation",P)}else console.log("Notisky: Not using extension resources, falling back to dynamic generation");console.log("Notisky: Generating dynamic badge icon");const o=document.createElement("canvas");o.width=32,o.height=32;const n=o.getContext("2d");if(!n)return console.warn("Notisky: Could not get canvas context, returning original favicon"),Promise.resolve(c||"https://bsky.app/static/favicon-32x32.png");n.clearRect(0,0,32,32);const l=Math.max(32*.9,14),d=32/2,v=32/2;n.beginPath(),n.arc(d,v,l/2,0,Math.PI*2),n.fillStyle="#FF4A4A",n.fill();let k;e>30?k="30+":k=e.toString(),n.fillStyle="#FFFFFF",n.textAlign="center",n.textBaseline="middle";const g=Math.max(l*.5,7);n.font=`bold ${g}px Arial`,k.length>1&&(n.font=`bold ${g*.8}px Arial`),k.length>2&&(n.font=`bold ${g*.7}px Arial`),n.fillText(k,d,v);const ne=o.toDataURL("image/png");return console.log("Notisky: Generated dynamic badge icon"),Promise.resolve(ne)}catch(t){return console.error("Notisky: Error creating favicon",t),Promise.resolve(c||"https://bsky.app/static/favicon-32x32.png")}}function V(e){try{if(!e){console.warn("Notisky: No favicon URL provided, skipping update");return}if(!p.updateSiteIcon){console.log("Notisky: Site icon updates disabled in preferences, skipping update");return}Promise.resolve(e).then(t=>{if(!t){console.warn("Notisky: Empty favicon URL after promise resolution, skipping update");return}console.log(`Notisky: Applying favicon: ${t.substring(0,50)}${t.length>50?"...":""}`);try{let o=document.querySelectorAll('link[rel="icon"], link[rel="shortcut icon"]');if(o.length>0)o.forEach(n=>{n.setAttribute("href",t)}),console.log(`Notisky: Updated ${o.length} existing favicon links`);else{const n=document.createElement("link");n.rel="icon",n.type="image/png",n.href=t,document.head.appendChild(n),console.log("Notisky: Created new favicon link")}setTimeout(()=>{const n=document.querySelector('link[rel="icon"], link[rel="shortcut icon"]');n&&(n.getAttribute("href")!==t?console.warn("Notisky: Favicon update may not have applied correctly"):console.log("Notisky: Favicon update verified"))},100)}catch(o){console.error("Notisky: DOM error when applying favicon",o)}}).catch(t=>{console.error("Notisky: Error resolving favicon URL",t)})}catch(t){console.error("Notisky: Critical error applying favicon",t)}}function Q(e){try{if(!i||!p.updateExtensionIcon)return;R({action:"updateNotificationCount",count:e}).then(t=>{t&&t.success?console.log("Notisky: Extension icon update successful"):t===null||console.log("Notisky: No success response from extension icon update")}).catch(t=>{console.error("Notisky: Unexpected error in extension icon update",t)})}catch(t){m(t)}}function Y(e){var t;if(!e)return 0;try{const o=((t=e.textContent)==null?void 0:t.trim())||"";return o?o.endsWith("+")?parseInt(o.slice(0,-1),10):parseInt(o,10)||0:0}catch(o){return console.error("Notisky: Error getting badge count",o),0}}function Z(){try{const e=document.querySelectorAll('div[aria-label*="unread item"]');let t=null,o=null;return e.forEach(n=>{const l=n.closest("a");if(!l)return;const d=l.getAttribute("href");d==="/notifications"?t=n:d==="/messages"&&(o=n)}),{notificationBadge:t,messageBadge:o}}catch(e){return console.error("Notisky: Error finding notification badges",e),{notificationBadge:null,messageBadge:null}}}function E(e=!1){try{if(i&&!h){console.log("Notisky: Skipping badge update due to invalid extension context");return}const{notificationBadge:t,messageBadge:o}=Z(),n=Y(t),l=Y(o),d=n+l;if(console.log(`Notisky: Found notification count: ${n}, message count: ${l}, total: ${d}`),e||d!==s+a){console.log(`Notisky: Updating icons with count ${d}`);try{K(d).then(g=>{g?V(g):console.error("Notisky: Failed to create badge icon, favicon not updated")}).catch(g=>{console.error("Notisky: Error in favicon creation/application chain",g),c&&V(c)})}catch(g){console.error("Notisky: Critical error in favicon update process",g)}try{Q(d)}catch(g){console.error("Notisky: Error updating extension icon",g)}if(i)try{r.storage.local.set({notificationCounts:{notification:n,message:l,total:d}}).catch(g=>{console.warn("Notisky: Failed to save notification counts to storage",g),m(g)})}catch(g){console.warn("Notisky: Error accessing storage",g),m(g)}}const v=n-s,k=l-a;v>0&&p.enableNotifications&&W("New Bluesky Notifications",`You have ${v} new notification${v>1?"s":""}`,"notification"),k>0&&p.enableNotifications&&W("New Bluesky Messages",`You have ${k} new message${k>1?"s":""}`,"message"),s=n,a=l}catch(t){console.error("Notisky: Error updating badges",t),m(t)}}function I(){try{if(u||i&&!h){console.log("Notisky: Not starting badge observation (already observing or invalid context)");return}u=!0,f=window.setInterval(()=>{if(i&&!h){console.log("Notisky: Skipping scheduled badge update due to invalid context");return}E()},p.refreshInterval*60*1e3),console.log("Notisky: Started observing badges")}catch(e){console.error("Notisky: Error observing badges",e),m(e)}}function B(){try{if(!u)return;u=!1,f!==null&&(clearInterval(f),f=null),console.log("Notisky: Stopped observing badges")}catch(e){console.error("Notisky: Error stopping observation",e)}}function W(e,t,o="notification"){try{if(!i||!p.enableNotifications)return;R({action:"sendNotification",title:e,message:t,type:o})}catch(n){console.error("Notisky: Error sending notification",n)}}function R(e,t=0){return new Promise((o,n)=>{try{if(!i){console.log("Notisky: Not in a real browser environment, skipping message",e),o(null);return}if(!h)if(e.action==="ping")console.log("Notisky: Attempting ping despite invalid context state");else{console.log(`Notisky: Skipping message due to invalid extension context: ${e.action}`),o(null);return}r.runtime.sendMessage(e).then(o).catch(l=>{const d=(l==null?void 0:l.message)||"Unknown error";if(d.includes("Extension context invalidated")||d.includes("Invalid extension context")||d.includes("Extension context is invalidated")||d.includes("Could not establish connection")||d.includes("Receiving end does not exist")||d.includes("Service worker")||typeof l.code=="number"&&l.code===15){if(console.log(`Notisky: Extension context invalidated for message: ${e.action}`,l),m(l),["getPreferences","updateNotificationCount"].includes(e.action)&&t<2){console.log(`Notisky: Will retry important action "${e.action}" after a delay`);try{if(r.runtime&&r.runtime.connect){const g=r.runtime.connect({name:"notisky-wake-up"});setTimeout(()=>{try{g.disconnect()}catch{}setTimeout(()=>{console.log(`Notisky: Retrying "${e.action}" (attempt ${t+1})`),R(e,t+1).then(o).catch(()=>o(null))},800)},200);return}}catch{}}o(null)}else console.error(`Notisky: Error sending message: ${e.action}`,l),n(l)})}catch(l){console.error("Notisky: Error in safelyMessageBackground",l),o(null)}})}function F(){if(i){console.log("Notisky: Checking extension context validity");try{ee().then(e=>{if(e){h||(console.log("Notisky: Extension context has been restored via ping"),h=!0,y&&(clearInterval(y),y=null,w=0),setTimeout(()=>{T()},1e3));return}_()}).catch(()=>{_()})}catch{_()}}}function _(){try{r.storage.local.get("contextCheck").then(()=>{h||(console.log("Notisky: Extension context has been restored via storage access"),h=!0,y&&(clearInterval(y),y=null,w=0),setTimeout(()=>{T()},1e3))}).catch(e=>{m(e)})}catch(e){m(e)}}function ee(){return new Promise(e=>{if(!i){e(!1);return}try{const t=setTimeout(()=>{console.log("Notisky: Ping timed out"),e(!1)},2e3),o=typeof r<"u"&&typeof r.runtime<"u"&&typeof r.runtime.getManifest=="function"&&r.runtime.getManifest().manifest_version===3;if(console.log("Notisky: Running in MV3 mode?",o),o)try{const n=r.runtime.id;console.log("Notisky: Extension ID available:",n)}catch{console.log("Notisky: Extension runtime ID not accessible, service worker may be inactive"),clearTimeout(t),e(!1);return}r.runtime.sendMessage({action:"ping"}).then(n=>{clearTimeout(t),n&&n.success&&n.message==="pong"?(console.log("Notisky: Ping successful"),e(!0)):(console.log("Notisky: Ping returned unexpected response",n),e(!1))}).catch(n=>{if(clearTimeout(t),console.log("Notisky: Ping error",n),n.message&&(n.message.includes("Could not establish connection")||n.message.includes("Receiving end does not exist")||n.message.includes("Service worker")||n.message.includes("status code: 15")||n.message.includes("Extension context invalidated"))){console.log("Notisky: Service worker may be terminated or not ready");try{if(r.runtime&&r.runtime.connect){const l=r.runtime.connect();setTimeout(()=>{try{l.disconnect(),console.log("Notisky: Attempted to wake up service worker")}catch(d){console.log("Notisky: Error disconnecting port",d)}},100),setTimeout(()=>{r.runtime.sendMessage({action:"ping"}).then(d=>{d&&d.success?(console.log("Notisky: Service worker woken up successfully"),e(!0)):e(!1)}).catch(()=>e(!1))},500);return}}catch(l){console.log("Notisky: Failed to wake up service worker",l)}}e(!1)})}catch(t){console.log("Notisky: Error sending ping",t),e(!1)}})}function m(e){h&&(console.log("Notisky: Extension context has become invalid",e),h=!1,w=0,y&&clearInterval(y),y=window.setInterval(()=>{if(w++,console.log(`Notisky: Reconnection attempt ${w} of ${O}`),F(),w>=O&&(console.log("Notisky: Multiple reconnection attempts failed, reloading page"),clearInterval(y),y=null,window.location.hostname.includes("bsky.app")||window.location.hostname.includes("bsky.social"))){console.log("Notisky: Reloading page to recover from invalid context");try{localStorage.setItem("notiskyReloadTime",Date.now().toString()),localStorage.setItem("notiskyReloadReason","extension_context_invalid")}catch{}window.location.reload()}},j))}function T(){console.log("Notisky: Initializing content script"),s=0,a=0,u=!1,f!==null&&(clearInterval(f),f=null),J(),i&&(F(),setInterval(()=>{F()},60*1e3),document.addEventListener("visibilitychange",()=>{document.visibilityState==="visible"&&(console.log("Notisky: Tab became visible, checking extension context"),F())})),!i||h?i?R({action:"getPreferences"}).then(e=>{e&&e.preferences?(p=e.preferences,console.log("Notisky: Loaded user preferences",p)):console.log("Notisky: Using default preferences due to error or extension reload"),I(),E(!0)}).catch(e=>{console.error("Notisky: Error loading preferences, using defaults",e),I(),E(!0)}):(I(),E(!0)):console.log("Notisky: Skipping initialization due to invalid extension context")}i?(r.storage.sync.get({updateSiteIcon:!0,updateExtensionIcon:!0,enableNotifications:!0,keepPageAlive:!0,refreshInterval:1}).then(e=>{p=e,console.log("Notisky: Loaded user preferences",p),T()}).catch(e=>{console.error("Notisky: Error loading preferences",e),T()}),r.runtime.onMessage.addListener((e,t,o)=>{try{return e.action==="checkForUpdates"&&(console.log("Notisky: Received request to check for updates"),E(!0),o({success:!0})),!0}catch(n){return console.error("Notisky: Error handling message from background",n),o({success:!1,error:n.message}),!0}}),r.storage.onChanged.addListener((e,t)=>{if(t==="sync"){let o=!1;for(const n in e)Object.prototype.hasOwnProperty.call(p,n)&&(n==="refreshInterval"&&f&&(o=!0),p[n]=e[n].newValue);console.log("Notisky: Updated preferences after storage change",p),o&&u&&(B(),I())}}),document.addEventListener("visibilitychange",function(){document.hidden?B():(I(),E(!0))}),window.addEventListener("beforeunload",function(){B()}),window.addEventListener("load",function(){T()})):console.log("Notisky: In build environment, skipping initialization"),r.runtime.onMessage.addListener((e,t,o)=>(console.log("Content script received message:",e),e.action==="checkPage"&&o({success:!0,url:window.location.href}),!0)),window.location.href.includes("/auth/callback")&&(console.log("Detected auth callback page, processing auth response"),te());function te(){try{const e=new URLSearchParams(window.location.search),t=e.get("code"),o=e.get("state"),n=e.get("error");if(n){console.error("Auth error received:",n),r.runtime.sendMessage({action:"authError",error:n});return}if(!t||!o){console.error("Missing required parameters in auth callback");return}console.log("Auth callback received code and state, sending to background"),r.runtime.sendMessage({action:"authSuccess",code:t,state:o}),r.storage.local.set({auth_code:t,auth_state:o,auth_timestamp:Date.now()});const l=document.getElementById("status");l&&(l.textContent="Authentication successful! You can close this tab.",l.className="success"),setTimeout(()=>{try{window.close()}catch(d){console.log("Could not auto-close tab:",d),l&&(l.textContent="Authentication complete! You can now close this tab manually.")}},3e3)}catch(e){console.error("Error processing auth callback:",e)}}}};function A(i,...s){}const G={debug:(...i)=>A(console.debug,...i),log:(...i)=>A(console.log,...i),warn:(...i)=>A(console.warn,...i),error:(...i)=>A(console.error,...i)},M=class M extends Event{constructor(s,a){super(M.EVENT_NAME,{}),this.newUrl=s,this.oldUrl=a}};N(M,"EVENT_NAME",$("wxt:locationchange"));let U=M;function $(i){var s;return`${(s=r==null?void 0:r.runtime)==null?void 0:s.id}:content:${i}`}function H(i){let s,a;return{run(){s==null&&(a=new URL(location.href),s=i.setInterval(()=>{let u=new URL(location.href);u.href!==a.href&&(window.dispatchEvent(new U(u,a)),a=u)},1e3))}}}const S=class S{constructor(s,a){N(this,"isTopFrame",window.self===window.top);N(this,"abortController");N(this,"locationWatcher",H(this));N(this,"receivedMessageIds",new Set);this.contentScriptName=s,this.options=a,this.abortController=new AbortController,this.isTopFrame?(this.listenForNewerScripts({ignoreFirstEvent:!0}),this.stopOldScripts()):this.listenForNewerScripts()}get signal(){return this.abortController.signal}abort(s){return this.abortController.abort(s)}get isInvalid(){return r.runtime.id==null&&this.notifyInvalidated(),this.signal.aborted}get isValid(){return!this.isInvalid}onInvalidated(s){return this.signal.addEventListener("abort",s),()=>this.signal.removeEventListener("abort",s)}block(){return new Promise(()=>{})}setInterval(s,a){const u=setInterval(()=>{this.isValid&&s()},a);return this.onInvalidated(()=>clearInterval(u)),u}setTimeout(s,a){const u=setTimeout(()=>{this.isValid&&s()},a);return this.onInvalidated(()=>clearTimeout(u)),u}requestAnimationFrame(s){const a=requestAnimationFrame((...u)=>{this.isValid&&s(...u)});return this.onInvalidated(()=>cancelAnimationFrame(a)),a}requestIdleCallback(s,a){const u=requestIdleCallback((...f)=>{this.signal.aborted||s(...f)},a);return this.onInvalidated(()=>cancelIdleCallback(u)),u}addEventListener(s,a,u,f){var c;a==="wxt:locationchange"&&this.isValid&&this.locationWatcher.run(),(c=s.addEventListener)==null||c.call(s,a.startsWith("wxt:")?$(a):a,u,{...f,signal:this.signal})}notifyInvalidated(){this.abort("Content script context invalidated"),G.debug(`Content script "${this.contentScriptName}" context invalidated`)}stopOldScripts(){window.postMessage({type:S.SCRIPT_STARTED_MESSAGE_TYPE,contentScriptName:this.contentScriptName,messageId:Math.random().toString(36).slice(2)},"*")}verifyScriptStartedEvent(s){var c,p,h;const a=((c=s.data)==null?void 0:c.type)===S.SCRIPT_STARTED_MESSAGE_TYPE,u=((p=s.data)==null?void 0:p.contentScriptName)===this.contentScriptName,f=!this.receivedMessageIds.has((h=s.data)==null?void 0:h.messageId);return a&&u&&f}listenForNewerScripts(s){let a=!0;const u=f=>{if(this.verifyScriptStartedEvent(f)){this.receivedMessageIds.add(f.data.messageId);const c=a;if(a=!1,c&&(s!=null&&s.ignoreFirstEvent))return;this.notifyInvalidated()}};addEventListener("message",u),this.onInvalidated(()=>removeEventListener("message",u))}};N(S,"SCRIPT_STARTED_MESSAGE_TYPE",$("wxt:content-script-started"));let L=S;function se(){}function C(i,...s){}const X={debug:(...i)=>C(console.debug,...i),log:(...i)=>C(console.log,...i),warn:(...i)=>C(console.warn,...i),error:(...i)=>C(console.error,...i)};return(async()=>{try{const{main:i,...s}=z,a=new L("content",s);return await i(a)}catch(i){throw X.error('The content script "content" crashed on startup!',i),i}})()}();
content;

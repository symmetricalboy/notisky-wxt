import{r as c,b as o,j as e,c as D,R as E}from"./browser-Bh6BCD6u.js";const a={pollingIntervalMinutes:1,showDesktopNotifications:!0,showDetailedNotifications:!0},F=()=>{const[i,h]=c.useState("accounts"),[w,d]=c.useState({}),[C,x]=c.useState(!0),[r,l]=c.useState(a),[S,b]=c.useState(!0),[u,v]=c.useState(!1),[j,t]=c.useState(null),[N,f]=c.useState(null),k=c.useCallback(async()=>{x(!0),t(null);try{const s=await o.runtime.sendMessage({action:"getAccounts"});s.success?d(s.accounts||{}):(console.error("Failed to fetch accounts:",s.error),t("Failed to load account data."),d({}))}catch(s){console.error("Error messaging background script:",s),t("Could not connect to extension background. Try reloading the extension."),d({})}finally{x(!1)}},[]),y=c.useCallback(async()=>{b(!0),t(null);try{const s=await o.runtime.sendMessage({action:"getPreferences"});s.success?l(s.preferences||a):(t("Failed to load preferences: "+s.error),l(a))}catch{t("Could not connect to extension background for preferences."),l(a)}finally{b(!1)}},[]);c.useEffect(()=>{k(),y();const s=n=>{n.action==="authStateChanged"?(console.log("Options received authStateChanged:",n.accounts),d(n.accounts||{}),t(null)):n.action==="preferencesChanged"&&(console.log("Options received preferencesChanged:",n.preferences),l(n.preferences||a),t(null))};return o.runtime.onMessage.addListener(s),()=>{o.runtime.onMessage.removeListener(s)}},[k,y]);const A=async()=>{t(null);try{const s=await o.runtime.sendMessage({action:"authenticate"});s.success||t(s.error||"Failed to start login.")}catch{t("Failed to communicate with extension for login.")}},M=async s=>{t(null);try{const n=await o.runtime.sendMessage({action:"removeAccount",did:s});n.success||t(n.error||"Failed to remove account.")}catch{t("Failed to communicate with extension to remove account.")}},m=(s,n)=>{let g=n;typeof a[s]=="number"?g=parseInt(n,10)||0:typeof a[s]=="boolean"&&(g=!!n),l(L=>({...L,[s]:g})),f(null)},P=async()=>{v(!0),t(null),f(null);try{const s=await o.runtime.sendMessage({action:"savePreferences",preferences:r});s.success?f("Preferences saved successfully!"):t("Failed to save preferences: "+s.error)}catch{t("Error communicating with extension to save preferences.")}finally{v(!1)}},p=Object.values(w);return e.jsxs("div",{className:"container options-container",children:[" ",e.jsxs("header",{className:"app-header",children:[e.jsx("img",{src:"../icon/48.png",alt:"Notisky Logo",className:"logo"}),e.jsx("h1",{children:"Notisky Settings"})]}),e.jsxs("div",{className:"tab-navigation",children:[e.jsx("button",{className:`tab ${i==="accounts"?"active":""}`,onClick:()=>h("accounts"),children:"Accounts"}),e.jsx("button",{className:`tab ${i==="preferences"?"active":""}`,onClick:()=>h("preferences"),children:"Preferences"}),e.jsx("button",{className:`tab ${i==="about"?"active":""}`,onClick:()=>h("about"),children:"About"})]}),j&&e.jsxs("div",{className:"error-message",children:["Error: ",j]}),N&&e.jsx("div",{className:"status-message success-message",children:N}),e.jsxs("div",{className:`tab-content ${i==="accounts"?"active":""}`,id:"accounts-tab",children:[e.jsx("h2",{children:"Accounts"}),C?e.jsx("p",{children:"Loading accounts..."}):p.length>0?e.jsx("ul",{className:"accounts-list options-accounts-list",children:p.map(s=>e.jsxs("li",{className:"account-item",children:[e.jsxs("span",{children:["@",s.handle]}),e.jsx("button",{onClick:()=>M(s.did),className:"remove-button",title:`Log out ${s.handle}`,children:"Logout"})]},s.did))}):e.jsx("p",{children:"No accounts logged in."}),e.jsx("button",{onClick:A,className:"login-button add-account-button",children:p.length>0?"Add Another Account":"Login with Bluesky"})]}),e.jsxs("div",{className:`tab-content ${i==="preferences"?"active":""}`,id:"preferences-tab",children:[e.jsx("h2",{children:"Preferences"}),S?e.jsx("p",{children:"Loading preferences..."}):e.jsxs("div",{className:"preferences-form",children:[e.jsxs("div",{className:"form-group",children:[e.jsx("label",{htmlFor:"pollingInterval",children:"Check for Notifications Every:"}),e.jsxs("div",{className:"input-with-unit",children:[e.jsx("input",{type:"number",id:"pollingInterval",min:"1",value:r.pollingIntervalMinutes,onChange:s=>m("pollingIntervalMinutes",s.target.value),disabled:u}),e.jsx("span",{children:"minutes"})]}),e.jsx("small",{children:"Minimum 1 minute. More frequent checks use more resources."})]}),e.jsxs("div",{className:"form-group",children:[e.jsxs("label",{className:"checkbox-label",children:[e.jsx("input",{type:"checkbox",checked:r.showDesktopNotifications,onChange:s=>m("showDesktopNotifications",s.target.checked),disabled:u}),"Show Desktop Notifications"]}),e.jsx("small",{children:"Display a system notification when new activity is found."})]}),e.jsxs("div",{className:"form-group",children:[e.jsxs("label",{className:"checkbox-label",children:[e.jsx("input",{type:"checkbox",checked:r.showDetailedNotifications,onChange:s=>m("showDetailedNotifications",s.target.checked),disabled:u||!r.showDesktopNotifications}),"Show Notification Details"]}),e.jsx("small",{children:"Include details like username and post content in desktop notifications. Disable for more privacy."})]}),e.jsx("button",{onClick:P,disabled:u,className:"save-button",children:u?"Saving...":"Save Preferences"})]})]}),e.jsxs("div",{className:`tab-content ${i==="about"?"active":""}`,id:"about-tab",children:[e.jsx("h2",{children:"About Notisky"}),e.jsxs("p",{children:["Version: ",o.runtime.getManifest().version]}),e.jsx("p",{children:"Enhances Bluesky with multi-account notifications."})]})]})},I=D.createRoot(document.getElementById("root"));I.render(e.jsx(E.StrictMode,{children:e.jsx(F,{})}));

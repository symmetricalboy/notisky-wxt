var background=function(){"use strict";var qr,Fr;const h=(Fr=(qr=globalThis.browser)==null?void 0:qr.runtime)!=null&&Fr.id?globalThis.browser:globalThis.chrome;function bp(G){return G==null||typeof G=="function"?{main:G}:G}var rr={exports:{}},jr;function Ap(){return jr||(jr=1,function(G){var te=Object.create,Q=Object.defineProperty,Ne=Object.getOwnPropertyDescriptor,be=Object.getOwnPropertyNames,vt=Object.getPrototypeOf,nr=Object.prototype.hasOwnProperty,ue=(e,i)=>function(){return i||(0,e[be(e)[0]])((i={exports:{}}).exports,i),i.exports},p=(e,i)=>{for(var r in i)Q(e,r,{get:i[r],enumerable:!0})},ne=(e,i,r,n)=>{if(i&&typeof i=="object"||typeof i=="function")for(let s of be(i))!nr.call(e,s)&&s!==r&&Q(e,s,{get:()=>i[s],enumerable:!(n=Ne(i,s))||n.enumerable});return e},Ae=(e,i,r)=>(r=e!=null?te(vt(e)):{},ne(!e||!e.__esModule?Q(r,"default",{value:e,enumerable:!0}):r,e)),sr=e=>ne(Q({},"__esModule",{value:!0}),e),Lt=ue({"../../node_modules/.pnpm/graphemer@1.4.0/node_modules/graphemer/lib/boundaries.js"(e){Object.defineProperty(e,"__esModule",{value:!0}),e.EXTENDED_PICTOGRAPHIC=e.CLUSTER_BREAK=void 0,function(i){i[i.CR=0]="CR",i[i.LF=1]="LF",i[i.CONTROL=2]="CONTROL",i[i.EXTEND=3]="EXTEND",i[i.REGIONAL_INDICATOR=4]="REGIONAL_INDICATOR",i[i.SPACINGMARK=5]="SPACINGMARK",i[i.L=6]="L",i[i.V=7]="V",i[i.T=8]="T",i[i.LV=9]="LV",i[i.LVT=10]="LVT",i[i.OTHER=11]="OTHER",i[i.PREPEND=12]="PREPEND",i[i.E_BASE=13]="E_BASE",i[i.E_MODIFIER=14]="E_MODIFIER",i[i.ZWJ=15]="ZWJ",i[i.GLUE_AFTER_ZWJ=16]="GLUE_AFTER_ZWJ",i[i.E_BASE_GAZ=17]="E_BASE_GAZ"}(e.CLUSTER_BREAK||(e.CLUSTER_BREAK={})),e.EXTENDED_PICTOGRAPHIC=101}}),ar=ue({"../../node_modules/.pnpm/graphemer@1.4.0/node_modules/graphemer/lib/GraphemerHelper.js"(e){Object.defineProperty(e,"__esModule",{value:!0});var i=Lt(),r=0,n=1,s=2,a=3,t=4,l=class{static isSurrogate(u,y){return 55296<=u.charCodeAt(y)&&u.charCodeAt(y)<=56319&&56320<=u.charCodeAt(y+1)&&u.charCodeAt(y+1)<=57343}static codePointAt(u,y){y===void 0&&(y=0);const b=u.charCodeAt(y);if(55296<=b&&b<=56319&&y<u.length-1){const A=b,K=u.charCodeAt(y+1);return 56320<=K&&K<=57343?(A-55296)*1024+(K-56320)+65536:A}if(56320<=b&&b<=57343&&y>=1){const A=u.charCodeAt(y-1),K=b;return 55296<=A&&A<=56319?(A-55296)*1024+(K-56320)+65536:K}return b}static shouldBreak(u,y,b,A,K,O){const U=[u].concat(y).concat([b]),j=[A].concat(K).concat([O]),P=U[U.length-2],I=b,re=O,ee=U.lastIndexOf(i.CLUSTER_BREAK.REGIONAL_INDICATOR);if(ee>0&&U.slice(1,ee).every(function(J){return J===i.CLUSTER_BREAK.REGIONAL_INDICATOR})&&[i.CLUSTER_BREAK.PREPEND,i.CLUSTER_BREAK.REGIONAL_INDICATOR].indexOf(P)===-1)return U.filter(function(J){return J===i.CLUSTER_BREAK.REGIONAL_INDICATOR}).length%2===1?a:t;if(P===i.CLUSTER_BREAK.CR&&I===i.CLUSTER_BREAK.LF)return r;if(P===i.CLUSTER_BREAK.CONTROL||P===i.CLUSTER_BREAK.CR||P===i.CLUSTER_BREAK.LF)return n;if(I===i.CLUSTER_BREAK.CONTROL||I===i.CLUSTER_BREAK.CR||I===i.CLUSTER_BREAK.LF)return n;if(P===i.CLUSTER_BREAK.L&&(I===i.CLUSTER_BREAK.L||I===i.CLUSTER_BREAK.V||I===i.CLUSTER_BREAK.LV||I===i.CLUSTER_BREAK.LVT))return r;if((P===i.CLUSTER_BREAK.LV||P===i.CLUSTER_BREAK.V)&&(I===i.CLUSTER_BREAK.V||I===i.CLUSTER_BREAK.T))return r;if((P===i.CLUSTER_BREAK.LVT||P===i.CLUSTER_BREAK.T)&&I===i.CLUSTER_BREAK.T)return r;if(I===i.CLUSTER_BREAK.EXTEND||I===i.CLUSTER_BREAK.ZWJ)return r;if(I===i.CLUSTER_BREAK.SPACINGMARK)return r;if(P===i.CLUSTER_BREAK.PREPEND)return r;const N=j.slice(0,-1).lastIndexOf(i.EXTENDED_PICTOGRAPHIC);return N!==-1&&j[N]===i.EXTENDED_PICTOGRAPHIC&&U.slice(N+1,-2).every(function(J){return J===i.CLUSTER_BREAK.EXTEND})&&P===i.CLUSTER_BREAK.ZWJ&&re===i.EXTENDED_PICTOGRAPHIC?r:y.indexOf(i.CLUSTER_BREAK.REGIONAL_INDICATOR)!==-1?s:P===i.CLUSTER_BREAK.REGIONAL_INDICATOR&&I===i.CLUSTER_BREAK.REGIONAL_INDICATOR?r:n}};e.default=l}}),Je=ue({"../../node_modules/.pnpm/graphemer@1.4.0/node_modules/graphemer/lib/GraphemerIterator.js"(e){Object.defineProperty(e,"__esModule",{value:!0});var i=class{constructor(r,n){this._index=0,this._str=r,this._nextBreak=n}[Symbol.iterator](){return this}next(){let r;if((r=this._nextBreak(this._str,this._index))<this._str.length){const n=this._str.slice(this._index,r);return this._index=r,{value:n,done:!1}}if(this._index<this._str.length){const n=this._str.slice(this._index);return this._index=this._str.length,{value:n,done:!1}}return{value:void 0,done:!0}}};e.default=i}}),Ct=ue({"../../node_modules/.pnpm/graphemer@1.4.0/node_modules/graphemer/lib/Graphemer.js"(e){var i=e&&e.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(e,"__esModule",{value:!0});var r=Lt(),n=i(ar()),s=i(Je()),a=class{static nextBreak(t,l){if(l===void 0&&(l=0),l<0)return 0;if(l>=t.length-1)return t.length;const u=n.default.codePointAt(t,l),y=a.getGraphemeBreakProperty(u),b=a.getEmojiProperty(u),A=[],K=[];for(let O=l+1;O<t.length;O++){if(n.default.isSurrogate(t,O-1))continue;const U=n.default.codePointAt(t,O),j=a.getGraphemeBreakProperty(U),P=a.getEmojiProperty(U);if(n.default.shouldBreak(y,A,j,b,K,P))return O;A.push(j),K.push(P)}return t.length}splitGraphemes(t){const l=[];let u=0,y;for(;(y=a.nextBreak(t,u))<t.length;)l.push(t.slice(u,y)),u=y;return u<t.length&&l.push(t.slice(u)),l}iterateGraphemes(t){return new s.default(t,a.nextBreak)}countGraphemes(t){let l=0,u=0,y;for(;(y=a.nextBreak(t,u))<t.length;)u=y,l++;return u<t.length&&l++,l}static getGraphemeBreakProperty(t){if(t<48905){if(t<44116){if(t<4141){if(t<2818){if(t<2363)if(t<1759){if(t<1471){if(t<127){if(t<11){if(t<10){if(0<=t&&t<=9)return r.CLUSTER_BREAK.CONTROL}else if(t===10)return r.CLUSTER_BREAK.LF}else if(t<13){if(11<=t&&t<=12)return r.CLUSTER_BREAK.CONTROL}else if(t<14){if(t===13)return r.CLUSTER_BREAK.CR}else if(14<=t&&t<=31)return r.CLUSTER_BREAK.CONTROL}else if(t<768){if(t<173){if(127<=t&&t<=159)return r.CLUSTER_BREAK.CONTROL}else if(t===173)return r.CLUSTER_BREAK.CONTROL}else if(t<1155){if(768<=t&&t<=879)return r.CLUSTER_BREAK.EXTEND}else if(t<1425){if(1155<=t&&t<=1161)return r.CLUSTER_BREAK.EXTEND}else if(1425<=t&&t<=1469)return r.CLUSTER_BREAK.EXTEND}else if(t<1552){if(t<1476){if(t<1473){if(t===1471)return r.CLUSTER_BREAK.EXTEND}else if(1473<=t&&t<=1474)return r.CLUSTER_BREAK.EXTEND}else if(t<1479){if(1476<=t&&t<=1477)return r.CLUSTER_BREAK.EXTEND}else if(t<1536){if(t===1479)return r.CLUSTER_BREAK.EXTEND}else if(1536<=t&&t<=1541)return r.CLUSTER_BREAK.PREPEND}else if(t<1648){if(t<1564){if(1552<=t&&t<=1562)return r.CLUSTER_BREAK.EXTEND}else if(t<1611){if(t===1564)return r.CLUSTER_BREAK.CONTROL}else if(1611<=t&&t<=1631)return r.CLUSTER_BREAK.EXTEND}else if(t<1750){if(t===1648)return r.CLUSTER_BREAK.EXTEND}else if(t<1757){if(1750<=t&&t<=1756)return r.CLUSTER_BREAK.EXTEND}else if(t===1757)return r.CLUSTER_BREAK.PREPEND}else if(t<2075){if(t<1840)if(t<1770){if(t<1767){if(1759<=t&&t<=1764)return r.CLUSTER_BREAK.EXTEND}else if(1767<=t&&t<=1768)return r.CLUSTER_BREAK.EXTEND}else if(t<1807){if(1770<=t&&t<=1773)return r.CLUSTER_BREAK.EXTEND}else{if(t===1807)return r.CLUSTER_BREAK.PREPEND;if(t===1809)return r.CLUSTER_BREAK.EXTEND}else if(t<2027){if(t<1958){if(1840<=t&&t<=1866)return r.CLUSTER_BREAK.EXTEND}else if(1958<=t&&t<=1968)return r.CLUSTER_BREAK.EXTEND}else if(t<2045){if(2027<=t&&t<=2035)return r.CLUSTER_BREAK.EXTEND}else if(t<2070){if(t===2045)return r.CLUSTER_BREAK.EXTEND}else if(2070<=t&&t<=2073)return r.CLUSTER_BREAK.EXTEND}else if(t<2200){if(t<2089){if(t<2085){if(2075<=t&&t<=2083)return r.CLUSTER_BREAK.EXTEND}else if(2085<=t&&t<=2087)return r.CLUSTER_BREAK.EXTEND}else if(t<2137){if(2089<=t&&t<=2093)return r.CLUSTER_BREAK.EXTEND}else if(t<2192){if(2137<=t&&t<=2139)return r.CLUSTER_BREAK.EXTEND}else if(2192<=t&&t<=2193)return r.CLUSTER_BREAK.PREPEND}else if(t<2275){if(t<2250){if(2200<=t&&t<=2207)return r.CLUSTER_BREAK.EXTEND}else if(t<2274){if(2250<=t&&t<=2273)return r.CLUSTER_BREAK.EXTEND}else if(t===2274)return r.CLUSTER_BREAK.PREPEND}else if(t<2307){if(2275<=t&&t<=2306)return r.CLUSTER_BREAK.EXTEND}else{if(t===2307)return r.CLUSTER_BREAK.SPACINGMARK;if(t===2362)return r.CLUSTER_BREAK.EXTEND}else if(t<2561){if(t<2434){if(t<2381){if(t<2366){if(t===2363)return r.CLUSTER_BREAK.SPACINGMARK;if(t===2364)return r.CLUSTER_BREAK.EXTEND}else if(t<2369){if(2366<=t&&t<=2368)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<2377){if(2369<=t&&t<=2376)return r.CLUSTER_BREAK.EXTEND}else if(2377<=t&&t<=2380)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<2385){if(t<2382){if(t===2381)return r.CLUSTER_BREAK.EXTEND}else if(2382<=t&&t<=2383)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<2402){if(2385<=t&&t<=2391)return r.CLUSTER_BREAK.EXTEND}else if(t<2433){if(2402<=t&&t<=2403)return r.CLUSTER_BREAK.EXTEND}else if(t===2433)return r.CLUSTER_BREAK.EXTEND}else if(t<2503){if(t<2494){if(t<2492){if(2434<=t&&t<=2435)return r.CLUSTER_BREAK.SPACINGMARK}else if(t===2492)return r.CLUSTER_BREAK.EXTEND}else if(t<2495){if(t===2494)return r.CLUSTER_BREAK.EXTEND}else if(t<2497){if(2495<=t&&t<=2496)return r.CLUSTER_BREAK.SPACINGMARK}else if(2497<=t&&t<=2500)return r.CLUSTER_BREAK.EXTEND}else if(t<2519){if(t<2507){if(2503<=t&&t<=2504)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<2509){if(2507<=t&&t<=2508)return r.CLUSTER_BREAK.SPACINGMARK}else if(t===2509)return r.CLUSTER_BREAK.EXTEND}else if(t<2530){if(t===2519)return r.CLUSTER_BREAK.EXTEND}else if(t<2558){if(2530<=t&&t<=2531)return r.CLUSTER_BREAK.EXTEND}else if(t===2558)return r.CLUSTER_BREAK.EXTEND}else if(t<2691){if(t<2631){if(t<2620){if(t<2563){if(2561<=t&&t<=2562)return r.CLUSTER_BREAK.EXTEND}else if(t===2563)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<2622){if(t===2620)return r.CLUSTER_BREAK.EXTEND}else if(t<2625){if(2622<=t&&t<=2624)return r.CLUSTER_BREAK.SPACINGMARK}else if(2625<=t&&t<=2626)return r.CLUSTER_BREAK.EXTEND}else if(t<2672){if(t<2635){if(2631<=t&&t<=2632)return r.CLUSTER_BREAK.EXTEND}else if(t<2641){if(2635<=t&&t<=2637)return r.CLUSTER_BREAK.EXTEND}else if(t===2641)return r.CLUSTER_BREAK.EXTEND}else if(t<2677){if(2672<=t&&t<=2673)return r.CLUSTER_BREAK.EXTEND}else if(t<2689){if(t===2677)return r.CLUSTER_BREAK.EXTEND}else if(2689<=t&&t<=2690)return r.CLUSTER_BREAK.EXTEND}else if(t<2761){if(t<2750){if(t===2691)return r.CLUSTER_BREAK.SPACINGMARK;if(t===2748)return r.CLUSTER_BREAK.EXTEND}else if(t<2753){if(2750<=t&&t<=2752)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<2759){if(2753<=t&&t<=2757)return r.CLUSTER_BREAK.EXTEND}else if(2759<=t&&t<=2760)return r.CLUSTER_BREAK.EXTEND}else if(t<2786){if(t<2763){if(t===2761)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<2765){if(2763<=t&&t<=2764)return r.CLUSTER_BREAK.SPACINGMARK}else if(t===2765)return r.CLUSTER_BREAK.EXTEND}else if(t<2810){if(2786<=t&&t<=2787)return r.CLUSTER_BREAK.EXTEND}else if(t<2817){if(2810<=t&&t<=2815)return r.CLUSTER_BREAK.EXTEND}else if(t===2817)return r.CLUSTER_BREAK.EXTEND}else if(t<3315){if(t<3076){if(t<2946){if(t<2887){if(t<2878){if(t<2876){if(2818<=t&&t<=2819)return r.CLUSTER_BREAK.SPACINGMARK}else if(t===2876)return r.CLUSTER_BREAK.EXTEND}else if(t<2880){if(2878<=t&&t<=2879)return r.CLUSTER_BREAK.EXTEND}else if(t<2881){if(t===2880)return r.CLUSTER_BREAK.SPACINGMARK}else if(2881<=t&&t<=2884)return r.CLUSTER_BREAK.EXTEND}else if(t<2893){if(t<2891){if(2887<=t&&t<=2888)return r.CLUSTER_BREAK.SPACINGMARK}else if(2891<=t&&t<=2892)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<2901){if(t===2893)return r.CLUSTER_BREAK.EXTEND}else if(t<2914){if(2901<=t&&t<=2903)return r.CLUSTER_BREAK.EXTEND}else if(2914<=t&&t<=2915)return r.CLUSTER_BREAK.EXTEND}else if(t<3014){if(t<3007){if(t===2946||t===3006)return r.CLUSTER_BREAK.EXTEND}else if(t<3008){if(t===3007)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<3009){if(t===3008)return r.CLUSTER_BREAK.EXTEND}else if(3009<=t&&t<=3010)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<3031){if(t<3018){if(3014<=t&&t<=3016)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<3021){if(3018<=t&&t<=3020)return r.CLUSTER_BREAK.SPACINGMARK}else if(t===3021)return r.CLUSTER_BREAK.EXTEND}else if(t<3072){if(t===3031)return r.CLUSTER_BREAK.EXTEND}else if(t<3073){if(t===3072)return r.CLUSTER_BREAK.EXTEND}else if(3073<=t&&t<=3075)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<3262){if(t<3146){if(t<3134){if(t===3076||t===3132)return r.CLUSTER_BREAK.EXTEND}else if(t<3137){if(3134<=t&&t<=3136)return r.CLUSTER_BREAK.EXTEND}else if(t<3142){if(3137<=t&&t<=3140)return r.CLUSTER_BREAK.SPACINGMARK}else if(3142<=t&&t<=3144)return r.CLUSTER_BREAK.EXTEND}else if(t<3201){if(t<3157){if(3146<=t&&t<=3149)return r.CLUSTER_BREAK.EXTEND}else if(t<3170){if(3157<=t&&t<=3158)return r.CLUSTER_BREAK.EXTEND}else if(3170<=t&&t<=3171)return r.CLUSTER_BREAK.EXTEND}else if(t<3202){if(t===3201)return r.CLUSTER_BREAK.EXTEND}else if(t<3260){if(3202<=t&&t<=3203)return r.CLUSTER_BREAK.SPACINGMARK}else if(t===3260)return r.CLUSTER_BREAK.EXTEND}else if(t<3270){if(t<3264){if(t===3262)return r.CLUSTER_BREAK.SPACINGMARK;if(t===3263)return r.CLUSTER_BREAK.EXTEND}else if(t<3266){if(3264<=t&&t<=3265)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<3267){if(t===3266)return r.CLUSTER_BREAK.EXTEND}else if(3267<=t&&t<=3268)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<3276){if(t<3271){if(t===3270)return r.CLUSTER_BREAK.EXTEND}else if(t<3274){if(3271<=t&&t<=3272)return r.CLUSTER_BREAK.SPACINGMARK}else if(3274<=t&&t<=3275)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<3285){if(3276<=t&&t<=3277)return r.CLUSTER_BREAK.EXTEND}else if(t<3298){if(3285<=t&&t<=3286)return r.CLUSTER_BREAK.EXTEND}else if(3298<=t&&t<=3299)return r.CLUSTER_BREAK.EXTEND}else if(t<3551){if(t<3406){if(t<3391){if(t<3330){if(t<3328){if(t===3315)return r.CLUSTER_BREAK.SPACINGMARK}else if(3328<=t&&t<=3329)return r.CLUSTER_BREAK.EXTEND}else if(t<3387){if(3330<=t&&t<=3331)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<3390){if(3387<=t&&t<=3388)return r.CLUSTER_BREAK.EXTEND}else if(t===3390)return r.CLUSTER_BREAK.EXTEND}else if(t<3398){if(t<3393){if(3391<=t&&t<=3392)return r.CLUSTER_BREAK.SPACINGMARK}else if(3393<=t&&t<=3396)return r.CLUSTER_BREAK.EXTEND}else if(t<3402){if(3398<=t&&t<=3400)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<3405){if(3402<=t&&t<=3404)return r.CLUSTER_BREAK.SPACINGMARK}else if(t===3405)return r.CLUSTER_BREAK.EXTEND}else if(t<3530){if(t<3426){if(t===3406)return r.CLUSTER_BREAK.PREPEND;if(t===3415)return r.CLUSTER_BREAK.EXTEND}else if(t<3457){if(3426<=t&&t<=3427)return r.CLUSTER_BREAK.EXTEND}else if(t<3458){if(t===3457)return r.CLUSTER_BREAK.EXTEND}else if(3458<=t&&t<=3459)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<3538){if(t<3535){if(t===3530)return r.CLUSTER_BREAK.EXTEND}else if(t<3536){if(t===3535)return r.CLUSTER_BREAK.EXTEND}else if(3536<=t&&t<=3537)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<3542){if(3538<=t&&t<=3540)return r.CLUSTER_BREAK.EXTEND}else if(t<3544){if(t===3542)return r.CLUSTER_BREAK.EXTEND}else if(3544<=t&&t<=3550)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<3893){if(t<3655){if(t<3633){if(t<3570){if(t===3551)return r.CLUSTER_BREAK.EXTEND}else if(3570<=t&&t<=3571)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<3635){if(t===3633)return r.CLUSTER_BREAK.EXTEND}else if(t<3636){if(t===3635)return r.CLUSTER_BREAK.SPACINGMARK}else if(3636<=t&&t<=3642)return r.CLUSTER_BREAK.EXTEND}else if(t<3764)if(t<3761){if(3655<=t&&t<=3662)return r.CLUSTER_BREAK.EXTEND}else{if(t===3761)return r.CLUSTER_BREAK.EXTEND;if(t===3763)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<3784){if(3764<=t&&t<=3772)return r.CLUSTER_BREAK.EXTEND}else if(t<3864){if(3784<=t&&t<=3790)return r.CLUSTER_BREAK.EXTEND}else if(3864<=t&&t<=3865)return r.CLUSTER_BREAK.EXTEND}else if(t<3967){if(t<3897){if(t===3893||t===3895)return r.CLUSTER_BREAK.EXTEND}else if(t<3902){if(t===3897)return r.CLUSTER_BREAK.EXTEND}else if(t<3953){if(3902<=t&&t<=3903)return r.CLUSTER_BREAK.SPACINGMARK}else if(3953<=t&&t<=3966)return r.CLUSTER_BREAK.EXTEND}else if(t<3981){if(t<3968){if(t===3967)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<3974){if(3968<=t&&t<=3972)return r.CLUSTER_BREAK.EXTEND}else if(3974<=t&&t<=3975)return r.CLUSTER_BREAK.EXTEND}else if(t<3993){if(3981<=t&&t<=3991)return r.CLUSTER_BREAK.EXTEND}else if(t<4038){if(3993<=t&&t<=4028)return r.CLUSTER_BREAK.EXTEND}else if(t===4038)return r.CLUSTER_BREAK.EXTEND}else if(t<7204){if(t<6448){if(t<5938){if(t<4226){if(t<4157){if(t<4146){if(t<4145){if(4141<=t&&t<=4144)return r.CLUSTER_BREAK.EXTEND}else if(t===4145)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<4153){if(4146<=t&&t<=4151)return r.CLUSTER_BREAK.EXTEND}else if(t<4155){if(4153<=t&&t<=4154)return r.CLUSTER_BREAK.EXTEND}else if(4155<=t&&t<=4156)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<4184){if(t<4182){if(4157<=t&&t<=4158)return r.CLUSTER_BREAK.EXTEND}else if(4182<=t&&t<=4183)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<4190){if(4184<=t&&t<=4185)return r.CLUSTER_BREAK.EXTEND}else if(t<4209){if(4190<=t&&t<=4192)return r.CLUSTER_BREAK.EXTEND}else if(4209<=t&&t<=4212)return r.CLUSTER_BREAK.EXTEND}else if(t<4352){if(t<4229){if(t===4226)return r.CLUSTER_BREAK.EXTEND;if(t===4228)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<4237){if(4229<=t&&t<=4230)return r.CLUSTER_BREAK.EXTEND}else if(t===4237||t===4253)return r.CLUSTER_BREAK.EXTEND}else if(t<4957){if(t<4448){if(4352<=t&&t<=4447)return r.CLUSTER_BREAK.L}else if(t<4520){if(4448<=t&&t<=4519)return r.CLUSTER_BREAK.V}else if(4520<=t&&t<=4607)return r.CLUSTER_BREAK.T}else if(t<5906){if(4957<=t&&t<=4959)return r.CLUSTER_BREAK.EXTEND}else if(t<5909){if(5906<=t&&t<=5908)return r.CLUSTER_BREAK.EXTEND}else if(t===5909)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<6089){if(t<6070){if(t<5970){if(t<5940){if(5938<=t&&t<=5939)return r.CLUSTER_BREAK.EXTEND}else if(t===5940)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<6002){if(5970<=t&&t<=5971)return r.CLUSTER_BREAK.EXTEND}else if(t<6068){if(6002<=t&&t<=6003)return r.CLUSTER_BREAK.EXTEND}else if(6068<=t&&t<=6069)return r.CLUSTER_BREAK.EXTEND}else if(t<6078){if(t<6071){if(t===6070)return r.CLUSTER_BREAK.SPACINGMARK}else if(6071<=t&&t<=6077)return r.CLUSTER_BREAK.EXTEND}else if(t<6086){if(6078<=t&&t<=6085)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<6087){if(t===6086)return r.CLUSTER_BREAK.EXTEND}else if(6087<=t&&t<=6088)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<6277)if(t<6155){if(t<6109){if(6089<=t&&t<=6099)return r.CLUSTER_BREAK.EXTEND}else if(t===6109)return r.CLUSTER_BREAK.EXTEND}else if(t<6158){if(6155<=t&&t<=6157)return r.CLUSTER_BREAK.EXTEND}else{if(t===6158)return r.CLUSTER_BREAK.CONTROL;if(t===6159)return r.CLUSTER_BREAK.EXTEND}else if(t<6435){if(t<6313){if(6277<=t&&t<=6278)return r.CLUSTER_BREAK.EXTEND}else if(t<6432){if(t===6313)return r.CLUSTER_BREAK.EXTEND}else if(6432<=t&&t<=6434)return r.CLUSTER_BREAK.EXTEND}else if(t<6439){if(6435<=t&&t<=6438)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<6441){if(6439<=t&&t<=6440)return r.CLUSTER_BREAK.EXTEND}else if(6441<=t&&t<=6443)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<6971){if(t<6744)if(t<6681){if(t<6451){if(t<6450){if(6448<=t&&t<=6449)return r.CLUSTER_BREAK.SPACINGMARK}else if(t===6450)return r.CLUSTER_BREAK.EXTEND}else if(t<6457){if(6451<=t&&t<=6456)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<6679){if(6457<=t&&t<=6459)return r.CLUSTER_BREAK.EXTEND}else if(6679<=t&&t<=6680)return r.CLUSTER_BREAK.EXTEND}else if(t<6741){if(t<6683){if(6681<=t&&t<=6682)return r.CLUSTER_BREAK.SPACINGMARK}else if(t===6683)return r.CLUSTER_BREAK.EXTEND}else if(t<6742){if(t===6741)return r.CLUSTER_BREAK.SPACINGMARK}else{if(t===6742)return r.CLUSTER_BREAK.EXTEND;if(t===6743)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<6771){if(t<6754){if(t<6752){if(6744<=t&&t<=6750)return r.CLUSTER_BREAK.EXTEND}else if(t===6752)return r.CLUSTER_BREAK.EXTEND}else if(t<6757){if(t===6754)return r.CLUSTER_BREAK.EXTEND}else if(t<6765){if(6757<=t&&t<=6764)return r.CLUSTER_BREAK.EXTEND}else if(6765<=t&&t<=6770)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<6912){if(t<6783){if(6771<=t&&t<=6780)return r.CLUSTER_BREAK.EXTEND}else if(t<6832){if(t===6783)return r.CLUSTER_BREAK.EXTEND}else if(6832<=t&&t<=6862)return r.CLUSTER_BREAK.EXTEND}else if(t<6916){if(6912<=t&&t<=6915)return r.CLUSTER_BREAK.EXTEND}else if(t<6964){if(t===6916)return r.CLUSTER_BREAK.SPACINGMARK}else if(6964<=t&&t<=6970)return r.CLUSTER_BREAK.EXTEND}else if(t<7080){if(t<7019){if(t<6973){if(t===6971)return r.CLUSTER_BREAK.SPACINGMARK;if(t===6972)return r.CLUSTER_BREAK.EXTEND}else if(t<6978){if(6973<=t&&t<=6977)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<6979){if(t===6978)return r.CLUSTER_BREAK.EXTEND}else if(6979<=t&&t<=6980)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<7073){if(t<7040){if(7019<=t&&t<=7027)return r.CLUSTER_BREAK.EXTEND}else if(t<7042){if(7040<=t&&t<=7041)return r.CLUSTER_BREAK.EXTEND}else if(t===7042)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<7074){if(t===7073)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<7078){if(7074<=t&&t<=7077)return r.CLUSTER_BREAK.EXTEND}else if(7078<=t&&t<=7079)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<7144)if(t<7083){if(t<7082){if(7080<=t&&t<=7081)return r.CLUSTER_BREAK.EXTEND}else if(t===7082)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<7142){if(7083<=t&&t<=7085)return r.CLUSTER_BREAK.EXTEND}else{if(t===7142)return r.CLUSTER_BREAK.EXTEND;if(t===7143)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<7150){if(t<7146){if(7144<=t&&t<=7145)return r.CLUSTER_BREAK.EXTEND}else if(t<7149){if(7146<=t&&t<=7148)return r.CLUSTER_BREAK.SPACINGMARK}else if(t===7149)return r.CLUSTER_BREAK.EXTEND}else if(t<7151){if(t===7150)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<7154){if(7151<=t&&t<=7153)return r.CLUSTER_BREAK.EXTEND}else if(7154<=t&&t<=7155)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<43346){if(t<11647){if(t<7415){if(t<7380){if(t<7220){if(t<7212){if(7204<=t&&t<=7211)return r.CLUSTER_BREAK.SPACINGMARK}else if(7212<=t&&t<=7219)return r.CLUSTER_BREAK.EXTEND}else if(t<7222){if(7220<=t&&t<=7221)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<7376){if(7222<=t&&t<=7223)return r.CLUSTER_BREAK.EXTEND}else if(7376<=t&&t<=7378)return r.CLUSTER_BREAK.EXTEND}else if(t<7394){if(t<7393){if(7380<=t&&t<=7392)return r.CLUSTER_BREAK.EXTEND}else if(t===7393)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<7405){if(7394<=t&&t<=7400)return r.CLUSTER_BREAK.EXTEND}else if(t===7405||t===7412)return r.CLUSTER_BREAK.EXTEND}else if(t<8205)if(t<7616){if(t<7416){if(t===7415)return r.CLUSTER_BREAK.SPACINGMARK}else if(7416<=t&&t<=7417)return r.CLUSTER_BREAK.EXTEND}else if(t<8203){if(7616<=t&&t<=7679)return r.CLUSTER_BREAK.EXTEND}else{if(t===8203)return r.CLUSTER_BREAK.CONTROL;if(t===8204)return r.CLUSTER_BREAK.EXTEND}else if(t<8288){if(t<8206){if(t===8205)return r.CLUSTER_BREAK.ZWJ}else if(t<8232){if(8206<=t&&t<=8207)return r.CLUSTER_BREAK.CONTROL}else if(8232<=t&&t<=8238)return r.CLUSTER_BREAK.CONTROL}else if(t<8400){if(8288<=t&&t<=8303)return r.CLUSTER_BREAK.CONTROL}else if(t<11503){if(8400<=t&&t<=8432)return r.CLUSTER_BREAK.EXTEND}else if(11503<=t&&t<=11505)return r.CLUSTER_BREAK.EXTEND}else if(t<43043){if(t<42612){if(t<12330){if(t<11744){if(t===11647)return r.CLUSTER_BREAK.EXTEND}else if(11744<=t&&t<=11775)return r.CLUSTER_BREAK.EXTEND}else if(t<12441){if(12330<=t&&t<=12335)return r.CLUSTER_BREAK.EXTEND}else if(t<42607){if(12441<=t&&t<=12442)return r.CLUSTER_BREAK.EXTEND}else if(42607<=t&&t<=42610)return r.CLUSTER_BREAK.EXTEND}else if(t<43010){if(t<42654){if(42612<=t&&t<=42621)return r.CLUSTER_BREAK.EXTEND}else if(t<42736){if(42654<=t&&t<=42655)return r.CLUSTER_BREAK.EXTEND}else if(42736<=t&&t<=42737)return r.CLUSTER_BREAK.EXTEND}else if(t<43014){if(t===43010)return r.CLUSTER_BREAK.EXTEND}else if(t===43014||t===43019)return r.CLUSTER_BREAK.EXTEND}else if(t<43188){if(t<43047){if(t<43045){if(43043<=t&&t<=43044)return r.CLUSTER_BREAK.SPACINGMARK}else if(43045<=t&&t<=43046)return r.CLUSTER_BREAK.EXTEND}else if(t<43052){if(t===43047)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<43136){if(t===43052)return r.CLUSTER_BREAK.EXTEND}else if(43136<=t&&t<=43137)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<43263){if(t<43204){if(43188<=t&&t<=43203)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<43232){if(43204<=t&&t<=43205)return r.CLUSTER_BREAK.EXTEND}else if(43232<=t&&t<=43249)return r.CLUSTER_BREAK.EXTEND}else if(t<43302){if(t===43263)return r.CLUSTER_BREAK.EXTEND}else if(t<43335){if(43302<=t&&t<=43309)return r.CLUSTER_BREAK.EXTEND}else if(43335<=t&&t<=43345)return r.CLUSTER_BREAK.EXTEND}else if(t<43698){if(t<43493){if(t<43444)if(t<43392){if(t<43360){if(43346<=t&&t<=43347)return r.CLUSTER_BREAK.SPACINGMARK}else if(43360<=t&&t<=43388)return r.CLUSTER_BREAK.L}else if(t<43395){if(43392<=t&&t<=43394)return r.CLUSTER_BREAK.EXTEND}else{if(t===43395)return r.CLUSTER_BREAK.SPACINGMARK;if(t===43443)return r.CLUSTER_BREAK.EXTEND}else if(t<43450){if(t<43446){if(43444<=t&&t<=43445)return r.CLUSTER_BREAK.SPACINGMARK}else if(43446<=t&&t<=43449)return r.CLUSTER_BREAK.EXTEND}else if(t<43452){if(43450<=t&&t<=43451)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<43454){if(43452<=t&&t<=43453)return r.CLUSTER_BREAK.EXTEND}else if(43454<=t&&t<=43456)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<43573){if(t<43567){if(t<43561){if(t===43493)return r.CLUSTER_BREAK.EXTEND}else if(43561<=t&&t<=43566)return r.CLUSTER_BREAK.EXTEND}else if(t<43569){if(43567<=t&&t<=43568)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<43571){if(43569<=t&&t<=43570)return r.CLUSTER_BREAK.EXTEND}else if(43571<=t&&t<=43572)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<43597){if(t<43587){if(43573<=t&&t<=43574)return r.CLUSTER_BREAK.EXTEND}else if(t===43587||t===43596)return r.CLUSTER_BREAK.EXTEND}else if(t<43644){if(t===43597)return r.CLUSTER_BREAK.SPACINGMARK}else if(t===43644||t===43696)return r.CLUSTER_BREAK.EXTEND}else if(t<44006){if(t<43756)if(t<43710){if(t<43703){if(43698<=t&&t<=43700)return r.CLUSTER_BREAK.EXTEND}else if(43703<=t&&t<=43704)return r.CLUSTER_BREAK.EXTEND}else if(t<43713){if(43710<=t&&t<=43711)return r.CLUSTER_BREAK.EXTEND}else{if(t===43713)return r.CLUSTER_BREAK.EXTEND;if(t===43755)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<43766){if(t<43758){if(43756<=t&&t<=43757)return r.CLUSTER_BREAK.EXTEND}else if(t<43765){if(43758<=t&&t<=43759)return r.CLUSTER_BREAK.SPACINGMARK}else if(t===43765)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<44003){if(t===43766)return r.CLUSTER_BREAK.EXTEND}else if(t<44005){if(44003<=t&&t<=44004)return r.CLUSTER_BREAK.SPACINGMARK}else if(t===44005)return r.CLUSTER_BREAK.EXTEND}else if(t<44032)if(t<44009){if(t<44008){if(44006<=t&&t<=44007)return r.CLUSTER_BREAK.SPACINGMARK}else if(t===44008)return r.CLUSTER_BREAK.EXTEND}else if(t<44012){if(44009<=t&&t<=44010)return r.CLUSTER_BREAK.SPACINGMARK}else{if(t===44012)return r.CLUSTER_BREAK.SPACINGMARK;if(t===44013)return r.CLUSTER_BREAK.EXTEND}else if(t<44061){if(t<44033){if(t===44032)return r.CLUSTER_BREAK.LV}else if(t<44060){if(44033<=t&&t<=44059)return r.CLUSTER_BREAK.LVT}else if(t===44060)return r.CLUSTER_BREAK.LV}else if(t<44088){if(44061<=t&&t<=44087)return r.CLUSTER_BREAK.LVT}else if(t<44089){if(t===44088)return r.CLUSTER_BREAK.LV}else if(44089<=t&&t<=44115)return r.CLUSTER_BREAK.LVT}else if(t<46497){if(t<45293){if(t<44704){if(t<44397){if(t<44256){if(t<44173){if(t<44144){if(t<44117){if(t===44116)return r.CLUSTER_BREAK.LV}else if(44117<=t&&t<=44143)return r.CLUSTER_BREAK.LVT}else if(t<44145){if(t===44144)return r.CLUSTER_BREAK.LV}else if(t<44172){if(44145<=t&&t<=44171)return r.CLUSTER_BREAK.LVT}else if(t===44172)return r.CLUSTER_BREAK.LV}else if(t<44201){if(t<44200){if(44173<=t&&t<=44199)return r.CLUSTER_BREAK.LVT}else if(t===44200)return r.CLUSTER_BREAK.LV}else if(t<44228){if(44201<=t&&t<=44227)return r.CLUSTER_BREAK.LVT}else if(t<44229){if(t===44228)return r.CLUSTER_BREAK.LV}else if(44229<=t&&t<=44255)return r.CLUSTER_BREAK.LVT}else if(t<44313){if(t<44284){if(t<44257){if(t===44256)return r.CLUSTER_BREAK.LV}else if(44257<=t&&t<=44283)return r.CLUSTER_BREAK.LVT}else if(t<44285){if(t===44284)return r.CLUSTER_BREAK.LV}else if(t<44312){if(44285<=t&&t<=44311)return r.CLUSTER_BREAK.LVT}else if(t===44312)return r.CLUSTER_BREAK.LV}else if(t<44368){if(t<44340){if(44313<=t&&t<=44339)return r.CLUSTER_BREAK.LVT}else if(t<44341){if(t===44340)return r.CLUSTER_BREAK.LV}else if(44341<=t&&t<=44367)return r.CLUSTER_BREAK.LVT}else if(t<44369){if(t===44368)return r.CLUSTER_BREAK.LV}else if(t<44396){if(44369<=t&&t<=44395)return r.CLUSTER_BREAK.LVT}else if(t===44396)return r.CLUSTER_BREAK.LV}else if(t<44537){if(t<44480){if(t<44425){if(t<44424){if(44397<=t&&t<=44423)return r.CLUSTER_BREAK.LVT}else if(t===44424)return r.CLUSTER_BREAK.LV}else if(t<44452){if(44425<=t&&t<=44451)return r.CLUSTER_BREAK.LVT}else if(t<44453){if(t===44452)return r.CLUSTER_BREAK.LV}else if(44453<=t&&t<=44479)return r.CLUSTER_BREAK.LVT}else if(t<44508){if(t<44481){if(t===44480)return r.CLUSTER_BREAK.LV}else if(44481<=t&&t<=44507)return r.CLUSTER_BREAK.LVT}else if(t<44509){if(t===44508)return r.CLUSTER_BREAK.LV}else if(t<44536){if(44509<=t&&t<=44535)return r.CLUSTER_BREAK.LVT}else if(t===44536)return r.CLUSTER_BREAK.LV}else if(t<44620){if(t<44565){if(t<44564){if(44537<=t&&t<=44563)return r.CLUSTER_BREAK.LVT}else if(t===44564)return r.CLUSTER_BREAK.LV}else if(t<44592){if(44565<=t&&t<=44591)return r.CLUSTER_BREAK.LVT}else if(t<44593){if(t===44592)return r.CLUSTER_BREAK.LV}else if(44593<=t&&t<=44619)return r.CLUSTER_BREAK.LVT}else if(t<44649){if(t<44621){if(t===44620)return r.CLUSTER_BREAK.LV}else if(t<44648){if(44621<=t&&t<=44647)return r.CLUSTER_BREAK.LVT}else if(t===44648)return r.CLUSTER_BREAK.LV}else if(t<44676){if(44649<=t&&t<=44675)return r.CLUSTER_BREAK.LVT}else if(t<44677){if(t===44676)return r.CLUSTER_BREAK.LV}else if(44677<=t&&t<=44703)return r.CLUSTER_BREAK.LVT}else if(t<44985){if(t<44844){if(t<44761){if(t<44732){if(t<44705){if(t===44704)return r.CLUSTER_BREAK.LV}else if(44705<=t&&t<=44731)return r.CLUSTER_BREAK.LVT}else if(t<44733){if(t===44732)return r.CLUSTER_BREAK.LV}else if(t<44760){if(44733<=t&&t<=44759)return r.CLUSTER_BREAK.LVT}else if(t===44760)return r.CLUSTER_BREAK.LV}else if(t<44789){if(t<44788){if(44761<=t&&t<=44787)return r.CLUSTER_BREAK.LVT}else if(t===44788)return r.CLUSTER_BREAK.LV}else if(t<44816){if(44789<=t&&t<=44815)return r.CLUSTER_BREAK.LVT}else if(t<44817){if(t===44816)return r.CLUSTER_BREAK.LV}else if(44817<=t&&t<=44843)return r.CLUSTER_BREAK.LVT}else if(t<44901){if(t<44872){if(t<44845){if(t===44844)return r.CLUSTER_BREAK.LV}else if(44845<=t&&t<=44871)return r.CLUSTER_BREAK.LVT}else if(t<44873){if(t===44872)return r.CLUSTER_BREAK.LV}else if(t<44900){if(44873<=t&&t<=44899)return r.CLUSTER_BREAK.LVT}else if(t===44900)return r.CLUSTER_BREAK.LV}else if(t<44956){if(t<44928){if(44901<=t&&t<=44927)return r.CLUSTER_BREAK.LVT}else if(t<44929){if(t===44928)return r.CLUSTER_BREAK.LV}else if(44929<=t&&t<=44955)return r.CLUSTER_BREAK.LVT}else if(t<44957){if(t===44956)return r.CLUSTER_BREAK.LV}else if(t<44984){if(44957<=t&&t<=44983)return r.CLUSTER_BREAK.LVT}else if(t===44984)return r.CLUSTER_BREAK.LV}else if(t<45152){if(t<45068){if(t<45013){if(t<45012){if(44985<=t&&t<=45011)return r.CLUSTER_BREAK.LVT}else if(t===45012)return r.CLUSTER_BREAK.LV}else if(t<45040){if(45013<=t&&t<=45039)return r.CLUSTER_BREAK.LVT}else if(t<45041){if(t===45040)return r.CLUSTER_BREAK.LV}else if(45041<=t&&t<=45067)return r.CLUSTER_BREAK.LVT}else if(t<45097){if(t<45069){if(t===45068)return r.CLUSTER_BREAK.LV}else if(t<45096){if(45069<=t&&t<=45095)return r.CLUSTER_BREAK.LVT}else if(t===45096)return r.CLUSTER_BREAK.LV}else if(t<45124){if(45097<=t&&t<=45123)return r.CLUSTER_BREAK.LVT}else if(t<45125){if(t===45124)return r.CLUSTER_BREAK.LV}else if(45125<=t&&t<=45151)return r.CLUSTER_BREAK.LVT}else if(t<45209){if(t<45180){if(t<45153){if(t===45152)return r.CLUSTER_BREAK.LV}else if(45153<=t&&t<=45179)return r.CLUSTER_BREAK.LVT}else if(t<45181){if(t===45180)return r.CLUSTER_BREAK.LV}else if(t<45208){if(45181<=t&&t<=45207)return r.CLUSTER_BREAK.LVT}else if(t===45208)return r.CLUSTER_BREAK.LV}else if(t<45264){if(t<45236){if(45209<=t&&t<=45235)return r.CLUSTER_BREAK.LVT}else if(t<45237){if(t===45236)return r.CLUSTER_BREAK.LV}else if(45237<=t&&t<=45263)return r.CLUSTER_BREAK.LVT}else if(t<45265){if(t===45264)return r.CLUSTER_BREAK.LV}else if(t<45292){if(45265<=t&&t<=45291)return r.CLUSTER_BREAK.LVT}else if(t===45292)return r.CLUSTER_BREAK.LV}else if(t<45908){if(t<45600){if(t<45433){if(t<45376){if(t<45321){if(t<45320){if(45293<=t&&t<=45319)return r.CLUSTER_BREAK.LVT}else if(t===45320)return r.CLUSTER_BREAK.LV}else if(t<45348){if(45321<=t&&t<=45347)return r.CLUSTER_BREAK.LVT}else if(t<45349){if(t===45348)return r.CLUSTER_BREAK.LV}else if(45349<=t&&t<=45375)return r.CLUSTER_BREAK.LVT}else if(t<45404){if(t<45377){if(t===45376)return r.CLUSTER_BREAK.LV}else if(45377<=t&&t<=45403)return r.CLUSTER_BREAK.LVT}else if(t<45405){if(t===45404)return r.CLUSTER_BREAK.LV}else if(t<45432){if(45405<=t&&t<=45431)return r.CLUSTER_BREAK.LVT}else if(t===45432)return r.CLUSTER_BREAK.LV}else if(t<45516){if(t<45461){if(t<45460){if(45433<=t&&t<=45459)return r.CLUSTER_BREAK.LVT}else if(t===45460)return r.CLUSTER_BREAK.LV}else if(t<45488){if(45461<=t&&t<=45487)return r.CLUSTER_BREAK.LVT}else if(t<45489){if(t===45488)return r.CLUSTER_BREAK.LV}else if(45489<=t&&t<=45515)return r.CLUSTER_BREAK.LVT}else if(t<45545){if(t<45517){if(t===45516)return r.CLUSTER_BREAK.LV}else if(t<45544){if(45517<=t&&t<=45543)return r.CLUSTER_BREAK.LVT}else if(t===45544)return r.CLUSTER_BREAK.LV}else if(t<45572){if(45545<=t&&t<=45571)return r.CLUSTER_BREAK.LVT}else if(t<45573){if(t===45572)return r.CLUSTER_BREAK.LV}else if(45573<=t&&t<=45599)return r.CLUSTER_BREAK.LVT}else if(t<45741){if(t<45657){if(t<45628){if(t<45601){if(t===45600)return r.CLUSTER_BREAK.LV}else if(45601<=t&&t<=45627)return r.CLUSTER_BREAK.LVT}else if(t<45629){if(t===45628)return r.CLUSTER_BREAK.LV}else if(t<45656){if(45629<=t&&t<=45655)return r.CLUSTER_BREAK.LVT}else if(t===45656)return r.CLUSTER_BREAK.LV}else if(t<45712){if(t<45684){if(45657<=t&&t<=45683)return r.CLUSTER_BREAK.LVT}else if(t<45685){if(t===45684)return r.CLUSTER_BREAK.LV}else if(45685<=t&&t<=45711)return r.CLUSTER_BREAK.LVT}else if(t<45713){if(t===45712)return r.CLUSTER_BREAK.LV}else if(t<45740){if(45713<=t&&t<=45739)return r.CLUSTER_BREAK.LVT}else if(t===45740)return r.CLUSTER_BREAK.LV}else if(t<45824){if(t<45769){if(t<45768){if(45741<=t&&t<=45767)return r.CLUSTER_BREAK.LVT}else if(t===45768)return r.CLUSTER_BREAK.LV}else if(t<45796){if(45769<=t&&t<=45795)return r.CLUSTER_BREAK.LVT}else if(t<45797){if(t===45796)return r.CLUSTER_BREAK.LV}else if(45797<=t&&t<=45823)return r.CLUSTER_BREAK.LVT}else if(t<45853){if(t<45825){if(t===45824)return r.CLUSTER_BREAK.LV}else if(t<45852){if(45825<=t&&t<=45851)return r.CLUSTER_BREAK.LVT}else if(t===45852)return r.CLUSTER_BREAK.LV}else if(t<45880){if(45853<=t&&t<=45879)return r.CLUSTER_BREAK.LVT}else if(t<45881){if(t===45880)return r.CLUSTER_BREAK.LV}else if(45881<=t&&t<=45907)return r.CLUSTER_BREAK.LVT}else if(t<46189){if(t<46048){if(t<45965){if(t<45936){if(t<45909){if(t===45908)return r.CLUSTER_BREAK.LV}else if(45909<=t&&t<=45935)return r.CLUSTER_BREAK.LVT}else if(t<45937){if(t===45936)return r.CLUSTER_BREAK.LV}else if(t<45964){if(45937<=t&&t<=45963)return r.CLUSTER_BREAK.LVT}else if(t===45964)return r.CLUSTER_BREAK.LV}else if(t<45993){if(t<45992){if(45965<=t&&t<=45991)return r.CLUSTER_BREAK.LVT}else if(t===45992)return r.CLUSTER_BREAK.LV}else if(t<46020){if(45993<=t&&t<=46019)return r.CLUSTER_BREAK.LVT}else if(t<46021){if(t===46020)return r.CLUSTER_BREAK.LV}else if(46021<=t&&t<=46047)return r.CLUSTER_BREAK.LVT}else if(t<46105){if(t<46076){if(t<46049){if(t===46048)return r.CLUSTER_BREAK.LV}else if(46049<=t&&t<=46075)return r.CLUSTER_BREAK.LVT}else if(t<46077){if(t===46076)return r.CLUSTER_BREAK.LV}else if(t<46104){if(46077<=t&&t<=46103)return r.CLUSTER_BREAK.LVT}else if(t===46104)return r.CLUSTER_BREAK.LV}else if(t<46160){if(t<46132){if(46105<=t&&t<=46131)return r.CLUSTER_BREAK.LVT}else if(t<46133){if(t===46132)return r.CLUSTER_BREAK.LV}else if(46133<=t&&t<=46159)return r.CLUSTER_BREAK.LVT}else if(t<46161){if(t===46160)return r.CLUSTER_BREAK.LV}else if(t<46188){if(46161<=t&&t<=46187)return r.CLUSTER_BREAK.LVT}else if(t===46188)return r.CLUSTER_BREAK.LV}else if(t<46356){if(t<46272){if(t<46217){if(t<46216){if(46189<=t&&t<=46215)return r.CLUSTER_BREAK.LVT}else if(t===46216)return r.CLUSTER_BREAK.LV}else if(t<46244){if(46217<=t&&t<=46243)return r.CLUSTER_BREAK.LVT}else if(t<46245){if(t===46244)return r.CLUSTER_BREAK.LV}else if(46245<=t&&t<=46271)return r.CLUSTER_BREAK.LVT}else if(t<46301){if(t<46273){if(t===46272)return r.CLUSTER_BREAK.LV}else if(t<46300){if(46273<=t&&t<=46299)return r.CLUSTER_BREAK.LVT}else if(t===46300)return r.CLUSTER_BREAK.LV}else if(t<46328){if(46301<=t&&t<=46327)return r.CLUSTER_BREAK.LVT}else if(t<46329){if(t===46328)return r.CLUSTER_BREAK.LV}else if(46329<=t&&t<=46355)return r.CLUSTER_BREAK.LVT}else if(t<46413){if(t<46384){if(t<46357){if(t===46356)return r.CLUSTER_BREAK.LV}else if(46357<=t&&t<=46383)return r.CLUSTER_BREAK.LVT}else if(t<46385){if(t===46384)return r.CLUSTER_BREAK.LV}else if(t<46412){if(46385<=t&&t<=46411)return r.CLUSTER_BREAK.LVT}else if(t===46412)return r.CLUSTER_BREAK.LV}else if(t<46468){if(t<46440){if(46413<=t&&t<=46439)return r.CLUSTER_BREAK.LVT}else if(t<46441){if(t===46440)return r.CLUSTER_BREAK.LV}else if(46441<=t&&t<=46467)return r.CLUSTER_BREAK.LVT}else if(t<46469){if(t===46468)return r.CLUSTER_BREAK.LV}else if(t<46496){if(46469<=t&&t<=46495)return r.CLUSTER_BREAK.LVT}else if(t===46496)return r.CLUSTER_BREAK.LV}else if(t<47701){if(t<47112){if(t<46804){if(t<46637){if(t<46580){if(t<46525){if(t<46524){if(46497<=t&&t<=46523)return r.CLUSTER_BREAK.LVT}else if(t===46524)return r.CLUSTER_BREAK.LV}else if(t<46552){if(46525<=t&&t<=46551)return r.CLUSTER_BREAK.LVT}else if(t<46553){if(t===46552)return r.CLUSTER_BREAK.LV}else if(46553<=t&&t<=46579)return r.CLUSTER_BREAK.LVT}else if(t<46608){if(t<46581){if(t===46580)return r.CLUSTER_BREAK.LV}else if(46581<=t&&t<=46607)return r.CLUSTER_BREAK.LVT}else if(t<46609){if(t===46608)return r.CLUSTER_BREAK.LV}else if(t<46636){if(46609<=t&&t<=46635)return r.CLUSTER_BREAK.LVT}else if(t===46636)return r.CLUSTER_BREAK.LV}else if(t<46720){if(t<46665){if(t<46664){if(46637<=t&&t<=46663)return r.CLUSTER_BREAK.LVT}else if(t===46664)return r.CLUSTER_BREAK.LV}else if(t<46692){if(46665<=t&&t<=46691)return r.CLUSTER_BREAK.LVT}else if(t<46693){if(t===46692)return r.CLUSTER_BREAK.LV}else if(46693<=t&&t<=46719)return r.CLUSTER_BREAK.LVT}else if(t<46749){if(t<46721){if(t===46720)return r.CLUSTER_BREAK.LV}else if(t<46748){if(46721<=t&&t<=46747)return r.CLUSTER_BREAK.LVT}else if(t===46748)return r.CLUSTER_BREAK.LV}else if(t<46776){if(46749<=t&&t<=46775)return r.CLUSTER_BREAK.LVT}else if(t<46777){if(t===46776)return r.CLUSTER_BREAK.LV}else if(46777<=t&&t<=46803)return r.CLUSTER_BREAK.LVT}else if(t<46945){if(t<46861){if(t<46832){if(t<46805){if(t===46804)return r.CLUSTER_BREAK.LV}else if(46805<=t&&t<=46831)return r.CLUSTER_BREAK.LVT}else if(t<46833){if(t===46832)return r.CLUSTER_BREAK.LV}else if(t<46860){if(46833<=t&&t<=46859)return r.CLUSTER_BREAK.LVT}else if(t===46860)return r.CLUSTER_BREAK.LV}else if(t<46916){if(t<46888){if(46861<=t&&t<=46887)return r.CLUSTER_BREAK.LVT}else if(t<46889){if(t===46888)return r.CLUSTER_BREAK.LV}else if(46889<=t&&t<=46915)return r.CLUSTER_BREAK.LVT}else if(t<46917){if(t===46916)return r.CLUSTER_BREAK.LV}else if(t<46944){if(46917<=t&&t<=46943)return r.CLUSTER_BREAK.LVT}else if(t===46944)return r.CLUSTER_BREAK.LV}else if(t<47028){if(t<46973){if(t<46972){if(46945<=t&&t<=46971)return r.CLUSTER_BREAK.LVT}else if(t===46972)return r.CLUSTER_BREAK.LV}else if(t<47e3){if(46973<=t&&t<=46999)return r.CLUSTER_BREAK.LVT}else if(t<47001){if(t===47e3)return r.CLUSTER_BREAK.LV}else if(47001<=t&&t<=47027)return r.CLUSTER_BREAK.LVT}else if(t<47057){if(t<47029){if(t===47028)return r.CLUSTER_BREAK.LV}else if(t<47056){if(47029<=t&&t<=47055)return r.CLUSTER_BREAK.LVT}else if(t===47056)return r.CLUSTER_BREAK.LV}else if(t<47084){if(47057<=t&&t<=47083)return r.CLUSTER_BREAK.LVT}else if(t<47085){if(t===47084)return r.CLUSTER_BREAK.LV}else if(47085<=t&&t<=47111)return r.CLUSTER_BREAK.LVT}else if(t<47393){if(t<47252){if(t<47169){if(t<47140){if(t<47113){if(t===47112)return r.CLUSTER_BREAK.LV}else if(47113<=t&&t<=47139)return r.CLUSTER_BREAK.LVT}else if(t<47141){if(t===47140)return r.CLUSTER_BREAK.LV}else if(t<47168){if(47141<=t&&t<=47167)return r.CLUSTER_BREAK.LVT}else if(t===47168)return r.CLUSTER_BREAK.LV}else if(t<47197){if(t<47196){if(47169<=t&&t<=47195)return r.CLUSTER_BREAK.LVT}else if(t===47196)return r.CLUSTER_BREAK.LV}else if(t<47224){if(47197<=t&&t<=47223)return r.CLUSTER_BREAK.LVT}else if(t<47225){if(t===47224)return r.CLUSTER_BREAK.LV}else if(47225<=t&&t<=47251)return r.CLUSTER_BREAK.LVT}else if(t<47309){if(t<47280){if(t<47253){if(t===47252)return r.CLUSTER_BREAK.LV}else if(47253<=t&&t<=47279)return r.CLUSTER_BREAK.LVT}else if(t<47281){if(t===47280)return r.CLUSTER_BREAK.LV}else if(t<47308){if(47281<=t&&t<=47307)return r.CLUSTER_BREAK.LVT}else if(t===47308)return r.CLUSTER_BREAK.LV}else if(t<47364){if(t<47336){if(47309<=t&&t<=47335)return r.CLUSTER_BREAK.LVT}else if(t<47337){if(t===47336)return r.CLUSTER_BREAK.LV}else if(47337<=t&&t<=47363)return r.CLUSTER_BREAK.LVT}else if(t<47365){if(t===47364)return r.CLUSTER_BREAK.LV}else if(t<47392){if(47365<=t&&t<=47391)return r.CLUSTER_BREAK.LVT}else if(t===47392)return r.CLUSTER_BREAK.LV}else if(t<47560){if(t<47476){if(t<47421){if(t<47420){if(47393<=t&&t<=47419)return r.CLUSTER_BREAK.LVT}else if(t===47420)return r.CLUSTER_BREAK.LV}else if(t<47448){if(47421<=t&&t<=47447)return r.CLUSTER_BREAK.LVT}else if(t<47449){if(t===47448)return r.CLUSTER_BREAK.LV}else if(47449<=t&&t<=47475)return r.CLUSTER_BREAK.LVT}else if(t<47505){if(t<47477){if(t===47476)return r.CLUSTER_BREAK.LV}else if(t<47504){if(47477<=t&&t<=47503)return r.CLUSTER_BREAK.LVT}else if(t===47504)return r.CLUSTER_BREAK.LV}else if(t<47532){if(47505<=t&&t<=47531)return r.CLUSTER_BREAK.LVT}else if(t<47533){if(t===47532)return r.CLUSTER_BREAK.LV}else if(47533<=t&&t<=47559)return r.CLUSTER_BREAK.LVT}else if(t<47617){if(t<47588){if(t<47561){if(t===47560)return r.CLUSTER_BREAK.LV}else if(47561<=t&&t<=47587)return r.CLUSTER_BREAK.LVT}else if(t<47589){if(t===47588)return r.CLUSTER_BREAK.LV}else if(t<47616){if(47589<=t&&t<=47615)return r.CLUSTER_BREAK.LVT}else if(t===47616)return r.CLUSTER_BREAK.LV}else if(t<47672){if(t<47644){if(47617<=t&&t<=47643)return r.CLUSTER_BREAK.LVT}else if(t<47645){if(t===47644)return r.CLUSTER_BREAK.LV}else if(47645<=t&&t<=47671)return r.CLUSTER_BREAK.LVT}else if(t<47673){if(t===47672)return r.CLUSTER_BREAK.LV}else if(t<47700){if(47673<=t&&t<=47699)return r.CLUSTER_BREAK.LVT}else if(t===47700)return r.CLUSTER_BREAK.LV}else if(t<48316){if(t<48008){if(t<47841){if(t<47784){if(t<47729){if(t<47728){if(47701<=t&&t<=47727)return r.CLUSTER_BREAK.LVT}else if(t===47728)return r.CLUSTER_BREAK.LV}else if(t<47756){if(47729<=t&&t<=47755)return r.CLUSTER_BREAK.LVT}else if(t<47757){if(t===47756)return r.CLUSTER_BREAK.LV}else if(47757<=t&&t<=47783)return r.CLUSTER_BREAK.LVT}else if(t<47812){if(t<47785){if(t===47784)return r.CLUSTER_BREAK.LV}else if(47785<=t&&t<=47811)return r.CLUSTER_BREAK.LVT}else if(t<47813){if(t===47812)return r.CLUSTER_BREAK.LV}else if(t<47840){if(47813<=t&&t<=47839)return r.CLUSTER_BREAK.LVT}else if(t===47840)return r.CLUSTER_BREAK.LV}else if(t<47924){if(t<47869){if(t<47868){if(47841<=t&&t<=47867)return r.CLUSTER_BREAK.LVT}else if(t===47868)return r.CLUSTER_BREAK.LV}else if(t<47896){if(47869<=t&&t<=47895)return r.CLUSTER_BREAK.LVT}else if(t<47897){if(t===47896)return r.CLUSTER_BREAK.LV}else if(47897<=t&&t<=47923)return r.CLUSTER_BREAK.LVT}else if(t<47953){if(t<47925){if(t===47924)return r.CLUSTER_BREAK.LV}else if(t<47952){if(47925<=t&&t<=47951)return r.CLUSTER_BREAK.LVT}else if(t===47952)return r.CLUSTER_BREAK.LV}else if(t<47980){if(47953<=t&&t<=47979)return r.CLUSTER_BREAK.LVT}else if(t<47981){if(t===47980)return r.CLUSTER_BREAK.LV}else if(47981<=t&&t<=48007)return r.CLUSTER_BREAK.LVT}else if(t<48149){if(t<48065){if(t<48036){if(t<48009){if(t===48008)return r.CLUSTER_BREAK.LV}else if(48009<=t&&t<=48035)return r.CLUSTER_BREAK.LVT}else if(t<48037){if(t===48036)return r.CLUSTER_BREAK.LV}else if(t<48064){if(48037<=t&&t<=48063)return r.CLUSTER_BREAK.LVT}else if(t===48064)return r.CLUSTER_BREAK.LV}else if(t<48120){if(t<48092){if(48065<=t&&t<=48091)return r.CLUSTER_BREAK.LVT}else if(t<48093){if(t===48092)return r.CLUSTER_BREAK.LV}else if(48093<=t&&t<=48119)return r.CLUSTER_BREAK.LVT}else if(t<48121){if(t===48120)return r.CLUSTER_BREAK.LV}else if(t<48148){if(48121<=t&&t<=48147)return r.CLUSTER_BREAK.LVT}else if(t===48148)return r.CLUSTER_BREAK.LV}else if(t<48232){if(t<48177){if(t<48176){if(48149<=t&&t<=48175)return r.CLUSTER_BREAK.LVT}else if(t===48176)return r.CLUSTER_BREAK.LV}else if(t<48204){if(48177<=t&&t<=48203)return r.CLUSTER_BREAK.LVT}else if(t<48205){if(t===48204)return r.CLUSTER_BREAK.LV}else if(48205<=t&&t<=48231)return r.CLUSTER_BREAK.LVT}else if(t<48261){if(t<48233){if(t===48232)return r.CLUSTER_BREAK.LV}else if(t<48260){if(48233<=t&&t<=48259)return r.CLUSTER_BREAK.LVT}else if(t===48260)return r.CLUSTER_BREAK.LV}else if(t<48288){if(48261<=t&&t<=48287)return r.CLUSTER_BREAK.LVT}else if(t<48289){if(t===48288)return r.CLUSTER_BREAK.LV}else if(48289<=t&&t<=48315)return r.CLUSTER_BREAK.LVT}else if(t<48597){if(t<48456){if(t<48373){if(t<48344){if(t<48317){if(t===48316)return r.CLUSTER_BREAK.LV}else if(48317<=t&&t<=48343)return r.CLUSTER_BREAK.LVT}else if(t<48345){if(t===48344)return r.CLUSTER_BREAK.LV}else if(t<48372){if(48345<=t&&t<=48371)return r.CLUSTER_BREAK.LVT}else if(t===48372)return r.CLUSTER_BREAK.LV}else if(t<48401){if(t<48400){if(48373<=t&&t<=48399)return r.CLUSTER_BREAK.LVT}else if(t===48400)return r.CLUSTER_BREAK.LV}else if(t<48428){if(48401<=t&&t<=48427)return r.CLUSTER_BREAK.LVT}else if(t<48429){if(t===48428)return r.CLUSTER_BREAK.LV}else if(48429<=t&&t<=48455)return r.CLUSTER_BREAK.LVT}else if(t<48513){if(t<48484){if(t<48457){if(t===48456)return r.CLUSTER_BREAK.LV}else if(48457<=t&&t<=48483)return r.CLUSTER_BREAK.LVT}else if(t<48485){if(t===48484)return r.CLUSTER_BREAK.LV}else if(t<48512){if(48485<=t&&t<=48511)return r.CLUSTER_BREAK.LVT}else if(t===48512)return r.CLUSTER_BREAK.LV}else if(t<48568){if(t<48540){if(48513<=t&&t<=48539)return r.CLUSTER_BREAK.LVT}else if(t<48541){if(t===48540)return r.CLUSTER_BREAK.LV}else if(48541<=t&&t<=48567)return r.CLUSTER_BREAK.LVT}else if(t<48569){if(t===48568)return r.CLUSTER_BREAK.LV}else if(t<48596){if(48569<=t&&t<=48595)return r.CLUSTER_BREAK.LVT}else if(t===48596)return r.CLUSTER_BREAK.LV}else if(t<48764){if(t<48680){if(t<48625){if(t<48624){if(48597<=t&&t<=48623)return r.CLUSTER_BREAK.LVT}else if(t===48624)return r.CLUSTER_BREAK.LV}else if(t<48652){if(48625<=t&&t<=48651)return r.CLUSTER_BREAK.LVT}else if(t<48653){if(t===48652)return r.CLUSTER_BREAK.LV}else if(48653<=t&&t<=48679)return r.CLUSTER_BREAK.LVT}else if(t<48709){if(t<48681){if(t===48680)return r.CLUSTER_BREAK.LV}else if(t<48708){if(48681<=t&&t<=48707)return r.CLUSTER_BREAK.LVT}else if(t===48708)return r.CLUSTER_BREAK.LV}else if(t<48736){if(48709<=t&&t<=48735)return r.CLUSTER_BREAK.LVT}else if(t<48737){if(t===48736)return r.CLUSTER_BREAK.LV}else if(48737<=t&&t<=48763)return r.CLUSTER_BREAK.LVT}else if(t<48821){if(t<48792){if(t<48765){if(t===48764)return r.CLUSTER_BREAK.LV}else if(48765<=t&&t<=48791)return r.CLUSTER_BREAK.LVT}else if(t<48793){if(t===48792)return r.CLUSTER_BREAK.LV}else if(t<48820){if(48793<=t&&t<=48819)return r.CLUSTER_BREAK.LVT}else if(t===48820)return r.CLUSTER_BREAK.LV}else if(t<48876){if(t<48848){if(48821<=t&&t<=48847)return r.CLUSTER_BREAK.LVT}else if(t<48849){if(t===48848)return r.CLUSTER_BREAK.LV}else if(48849<=t&&t<=48875)return r.CLUSTER_BREAK.LVT}else if(t<48877){if(t===48876)return r.CLUSTER_BREAK.LV}else if(t<48904){if(48877<=t&&t<=48903)return r.CLUSTER_BREAK.LVT}else if(t===48904)return r.CLUSTER_BREAK.LV}else if(t<53720){if(t<51312){if(t<50108){if(t<49493){if(t<49212){if(t<49045){if(t<48988){if(t<48933){if(t<48932){if(48905<=t&&t<=48931)return r.CLUSTER_BREAK.LVT}else if(t===48932)return r.CLUSTER_BREAK.LV}else if(t<48960){if(48933<=t&&t<=48959)return r.CLUSTER_BREAK.LVT}else if(t<48961){if(t===48960)return r.CLUSTER_BREAK.LV}else if(48961<=t&&t<=48987)return r.CLUSTER_BREAK.LVT}else if(t<49016){if(t<48989){if(t===48988)return r.CLUSTER_BREAK.LV}else if(48989<=t&&t<=49015)return r.CLUSTER_BREAK.LVT}else if(t<49017){if(t===49016)return r.CLUSTER_BREAK.LV}else if(t<49044){if(49017<=t&&t<=49043)return r.CLUSTER_BREAK.LVT}else if(t===49044)return r.CLUSTER_BREAK.LV}else if(t<49128){if(t<49073){if(t<49072){if(49045<=t&&t<=49071)return r.CLUSTER_BREAK.LVT}else if(t===49072)return r.CLUSTER_BREAK.LV}else if(t<49100){if(49073<=t&&t<=49099)return r.CLUSTER_BREAK.LVT}else if(t<49101){if(t===49100)return r.CLUSTER_BREAK.LV}else if(49101<=t&&t<=49127)return r.CLUSTER_BREAK.LVT}else if(t<49157){if(t<49129){if(t===49128)return r.CLUSTER_BREAK.LV}else if(t<49156){if(49129<=t&&t<=49155)return r.CLUSTER_BREAK.LVT}else if(t===49156)return r.CLUSTER_BREAK.LV}else if(t<49184){if(49157<=t&&t<=49183)return r.CLUSTER_BREAK.LVT}else if(t<49185){if(t===49184)return r.CLUSTER_BREAK.LV}else if(49185<=t&&t<=49211)return r.CLUSTER_BREAK.LVT}else if(t<49352){if(t<49269){if(t<49240){if(t<49213){if(t===49212)return r.CLUSTER_BREAK.LV}else if(49213<=t&&t<=49239)return r.CLUSTER_BREAK.LVT}else if(t<49241){if(t===49240)return r.CLUSTER_BREAK.LV}else if(t<49268){if(49241<=t&&t<=49267)return r.CLUSTER_BREAK.LVT}else if(t===49268)return r.CLUSTER_BREAK.LV}else if(t<49297){if(t<49296){if(49269<=t&&t<=49295)return r.CLUSTER_BREAK.LVT}else if(t===49296)return r.CLUSTER_BREAK.LV}else if(t<49324){if(49297<=t&&t<=49323)return r.CLUSTER_BREAK.LVT}else if(t<49325){if(t===49324)return r.CLUSTER_BREAK.LV}else if(49325<=t&&t<=49351)return r.CLUSTER_BREAK.LVT}else if(t<49409){if(t<49380){if(t<49353){if(t===49352)return r.CLUSTER_BREAK.LV}else if(49353<=t&&t<=49379)return r.CLUSTER_BREAK.LVT}else if(t<49381){if(t===49380)return r.CLUSTER_BREAK.LV}else if(t<49408){if(49381<=t&&t<=49407)return r.CLUSTER_BREAK.LVT}else if(t===49408)return r.CLUSTER_BREAK.LV}else if(t<49464){if(t<49436){if(49409<=t&&t<=49435)return r.CLUSTER_BREAK.LVT}else if(t<49437){if(t===49436)return r.CLUSTER_BREAK.LV}else if(49437<=t&&t<=49463)return r.CLUSTER_BREAK.LVT}else if(t<49465){if(t===49464)return r.CLUSTER_BREAK.LV}else if(t<49492){if(49465<=t&&t<=49491)return r.CLUSTER_BREAK.LVT}else if(t===49492)return r.CLUSTER_BREAK.LV}else if(t<49800){if(t<49633){if(t<49576){if(t<49521){if(t<49520){if(49493<=t&&t<=49519)return r.CLUSTER_BREAK.LVT}else if(t===49520)return r.CLUSTER_BREAK.LV}else if(t<49548){if(49521<=t&&t<=49547)return r.CLUSTER_BREAK.LVT}else if(t<49549){if(t===49548)return r.CLUSTER_BREAK.LV}else if(49549<=t&&t<=49575)return r.CLUSTER_BREAK.LVT}else if(t<49604){if(t<49577){if(t===49576)return r.CLUSTER_BREAK.LV}else if(49577<=t&&t<=49603)return r.CLUSTER_BREAK.LVT}else if(t<49605){if(t===49604)return r.CLUSTER_BREAK.LV}else if(t<49632){if(49605<=t&&t<=49631)return r.CLUSTER_BREAK.LVT}else if(t===49632)return r.CLUSTER_BREAK.LV}else if(t<49716){if(t<49661){if(t<49660){if(49633<=t&&t<=49659)return r.CLUSTER_BREAK.LVT}else if(t===49660)return r.CLUSTER_BREAK.LV}else if(t<49688){if(49661<=t&&t<=49687)return r.CLUSTER_BREAK.LVT}else if(t<49689){if(t===49688)return r.CLUSTER_BREAK.LV}else if(49689<=t&&t<=49715)return r.CLUSTER_BREAK.LVT}else if(t<49745){if(t<49717){if(t===49716)return r.CLUSTER_BREAK.LV}else if(t<49744){if(49717<=t&&t<=49743)return r.CLUSTER_BREAK.LVT}else if(t===49744)return r.CLUSTER_BREAK.LV}else if(t<49772){if(49745<=t&&t<=49771)return r.CLUSTER_BREAK.LVT}else if(t<49773){if(t===49772)return r.CLUSTER_BREAK.LV}else if(49773<=t&&t<=49799)return r.CLUSTER_BREAK.LVT}else if(t<49941){if(t<49857){if(t<49828){if(t<49801){if(t===49800)return r.CLUSTER_BREAK.LV}else if(49801<=t&&t<=49827)return r.CLUSTER_BREAK.LVT}else if(t<49829){if(t===49828)return r.CLUSTER_BREAK.LV}else if(t<49856){if(49829<=t&&t<=49855)return r.CLUSTER_BREAK.LVT}else if(t===49856)return r.CLUSTER_BREAK.LV}else if(t<49912){if(t<49884){if(49857<=t&&t<=49883)return r.CLUSTER_BREAK.LVT}else if(t<49885){if(t===49884)return r.CLUSTER_BREAK.LV}else if(49885<=t&&t<=49911)return r.CLUSTER_BREAK.LVT}else if(t<49913){if(t===49912)return r.CLUSTER_BREAK.LV}else if(t<49940){if(49913<=t&&t<=49939)return r.CLUSTER_BREAK.LVT}else if(t===49940)return r.CLUSTER_BREAK.LV}else if(t<50024){if(t<49969){if(t<49968){if(49941<=t&&t<=49967)return r.CLUSTER_BREAK.LVT}else if(t===49968)return r.CLUSTER_BREAK.LV}else if(t<49996){if(49969<=t&&t<=49995)return r.CLUSTER_BREAK.LVT}else if(t<49997){if(t===49996)return r.CLUSTER_BREAK.LV}else if(49997<=t&&t<=50023)return r.CLUSTER_BREAK.LVT}else if(t<50053){if(t<50025){if(t===50024)return r.CLUSTER_BREAK.LV}else if(t<50052){if(50025<=t&&t<=50051)return r.CLUSTER_BREAK.LVT}else if(t===50052)return r.CLUSTER_BREAK.LV}else if(t<50080){if(50053<=t&&t<=50079)return r.CLUSTER_BREAK.LVT}else if(t<50081){if(t===50080)return r.CLUSTER_BREAK.LV}else if(50081<=t&&t<=50107)return r.CLUSTER_BREAK.LVT}else if(t<50697){if(t<50389){if(t<50248){if(t<50165){if(t<50136){if(t<50109){if(t===50108)return r.CLUSTER_BREAK.LV}else if(50109<=t&&t<=50135)return r.CLUSTER_BREAK.LVT}else if(t<50137){if(t===50136)return r.CLUSTER_BREAK.LV}else if(t<50164){if(50137<=t&&t<=50163)return r.CLUSTER_BREAK.LVT}else if(t===50164)return r.CLUSTER_BREAK.LV}else if(t<50193){if(t<50192){if(50165<=t&&t<=50191)return r.CLUSTER_BREAK.LVT}else if(t===50192)return r.CLUSTER_BREAK.LV}else if(t<50220){if(50193<=t&&t<=50219)return r.CLUSTER_BREAK.LVT}else if(t<50221){if(t===50220)return r.CLUSTER_BREAK.LV}else if(50221<=t&&t<=50247)return r.CLUSTER_BREAK.LVT}else if(t<50305){if(t<50276){if(t<50249){if(t===50248)return r.CLUSTER_BREAK.LV}else if(50249<=t&&t<=50275)return r.CLUSTER_BREAK.LVT}else if(t<50277){if(t===50276)return r.CLUSTER_BREAK.LV}else if(t<50304){if(50277<=t&&t<=50303)return r.CLUSTER_BREAK.LVT}else if(t===50304)return r.CLUSTER_BREAK.LV}else if(t<50360){if(t<50332){if(50305<=t&&t<=50331)return r.CLUSTER_BREAK.LVT}else if(t<50333){if(t===50332)return r.CLUSTER_BREAK.LV}else if(50333<=t&&t<=50359)return r.CLUSTER_BREAK.LVT}else if(t<50361){if(t===50360)return r.CLUSTER_BREAK.LV}else if(t<50388){if(50361<=t&&t<=50387)return r.CLUSTER_BREAK.LVT}else if(t===50388)return r.CLUSTER_BREAK.LV}else if(t<50556){if(t<50472){if(t<50417){if(t<50416){if(50389<=t&&t<=50415)return r.CLUSTER_BREAK.LVT}else if(t===50416)return r.CLUSTER_BREAK.LV}else if(t<50444){if(50417<=t&&t<=50443)return r.CLUSTER_BREAK.LVT}else if(t<50445){if(t===50444)return r.CLUSTER_BREAK.LV}else if(50445<=t&&t<=50471)return r.CLUSTER_BREAK.LVT}else if(t<50501){if(t<50473){if(t===50472)return r.CLUSTER_BREAK.LV}else if(t<50500){if(50473<=t&&t<=50499)return r.CLUSTER_BREAK.LVT}else if(t===50500)return r.CLUSTER_BREAK.LV}else if(t<50528){if(50501<=t&&t<=50527)return r.CLUSTER_BREAK.LVT}else if(t<50529){if(t===50528)return r.CLUSTER_BREAK.LV}else if(50529<=t&&t<=50555)return r.CLUSTER_BREAK.LVT}else if(t<50613){if(t<50584){if(t<50557){if(t===50556)return r.CLUSTER_BREAK.LV}else if(50557<=t&&t<=50583)return r.CLUSTER_BREAK.LVT}else if(t<50585){if(t===50584)return r.CLUSTER_BREAK.LV}else if(t<50612){if(50585<=t&&t<=50611)return r.CLUSTER_BREAK.LVT}else if(t===50612)return r.CLUSTER_BREAK.LV}else if(t<50668){if(t<50640){if(50613<=t&&t<=50639)return r.CLUSTER_BREAK.LVT}else if(t<50641){if(t===50640)return r.CLUSTER_BREAK.LV}else if(50641<=t&&t<=50667)return r.CLUSTER_BREAK.LVT}else if(t<50669){if(t===50668)return r.CLUSTER_BREAK.LV}else if(t<50696){if(50669<=t&&t<=50695)return r.CLUSTER_BREAK.LVT}else if(t===50696)return r.CLUSTER_BREAK.LV}else if(t<51004){if(t<50837){if(t<50780){if(t<50725){if(t<50724){if(50697<=t&&t<=50723)return r.CLUSTER_BREAK.LVT}else if(t===50724)return r.CLUSTER_BREAK.LV}else if(t<50752){if(50725<=t&&t<=50751)return r.CLUSTER_BREAK.LVT}else if(t<50753){if(t===50752)return r.CLUSTER_BREAK.LV}else if(50753<=t&&t<=50779)return r.CLUSTER_BREAK.LVT}else if(t<50808){if(t<50781){if(t===50780)return r.CLUSTER_BREAK.LV}else if(50781<=t&&t<=50807)return r.CLUSTER_BREAK.LVT}else if(t<50809){if(t===50808)return r.CLUSTER_BREAK.LV}else if(t<50836){if(50809<=t&&t<=50835)return r.CLUSTER_BREAK.LVT}else if(t===50836)return r.CLUSTER_BREAK.LV}else if(t<50920){if(t<50865){if(t<50864){if(50837<=t&&t<=50863)return r.CLUSTER_BREAK.LVT}else if(t===50864)return r.CLUSTER_BREAK.LV}else if(t<50892){if(50865<=t&&t<=50891)return r.CLUSTER_BREAK.LVT}else if(t<50893){if(t===50892)return r.CLUSTER_BREAK.LV}else if(50893<=t&&t<=50919)return r.CLUSTER_BREAK.LVT}else if(t<50949){if(t<50921){if(t===50920)return r.CLUSTER_BREAK.LV}else if(t<50948){if(50921<=t&&t<=50947)return r.CLUSTER_BREAK.LVT}else if(t===50948)return r.CLUSTER_BREAK.LV}else if(t<50976){if(50949<=t&&t<=50975)return r.CLUSTER_BREAK.LVT}else if(t<50977){if(t===50976)return r.CLUSTER_BREAK.LV}else if(50977<=t&&t<=51003)return r.CLUSTER_BREAK.LVT}else if(t<51145){if(t<51061){if(t<51032){if(t<51005){if(t===51004)return r.CLUSTER_BREAK.LV}else if(51005<=t&&t<=51031)return r.CLUSTER_BREAK.LVT}else if(t<51033){if(t===51032)return r.CLUSTER_BREAK.LV}else if(t<51060){if(51033<=t&&t<=51059)return r.CLUSTER_BREAK.LVT}else if(t===51060)return r.CLUSTER_BREAK.LV}else if(t<51116){if(t<51088){if(51061<=t&&t<=51087)return r.CLUSTER_BREAK.LVT}else if(t<51089){if(t===51088)return r.CLUSTER_BREAK.LV}else if(51089<=t&&t<=51115)return r.CLUSTER_BREAK.LVT}else if(t<51117){if(t===51116)return r.CLUSTER_BREAK.LV}else if(t<51144){if(51117<=t&&t<=51143)return r.CLUSTER_BREAK.LVT}else if(t===51144)return r.CLUSTER_BREAK.LV}else if(t<51228){if(t<51173){if(t<51172){if(51145<=t&&t<=51171)return r.CLUSTER_BREAK.LVT}else if(t===51172)return r.CLUSTER_BREAK.LV}else if(t<51200){if(51173<=t&&t<=51199)return r.CLUSTER_BREAK.LVT}else if(t<51201){if(t===51200)return r.CLUSTER_BREAK.LV}else if(51201<=t&&t<=51227)return r.CLUSTER_BREAK.LVT}else if(t<51257){if(t<51229){if(t===51228)return r.CLUSTER_BREAK.LV}else if(t<51256){if(51229<=t&&t<=51255)return r.CLUSTER_BREAK.LVT}else if(t===51256)return r.CLUSTER_BREAK.LV}else if(t<51284){if(51257<=t&&t<=51283)return r.CLUSTER_BREAK.LVT}else if(t<51285){if(t===51284)return r.CLUSTER_BREAK.LV}else if(51285<=t&&t<=51311)return r.CLUSTER_BREAK.LVT}else if(t<52516){if(t<51901){if(t<51593){if(t<51452){if(t<51369){if(t<51340){if(t<51313){if(t===51312)return r.CLUSTER_BREAK.LV}else if(51313<=t&&t<=51339)return r.CLUSTER_BREAK.LVT}else if(t<51341){if(t===51340)return r.CLUSTER_BREAK.LV}else if(t<51368){if(51341<=t&&t<=51367)return r.CLUSTER_BREAK.LVT}else if(t===51368)return r.CLUSTER_BREAK.LV}else if(t<51397){if(t<51396){if(51369<=t&&t<=51395)return r.CLUSTER_BREAK.LVT}else if(t===51396)return r.CLUSTER_BREAK.LV}else if(t<51424){if(51397<=t&&t<=51423)return r.CLUSTER_BREAK.LVT}else if(t<51425){if(t===51424)return r.CLUSTER_BREAK.LV}else if(51425<=t&&t<=51451)return r.CLUSTER_BREAK.LVT}else if(t<51509){if(t<51480){if(t<51453){if(t===51452)return r.CLUSTER_BREAK.LV}else if(51453<=t&&t<=51479)return r.CLUSTER_BREAK.LVT}else if(t<51481){if(t===51480)return r.CLUSTER_BREAK.LV}else if(t<51508){if(51481<=t&&t<=51507)return r.CLUSTER_BREAK.LVT}else if(t===51508)return r.CLUSTER_BREAK.LV}else if(t<51564){if(t<51536){if(51509<=t&&t<=51535)return r.CLUSTER_BREAK.LVT}else if(t<51537){if(t===51536)return r.CLUSTER_BREAK.LV}else if(51537<=t&&t<=51563)return r.CLUSTER_BREAK.LVT}else if(t<51565){if(t===51564)return r.CLUSTER_BREAK.LV}else if(t<51592){if(51565<=t&&t<=51591)return r.CLUSTER_BREAK.LVT}else if(t===51592)return r.CLUSTER_BREAK.LV}else if(t<51760){if(t<51676){if(t<51621){if(t<51620){if(51593<=t&&t<=51619)return r.CLUSTER_BREAK.LVT}else if(t===51620)return r.CLUSTER_BREAK.LV}else if(t<51648){if(51621<=t&&t<=51647)return r.CLUSTER_BREAK.LVT}else if(t<51649){if(t===51648)return r.CLUSTER_BREAK.LV}else if(51649<=t&&t<=51675)return r.CLUSTER_BREAK.LVT}else if(t<51705){if(t<51677){if(t===51676)return r.CLUSTER_BREAK.LV}else if(t<51704){if(51677<=t&&t<=51703)return r.CLUSTER_BREAK.LVT}else if(t===51704)return r.CLUSTER_BREAK.LV}else if(t<51732){if(51705<=t&&t<=51731)return r.CLUSTER_BREAK.LVT}else if(t<51733){if(t===51732)return r.CLUSTER_BREAK.LV}else if(51733<=t&&t<=51759)return r.CLUSTER_BREAK.LVT}else if(t<51817){if(t<51788){if(t<51761){if(t===51760)return r.CLUSTER_BREAK.LV}else if(51761<=t&&t<=51787)return r.CLUSTER_BREAK.LVT}else if(t<51789){if(t===51788)return r.CLUSTER_BREAK.LV}else if(t<51816){if(51789<=t&&t<=51815)return r.CLUSTER_BREAK.LVT}else if(t===51816)return r.CLUSTER_BREAK.LV}else if(t<51872){if(t<51844){if(51817<=t&&t<=51843)return r.CLUSTER_BREAK.LVT}else if(t<51845){if(t===51844)return r.CLUSTER_BREAK.LV}else if(51845<=t&&t<=51871)return r.CLUSTER_BREAK.LVT}else if(t<51873){if(t===51872)return r.CLUSTER_BREAK.LV}else if(t<51900){if(51873<=t&&t<=51899)return r.CLUSTER_BREAK.LVT}else if(t===51900)return r.CLUSTER_BREAK.LV}else if(t<52208){if(t<52041){if(t<51984){if(t<51929){if(t<51928){if(51901<=t&&t<=51927)return r.CLUSTER_BREAK.LVT}else if(t===51928)return r.CLUSTER_BREAK.LV}else if(t<51956){if(51929<=t&&t<=51955)return r.CLUSTER_BREAK.LVT}else if(t<51957){if(t===51956)return r.CLUSTER_BREAK.LV}else if(51957<=t&&t<=51983)return r.CLUSTER_BREAK.LVT}else if(t<52012){if(t<51985){if(t===51984)return r.CLUSTER_BREAK.LV}else if(51985<=t&&t<=52011)return r.CLUSTER_BREAK.LVT}else if(t<52013){if(t===52012)return r.CLUSTER_BREAK.LV}else if(t<52040){if(52013<=t&&t<=52039)return r.CLUSTER_BREAK.LVT}else if(t===52040)return r.CLUSTER_BREAK.LV}else if(t<52124){if(t<52069){if(t<52068){if(52041<=t&&t<=52067)return r.CLUSTER_BREAK.LVT}else if(t===52068)return r.CLUSTER_BREAK.LV}else if(t<52096){if(52069<=t&&t<=52095)return r.CLUSTER_BREAK.LVT}else if(t<52097){if(t===52096)return r.CLUSTER_BREAK.LV}else if(52097<=t&&t<=52123)return r.CLUSTER_BREAK.LVT}else if(t<52153){if(t<52125){if(t===52124)return r.CLUSTER_BREAK.LV}else if(t<52152){if(52125<=t&&t<=52151)return r.CLUSTER_BREAK.LVT}else if(t===52152)return r.CLUSTER_BREAK.LV}else if(t<52180){if(52153<=t&&t<=52179)return r.CLUSTER_BREAK.LVT}else if(t<52181){if(t===52180)return r.CLUSTER_BREAK.LV}else if(52181<=t&&t<=52207)return r.CLUSTER_BREAK.LVT}else if(t<52349){if(t<52265){if(t<52236){if(t<52209){if(t===52208)return r.CLUSTER_BREAK.LV}else if(52209<=t&&t<=52235)return r.CLUSTER_BREAK.LVT}else if(t<52237){if(t===52236)return r.CLUSTER_BREAK.LV}else if(t<52264){if(52237<=t&&t<=52263)return r.CLUSTER_BREAK.LVT}else if(t===52264)return r.CLUSTER_BREAK.LV}else if(t<52320){if(t<52292){if(52265<=t&&t<=52291)return r.CLUSTER_BREAK.LVT}else if(t<52293){if(t===52292)return r.CLUSTER_BREAK.LV}else if(52293<=t&&t<=52319)return r.CLUSTER_BREAK.LVT}else if(t<52321){if(t===52320)return r.CLUSTER_BREAK.LV}else if(t<52348){if(52321<=t&&t<=52347)return r.CLUSTER_BREAK.LVT}else if(t===52348)return r.CLUSTER_BREAK.LV}else if(t<52432){if(t<52377){if(t<52376){if(52349<=t&&t<=52375)return r.CLUSTER_BREAK.LVT}else if(t===52376)return r.CLUSTER_BREAK.LV}else if(t<52404){if(52377<=t&&t<=52403)return r.CLUSTER_BREAK.LVT}else if(t<52405){if(t===52404)return r.CLUSTER_BREAK.LV}else if(52405<=t&&t<=52431)return r.CLUSTER_BREAK.LVT}else if(t<52461){if(t<52433){if(t===52432)return r.CLUSTER_BREAK.LV}else if(t<52460){if(52433<=t&&t<=52459)return r.CLUSTER_BREAK.LVT}else if(t===52460)return r.CLUSTER_BREAK.LV}else if(t<52488){if(52461<=t&&t<=52487)return r.CLUSTER_BREAK.LVT}else if(t<52489){if(t===52488)return r.CLUSTER_BREAK.LV}else if(52489<=t&&t<=52515)return r.CLUSTER_BREAK.LVT}else if(t<53105){if(t<52797){if(t<52656){if(t<52573){if(t<52544){if(t<52517){if(t===52516)return r.CLUSTER_BREAK.LV}else if(52517<=t&&t<=52543)return r.CLUSTER_BREAK.LVT}else if(t<52545){if(t===52544)return r.CLUSTER_BREAK.LV}else if(t<52572){if(52545<=t&&t<=52571)return r.CLUSTER_BREAK.LVT}else if(t===52572)return r.CLUSTER_BREAK.LV}else if(t<52601){if(t<52600){if(52573<=t&&t<=52599)return r.CLUSTER_BREAK.LVT}else if(t===52600)return r.CLUSTER_BREAK.LV}else if(t<52628){if(52601<=t&&t<=52627)return r.CLUSTER_BREAK.LVT}else if(t<52629){if(t===52628)return r.CLUSTER_BREAK.LV}else if(52629<=t&&t<=52655)return r.CLUSTER_BREAK.LVT}else if(t<52713){if(t<52684){if(t<52657){if(t===52656)return r.CLUSTER_BREAK.LV}else if(52657<=t&&t<=52683)return r.CLUSTER_BREAK.LVT}else if(t<52685){if(t===52684)return r.CLUSTER_BREAK.LV}else if(t<52712){if(52685<=t&&t<=52711)return r.CLUSTER_BREAK.LVT}else if(t===52712)return r.CLUSTER_BREAK.LV}else if(t<52768){if(t<52740){if(52713<=t&&t<=52739)return r.CLUSTER_BREAK.LVT}else if(t<52741){if(t===52740)return r.CLUSTER_BREAK.LV}else if(52741<=t&&t<=52767)return r.CLUSTER_BREAK.LVT}else if(t<52769){if(t===52768)return r.CLUSTER_BREAK.LV}else if(t<52796){if(52769<=t&&t<=52795)return r.CLUSTER_BREAK.LVT}else if(t===52796)return r.CLUSTER_BREAK.LV}else if(t<52964){if(t<52880){if(t<52825){if(t<52824){if(52797<=t&&t<=52823)return r.CLUSTER_BREAK.LVT}else if(t===52824)return r.CLUSTER_BREAK.LV}else if(t<52852){if(52825<=t&&t<=52851)return r.CLUSTER_BREAK.LVT}else if(t<52853){if(t===52852)return r.CLUSTER_BREAK.LV}else if(52853<=t&&t<=52879)return r.CLUSTER_BREAK.LVT}else if(t<52909){if(t<52881){if(t===52880)return r.CLUSTER_BREAK.LV}else if(t<52908){if(52881<=t&&t<=52907)return r.CLUSTER_BREAK.LVT}else if(t===52908)return r.CLUSTER_BREAK.LV}else if(t<52936){if(52909<=t&&t<=52935)return r.CLUSTER_BREAK.LVT}else if(t<52937){if(t===52936)return r.CLUSTER_BREAK.LV}else if(52937<=t&&t<=52963)return r.CLUSTER_BREAK.LVT}else if(t<53021){if(t<52992){if(t<52965){if(t===52964)return r.CLUSTER_BREAK.LV}else if(52965<=t&&t<=52991)return r.CLUSTER_BREAK.LVT}else if(t<52993){if(t===52992)return r.CLUSTER_BREAK.LV}else if(t<53020){if(52993<=t&&t<=53019)return r.CLUSTER_BREAK.LVT}else if(t===53020)return r.CLUSTER_BREAK.LV}else if(t<53076){if(t<53048){if(53021<=t&&t<=53047)return r.CLUSTER_BREAK.LVT}else if(t<53049){if(t===53048)return r.CLUSTER_BREAK.LV}else if(53049<=t&&t<=53075)return r.CLUSTER_BREAK.LVT}else if(t<53077){if(t===53076)return r.CLUSTER_BREAK.LV}else if(t<53104){if(53077<=t&&t<=53103)return r.CLUSTER_BREAK.LVT}else if(t===53104)return r.CLUSTER_BREAK.LV}else if(t<53412){if(t<53245){if(t<53188){if(t<53133){if(t<53132){if(53105<=t&&t<=53131)return r.CLUSTER_BREAK.LVT}else if(t===53132)return r.CLUSTER_BREAK.LV}else if(t<53160){if(53133<=t&&t<=53159)return r.CLUSTER_BREAK.LVT}else if(t<53161){if(t===53160)return r.CLUSTER_BREAK.LV}else if(53161<=t&&t<=53187)return r.CLUSTER_BREAK.LVT}else if(t<53216){if(t<53189){if(t===53188)return r.CLUSTER_BREAK.LV}else if(53189<=t&&t<=53215)return r.CLUSTER_BREAK.LVT}else if(t<53217){if(t===53216)return r.CLUSTER_BREAK.LV}else if(t<53244){if(53217<=t&&t<=53243)return r.CLUSTER_BREAK.LVT}else if(t===53244)return r.CLUSTER_BREAK.LV}else if(t<53328){if(t<53273){if(t<53272){if(53245<=t&&t<=53271)return r.CLUSTER_BREAK.LVT}else if(t===53272)return r.CLUSTER_BREAK.LV}else if(t<53300){if(53273<=t&&t<=53299)return r.CLUSTER_BREAK.LVT}else if(t<53301){if(t===53300)return r.CLUSTER_BREAK.LV}else if(53301<=t&&t<=53327)return r.CLUSTER_BREAK.LVT}else if(t<53357){if(t<53329){if(t===53328)return r.CLUSTER_BREAK.LV}else if(t<53356){if(53329<=t&&t<=53355)return r.CLUSTER_BREAK.LVT}else if(t===53356)return r.CLUSTER_BREAK.LV}else if(t<53384){if(53357<=t&&t<=53383)return r.CLUSTER_BREAK.LVT}else if(t<53385){if(t===53384)return r.CLUSTER_BREAK.LV}else if(53385<=t&&t<=53411)return r.CLUSTER_BREAK.LVT}else if(t<53553){if(t<53469){if(t<53440){if(t<53413){if(t===53412)return r.CLUSTER_BREAK.LV}else if(53413<=t&&t<=53439)return r.CLUSTER_BREAK.LVT}else if(t<53441){if(t===53440)return r.CLUSTER_BREAK.LV}else if(t<53468){if(53441<=t&&t<=53467)return r.CLUSTER_BREAK.LVT}else if(t===53468)return r.CLUSTER_BREAK.LV}else if(t<53524){if(t<53496){if(53469<=t&&t<=53495)return r.CLUSTER_BREAK.LVT}else if(t<53497){if(t===53496)return r.CLUSTER_BREAK.LV}else if(53497<=t&&t<=53523)return r.CLUSTER_BREAK.LVT}else if(t<53525){if(t===53524)return r.CLUSTER_BREAK.LV}else if(t<53552){if(53525<=t&&t<=53551)return r.CLUSTER_BREAK.LVT}else if(t===53552)return r.CLUSTER_BREAK.LV}else if(t<53636){if(t<53581){if(t<53580){if(53553<=t&&t<=53579)return r.CLUSTER_BREAK.LVT}else if(t===53580)return r.CLUSTER_BREAK.LV}else if(t<53608){if(53581<=t&&t<=53607)return r.CLUSTER_BREAK.LVT}else if(t<53609){if(t===53608)return r.CLUSTER_BREAK.LV}else if(53609<=t&&t<=53635)return r.CLUSTER_BREAK.LVT}else if(t<53665){if(t<53637){if(t===53636)return r.CLUSTER_BREAK.LV}else if(t<53664){if(53637<=t&&t<=53663)return r.CLUSTER_BREAK.LVT}else if(t===53664)return r.CLUSTER_BREAK.LV}else if(t<53692){if(53665<=t&&t<=53691)return r.CLUSTER_BREAK.LVT}else if(t<53693){if(t===53692)return r.CLUSTER_BREAK.LV}else if(53693<=t&&t<=53719)return r.CLUSTER_BREAK.LVT}else if(t<70459){if(t<54897){if(t<54308){if(t<54001){if(t<53860){if(t<53777){if(t<53748){if(t<53721){if(t===53720)return r.CLUSTER_BREAK.LV}else if(53721<=t&&t<=53747)return r.CLUSTER_BREAK.LVT}else if(t<53749){if(t===53748)return r.CLUSTER_BREAK.LV}else if(t<53776){if(53749<=t&&t<=53775)return r.CLUSTER_BREAK.LVT}else if(t===53776)return r.CLUSTER_BREAK.LV}else if(t<53805){if(t<53804){if(53777<=t&&t<=53803)return r.CLUSTER_BREAK.LVT}else if(t===53804)return r.CLUSTER_BREAK.LV}else if(t<53832){if(53805<=t&&t<=53831)return r.CLUSTER_BREAK.LVT}else if(t<53833){if(t===53832)return r.CLUSTER_BREAK.LV}else if(53833<=t&&t<=53859)return r.CLUSTER_BREAK.LVT}else if(t<53917){if(t<53888){if(t<53861){if(t===53860)return r.CLUSTER_BREAK.LV}else if(53861<=t&&t<=53887)return r.CLUSTER_BREAK.LVT}else if(t<53889){if(t===53888)return r.CLUSTER_BREAK.LV}else if(t<53916){if(53889<=t&&t<=53915)return r.CLUSTER_BREAK.LVT}else if(t===53916)return r.CLUSTER_BREAK.LV}else if(t<53972){if(t<53944){if(53917<=t&&t<=53943)return r.CLUSTER_BREAK.LVT}else if(t<53945){if(t===53944)return r.CLUSTER_BREAK.LV}else if(53945<=t&&t<=53971)return r.CLUSTER_BREAK.LVT}else if(t<53973){if(t===53972)return r.CLUSTER_BREAK.LV}else if(t<54e3){if(53973<=t&&t<=53999)return r.CLUSTER_BREAK.LVT}else if(t===54e3)return r.CLUSTER_BREAK.LV}else if(t<54141){if(t<54084){if(t<54029){if(t<54028){if(54001<=t&&t<=54027)return r.CLUSTER_BREAK.LVT}else if(t===54028)return r.CLUSTER_BREAK.LV}else if(t<54056){if(54029<=t&&t<=54055)return r.CLUSTER_BREAK.LVT}else if(t<54057){if(t===54056)return r.CLUSTER_BREAK.LV}else if(54057<=t&&t<=54083)return r.CLUSTER_BREAK.LVT}else if(t<54112){if(t<54085){if(t===54084)return r.CLUSTER_BREAK.LV}else if(54085<=t&&t<=54111)return r.CLUSTER_BREAK.LVT}else if(t<54113){if(t===54112)return r.CLUSTER_BREAK.LV}else if(t<54140){if(54113<=t&&t<=54139)return r.CLUSTER_BREAK.LVT}else if(t===54140)return r.CLUSTER_BREAK.LV}else if(t<54224){if(t<54169){if(t<54168){if(54141<=t&&t<=54167)return r.CLUSTER_BREAK.LVT}else if(t===54168)return r.CLUSTER_BREAK.LV}else if(t<54196){if(54169<=t&&t<=54195)return r.CLUSTER_BREAK.LVT}else if(t<54197){if(t===54196)return r.CLUSTER_BREAK.LV}else if(54197<=t&&t<=54223)return r.CLUSTER_BREAK.LVT}else if(t<54253){if(t<54225){if(t===54224)return r.CLUSTER_BREAK.LV}else if(t<54252){if(54225<=t&&t<=54251)return r.CLUSTER_BREAK.LVT}else if(t===54252)return r.CLUSTER_BREAK.LV}else if(t<54280){if(54253<=t&&t<=54279)return r.CLUSTER_BREAK.LVT}else if(t<54281){if(t===54280)return r.CLUSTER_BREAK.LV}else if(54281<=t&&t<=54307)return r.CLUSTER_BREAK.LVT}else if(t<54589){if(t<54448){if(t<54365){if(t<54336){if(t<54309){if(t===54308)return r.CLUSTER_BREAK.LV}else if(54309<=t&&t<=54335)return r.CLUSTER_BREAK.LVT}else if(t<54337){if(t===54336)return r.CLUSTER_BREAK.LV}else if(t<54364){if(54337<=t&&t<=54363)return r.CLUSTER_BREAK.LVT}else if(t===54364)return r.CLUSTER_BREAK.LV}else if(t<54393){if(t<54392){if(54365<=t&&t<=54391)return r.CLUSTER_BREAK.LVT}else if(t===54392)return r.CLUSTER_BREAK.LV}else if(t<54420){if(54393<=t&&t<=54419)return r.CLUSTER_BREAK.LVT}else if(t<54421){if(t===54420)return r.CLUSTER_BREAK.LV}else if(54421<=t&&t<=54447)return r.CLUSTER_BREAK.LVT}else if(t<54505){if(t<54476){if(t<54449){if(t===54448)return r.CLUSTER_BREAK.LV}else if(54449<=t&&t<=54475)return r.CLUSTER_BREAK.LVT}else if(t<54477){if(t===54476)return r.CLUSTER_BREAK.LV}else if(t<54504){if(54477<=t&&t<=54503)return r.CLUSTER_BREAK.LVT}else if(t===54504)return r.CLUSTER_BREAK.LV}else if(t<54560){if(t<54532){if(54505<=t&&t<=54531)return r.CLUSTER_BREAK.LVT}else if(t<54533){if(t===54532)return r.CLUSTER_BREAK.LV}else if(54533<=t&&t<=54559)return r.CLUSTER_BREAK.LVT}else if(t<54561){if(t===54560)return r.CLUSTER_BREAK.LV}else if(t<54588){if(54561<=t&&t<=54587)return r.CLUSTER_BREAK.LVT}else if(t===54588)return r.CLUSTER_BREAK.LV}else if(t<54756){if(t<54672){if(t<54617){if(t<54616){if(54589<=t&&t<=54615)return r.CLUSTER_BREAK.LVT}else if(t===54616)return r.CLUSTER_BREAK.LV}else if(t<54644){if(54617<=t&&t<=54643)return r.CLUSTER_BREAK.LVT}else if(t<54645){if(t===54644)return r.CLUSTER_BREAK.LV}else if(54645<=t&&t<=54671)return r.CLUSTER_BREAK.LVT}else if(t<54701){if(t<54673){if(t===54672)return r.CLUSTER_BREAK.LV}else if(t<54700){if(54673<=t&&t<=54699)return r.CLUSTER_BREAK.LVT}else if(t===54700)return r.CLUSTER_BREAK.LV}else if(t<54728){if(54701<=t&&t<=54727)return r.CLUSTER_BREAK.LVT}else if(t<54729){if(t===54728)return r.CLUSTER_BREAK.LV}else if(54729<=t&&t<=54755)return r.CLUSTER_BREAK.LVT}else if(t<54813){if(t<54784){if(t<54757){if(t===54756)return r.CLUSTER_BREAK.LV}else if(54757<=t&&t<=54783)return r.CLUSTER_BREAK.LVT}else if(t<54785){if(t===54784)return r.CLUSTER_BREAK.LV}else if(t<54812){if(54785<=t&&t<=54811)return r.CLUSTER_BREAK.LVT}else if(t===54812)return r.CLUSTER_BREAK.LV}else if(t<54868){if(t<54840){if(54813<=t&&t<=54839)return r.CLUSTER_BREAK.LVT}else if(t<54841){if(t===54840)return r.CLUSTER_BREAK.LV}else if(54841<=t&&t<=54867)return r.CLUSTER_BREAK.LVT}else if(t<54869){if(t===54868)return r.CLUSTER_BREAK.LV}else if(t<54896){if(54869<=t&&t<=54895)return r.CLUSTER_BREAK.LVT}else if(t===54896)return r.CLUSTER_BREAK.LV}else if(t<69632){if(t<55216){if(t<55037){if(t<54980){if(t<54925){if(t<54924){if(54897<=t&&t<=54923)return r.CLUSTER_BREAK.LVT}else if(t===54924)return r.CLUSTER_BREAK.LV}else if(t<54952){if(54925<=t&&t<=54951)return r.CLUSTER_BREAK.LVT}else if(t<54953){if(t===54952)return r.CLUSTER_BREAK.LV}else if(54953<=t&&t<=54979)return r.CLUSTER_BREAK.LVT}else if(t<55008){if(t<54981){if(t===54980)return r.CLUSTER_BREAK.LV}else if(54981<=t&&t<=55007)return r.CLUSTER_BREAK.LVT}else if(t<55009){if(t===55008)return r.CLUSTER_BREAK.LV}else if(t<55036){if(55009<=t&&t<=55035)return r.CLUSTER_BREAK.LVT}else if(t===55036)return r.CLUSTER_BREAK.LV}else if(t<55120){if(t<55065){if(t<55064){if(55037<=t&&t<=55063)return r.CLUSTER_BREAK.LVT}else if(t===55064)return r.CLUSTER_BREAK.LV}else if(t<55092){if(55065<=t&&t<=55091)return r.CLUSTER_BREAK.LVT}else if(t<55093){if(t===55092)return r.CLUSTER_BREAK.LV}else if(55093<=t&&t<=55119)return r.CLUSTER_BREAK.LVT}else if(t<55149){if(t<55121){if(t===55120)return r.CLUSTER_BREAK.LV}else if(t<55148){if(55121<=t&&t<=55147)return r.CLUSTER_BREAK.LVT}else if(t===55148)return r.CLUSTER_BREAK.LV}else if(t<55176){if(55149<=t&&t<=55175)return r.CLUSTER_BREAK.LVT}else if(t<55177){if(t===55176)return r.CLUSTER_BREAK.LV}else if(55177<=t&&t<=55203)return r.CLUSTER_BREAK.LVT}else if(t<68097){if(t<65279){if(t<64286){if(t<55243){if(55216<=t&&t<=55238)return r.CLUSTER_BREAK.V}else if(55243<=t&&t<=55291)return r.CLUSTER_BREAK.T}else if(t<65024){if(t===64286)return r.CLUSTER_BREAK.EXTEND}else if(t<65056){if(65024<=t&&t<=65039)return r.CLUSTER_BREAK.EXTEND}else if(65056<=t&&t<=65071)return r.CLUSTER_BREAK.EXTEND}else if(t<66045){if(t<65438){if(t===65279)return r.CLUSTER_BREAK.CONTROL}else if(t<65520){if(65438<=t&&t<=65439)return r.CLUSTER_BREAK.EXTEND}else if(65520<=t&&t<=65531)return r.CLUSTER_BREAK.CONTROL}else if(t<66272){if(t===66045)return r.CLUSTER_BREAK.EXTEND}else if(t<66422){if(t===66272)return r.CLUSTER_BREAK.EXTEND}else if(66422<=t&&t<=66426)return r.CLUSTER_BREAK.EXTEND}else if(t<68325){if(t<68108){if(t<68101){if(68097<=t&&t<=68099)return r.CLUSTER_BREAK.EXTEND}else if(68101<=t&&t<=68102)return r.CLUSTER_BREAK.EXTEND}else if(t<68152){if(68108<=t&&t<=68111)return r.CLUSTER_BREAK.EXTEND}else if(t<68159){if(68152<=t&&t<=68154)return r.CLUSTER_BREAK.EXTEND}else if(t===68159)return r.CLUSTER_BREAK.EXTEND}else if(t<69373){if(t<68900){if(68325<=t&&t<=68326)return r.CLUSTER_BREAK.EXTEND}else if(t<69291){if(68900<=t&&t<=68903)return r.CLUSTER_BREAK.EXTEND}else if(69291<=t&&t<=69292)return r.CLUSTER_BREAK.EXTEND}else if(t<69446){if(69373<=t&&t<=69375)return r.CLUSTER_BREAK.EXTEND}else if(t<69506){if(69446<=t&&t<=69456)return r.CLUSTER_BREAK.EXTEND}else if(69506<=t&&t<=69509)return r.CLUSTER_BREAK.EXTEND}else if(t<70016){if(t<69815){if(t<69747){if(t<69634){if(t===69632)return r.CLUSTER_BREAK.SPACINGMARK;if(t===69633)return r.CLUSTER_BREAK.EXTEND}else if(t<69688){if(t===69634)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<69744){if(69688<=t&&t<=69702)return r.CLUSTER_BREAK.EXTEND}else if(t===69744)return r.CLUSTER_BREAK.EXTEND}else if(t<69762){if(t<69759){if(69747<=t&&t<=69748)return r.CLUSTER_BREAK.EXTEND}else if(69759<=t&&t<=69761)return r.CLUSTER_BREAK.EXTEND}else if(t<69808){if(t===69762)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<69811){if(69808<=t&&t<=69810)return r.CLUSTER_BREAK.SPACINGMARK}else if(69811<=t&&t<=69814)return r.CLUSTER_BREAK.EXTEND}else if(t<69888)if(t<69821){if(t<69817){if(69815<=t&&t<=69816)return r.CLUSTER_BREAK.SPACINGMARK}else if(69817<=t&&t<=69818)return r.CLUSTER_BREAK.EXTEND}else if(t<69826){if(t===69821)return r.CLUSTER_BREAK.PREPEND}else{if(t===69826)return r.CLUSTER_BREAK.EXTEND;if(t===69837)return r.CLUSTER_BREAK.PREPEND}else if(t<69933){if(t<69927){if(69888<=t&&t<=69890)return r.CLUSTER_BREAK.EXTEND}else if(t<69932){if(69927<=t&&t<=69931)return r.CLUSTER_BREAK.EXTEND}else if(t===69932)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<69957){if(69933<=t&&t<=69940)return r.CLUSTER_BREAK.EXTEND}else if(t<70003){if(69957<=t&&t<=69958)return r.CLUSTER_BREAK.SPACINGMARK}else if(t===70003)return r.CLUSTER_BREAK.EXTEND}else if(t<70194){if(t<70082){if(t<70067){if(t<70018){if(70016<=t&&t<=70017)return r.CLUSTER_BREAK.EXTEND}else if(t===70018)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<70070){if(70067<=t&&t<=70069)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<70079){if(70070<=t&&t<=70078)return r.CLUSTER_BREAK.EXTEND}else if(70079<=t&&t<=70080)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<70095){if(t<70089){if(70082<=t&&t<=70083)return r.CLUSTER_BREAK.PREPEND}else if(t<70094){if(70089<=t&&t<=70092)return r.CLUSTER_BREAK.EXTEND}else if(t===70094)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<70188){if(t===70095)return r.CLUSTER_BREAK.EXTEND}else if(t<70191){if(70188<=t&&t<=70190)return r.CLUSTER_BREAK.SPACINGMARK}else if(70191<=t&&t<=70193)return r.CLUSTER_BREAK.EXTEND}else if(t<70209){if(t<70197){if(t<70196){if(70194<=t&&t<=70195)return r.CLUSTER_BREAK.SPACINGMARK}else if(t===70196)return r.CLUSTER_BREAK.EXTEND}else if(t<70198){if(t===70197)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<70206){if(70198<=t&&t<=70199)return r.CLUSTER_BREAK.EXTEND}else if(t===70206)return r.CLUSTER_BREAK.EXTEND}else if(t<70371){if(t<70367){if(t===70209)return r.CLUSTER_BREAK.EXTEND}else if(t<70368){if(t===70367)return r.CLUSTER_BREAK.EXTEND}else if(70368<=t&&t<=70370)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<70400){if(70371<=t&&t<=70378)return r.CLUSTER_BREAK.EXTEND}else if(t<70402){if(70400<=t&&t<=70401)return r.CLUSTER_BREAK.EXTEND}else if(70402<=t&&t<=70403)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<72343){if(t<71339){if(t<70841){if(t<70512){if(t<70471){if(t<70463){if(t<70462){if(70459<=t&&t<=70460)return r.CLUSTER_BREAK.EXTEND}else if(t===70462)return r.CLUSTER_BREAK.EXTEND}else if(t<70464){if(t===70463)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<70465){if(t===70464)return r.CLUSTER_BREAK.EXTEND}else if(70465<=t&&t<=70468)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<70487){if(t<70475){if(70471<=t&&t<=70472)return r.CLUSTER_BREAK.SPACINGMARK}else if(70475<=t&&t<=70477)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<70498){if(t===70487)return r.CLUSTER_BREAK.EXTEND}else if(t<70502){if(70498<=t&&t<=70499)return r.CLUSTER_BREAK.SPACINGMARK}else if(70502<=t&&t<=70508)return r.CLUSTER_BREAK.EXTEND}else if(t<70725){if(t<70712){if(t<70709){if(70512<=t&&t<=70516)return r.CLUSTER_BREAK.EXTEND}else if(70709<=t&&t<=70711)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<70720){if(70712<=t&&t<=70719)return r.CLUSTER_BREAK.EXTEND}else if(t<70722){if(70720<=t&&t<=70721)return r.CLUSTER_BREAK.SPACINGMARK}else if(70722<=t&&t<=70724)return r.CLUSTER_BREAK.EXTEND}else if(t<70832){if(t<70726){if(t===70725)return r.CLUSTER_BREAK.SPACINGMARK}else if(t===70726||t===70750)return r.CLUSTER_BREAK.EXTEND}else if(t<70833){if(t===70832)return r.CLUSTER_BREAK.EXTEND}else if(t<70835){if(70833<=t&&t<=70834)return r.CLUSTER_BREAK.SPACINGMARK}else if(70835<=t&&t<=70840)return r.CLUSTER_BREAK.EXTEND}else if(t<71096){if(t<70847)if(t<70843){if(t===70841)return r.CLUSTER_BREAK.SPACINGMARK;if(t===70842)return r.CLUSTER_BREAK.EXTEND}else if(t<70845){if(70843<=t&&t<=70844)return r.CLUSTER_BREAK.SPACINGMARK}else{if(t===70845)return r.CLUSTER_BREAK.EXTEND;if(t===70846)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<71087){if(t<70849){if(70847<=t&&t<=70848)return r.CLUSTER_BREAK.EXTEND}else if(t<70850){if(t===70849)return r.CLUSTER_BREAK.SPACINGMARK}else if(70850<=t&&t<=70851)return r.CLUSTER_BREAK.EXTEND}else if(t<71088){if(t===71087)return r.CLUSTER_BREAK.EXTEND}else if(t<71090){if(71088<=t&&t<=71089)return r.CLUSTER_BREAK.SPACINGMARK}else if(71090<=t&&t<=71093)return r.CLUSTER_BREAK.EXTEND}else if(t<71216){if(t<71102){if(t<71100){if(71096<=t&&t<=71099)return r.CLUSTER_BREAK.SPACINGMARK}else if(71100<=t&&t<=71101)return r.CLUSTER_BREAK.EXTEND}else if(t<71103){if(t===71102)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<71132){if(71103<=t&&t<=71104)return r.CLUSTER_BREAK.EXTEND}else if(71132<=t&&t<=71133)return r.CLUSTER_BREAK.EXTEND}else if(t<71229){if(t<71219){if(71216<=t&&t<=71218)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<71227){if(71219<=t&&t<=71226)return r.CLUSTER_BREAK.EXTEND}else if(71227<=t&&t<=71228)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<71230){if(t===71229)return r.CLUSTER_BREAK.EXTEND}else if(t<71231){if(t===71230)return r.CLUSTER_BREAK.SPACINGMARK}else if(71231<=t&&t<=71232)return r.CLUSTER_BREAK.EXTEND}else if(t<71999)if(t<71463){if(t<71350){if(t<71341){if(t===71339)return r.CLUSTER_BREAK.EXTEND;if(t===71340)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<71342){if(t===71341)return r.CLUSTER_BREAK.EXTEND}else if(t<71344){if(71342<=t&&t<=71343)return r.CLUSTER_BREAK.SPACINGMARK}else if(71344<=t&&t<=71349)return r.CLUSTER_BREAK.EXTEND}else if(t<71453){if(t===71350)return r.CLUSTER_BREAK.SPACINGMARK;if(t===71351)return r.CLUSTER_BREAK.EXTEND}else if(t<71458){if(71453<=t&&t<=71455)return r.CLUSTER_BREAK.EXTEND}else if(t<71462){if(71458<=t&&t<=71461)return r.CLUSTER_BREAK.EXTEND}else if(t===71462)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<71984){if(t<71727){if(t<71724){if(71463<=t&&t<=71467)return r.CLUSTER_BREAK.EXTEND}else if(71724<=t&&t<=71726)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<71736){if(71727<=t&&t<=71735)return r.CLUSTER_BREAK.EXTEND}else if(t<71737){if(t===71736)return r.CLUSTER_BREAK.SPACINGMARK}else if(71737<=t&&t<=71738)return r.CLUSTER_BREAK.EXTEND}else if(t<71995){if(t<71985){if(t===71984)return r.CLUSTER_BREAK.EXTEND}else if(t<71991){if(71985<=t&&t<=71989)return r.CLUSTER_BREAK.SPACINGMARK}else if(71991<=t&&t<=71992)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<71997){if(71995<=t&&t<=71996)return r.CLUSTER_BREAK.EXTEND}else{if(t===71997)return r.CLUSTER_BREAK.SPACINGMARK;if(t===71998)return r.CLUSTER_BREAK.EXTEND}else if(t<72193)if(t<72145)if(t<72001){if(t===71999)return r.CLUSTER_BREAK.PREPEND;if(t===72e3)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<72002){if(t===72001)return r.CLUSTER_BREAK.PREPEND}else{if(t===72002)return r.CLUSTER_BREAK.SPACINGMARK;if(t===72003)return r.CLUSTER_BREAK.EXTEND}else if(t<72156){if(t<72148){if(72145<=t&&t<=72147)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<72154){if(72148<=t&&t<=72151)return r.CLUSTER_BREAK.EXTEND}else if(72154<=t&&t<=72155)return r.CLUSTER_BREAK.EXTEND}else if(t<72160){if(72156<=t&&t<=72159)return r.CLUSTER_BREAK.SPACINGMARK}else{if(t===72160)return r.CLUSTER_BREAK.EXTEND;if(t===72164)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<72263){if(t<72249){if(t<72243){if(72193<=t&&t<=72202)return r.CLUSTER_BREAK.EXTEND}else if(72243<=t&&t<=72248)return r.CLUSTER_BREAK.EXTEND}else if(t<72250){if(t===72249)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<72251){if(t===72250)return r.CLUSTER_BREAK.PREPEND}else if(72251<=t&&t<=72254)return r.CLUSTER_BREAK.EXTEND}else if(t<72281){if(t<72273){if(t===72263)return r.CLUSTER_BREAK.EXTEND}else if(t<72279){if(72273<=t&&t<=72278)return r.CLUSTER_BREAK.EXTEND}else if(72279<=t&&t<=72280)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<72324){if(72281<=t&&t<=72283)return r.CLUSTER_BREAK.EXTEND}else if(t<72330){if(72324<=t&&t<=72329)return r.CLUSTER_BREAK.PREPEND}else if(72330<=t&&t<=72342)return r.CLUSTER_BREAK.EXTEND}else if(t<94033){if(t<73104){if(t<72881){if(t<72766){if(t<72751){if(t<72344){if(t===72343)return r.CLUSTER_BREAK.SPACINGMARK}else if(72344<=t&&t<=72345)return r.CLUSTER_BREAK.EXTEND}else if(t<72752){if(t===72751)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<72760){if(72752<=t&&t<=72758)return r.CLUSTER_BREAK.EXTEND}else if(72760<=t&&t<=72765)return r.CLUSTER_BREAK.EXTEND}else if(t<72850){if(t===72766)return r.CLUSTER_BREAK.SPACINGMARK;if(t===72767)return r.CLUSTER_BREAK.EXTEND}else if(t<72873){if(72850<=t&&t<=72871)return r.CLUSTER_BREAK.EXTEND}else if(t<72874){if(t===72873)return r.CLUSTER_BREAK.SPACINGMARK}else if(72874<=t&&t<=72880)return r.CLUSTER_BREAK.EXTEND}else if(t<73018){if(t<72884){if(t<72882){if(t===72881)return r.CLUSTER_BREAK.SPACINGMARK}else if(72882<=t&&t<=72883)return r.CLUSTER_BREAK.EXTEND}else if(t<72885){if(t===72884)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<73009){if(72885<=t&&t<=72886)return r.CLUSTER_BREAK.EXTEND}else if(73009<=t&&t<=73014)return r.CLUSTER_BREAK.EXTEND}else if(t<73030){if(t<73020){if(t===73018)return r.CLUSTER_BREAK.EXTEND}else if(t<73023){if(73020<=t&&t<=73021)return r.CLUSTER_BREAK.EXTEND}else if(73023<=t&&t<=73029)return r.CLUSTER_BREAK.EXTEND}else if(t<73031){if(t===73030)return r.CLUSTER_BREAK.PREPEND}else if(t<73098){if(t===73031)return r.CLUSTER_BREAK.EXTEND}else if(73098<=t&&t<=73102)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<73526){if(t<73459)if(t<73109){if(t<73107){if(73104<=t&&t<=73105)return r.CLUSTER_BREAK.EXTEND}else if(73107<=t&&t<=73108)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<73110){if(t===73109)return r.CLUSTER_BREAK.EXTEND}else{if(t===73110)return r.CLUSTER_BREAK.SPACINGMARK;if(t===73111)return r.CLUSTER_BREAK.EXTEND}else if(t<73474){if(t<73461){if(73459<=t&&t<=73460)return r.CLUSTER_BREAK.EXTEND}else if(t<73472){if(73461<=t&&t<=73462)return r.CLUSTER_BREAK.SPACINGMARK}else if(73472<=t&&t<=73473)return r.CLUSTER_BREAK.EXTEND}else if(t<73475){if(t===73474)return r.CLUSTER_BREAK.PREPEND}else if(t<73524){if(t===73475)return r.CLUSTER_BREAK.SPACINGMARK}else if(73524<=t&&t<=73525)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<78896)if(t<73536){if(t<73534){if(73526<=t&&t<=73530)return r.CLUSTER_BREAK.EXTEND}else if(73534<=t&&t<=73535)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<73537){if(t===73536)return r.CLUSTER_BREAK.EXTEND}else{if(t===73537)return r.CLUSTER_BREAK.SPACINGMARK;if(t===73538)return r.CLUSTER_BREAK.EXTEND}else if(t<92912){if(t<78912){if(78896<=t&&t<=78911)return r.CLUSTER_BREAK.CONTROL}else if(t<78919){if(t===78912)return r.CLUSTER_BREAK.EXTEND}else if(78919<=t&&t<=78933)return r.CLUSTER_BREAK.EXTEND}else if(t<92976){if(92912<=t&&t<=92916)return r.CLUSTER_BREAK.EXTEND}else if(t<94031){if(92976<=t&&t<=92982)return r.CLUSTER_BREAK.EXTEND}else if(t===94031)return r.CLUSTER_BREAK.EXTEND}else if(t<121476){if(t<119143)if(t<113824){if(t<94180){if(t<94095){if(94033<=t&&t<=94087)return r.CLUSTER_BREAK.SPACINGMARK}else if(94095<=t&&t<=94098)return r.CLUSTER_BREAK.EXTEND}else if(t<94192){if(t===94180)return r.CLUSTER_BREAK.EXTEND}else if(t<113821){if(94192<=t&&t<=94193)return r.CLUSTER_BREAK.SPACINGMARK}else if(113821<=t&&t<=113822)return r.CLUSTER_BREAK.EXTEND}else if(t<118576){if(t<118528){if(113824<=t&&t<=113827)return r.CLUSTER_BREAK.CONTROL}else if(118528<=t&&t<=118573)return r.CLUSTER_BREAK.EXTEND}else if(t<119141){if(118576<=t&&t<=118598)return r.CLUSTER_BREAK.EXTEND}else{if(t===119141)return r.CLUSTER_BREAK.EXTEND;if(t===119142)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<119173){if(t<119150){if(t<119149){if(119143<=t&&t<=119145)return r.CLUSTER_BREAK.EXTEND}else if(t===119149)return r.CLUSTER_BREAK.SPACINGMARK}else if(t<119155){if(119150<=t&&t<=119154)return r.CLUSTER_BREAK.EXTEND}else if(t<119163){if(119155<=t&&t<=119162)return r.CLUSTER_BREAK.CONTROL}else if(119163<=t&&t<=119170)return r.CLUSTER_BREAK.EXTEND}else if(t<121344){if(t<119210){if(119173<=t&&t<=119179)return r.CLUSTER_BREAK.EXTEND}else if(t<119362){if(119210<=t&&t<=119213)return r.CLUSTER_BREAK.EXTEND}else if(119362<=t&&t<=119364)return r.CLUSTER_BREAK.EXTEND}else if(t<121403){if(121344<=t&&t<=121398)return r.CLUSTER_BREAK.EXTEND}else if(t<121461){if(121403<=t&&t<=121452)return r.CLUSTER_BREAK.EXTEND}else if(t===121461)return r.CLUSTER_BREAK.EXTEND}else if(t<123628){if(t<122907){if(t<121505){if(t<121499){if(t===121476)return r.CLUSTER_BREAK.EXTEND}else if(121499<=t&&t<=121503)return r.CLUSTER_BREAK.EXTEND}else if(t<122880){if(121505<=t&&t<=121519)return r.CLUSTER_BREAK.EXTEND}else if(t<122888){if(122880<=t&&t<=122886)return r.CLUSTER_BREAK.EXTEND}else if(122888<=t&&t<=122904)return r.CLUSTER_BREAK.EXTEND}else if(t<123023){if(t<122915){if(122907<=t&&t<=122913)return r.CLUSTER_BREAK.EXTEND}else if(t<122918){if(122915<=t&&t<=122916)return r.CLUSTER_BREAK.EXTEND}else if(122918<=t&&t<=122922)return r.CLUSTER_BREAK.EXTEND}else if(t<123184){if(t===123023)return r.CLUSTER_BREAK.EXTEND}else if(t<123566){if(123184<=t&&t<=123190)return r.CLUSTER_BREAK.EXTEND}else if(t===123566)return r.CLUSTER_BREAK.EXTEND}else if(t<127995){if(t<125136){if(t<124140){if(123628<=t&&t<=123631)return r.CLUSTER_BREAK.EXTEND}else if(124140<=t&&t<=124143)return r.CLUSTER_BREAK.EXTEND}else if(t<125252){if(125136<=t&&t<=125142)return r.CLUSTER_BREAK.EXTEND}else if(t<127462){if(125252<=t&&t<=125258)return r.CLUSTER_BREAK.EXTEND}else if(127462<=t&&t<=127487)return r.CLUSTER_BREAK.REGIONAL_INDICATOR}else if(t<917632){if(t<917504){if(127995<=t&&t<=127999)return r.CLUSTER_BREAK.EXTEND}else if(t<917536){if(917504<=t&&t<=917535)return r.CLUSTER_BREAK.CONTROL}else if(917536<=t&&t<=917631)return r.CLUSTER_BREAK.EXTEND}else if(t<917760){if(917632<=t&&t<=917759)return r.CLUSTER_BREAK.CONTROL}else if(t<918e3){if(917760<=t&&t<=917999)return r.CLUSTER_BREAK.EXTEND}else if(918e3<=t&&t<=921599)return r.CLUSTER_BREAK.CONTROL;return r.CLUSTER_BREAK.OTHER}static getEmojiProperty(t){if(t<10160){if(t<9728){if(t<9e3){if(t<8482){if(t<8252){if(t===169||t===174)return r.EXTENDED_PICTOGRAPHIC}else if(t===8252||t===8265)return r.EXTENDED_PICTOGRAPHIC}else if(t<8596){if(t===8482||t===8505)return r.EXTENDED_PICTOGRAPHIC}else if(t<8617){if(8596<=t&&t<=8601)return r.EXTENDED_PICTOGRAPHIC}else if(t<8986){if(8617<=t&&t<=8618)return r.EXTENDED_PICTOGRAPHIC}else if(8986<=t&&t<=8987)return r.EXTENDED_PICTOGRAPHIC}else if(t<9410){if(t<9167){if(t===9e3||t===9096)return r.EXTENDED_PICTOGRAPHIC}else if(t<9193){if(t===9167)return r.EXTENDED_PICTOGRAPHIC}else if(t<9208){if(9193<=t&&t<=9203)return r.EXTENDED_PICTOGRAPHIC}else if(9208<=t&&t<=9210)return r.EXTENDED_PICTOGRAPHIC}else if(t<9654){if(t<9642){if(t===9410)return r.EXTENDED_PICTOGRAPHIC}else if(9642<=t&&t<=9643)return r.EXTENDED_PICTOGRAPHIC}else if(t<9664){if(t===9654)return r.EXTENDED_PICTOGRAPHIC}else if(t<9723){if(t===9664)return r.EXTENDED_PICTOGRAPHIC}else if(9723<=t&&t<=9726)return r.EXTENDED_PICTOGRAPHIC}else if(t<10035){if(t<10004){if(t<9748){if(t<9735){if(9728<=t&&t<=9733)return r.EXTENDED_PICTOGRAPHIC}else if(9735<=t&&t<=9746)return r.EXTENDED_PICTOGRAPHIC}else if(t<9872){if(9748<=t&&t<=9861)return r.EXTENDED_PICTOGRAPHIC}else if(t<9992){if(9872<=t&&t<=9989)return r.EXTENDED_PICTOGRAPHIC}else if(9992<=t&&t<=10002)return r.EXTENDED_PICTOGRAPHIC}else if(t<10013){if(t===10004||t===10006)return r.EXTENDED_PICTOGRAPHIC}else if(t<10017){if(t===10013)return r.EXTENDED_PICTOGRAPHIC}else if(t===10017||t===10024)return r.EXTENDED_PICTOGRAPHIC}else if(t<10067){if(t<10055){if(t<10052){if(10035<=t&&t<=10036)return r.EXTENDED_PICTOGRAPHIC}else if(t===10052)return r.EXTENDED_PICTOGRAPHIC}else if(t<10060){if(t===10055)return r.EXTENDED_PICTOGRAPHIC}else if(t===10060||t===10062)return r.EXTENDED_PICTOGRAPHIC}else if(t<10083){if(t<10071){if(10067<=t&&t<=10069)return r.EXTENDED_PICTOGRAPHIC}else if(t===10071)return r.EXTENDED_PICTOGRAPHIC}else if(t<10133){if(10083<=t&&t<=10087)return r.EXTENDED_PICTOGRAPHIC}else if(t<10145){if(10133<=t&&t<=10135)return r.EXTENDED_PICTOGRAPHIC}else if(t===10145)return r.EXTENDED_PICTOGRAPHIC}else if(t<127489){if(t<12951){if(t<11035){if(t<10548){if(t===10160||t===10175)return r.EXTENDED_PICTOGRAPHIC}else if(t<11013){if(10548<=t&&t<=10549)return r.EXTENDED_PICTOGRAPHIC}else if(11013<=t&&t<=11015)return r.EXTENDED_PICTOGRAPHIC}else if(t<11093){if(t<11088){if(11035<=t&&t<=11036)return r.EXTENDED_PICTOGRAPHIC}else if(t===11088)return r.EXTENDED_PICTOGRAPHIC}else if(t<12336){if(t===11093)return r.EXTENDED_PICTOGRAPHIC}else if(t===12336||t===12349)return r.EXTENDED_PICTOGRAPHIC}else if(t<127340){if(t<126976){if(t===12951||t===12953)return r.EXTENDED_PICTOGRAPHIC}else if(t<127245){if(126976<=t&&t<=127231)return r.EXTENDED_PICTOGRAPHIC}else if(t<127279){if(127245<=t&&t<=127247)return r.EXTENDED_PICTOGRAPHIC}else if(t===127279)return r.EXTENDED_PICTOGRAPHIC}else if(t<127374){if(t<127358){if(127340<=t&&t<=127345)return r.EXTENDED_PICTOGRAPHIC}else if(127358<=t&&t<=127359)return r.EXTENDED_PICTOGRAPHIC}else if(t<127377){if(t===127374)return r.EXTENDED_PICTOGRAPHIC}else if(t<127405){if(127377<=t&&t<=127386)return r.EXTENDED_PICTOGRAPHIC}else if(127405<=t&&t<=127461)return r.EXTENDED_PICTOGRAPHIC}else if(t<128981){if(t<127561){if(t<127535){if(t<127514){if(127489<=t&&t<=127503)return r.EXTENDED_PICTOGRAPHIC}else if(t===127514)return r.EXTENDED_PICTOGRAPHIC}else if(t<127538){if(t===127535)return r.EXTENDED_PICTOGRAPHIC}else if(t<127548){if(127538<=t&&t<=127546)return r.EXTENDED_PICTOGRAPHIC}else if(127548<=t&&t<=127551)return r.EXTENDED_PICTOGRAPHIC}else if(t<128326){if(t<128e3){if(127561<=t&&t<=127994)return r.EXTENDED_PICTOGRAPHIC}else if(128e3<=t&&t<=128317)return r.EXTENDED_PICTOGRAPHIC}else if(t<128640){if(128326<=t&&t<=128591)return r.EXTENDED_PICTOGRAPHIC}else if(t<128884){if(128640<=t&&t<=128767)return r.EXTENDED_PICTOGRAPHIC}else if(128884<=t&&t<=128895)return r.EXTENDED_PICTOGRAPHIC}else if(t<129198){if(t<129096){if(t<129036){if(128981<=t&&t<=129023)return r.EXTENDED_PICTOGRAPHIC}else if(129036<=t&&t<=129039)return r.EXTENDED_PICTOGRAPHIC}else if(t<129114){if(129096<=t&&t<=129103)return r.EXTENDED_PICTOGRAPHIC}else if(t<129160){if(129114<=t&&t<=129119)return r.EXTENDED_PICTOGRAPHIC}else if(129160<=t&&t<=129167)return r.EXTENDED_PICTOGRAPHIC}else if(t<129340){if(t<129292){if(129198<=t&&t<=129279)return r.EXTENDED_PICTOGRAPHIC}else if(129292<=t&&t<=129338)return r.EXTENDED_PICTOGRAPHIC}else if(t<129351){if(129340<=t&&t<=129349)return r.EXTENDED_PICTOGRAPHIC}else if(t<130048){if(129351<=t&&t<=129791)return r.EXTENDED_PICTOGRAPHIC}else if(130048<=t&&t<=131069)return r.EXTENDED_PICTOGRAPHIC;return r.CLUSTER_BREAK.OTHER}};e.default=a}}),or=ue({"../../node_modules/.pnpm/graphemer@1.4.0/node_modules/graphemer/lib/index.js"(e){var i=e&&e.__importDefault||function(n){return n&&n.__esModule?n:{default:n}};Object.defineProperty(e,"__esModule",{value:!0});var r=i(Ct());e.default=r.default}}),lr=ue({"../../node_modules/.pnpm/iso-datestring-validator@2.2.2/node_modules/iso-datestring-validator/dist/index.js"(e){(()=>{var i={d:(b,A)=>{for(var K in A)i.o(A,K)&&!i.o(b,K)&&Object.defineProperty(b,K,{enumerable:!0,get:A[K]})},o:(b,A)=>Object.prototype.hasOwnProperty.call(b,A),r:b=>{typeof Symbol<"u"&&Symbol.toStringTag&&Object.defineProperty(b,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(b,"__esModule",{value:!0})}},r={};function n(b,A){return A===void 0&&(A="-"),new RegExp("^(?!0{4}"+A+"0{2}"+A+"0{2})((?=[0-9]{4}"+A+"(((0[^2])|1[0-2])|02(?="+A+"(([0-1][0-9])|2[0-8])))"+A+"[0-9]{2})|(?=((([13579][26])|([2468][048])|(0[48]))0{2})|([0-9]{2}((((0|[2468])[48])|[2468][048])|([13579][26])))"+A+"02"+A+"29))([0-9]{4})"+A+"(?!((0[469])|11)"+A+"31)((0[1,3-9]|1[0-2])|(02(?!"+A+"3)))"+A+"(0[1-9]|[1-2][0-9]|3[0-1])$").test(b)}function s(b){var A=/\D/.exec(b);return A?A[0]:""}function a(b,A,K){A===void 0&&(A=":"),K===void 0&&(K=!1);var O=new RegExp("^([0-1]|2(?=([0-3])|4"+A+"00))[0-9]"+A+"[0-5][0-9]("+A+"([0-5]|6(?=0))[0-9])?(.[0-9]{1,9})?$");if(!K||!/[Z+\-]/.test(b))return O.test(b);if(/Z$/.test(b))return O.test(b.replace("Z",""));var U=b.includes("+"),j=b.split(/[+-]/),P=j[0],I=j[1];return O.test(P)&&function(re,ee,N){return N===void 0&&(N=":"),new RegExp(ee?"^(0(?!(2"+N+"4)|0"+N+"3)|1(?=([0-1]|2(?="+N+"[04])|[34](?="+N+"0))))([03469](?="+N+"[03])|[17](?="+N+"0)|2(?="+N+"[04])|5(?="+N+"[034])|8(?="+N+"[04]))"+N+"([03](?=0)|4(?=5))[05]$":"^(0(?=[^0])|1(?=[0-2]))([39](?="+N+"[03])|[0-24-8](?="+N+"00))"+N+"[03]0$").test(re)}(I,U,s(I))}function t(b){var A=b.split("T"),K=A[0],O=A[1],U=n(K,s(K));if(!O)return!1;var j,P=(j=O.match(/([^Z+\-\d])(?=\d+\1)/),Array.isArray(j)?j[0]:"");return U&&a(O,P,!0)}function l(b,A){return A===void 0&&(A="-"),new RegExp("^[0-9]{4}"+A+"(0(?=[^0])|1(?=[0-2]))[0-9]$").test(b)}i.r(r),i.d(r,{isValidDate:()=>n,isValidISODateString:()=>t,isValidTime:()=>a,isValidYearMonth:()=>l});var u=e;for(var y in r)u[y]=r[y];r.__esModule&&Object.defineProperty(u,"__esModule",{value:!0})})()}}),_t={};p(_t,{APP_BSKY_GRAPH:()=>Lb,AppBskyActorDefs:()=>v,AppBskyActorGetPreferences:()=>ma,AppBskyActorGetProfile:()=>ya,AppBskyActorGetProfiles:()=>Ea,AppBskyActorGetSuggestions:()=>ha,AppBskyActorNS:()=>wl,AppBskyActorProfile:()=>Dr,AppBskyActorPutPreferences:()=>Ra,AppBskyActorSearchActors:()=>ga,AppBskyActorSearchActorsTypeahead:()=>ba,AppBskyEmbedExternal:()=>Et,AppBskyEmbedImages:()=>Ge,AppBskyEmbedNS:()=>kl,AppBskyEmbedRecord:()=>Se,AppBskyEmbedRecordWithMedia:()=>Xe,AppBskyFeedDefs:()=>Qo,AppBskyFeedDescribeFeedGenerator:()=>Aa,AppBskyFeedGenerator:()=>Yo,AppBskyFeedGetActorFeeds:()=>Ta,AppBskyFeedGetActorLikes:()=>va,AppBskyFeedGetAuthorFeed:()=>Sa,AppBskyFeedGetFeed:()=>xa,AppBskyFeedGetFeedGenerator:()=>Va,AppBskyFeedGetFeedGenerators:()=>Da,AppBskyFeedGetFeedSkeleton:()=>Na,AppBskyFeedGetLikes:()=>ja,AppBskyFeedGetListFeed:()=>qa,AppBskyFeedGetPostThread:()=>$a,AppBskyFeedGetPosts:()=>Xa,AppBskyFeedGetRepostedBy:()=>za,AppBskyFeedGetSuggestedFeeds:()=>Ha,AppBskyFeedGetTimeline:()=>Za,AppBskyFeedLike:()=>el,AppBskyFeedNS:()=>xl,AppBskyFeedPost:()=>De,AppBskyFeedRepost:()=>tl,AppBskyFeedSearchPosts:()=>Wa,AppBskyFeedThreadgate:()=>rl,AppBskyGraphBlock:()=>il,AppBskyGraphDefs:()=>nl,AppBskyGraphFollow:()=>sl,AppBskyGraphGetBlocks:()=>Ya,AppBskyGraphGetFollowers:()=>eo,AppBskyGraphGetFollows:()=>to,AppBskyGraphGetList:()=>ro,AppBskyGraphGetListBlocks:()=>io,AppBskyGraphGetListMutes:()=>no,AppBskyGraphGetLists:()=>so,AppBskyGraphGetMutes:()=>ao,AppBskyGraphGetRelationships:()=>oo,AppBskyGraphGetSuggestedFollowsByActor:()=>uo,AppBskyGraphList:()=>al,AppBskyGraphListblock:()=>ol,AppBskyGraphListitem:()=>ll,AppBskyGraphMuteActor:()=>fo,AppBskyGraphMuteActorList:()=>co,AppBskyGraphNS:()=>Pl,AppBskyGraphUnmuteActor:()=>mo,AppBskyGraphUnmuteActorList:()=>yo,AppBskyLabelerDefs:()=>pl,AppBskyLabelerGetServices:()=>Eo,AppBskyLabelerNS:()=>$l,AppBskyLabelerService:()=>ul,AppBskyNS:()=>Sl,AppBskyNotificationGetUnreadCount:()=>ho,AppBskyNotificationListNotifications:()=>Ro,AppBskyNotificationNS:()=>Gl,AppBskyNotificationRegisterPush:()=>go,AppBskyNotificationUpdateSeen:()=>bo,AppBskyRichtextFacet:()=>Re,AppBskyRichtextNS:()=>Xl,AppBskyUnspeccedDefs:()=>fl,AppBskyUnspeccedGetPopularFeedGenerators:()=>Ao,AppBskyUnspeccedGetTaggedSuggestions:()=>To,AppBskyUnspeccedNS:()=>zl,AppBskyUnspeccedSearchActorsSkeleton:()=>vo,AppBskyUnspeccedSearchPostsSkeleton:()=>_o,AppNS:()=>_l,AtUri:()=>ce,AtpAgent:()=>ht,AtpBaseClient:()=>ml,AtpServiceClient:()=>yl,BLOCK_BEHAVIOR:()=>Jt,BSKY_LABELER_DID:()=>Yi,BlobRef:()=>Ve,BlockRecord:()=>Il,BskyAgent:()=>bt,COM_ATPROTO_MODERATION:()=>vb,CUSTOM_LABEL_VALUE_RE:()=>pp,ComAtprotoAdminDefs:()=>Xo,ComAtprotoAdminDeleteAccount:()=>ln,ComAtprotoAdminDisableAccountInvites:()=>pn,ComAtprotoAdminDisableInviteCodes:()=>un,ComAtprotoAdminEnableAccountInvites:()=>fn,ComAtprotoAdminGetAccountInfo:()=>cn,ComAtprotoAdminGetAccountInfos:()=>dn,ComAtprotoAdminGetInviteCodes:()=>mn,ComAtprotoAdminGetSubjectStatus:()=>yn,ComAtprotoAdminNS:()=>Rl,ComAtprotoAdminSendEmail:()=>En,ComAtprotoAdminUpdateAccountEmail:()=>hn,ComAtprotoAdminUpdateAccountHandle:()=>Rn,ComAtprotoAdminUpdateAccountPassword:()=>gn,ComAtprotoAdminUpdateSubjectStatus:()=>bn,ComAtprotoIdentityGetRecommendedDidCredentials:()=>An,ComAtprotoIdentityNS:()=>gl,ComAtprotoIdentityRequestPlcOperationSignature:()=>Tn,ComAtprotoIdentityResolveHandle:()=>vn,ComAtprotoIdentitySignPlcOperation:()=>Ln,ComAtprotoIdentitySubmitPlcOperation:()=>Cn,ComAtprotoIdentityUpdateHandle:()=>_n,ComAtprotoLabelDefs:()=>Vr,ComAtprotoLabelNS:()=>bl,ComAtprotoLabelQueryLabels:()=>Sn,ComAtprotoLabelSubscribeLabels:()=>zo,ComAtprotoModerationCreateReport:()=>wn,ComAtprotoModerationDefs:()=>Ho,ComAtprotoModerationNS:()=>Al,ComAtprotoNS:()=>hl,ComAtprotoRepoApplyWrites:()=>Bn,ComAtprotoRepoCreateRecord:()=>Kn,ComAtprotoRepoDeleteRecord:()=>Dn,ComAtprotoRepoDescribeRepo:()=>In,ComAtprotoRepoGetRecord:()=>jn,ComAtprotoRepoImportRepo:()=>qn,ComAtprotoRepoListMissingBlobs:()=>Fn,ComAtprotoRepoListRecords:()=>Mn,ComAtprotoRepoNS:()=>Tl,ComAtprotoRepoPutRecord:()=>Ur,ComAtprotoRepoStrongRef:()=>Zo,ComAtprotoRepoUploadBlob:()=>Gn,ComAtprotoServerActivateAccount:()=>Xn,ComAtprotoServerCheckAccountStatus:()=>zn,ComAtprotoServerConfirmEmail:()=>Hn,ComAtprotoServerCreateAccount:()=>es,ComAtprotoServerCreateAppPassword:()=>ps,ComAtprotoServerCreateInviteCode:()=>cs,ComAtprotoServerCreateInviteCodes:()=>ds,ComAtprotoServerCreateSession:()=>ms,ComAtprotoServerDeactivateAccount:()=>hs,ComAtprotoServerDefs:()=>Wo,ComAtprotoServerDeleteAccount:()=>Rs,ComAtprotoServerDeleteSession:()=>Ts,ComAtprotoServerDescribeServer:()=>vs,ComAtprotoServerGetAccountInviteCodes:()=>Ls,ComAtprotoServerGetServiceAuth:()=>Ss,ComAtprotoServerGetSession:()=>ws,ComAtprotoServerListAppPasswords:()=>Bs,ComAtprotoServerNS:()=>vl,ComAtprotoServerRefreshSession:()=>Ks,ComAtprotoServerRequestAccountDelete:()=>Ds,ComAtprotoServerRequestEmailConfirmation:()=>Ns,ComAtprotoServerRequestEmailUpdate:()=>Ps,ComAtprotoServerRequestPasswordReset:()=>Is,ComAtprotoServerReserveSigningKey:()=>js,ComAtprotoServerResetPassword:()=>qs,ComAtprotoServerRevokeAppPassword:()=>Os,ComAtprotoServerUpdateEmail:()=>Gs,ComAtprotoSyncGetBlob:()=>Ws,ComAtprotoSyncGetBlocks:()=>Js,ComAtprotoSyncGetCheckout:()=>Qs,ComAtprotoSyncGetHead:()=>Ys,ComAtprotoSyncGetLatestCommit:()=>ra,ComAtprotoSyncGetRecord:()=>sa,ComAtprotoSyncGetRepo:()=>aa,ComAtprotoSyncListBlobs:()=>oa,ComAtprotoSyncListRepos:()=>la,ComAtprotoSyncNS:()=>Ll,ComAtprotoSyncNotifyOfUpdate:()=>pa,ComAtprotoSyncRequestCrawl:()=>ua,ComAtprotoSyncSubscribeRepos:()=>Jo,ComAtprotoTempCheckSignupQueue:()=>fa,ComAtprotoTempFetchLabels:()=>ca,ComAtprotoTempNS:()=>Cl,ComAtprotoTempRequestPhoneVerification:()=>da,ComNS:()=>El,DEFAULT_LABEL_SETTINGS:()=>cp,FollowRecord:()=>jl,GeneratorRecord:()=>Kl,HIDE_BEHAVIOR:()=>er,LABELS:()=>Pr,LikeRecord:()=>Ul,ListRecord:()=>ql,ListblockRecord:()=>Fl,ListitemRecord:()=>Ml,MENTION_REGEX:()=>tp,MUTEWORD_BEHAVIOR:()=>Yt,MUTE_BEHAVIOR:()=>Qt,ModerationDecision:()=>Y,ModerationUI:()=>fp,NOOP_BEHAVIOR:()=>up,PostRecord:()=>Vl,ProfileRecord:()=>Bl,RepostRecord:()=>Dl,RichText:()=>op,RichTextSegment:()=>ze,ServiceRecord:()=>Ol,TAG_REGEX:()=>np,TOOLS_OZONE_MODERATION:()=>Cb,TRAILING_PUNCTUATION_REGEX:()=>ip,ThreadgateRecord:()=>Nl,ToolsNS:()=>Hl,ToolsOzoneCommunicationCreateTemplate:()=>Bo,ToolsOzoneCommunicationDefs:()=>cl,ToolsOzoneCommunicationDeleteTemplate:()=>ko,ToolsOzoneCommunicationListTemplates:()=>xo,ToolsOzoneCommunicationNS:()=>Wl,ToolsOzoneCommunicationUpdateTemplate:()=>Ko,ToolsOzoneModerationDefs:()=>dl,ToolsOzoneModerationEmitEvent:()=>Uo,ToolsOzoneModerationGetEvent:()=>No,ToolsOzoneModerationGetRecord:()=>Po,ToolsOzoneModerationGetRepo:()=>qo,ToolsOzoneModerationNS:()=>Jl,ToolsOzoneModerationQueryEvents:()=>$o,ToolsOzoneModerationQueryStatuses:()=>Oo,ToolsOzoneModerationSearchRepos:()=>Go,ToolsOzoneNS:()=>Zl,URL_REGEX:()=>rp,UnicodeString:()=>Rt,default:()=>ht,hasMutedWord:()=>le,interpretLabelValueDefinition:()=>yp,interpretLabelValueDefinitions:()=>Ep,jsonStringToLex:()=>Qi,jsonToLex:()=>Ji,lexToJson:()=>Zi,mock:()=>Qb,moderateFeedGenerator:()=>Wb,moderateNotification:()=>Zb,moderatePost:()=>Hb,moderateProfile:()=>zb,moderateUserList:()=>Jb,parseLanguage:()=>zf,sanitizeMutedWordValue:()=>Kr,sanitizeRichText:()=>ep,stringifyLex:()=>Wi}),G.exports=sr(_t);var Qe=e=>{if(!/^[a-zA-Z0-9.-]*$/.test(e))throw new W("Disallowed characters in handle (ASCII letters, digits, dashes, periods only)");if(e.length>253)throw new W("Handle is too long (253 chars max)");const i=e.split(".");if(i.length<2)throw new W("Handle domain needs at least two parts");for(let r=0;r<i.length;r++){const n=i[r];if(n.length<1)throw new W("Handle parts can not be empty");if(n.length>63)throw new W("Handle part too long (max 63 chars)");if(n.endsWith("-")||n.startsWith("-"))throw new W("Handle parts can not start or end with hyphens");if(r+1==i.length&&!/^[a-zA-Z]/.test(n))throw new W("Handle final component (TLD) must start with ASCII letter")}},W=class extends Error{},Pe=e=>{if(!/^[a-zA-Z0-9._:%-]*$/.test(e))throw new fe("Disallowed characters in DID (ASCII letters, digits, and a couple other characters only)");const i=e.split(":");if(i.length<3)throw new fe("DID requires prefix, method, and method-specific content");if(i[0]!="did")throw new fe('DID requires "did:" prefix');if(!/^[a-z]+$/.test(i[1]))throw new fe("DID method must be lower-case letters");if(e.endsWith(":")||e.endsWith("%"))throw new fe('DID can not end with ":" or "%"');if(e.length>2*1024)throw new fe("DID is too long (2048 chars max)")},fe=class extends Error{},Ie=class{constructor(e){this.segments=[],je(e),this.segments=e.split(".")}static parse(e){return new Ie(e)}static create(e,i){const r=[...e.split(".").reverse(),i].join(".");return new Ie(r)}static isValid(e){try{return Ie.parse(e),!0}catch{return!1}}get authority(){return this.segments.slice(0,this.segments.length-1).reverse().join(".")}get name(){return this.segments.at(this.segments.length-1)}toString(){return this.segments.join(".")}},je=e=>{const i=e;if(!/^[a-zA-Z0-9.-]*$/.test(i))throw new ae("Disallowed characters in NSID (ASCII letters, digits, dashes, periods only)");if(i.length>317)throw new ae("NSID is too long (317 chars max)");const r=i.split(".");if(r.length<3)throw new ae("NSID needs at least three parts");for(let n=0;n<r.length;n++){const s=r[n];if(s.length<1)throw new ae("NSID parts can not be empty");if(s.length>63)throw new ae("NSID part too long (max 63 chars)");if(s.endsWith("-")||s.startsWith("-"))throw new ae("NSID parts can not start or end with hyphen");if(/^[0-9]/.test(s)&&n==0)throw new ae("NSID first part may not start with a digit");if(!/^[a-zA-Z]+$/.test(s)&&n+1==r.length)throw new ae("NSID name part must be only letters")}},ae=class extends Error{},Ye=e=>{const i=e.split("#");if(i.length>2)throw new Error('ATURI can have at most one "#", separating fragment out');const r=i[1]||null;if(e=i[0],!/^[a-zA-Z0-9._~:@!$&')(*+,;=%/-]*$/.test(e))throw new Error("Disallowed characters in ATURI (ASCII)");const n=e.split("/");if(n.length>=3&&(n[0]!="at:"||n[1].length!=0))throw new Error('ATURI must start with "at://"');if(n.length<3)throw new Error("ATURI requires at least method and authority sections");try{n[2].startsWith("did:")?Pe(n[2]):Qe(n[2])}catch{throw new Error("ATURI authority must be a valid handle or DID")}if(n.length>=4){if(n[3].length==0)throw new Error("ATURI can not have a slash after authority without a path segment");try{je(n[3])}catch{throw new Error("ATURI requires first path segment (if supplied) to be valid NSID")}}if(n.length>=5&&n[4].length==0)throw new Error("ATURI can not have a slash after collection, unless record key is provided");if(n.length>=6)throw new Error("ATURI path can have at most two parts, and no trailing slash");if(i.length>=2&&r==null)throw new Error("ATURI fragment must be non-empty and start with slash");if(r!=null){if(r.length==0||r[0]!="/")throw new Error("ATURI fragment must be non-empty and start with slash");if(!/^\/[a-zA-Z0-9._~:@!$&')(*+,;=%[\]/-]*$/.test(r))throw new Error("Disallowed characters in ATURI fragment (ASCII)")}if(e.length>8*1024)throw new Error("ATURI is far too long")},pr=/^(at:\/\/)?((?:did:[a-z0-9:%-]+)|(?:[a-z0-9][a-z0-9.:-]*))(\/[^?#\s]*)?(\?[^#\s]+)?(#[^\s]+)?$/i,ur=/^(\/[^?#\s]*)?(\?[^#\s]+)?(#[^\s]+)?$/i,ce=class{constructor(e,i){let r;if(i){if(r=St(i),!r)throw new Error(`Invalid at uri: ${i}`);const n=fr(e);if(!n)throw new Error(`Invalid path: ${e}`);Object.assign(r,n)}else if(r=St(e),!r)throw new Error(`Invalid at uri: ${e}`);this.hash=r.hash,this.host=r.host,this.pathname=r.pathname,this.searchParams=r.searchParams}static make(e,i,r){let n=e;return i&&(n+="/"+i),r&&(n+="/"+r),new ce(n)}get protocol(){return"at:"}get origin(){return`at://${this.host}`}get hostname(){return this.host}set hostname(e){this.host=e}get search(){return this.searchParams.toString()}set search(e){this.searchParams=new URLSearchParams(e)}get collection(){return this.pathname.split("/").filter(Boolean)[0]||""}set collection(e){const i=this.pathname.split("/").filter(Boolean);i[0]=e,this.pathname=i.join("/")}get rkey(){return this.pathname.split("/").filter(Boolean)[1]||""}set rkey(e){const i=this.pathname.split("/").filter(Boolean);i[0]||(i[0]="undefined"),i[1]=e,this.pathname=i.join("/")}get href(){return this.toString()}toString(){let e=this.pathname||"/";e.startsWith("/")||(e=`/${e}`);let i=this.searchParams.toString();i&&!i.startsWith("?")&&(i=`?${i}`);let r=this.hash;return r&&!r.startsWith("#")&&(r=`#${r}`),`at://${this.host}${e}${i}${r}`}};function St(e){const i=pr.exec(e);if(i)return{hash:i[5]||"",host:i[2]||"",pathname:i[3]||"",searchParams:new URLSearchParams(i[4]||"")}}function fr(e){const i=ur.exec(e);if(i)return{hash:i[3]||"",pathname:i[1]||"",searchParams:new URLSearchParams(i[2]||"")}}var D;(function(e){e.assertEqual=s=>s;function i(s){}e.assertIs=i;function r(s){throw new Error}e.assertNever=r,e.arrayToEnum=s=>{const a={};for(const t of s)a[t]=t;return a},e.getValidEnumValues=s=>{const a=e.objectKeys(s).filter(l=>typeof s[s[l]]!="number"),t={};for(const l of a)t[l]=s[l];return e.objectValues(t)},e.objectValues=s=>e.objectKeys(s).map(function(a){return s[a]}),e.objectKeys=typeof Object.keys=="function"?s=>Object.keys(s):s=>{const a=[];for(const t in s)Object.prototype.hasOwnProperty.call(s,t)&&a.push(t);return a},e.find=(s,a)=>{for(const t of s)if(a(t))return t},e.isInteger=typeof Number.isInteger=="function"?s=>Number.isInteger(s):s=>typeof s=="number"&&isFinite(s)&&Math.floor(s)===s;function n(s,a=" | "){return s.map(t=>typeof t=="string"?`'${t}'`:t).join(a)}e.joinValues=n,e.jsonStringifyReplacer=(s,a)=>typeof a=="bigint"?a.toString():a})(D||(D={}));var et;(function(e){e.mergeShapes=(i,r)=>({...i,...r})})(et||(et={}));var L=D.arrayToEnum(["string","nan","number","integer","float","boolean","date","bigint","symbol","function","undefined","null","array","object","unknown","promise","void","never","map","set"]),de=e=>{switch(typeof e){case"undefined":return L.undefined;case"string":return L.string;case"number":return isNaN(e)?L.nan:L.number;case"boolean":return L.boolean;case"function":return L.function;case"bigint":return L.bigint;case"symbol":return L.symbol;case"object":return Array.isArray(e)?L.array:e===null?L.null:e.then&&typeof e.then=="function"&&e.catch&&typeof e.catch=="function"?L.promise:typeof Map<"u"&&e instanceof Map?L.map:typeof Set<"u"&&e instanceof Set?L.set:typeof Date<"u"&&e instanceof Date?L.date:L.object;default:return L.unknown}},o=D.arrayToEnum(["invalid_type","invalid_literal","custom","invalid_union","invalid_union_discriminator","invalid_enum_value","unrecognized_keys","invalid_arguments","invalid_return_type","invalid_date","invalid_string","too_small","too_big","invalid_intersection_types","not_multiple_of","not_finite"]),E=e=>JSON.stringify(e,null,2).replace(/"([^"]+)":/g,"$1:"),R=class extends Error{constructor(e){super(),this.issues=[],this.addIssue=r=>{this.issues=[...this.issues,r]},this.addIssues=(r=[])=>{this.issues=[...this.issues,...r]};const i=new.target.prototype;Object.setPrototypeOf?Object.setPrototypeOf(this,i):this.__proto__=i,this.name="ZodError",this.issues=e}get errors(){return this.issues}format(e){const i=e||function(s){return s.message},r={_errors:[]},n=s=>{for(const a of s.issues)if(a.code==="invalid_union")a.unionErrors.map(n);else if(a.code==="invalid_return_type")n(a.returnTypeError);else if(a.code==="invalid_arguments")n(a.argumentsError);else if(a.path.length===0)r._errors.push(i(a));else{let t=r,l=0;for(;l<a.path.length;){const u=a.path[l];l===a.path.length-1?(t[u]=t[u]||{_errors:[]},t[u]._errors.push(i(a))):t[u]=t[u]||{_errors:[]},t=t[u],l++}}};return n(this),r}toString(){return this.message}get message(){return JSON.stringify(this.issues,D.jsonStringifyReplacer,2)}get isEmpty(){return this.issues.length===0}flatten(e=i=>i.message){const i={},r=[];for(const n of this.issues)n.path.length>0?(i[n.path[0]]=i[n.path[0]]||[],i[n.path[0]].push(e(n))):r.push(e(n));return{formErrors:r,fieldErrors:i}}get formErrors(){return this.flatten()}};R.create=e=>new R(e);var T=(e,i)=>{let r;switch(e.code){case o.invalid_type:e.received===L.undefined?r="Required":r=`Expected ${e.expected}, received ${e.received}`;break;case o.invalid_literal:r=`Invalid literal value, expected ${JSON.stringify(e.expected,D.jsonStringifyReplacer)}`;break;case o.unrecognized_keys:r=`Unrecognized key(s) in object: ${D.joinValues(e.keys,", ")}`;break;case o.invalid_union:r="Invalid input";break;case o.invalid_union_discriminator:r=`Invalid discriminator value. Expected ${D.joinValues(e.options)}`;break;case o.invalid_enum_value:r=`Invalid enum value. Expected ${D.joinValues(e.options)}, received '${e.received}'`;break;case o.invalid_arguments:r="Invalid function arguments";break;case o.invalid_return_type:r="Invalid function return type";break;case o.invalid_date:r="Invalid date";break;case o.invalid_string:typeof e.validation=="object"?"includes"in e.validation?(r=`Invalid input: must include "${e.validation.includes}"`,typeof e.validation.position=="number"&&(r=`${r} at one or more positions greater than or equal to ${e.validation.position}`)):"startsWith"in e.validation?r=`Invalid input: must start with "${e.validation.startsWith}"`:"endsWith"in e.validation?r=`Invalid input: must end with "${e.validation.endsWith}"`:D.assertNever(e.validation):e.validation!=="regex"?r=`Invalid ${e.validation}`:r="Invalid";break;case o.too_small:e.type==="array"?r=`Array must contain ${e.exact?"exactly":e.inclusive?"at least":"more than"} ${e.minimum} element(s)`:e.type==="string"?r=`String must contain ${e.exact?"exactly":e.inclusive?"at least":"over"} ${e.minimum} character(s)`:e.type==="number"?r=`Number must be ${e.exact?"exactly equal to ":e.inclusive?"greater than or equal to ":"greater than "}${e.minimum}`:e.type==="date"?r=`Date must be ${e.exact?"exactly equal to ":e.inclusive?"greater than or equal to ":"greater than "}${new Date(Number(e.minimum))}`:r="Invalid input";break;case o.too_big:e.type==="array"?r=`Array must contain ${e.exact?"exactly":e.inclusive?"at most":"less than"} ${e.maximum} element(s)`:e.type==="string"?r=`String must contain ${e.exact?"exactly":e.inclusive?"at most":"under"} ${e.maximum} character(s)`:e.type==="number"?r=`Number must be ${e.exact?"exactly":e.inclusive?"less than or equal to":"less than"} ${e.maximum}`:e.type==="bigint"?r=`BigInt must be ${e.exact?"exactly":e.inclusive?"less than or equal to":"less than"} ${e.maximum}`:e.type==="date"?r=`Date must be ${e.exact?"exactly":e.inclusive?"smaller than or equal to":"smaller than"} ${new Date(Number(e.maximum))}`:r="Invalid input";break;case o.custom:r="Invalid input";break;case o.invalid_intersection_types:r="Intersection results could not be merged";break;case o.not_multiple_of:r=`Number must be a multiple of ${e.multipleOf}`;break;case o.not_finite:r="Number must be finite";break;default:r=i.defaultError,D.assertNever(e)}return{message:r}},k=T;function q(e){k=e}function z(){return k}var me=e=>{const{data:i,path:r,errorMaps:n,issueData:s}=e,a=[...r,...s.path||[]],t={...s,path:a};let l="";const u=n.filter(y=>!!y).slice().reverse();for(const y of u)l=y(t,{data:i,defaultError:l}).message;return{...s,path:a,message:s.message||l}},cr=[];function C(e,i){const r=me({issueData:i,data:e.data,path:e.path,errorMaps:[e.common.contextualErrorMap,e.schemaErrorMap,z(),T].filter(n=>!!n)});e.common.issues.push(r)}var X=class{constructor(){this.value="valid"}dirty(){this.value==="valid"&&(this.value="dirty")}abort(){this.value!=="aborted"&&(this.value="aborted")}static mergeArray(e,i){const r=[];for(const n of i){if(n.status==="aborted")return S;n.status==="dirty"&&e.dirty(),r.push(n.value)}return{status:e.value,value:r}}static async mergeObjectAsync(e,i){const r=[];for(const n of i)r.push({key:await n.key,value:await n.value});return X.mergeObjectSync(e,r)}static mergeObjectSync(e,i){const r={};for(const n of i){const{key:s,value:a}=n;if(s.status==="aborted"||a.status==="aborted")return S;s.status==="dirty"&&e.dirty(),a.status==="dirty"&&e.dirty(),(typeof a.value<"u"||n.alwaysSet)&&(r[s.value]=a.value)}return{status:e.value,value:r}}},S=Object.freeze({status:"aborted"}),se=e=>({status:"dirty",value:e}),F=e=>({status:"valid",value:e}),tt=e=>e.status==="aborted",dr=e=>e.status==="dirty",wt=e=>e.status==="valid",Bt=e=>typeof Promise<"u"&&e instanceof Promise,_;(function(e){e.errToObj=i=>typeof i=="string"?{message:i}:i||{},e.toString=i=>typeof i=="string"?i:i==null?void 0:i.message})(_||(_={}));var ye=class{constructor(e,i,r,n){this._cachedPath=[],this.parent=e,this.data=i,this._path=r,this._key=n}get path(){return this._cachedPath.length||(this._key instanceof Array?this._cachedPath.push(...this._path,...this._key):this._cachedPath.push(...this._path,this._key)),this._cachedPath}},Mr=(e,i)=>{if(wt(i))return{success:!0,data:i.value};if(!e.common.issues.length)throw new Error("Validation failed but no issues detected.");return{success:!1,get error(){if(this._error)return this._error;const r=new R(e.common.issues);return this._error=r,this._error}}};function x(e){if(!e)return{};const{errorMap:i,invalid_type_error:r,required_error:n,description:s}=e;if(i&&(r||n))throw new Error(`Can't use "invalid_type_error" or "required_error" in conjunction with custom error map.`);return i?{errorMap:i,description:s}:{errorMap:(t,l)=>t.code!=="invalid_type"?{message:l.defaultError}:typeof l.data>"u"?{message:n??l.defaultError}:{message:r??l.defaultError},description:s}}var V=class{constructor(e){this.spa=this.safeParseAsync,this._def=e,this.parse=this.parse.bind(this),this.safeParse=this.safeParse.bind(this),this.parseAsync=this.parseAsync.bind(this),this.safeParseAsync=this.safeParseAsync.bind(this),this.spa=this.spa.bind(this),this.refine=this.refine.bind(this),this.refinement=this.refinement.bind(this),this.superRefine=this.superRefine.bind(this),this.optional=this.optional.bind(this),this.nullable=this.nullable.bind(this),this.nullish=this.nullish.bind(this),this.array=this.array.bind(this),this.promise=this.promise.bind(this),this.or=this.or.bind(this),this.and=this.and.bind(this),this.transform=this.transform.bind(this),this.brand=this.brand.bind(this),this.default=this.default.bind(this),this.catch=this.catch.bind(this),this.describe=this.describe.bind(this),this.pipe=this.pipe.bind(this),this.isNullable=this.isNullable.bind(this),this.isOptional=this.isOptional.bind(this)}get description(){return this._def.description}_getType(e){return de(e.data)}_getOrReturnCtx(e,i){return i||{common:e.parent.common,data:e.data,parsedType:de(e.data),schemaErrorMap:this._def.errorMap,path:e.path,parent:e.parent}}_processInputParams(e){return{status:new X,ctx:{common:e.parent.common,data:e.data,parsedType:de(e.data),schemaErrorMap:this._def.errorMap,path:e.path,parent:e.parent}}}_parseSync(e){const i=this._parse(e);if(Bt(i))throw new Error("Synchronous parse encountered promise.");return i}_parseAsync(e){const i=this._parse(e);return Promise.resolve(i)}parse(e,i){const r=this.safeParse(e,i);if(r.success)return r.data;throw r.error}safeParse(e,i){var r;const n={common:{issues:[],async:(r=i==null?void 0:i.async)!==null&&r!==void 0?r:!1,contextualErrorMap:i==null?void 0:i.errorMap},path:(i==null?void 0:i.path)||[],schemaErrorMap:this._def.errorMap,parent:null,data:e,parsedType:de(e)},s=this._parseSync({data:e,path:n.path,parent:n});return Mr(n,s)}async parseAsync(e,i){const r=await this.safeParseAsync(e,i);if(r.success)return r.data;throw r.error}async safeParseAsync(e,i){const r={common:{issues:[],contextualErrorMap:i==null?void 0:i.errorMap,async:!0},path:(i==null?void 0:i.path)||[],schemaErrorMap:this._def.errorMap,parent:null,data:e,parsedType:de(e)},n=this._parse({data:e,path:r.path,parent:r}),s=await(Bt(n)?n:Promise.resolve(n));return Mr(r,s)}refine(e,i){const r=n=>typeof i=="string"||typeof i>"u"?{message:i}:typeof i=="function"?i(n):i;return this._refinement((n,s)=>{const a=e(n),t=()=>s.addIssue({code:o.custom,...r(n)});return typeof Promise<"u"&&a instanceof Promise?a.then(l=>l?!0:(t(),!1)):a?!0:(t(),!1)})}refinement(e,i){return this._refinement((r,n)=>e(r)?!0:(n.addIssue(typeof i=="function"?i(r,n):i),!1))}_refinement(e){return new oe({schema:this,typeName:w.ZodEffects,effect:{type:"refinement",refinement:e}})}superRefine(e){return this._refinement(e)}optional(){return Le.create(this,this._def)}nullable(){return Ue.create(this,this._def)}nullish(){return this.nullable().optional()}array(){return he.create(this,this._def)}promise(){return Oe.create(this,this._def)}or(e){return st.create([this,e],this._def)}and(e){return at.create(this,e,this._def)}transform(e){return new oe({...x(this._def),schema:this,typeName:w.ZodEffects,effect:{type:"transform",transform:e}})}default(e){const i=typeof e=="function"?e:()=>e;return new ft({...x(this._def),innerType:this,defaultValue:i,typeName:w.ZodDefault})}brand(){return new Or({typeName:w.ZodBranded,type:this,...x(this._def)})}catch(e){const i=typeof e=="function"?e:()=>e;return new Dt({...x(this._def),innerType:this,catchValue:i,typeName:w.ZodCatch})}describe(e){const i=this.constructor;return new i({...this._def,description:e})}pipe(e){return Pt.create(this,e)}isOptional(){return this.safeParse(void 0).success}isNullable(){return this.safeParse(null).success}},Cp=/^c[^\s-]{8,}$/i,_p=/^[a-z][a-z0-9]*$/,Sp=/[0-9A-HJKMNP-TV-Z]{26}/,wp=/^([a-f0-9]{8}-[a-f0-9]{4}-[1-5][a-f0-9]{3}-[a-f0-9]{4}-[a-f0-9]{12}|00000000-0000-0000-0000-000000000000)$/i,Bp=/^(([^<>()[\]\\.,;:\s@\"]+(\.[^<>()[\]\\.,;:\s@\"]+)*)|(\".+\"))@((\[(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\])|(\[IPv6:(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))\])|([A-Za-z0-9]([A-Za-z0-9-]*[A-Za-z0-9])*(\.[A-Za-z]{2,})+))$/,kp=new RegExp("^(\\p{Extended_Pictographic}|\\p{Emoji_Component})+$","u"),xp=/^(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))$/,Kp=/^(([a-f0-9]{1,4}:){7}|::([a-f0-9]{1,4}:){0,6}|([a-f0-9]{1,4}:){1}:([a-f0-9]{1,4}:){0,5}|([a-f0-9]{1,4}:){2}:([a-f0-9]{1,4}:){0,4}|([a-f0-9]{1,4}:){3}:([a-f0-9]{1,4}:){0,3}|([a-f0-9]{1,4}:){4}:([a-f0-9]{1,4}:){0,2}|([a-f0-9]{1,4}:){5}:([a-f0-9]{1,4}:){0,1})([a-f0-9]{1,4}|(((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2}))\.){3}((25[0-5])|(2[0-4][0-9])|(1[0-9]{2})|([0-9]{1,2})))$/,Up=e=>e.precision?e.offset?new RegExp(`^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{${e.precision}}(([+-]\\d{2}(:?\\d{2})?)|Z)$`):new RegExp(`^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d{${e.precision}}Z$`):e.precision===0?e.offset?new RegExp("^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(([+-]\\d{2}(:?\\d{2})?)|Z)$"):new RegExp("^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}Z$"):e.offset?new RegExp("^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?(([+-]\\d{2}(:?\\d{2})?)|Z)$"):new RegExp("^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(\\.\\d+)?Z$");function Vp(e,i){return!!((i==="v4"||!i)&&xp.test(e)||(i==="v6"||!i)&&Kp.test(e))}var Ee=class extends V{constructor(){super(...arguments),this._regex=(e,i,r)=>this.refinement(n=>e.test(n),{validation:i,code:o.invalid_string,..._.errToObj(r)}),this.nonempty=e=>this.min(1,_.errToObj(e)),this.trim=()=>new Ee({...this._def,checks:[...this._def.checks,{kind:"trim"}]}),this.toLowerCase=()=>new Ee({...this._def,checks:[...this._def.checks,{kind:"toLowerCase"}]}),this.toUpperCase=()=>new Ee({...this._def,checks:[...this._def.checks,{kind:"toUpperCase"}]})}_parse(e){if(this._def.coerce&&(e.data=String(e.data)),this._getType(e)!==L.string){const s=this._getOrReturnCtx(e);return C(s,{code:o.invalid_type,expected:L.string,received:s.parsedType}),S}const r=new X;let n;for(const s of this._def.checks)if(s.kind==="min")e.data.length<s.value&&(n=this._getOrReturnCtx(e,n),C(n,{code:o.too_small,minimum:s.value,type:"string",inclusive:!0,exact:!1,message:s.message}),r.dirty());else if(s.kind==="max")e.data.length>s.value&&(n=this._getOrReturnCtx(e,n),C(n,{code:o.too_big,maximum:s.value,type:"string",inclusive:!0,exact:!1,message:s.message}),r.dirty());else if(s.kind==="length"){const a=e.data.length>s.value,t=e.data.length<s.value;(a||t)&&(n=this._getOrReturnCtx(e,n),a?C(n,{code:o.too_big,maximum:s.value,type:"string",inclusive:!0,exact:!0,message:s.message}):t&&C(n,{code:o.too_small,minimum:s.value,type:"string",inclusive:!0,exact:!0,message:s.message}),r.dirty())}else if(s.kind==="email")Bp.test(e.data)||(n=this._getOrReturnCtx(e,n),C(n,{validation:"email",code:o.invalid_string,message:s.message}),r.dirty());else if(s.kind==="emoji")kp.test(e.data)||(n=this._getOrReturnCtx(e,n),C(n,{validation:"emoji",code:o.invalid_string,message:s.message}),r.dirty());else if(s.kind==="uuid")wp.test(e.data)||(n=this._getOrReturnCtx(e,n),C(n,{validation:"uuid",code:o.invalid_string,message:s.message}),r.dirty());else if(s.kind==="cuid")Cp.test(e.data)||(n=this._getOrReturnCtx(e,n),C(n,{validation:"cuid",code:o.invalid_string,message:s.message}),r.dirty());else if(s.kind==="cuid2")_p.test(e.data)||(n=this._getOrReturnCtx(e,n),C(n,{validation:"cuid2",code:o.invalid_string,message:s.message}),r.dirty());else if(s.kind==="ulid")Sp.test(e.data)||(n=this._getOrReturnCtx(e,n),C(n,{validation:"ulid",code:o.invalid_string,message:s.message}),r.dirty());else if(s.kind==="url")try{new URL(e.data)}catch{n=this._getOrReturnCtx(e,n),C(n,{validation:"url",code:o.invalid_string,message:s.message}),r.dirty()}else s.kind==="regex"?(s.regex.lastIndex=0,s.regex.test(e.data)||(n=this._getOrReturnCtx(e,n),C(n,{validation:"regex",code:o.invalid_string,message:s.message}),r.dirty())):s.kind==="trim"?e.data=e.data.trim():s.kind==="includes"?e.data.includes(s.value,s.position)||(n=this._getOrReturnCtx(e,n),C(n,{code:o.invalid_string,validation:{includes:s.value,position:s.position},message:s.message}),r.dirty()):s.kind==="toLowerCase"?e.data=e.data.toLowerCase():s.kind==="toUpperCase"?e.data=e.data.toUpperCase():s.kind==="startsWith"?e.data.startsWith(s.value)||(n=this._getOrReturnCtx(e,n),C(n,{code:o.invalid_string,validation:{startsWith:s.value},message:s.message}),r.dirty()):s.kind==="endsWith"?e.data.endsWith(s.value)||(n=this._getOrReturnCtx(e,n),C(n,{code:o.invalid_string,validation:{endsWith:s.value},message:s.message}),r.dirty()):s.kind==="datetime"?Up(s).test(e.data)||(n=this._getOrReturnCtx(e,n),C(n,{code:o.invalid_string,validation:"datetime",message:s.message}),r.dirty()):s.kind==="ip"?Vp(e.data,s.version)||(n=this._getOrReturnCtx(e,n),C(n,{validation:"ip",code:o.invalid_string,message:s.message}),r.dirty()):D.assertNever(s);return{status:r.value,value:e.data}}_addCheck(e){return new Ee({...this._def,checks:[...this._def.checks,e]})}email(e){return this._addCheck({kind:"email",..._.errToObj(e)})}url(e){return this._addCheck({kind:"url",..._.errToObj(e)})}emoji(e){return this._addCheck({kind:"emoji",..._.errToObj(e)})}uuid(e){return this._addCheck({kind:"uuid",..._.errToObj(e)})}cuid(e){return this._addCheck({kind:"cuid",..._.errToObj(e)})}cuid2(e){return this._addCheck({kind:"cuid2",..._.errToObj(e)})}ulid(e){return this._addCheck({kind:"ulid",..._.errToObj(e)})}ip(e){return this._addCheck({kind:"ip",..._.errToObj(e)})}datetime(e){var i;return typeof e=="string"?this._addCheck({kind:"datetime",precision:null,offset:!1,message:e}):this._addCheck({kind:"datetime",precision:typeof(e==null?void 0:e.precision)>"u"?null:e==null?void 0:e.precision,offset:(i=e==null?void 0:e.offset)!==null&&i!==void 0?i:!1,..._.errToObj(e==null?void 0:e.message)})}regex(e,i){return this._addCheck({kind:"regex",regex:e,..._.errToObj(i)})}includes(e,i){return this._addCheck({kind:"includes",value:e,position:i==null?void 0:i.position,..._.errToObj(i==null?void 0:i.message)})}startsWith(e,i){return this._addCheck({kind:"startsWith",value:e,..._.errToObj(i)})}endsWith(e,i){return this._addCheck({kind:"endsWith",value:e,..._.errToObj(i)})}min(e,i){return this._addCheck({kind:"min",value:e,..._.errToObj(i)})}max(e,i){return this._addCheck({kind:"max",value:e,..._.errToObj(i)})}length(e,i){return this._addCheck({kind:"length",value:e,..._.errToObj(i)})}get isDatetime(){return!!this._def.checks.find(e=>e.kind==="datetime")}get isEmail(){return!!this._def.checks.find(e=>e.kind==="email")}get isURL(){return!!this._def.checks.find(e=>e.kind==="url")}get isEmoji(){return!!this._def.checks.find(e=>e.kind==="emoji")}get isUUID(){return!!this._def.checks.find(e=>e.kind==="uuid")}get isCUID(){return!!this._def.checks.find(e=>e.kind==="cuid")}get isCUID2(){return!!this._def.checks.find(e=>e.kind==="cuid2")}get isULID(){return!!this._def.checks.find(e=>e.kind==="ulid")}get isIP(){return!!this._def.checks.find(e=>e.kind==="ip")}get minLength(){let e=null;for(const i of this._def.checks)i.kind==="min"&&(e===null||i.value>e)&&(e=i.value);return e}get maxLength(){let e=null;for(const i of this._def.checks)i.kind==="max"&&(e===null||i.value<e)&&(e=i.value);return e}};Ee.create=e=>{var i;return new Ee({checks:[],typeName:w.ZodString,coerce:(i=e==null?void 0:e.coerce)!==null&&i!==void 0?i:!1,...x(e)})};function Dp(e,i){const r=(e.toString().split(".")[1]||"").length,n=(i.toString().split(".")[1]||"").length,s=r>n?r:n,a=parseInt(e.toFixed(s).replace(".","")),t=parseInt(i.toFixed(s).replace(".",""));return a%t/Math.pow(10,s)}var Be=class extends V{constructor(){super(...arguments),this.min=this.gte,this.max=this.lte,this.step=this.multipleOf}_parse(e){if(this._def.coerce&&(e.data=Number(e.data)),this._getType(e)!==L.number){const s=this._getOrReturnCtx(e);return C(s,{code:o.invalid_type,expected:L.number,received:s.parsedType}),S}let r;const n=new X;for(const s of this._def.checks)s.kind==="int"?D.isInteger(e.data)||(r=this._getOrReturnCtx(e,r),C(r,{code:o.invalid_type,expected:"integer",received:"float",message:s.message}),n.dirty()):s.kind==="min"?(s.inclusive?e.data<s.value:e.data<=s.value)&&(r=this._getOrReturnCtx(e,r),C(r,{code:o.too_small,minimum:s.value,type:"number",inclusive:s.inclusive,exact:!1,message:s.message}),n.dirty()):s.kind==="max"?(s.inclusive?e.data>s.value:e.data>=s.value)&&(r=this._getOrReturnCtx(e,r),C(r,{code:o.too_big,maximum:s.value,type:"number",inclusive:s.inclusive,exact:!1,message:s.message}),n.dirty()):s.kind==="multipleOf"?Dp(e.data,s.value)!==0&&(r=this._getOrReturnCtx(e,r),C(r,{code:o.not_multiple_of,multipleOf:s.value,message:s.message}),n.dirty()):s.kind==="finite"?Number.isFinite(e.data)||(r=this._getOrReturnCtx(e,r),C(r,{code:o.not_finite,message:s.message}),n.dirty()):D.assertNever(s);return{status:n.value,value:e.data}}gte(e,i){return this.setLimit("min",e,!0,_.toString(i))}gt(e,i){return this.setLimit("min",e,!1,_.toString(i))}lte(e,i){return this.setLimit("max",e,!0,_.toString(i))}lt(e,i){return this.setLimit("max",e,!1,_.toString(i))}setLimit(e,i,r,n){return new Be({...this._def,checks:[...this._def.checks,{kind:e,value:i,inclusive:r,message:_.toString(n)}]})}_addCheck(e){return new Be({...this._def,checks:[...this._def.checks,e]})}int(e){return this._addCheck({kind:"int",message:_.toString(e)})}positive(e){return this._addCheck({kind:"min",value:0,inclusive:!1,message:_.toString(e)})}negative(e){return this._addCheck({kind:"max",value:0,inclusive:!1,message:_.toString(e)})}nonpositive(e){return this._addCheck({kind:"max",value:0,inclusive:!0,message:_.toString(e)})}nonnegative(e){return this._addCheck({kind:"min",value:0,inclusive:!0,message:_.toString(e)})}multipleOf(e,i){return this._addCheck({kind:"multipleOf",value:e,message:_.toString(i)})}finite(e){return this._addCheck({kind:"finite",message:_.toString(e)})}safe(e){return this._addCheck({kind:"min",inclusive:!0,value:Number.MIN_SAFE_INTEGER,message:_.toString(e)})._addCheck({kind:"max",inclusive:!0,value:Number.MAX_SAFE_INTEGER,message:_.toString(e)})}get minValue(){let e=null;for(const i of this._def.checks)i.kind==="min"&&(e===null||i.value>e)&&(e=i.value);return e}get maxValue(){let e=null;for(const i of this._def.checks)i.kind==="max"&&(e===null||i.value<e)&&(e=i.value);return e}get isInt(){return!!this._def.checks.find(e=>e.kind==="int"||e.kind==="multipleOf"&&D.isInteger(e.value))}get isFinite(){let e=null,i=null;for(const r of this._def.checks){if(r.kind==="finite"||r.kind==="int"||r.kind==="multipleOf")return!0;r.kind==="min"?(i===null||r.value>i)&&(i=r.value):r.kind==="max"&&(e===null||r.value<e)&&(e=r.value)}return Number.isFinite(i)&&Number.isFinite(e)}};Be.create=e=>new Be({checks:[],typeName:w.ZodNumber,coerce:(e==null?void 0:e.coerce)||!1,...x(e)});var ke=class extends V{constructor(){super(...arguments),this.min=this.gte,this.max=this.lte}_parse(e){if(this._def.coerce&&(e.data=BigInt(e.data)),this._getType(e)!==L.bigint){const s=this._getOrReturnCtx(e);return C(s,{code:o.invalid_type,expected:L.bigint,received:s.parsedType}),S}let r;const n=new X;for(const s of this._def.checks)s.kind==="min"?(s.inclusive?e.data<s.value:e.data<=s.value)&&(r=this._getOrReturnCtx(e,r),C(r,{code:o.too_small,type:"bigint",minimum:s.value,inclusive:s.inclusive,message:s.message}),n.dirty()):s.kind==="max"?(s.inclusive?e.data>s.value:e.data>=s.value)&&(r=this._getOrReturnCtx(e,r),C(r,{code:o.too_big,type:"bigint",maximum:s.value,inclusive:s.inclusive,message:s.message}),n.dirty()):s.kind==="multipleOf"?e.data%s.value!==BigInt(0)&&(r=this._getOrReturnCtx(e,r),C(r,{code:o.not_multiple_of,multipleOf:s.value,message:s.message}),n.dirty()):D.assertNever(s);return{status:n.value,value:e.data}}gte(e,i){return this.setLimit("min",e,!0,_.toString(i))}gt(e,i){return this.setLimit("min",e,!1,_.toString(i))}lte(e,i){return this.setLimit("max",e,!0,_.toString(i))}lt(e,i){return this.setLimit("max",e,!1,_.toString(i))}setLimit(e,i,r,n){return new ke({...this._def,checks:[...this._def.checks,{kind:e,value:i,inclusive:r,message:_.toString(n)}]})}_addCheck(e){return new ke({...this._def,checks:[...this._def.checks,e]})}positive(e){return this._addCheck({kind:"min",value:BigInt(0),inclusive:!1,message:_.toString(e)})}negative(e){return this._addCheck({kind:"max",value:BigInt(0),inclusive:!1,message:_.toString(e)})}nonpositive(e){return this._addCheck({kind:"max",value:BigInt(0),inclusive:!0,message:_.toString(e)})}nonnegative(e){return this._addCheck({kind:"min",value:BigInt(0),inclusive:!0,message:_.toString(e)})}multipleOf(e,i){return this._addCheck({kind:"multipleOf",value:e,message:_.toString(i)})}get minValue(){let e=null;for(const i of this._def.checks)i.kind==="min"&&(e===null||i.value>e)&&(e=i.value);return e}get maxValue(){let e=null;for(const i of this._def.checks)i.kind==="max"&&(e===null||i.value<e)&&(e=i.value);return e}};ke.create=e=>{var i;return new ke({checks:[],typeName:w.ZodBigInt,coerce:(i=e==null?void 0:e.coerce)!==null&&i!==void 0?i:!1,...x(e)})};var rt=class extends V{_parse(e){if(this._def.coerce&&(e.data=!!e.data),this._getType(e)!==L.boolean){const r=this._getOrReturnCtx(e);return C(r,{code:o.invalid_type,expected:L.boolean,received:r.parsedType}),S}return F(e.data)}};rt.create=e=>new rt({typeName:w.ZodBoolean,coerce:(e==null?void 0:e.coerce)||!1,...x(e)});var qe=class extends V{_parse(e){if(this._def.coerce&&(e.data=new Date(e.data)),this._getType(e)!==L.date){const s=this._getOrReturnCtx(e);return C(s,{code:o.invalid_type,expected:L.date,received:s.parsedType}),S}if(isNaN(e.data.getTime())){const s=this._getOrReturnCtx(e);return C(s,{code:o.invalid_date}),S}const r=new X;let n;for(const s of this._def.checks)s.kind==="min"?e.data.getTime()<s.value&&(n=this._getOrReturnCtx(e,n),C(n,{code:o.too_small,message:s.message,inclusive:!0,exact:!1,minimum:s.value,type:"date"}),r.dirty()):s.kind==="max"?e.data.getTime()>s.value&&(n=this._getOrReturnCtx(e,n),C(n,{code:o.too_big,message:s.message,inclusive:!0,exact:!1,maximum:s.value,type:"date"}),r.dirty()):D.assertNever(s);return{status:r.value,value:new Date(e.data.getTime())}}_addCheck(e){return new qe({...this._def,checks:[...this._def.checks,e]})}min(e,i){return this._addCheck({kind:"min",value:e.getTime(),message:_.toString(i)})}max(e,i){return this._addCheck({kind:"max",value:e.getTime(),message:_.toString(i)})}get minDate(){let e=null;for(const i of this._def.checks)i.kind==="min"&&(e===null||i.value>e)&&(e=i.value);return e!=null?new Date(e):null}get maxDate(){let e=null;for(const i of this._def.checks)i.kind==="max"&&(e===null||i.value<e)&&(e=i.value);return e!=null?new Date(e):null}};qe.create=e=>new qe({checks:[],coerce:(e==null?void 0:e.coerce)||!1,typeName:w.ZodDate,...x(e)});var kt=class extends V{_parse(e){if(this._getType(e)!==L.symbol){const r=this._getOrReturnCtx(e);return C(r,{code:o.invalid_type,expected:L.symbol,received:r.parsedType}),S}return F(e.data)}};kt.create=e=>new kt({typeName:w.ZodSymbol,...x(e)});var it=class extends V{_parse(e){if(this._getType(e)!==L.undefined){const r=this._getOrReturnCtx(e);return C(r,{code:o.invalid_type,expected:L.undefined,received:r.parsedType}),S}return F(e.data)}};it.create=e=>new it({typeName:w.ZodUndefined,...x(e)});var nt=class extends V{_parse(e){if(this._getType(e)!==L.null){const r=this._getOrReturnCtx(e);return C(r,{code:o.invalid_type,expected:L.null,received:r.parsedType}),S}return F(e.data)}};nt.create=e=>new nt({typeName:w.ZodNull,...x(e)});var Fe=class extends V{constructor(){super(...arguments),this._any=!0}_parse(e){return F(e.data)}};Fe.create=e=>new Fe({typeName:w.ZodAny,...x(e)});var xe=class extends V{constructor(){super(...arguments),this._unknown=!0}_parse(e){return F(e.data)}};xe.create=e=>new xe({typeName:w.ZodUnknown,...x(e)});var Te=class extends V{_parse(e){const i=this._getOrReturnCtx(e);return C(i,{code:o.invalid_type,expected:L.never,received:i.parsedType}),S}};Te.create=e=>new Te({typeName:w.ZodNever,...x(e)});var xt=class extends V{_parse(e){if(this._getType(e)!==L.undefined){const r=this._getOrReturnCtx(e);return C(r,{code:o.invalid_type,expected:L.void,received:r.parsedType}),S}return F(e.data)}};xt.create=e=>new xt({typeName:w.ZodVoid,...x(e)});var he=class extends V{_parse(e){const{ctx:i,status:r}=this._processInputParams(e),n=this._def;if(i.parsedType!==L.array)return C(i,{code:o.invalid_type,expected:L.array,received:i.parsedType}),S;if(n.exactLength!==null){const a=i.data.length>n.exactLength.value,t=i.data.length<n.exactLength.value;(a||t)&&(C(i,{code:a?o.too_big:o.too_small,minimum:t?n.exactLength.value:void 0,maximum:a?n.exactLength.value:void 0,type:"array",inclusive:!0,exact:!0,message:n.exactLength.message}),r.dirty())}if(n.minLength!==null&&i.data.length<n.minLength.value&&(C(i,{code:o.too_small,minimum:n.minLength.value,type:"array",inclusive:!0,exact:!1,message:n.minLength.message}),r.dirty()),n.maxLength!==null&&i.data.length>n.maxLength.value&&(C(i,{code:o.too_big,maximum:n.maxLength.value,type:"array",inclusive:!0,exact:!1,message:n.maxLength.message}),r.dirty()),i.common.async)return Promise.all([...i.data].map((a,t)=>n.type._parseAsync(new ye(i,a,i.path,t)))).then(a=>X.mergeArray(r,a));const s=[...i.data].map((a,t)=>n.type._parseSync(new ye(i,a,i.path,t)));return X.mergeArray(r,s)}get element(){return this._def.type}min(e,i){return new he({...this._def,minLength:{value:e,message:_.toString(i)}})}max(e,i){return new he({...this._def,maxLength:{value:e,message:_.toString(i)}})}length(e,i){return new he({...this._def,exactLength:{value:e,message:_.toString(i)}})}nonempty(e){return this.min(1,e)}};he.create=(e,i)=>new he({type:e,minLength:null,maxLength:null,exactLength:null,typeName:w.ZodArray,...x(i)});function Me(e){if(e instanceof $){const i={};for(const r in e.shape){const n=e.shape[r];i[r]=Le.create(Me(n))}return new $({...e._def,shape:()=>i})}else return e instanceof he?new he({...e._def,type:Me(e.element)}):e instanceof Le?Le.create(Me(e.unwrap())):e instanceof Ue?Ue.create(Me(e.unwrap())):e instanceof ve?ve.create(e.items.map(i=>Me(i))):e}var $=class extends V{constructor(){super(...arguments),this._cached=null,this.nonstrict=this.passthrough,this.augment=this.extend}_getCached(){if(this._cached!==null)return this._cached;const e=this._def.shape(),i=D.objectKeys(e);return this._cached={shape:e,keys:i}}_parse(e){if(this._getType(e)!==L.object){const u=this._getOrReturnCtx(e);return C(u,{code:o.invalid_type,expected:L.object,received:u.parsedType}),S}const{status:r,ctx:n}=this._processInputParams(e),{shape:s,keys:a}=this._getCached(),t=[];if(!(this._def.catchall instanceof Te&&this._def.unknownKeys==="strip"))for(const u in n.data)a.includes(u)||t.push(u);const l=[];for(const u of a){const y=s[u],b=n.data[u];l.push({key:{status:"valid",value:u},value:y._parse(new ye(n,b,n.path,u)),alwaysSet:u in n.data})}if(this._def.catchall instanceof Te){const u=this._def.unknownKeys;if(u==="passthrough")for(const y of t)l.push({key:{status:"valid",value:y},value:{status:"valid",value:n.data[y]}});else if(u==="strict")t.length>0&&(C(n,{code:o.unrecognized_keys,keys:t}),r.dirty());else if(u!=="strip")throw new Error("Internal ZodObject error: invalid unknownKeys value.")}else{const u=this._def.catchall;for(const y of t){const b=n.data[y];l.push({key:{status:"valid",value:y},value:u._parse(new ye(n,b,n.path,y)),alwaysSet:y in n.data})}}return n.common.async?Promise.resolve().then(async()=>{const u=[];for(const y of l){const b=await y.key;u.push({key:b,value:await y.value,alwaysSet:y.alwaysSet})}return u}).then(u=>X.mergeObjectSync(r,u)):X.mergeObjectSync(r,l)}get shape(){return this._def.shape()}strict(e){return _.errToObj,new $({...this._def,unknownKeys:"strict",...e!==void 0?{errorMap:(i,r)=>{var n,s,a,t;const l=(a=(s=(n=this._def).errorMap)===null||s===void 0?void 0:s.call(n,i,r).message)!==null&&a!==void 0?a:r.defaultError;return i.code==="unrecognized_keys"?{message:(t=_.errToObj(e).message)!==null&&t!==void 0?t:l}:{message:l}}}:{}})}strip(){return new $({...this._def,unknownKeys:"strip"})}passthrough(){return new $({...this._def,unknownKeys:"passthrough"})}extend(e){return new $({...this._def,shape:()=>({...this._def.shape(),...e})})}merge(e){return new $({unknownKeys:e._def.unknownKeys,catchall:e._def.catchall,shape:()=>({...this._def.shape(),...e._def.shape()}),typeName:w.ZodObject})}setKey(e,i){return this.augment({[e]:i})}catchall(e){return new $({...this._def,catchall:e})}pick(e){const i={};return D.objectKeys(e).forEach(r=>{e[r]&&this.shape[r]&&(i[r]=this.shape[r])}),new $({...this._def,shape:()=>i})}omit(e){const i={};return D.objectKeys(this.shape).forEach(r=>{e[r]||(i[r]=this.shape[r])}),new $({...this._def,shape:()=>i})}deepPartial(){return Me(this)}partial(e){const i={};return D.objectKeys(this.shape).forEach(r=>{const n=this.shape[r];e&&!e[r]?i[r]=n:i[r]=n.optional()}),new $({...this._def,shape:()=>i})}required(e){const i={};return D.objectKeys(this.shape).forEach(r=>{if(e&&!e[r])i[r]=this.shape[r];else{let s=this.shape[r];for(;s instanceof Le;)s=s._def.innerType;i[r]=s}}),new $({...this._def,shape:()=>i})}keyof(){return $r(D.objectKeys(this.shape))}};$.create=(e,i)=>new $({shape:()=>e,unknownKeys:"strip",catchall:Te.create(),typeName:w.ZodObject,...x(i)}),$.strictCreate=(e,i)=>new $({shape:()=>e,unknownKeys:"strict",catchall:Te.create(),typeName:w.ZodObject,...x(i)}),$.lazycreate=(e,i)=>new $({shape:e,unknownKeys:"strip",catchall:Te.create(),typeName:w.ZodObject,...x(i)});var st=class extends V{_parse(e){const{ctx:i}=this._processInputParams(e),r=this._def.options;function n(s){for(const t of s)if(t.result.status==="valid")return t.result;for(const t of s)if(t.result.status==="dirty")return i.common.issues.push(...t.ctx.common.issues),t.result;const a=s.map(t=>new R(t.ctx.common.issues));return C(i,{code:o.invalid_union,unionErrors:a}),S}if(i.common.async)return Promise.all(r.map(async s=>{const a={...i,common:{...i.common,issues:[]},parent:null};return{result:await s._parseAsync({data:i.data,path:i.path,parent:a}),ctx:a}})).then(n);{let s;const a=[];for(const l of r){const u={...i,common:{...i.common,issues:[]},parent:null},y=l._parseSync({data:i.data,path:i.path,parent:u});if(y.status==="valid")return y;y.status==="dirty"&&!s&&(s={result:y,ctx:u}),u.common.issues.length&&a.push(u.common.issues)}if(s)return i.common.issues.push(...s.ctx.common.issues),s.result;const t=a.map(l=>new R(l));return C(i,{code:o.invalid_union,unionErrors:t}),S}}get options(){return this._def.options}};st.create=(e,i)=>new st({options:e,typeName:w.ZodUnion,...x(i)});var Kt=e=>e instanceof lt?Kt(e.schema):e instanceof oe?Kt(e.innerType()):e instanceof pt?[e.value]:e instanceof Ke?e.options:e instanceof ut?Object.keys(e.enum):e instanceof ft?Kt(e._def.innerType):e instanceof it?[void 0]:e instanceof nt?[null]:null,mr=class extends V{_parse(e){const{ctx:i}=this._processInputParams(e);if(i.parsedType!==L.object)return C(i,{code:o.invalid_type,expected:L.object,received:i.parsedType}),S;const r=this.discriminator,n=i.data[r],s=this.optionsMap.get(n);return s?i.common.async?s._parseAsync({data:i.data,path:i.path,parent:i}):s._parseSync({data:i.data,path:i.path,parent:i}):(C(i,{code:o.invalid_union_discriminator,options:Array.from(this.optionsMap.keys()),path:[r]}),S)}get discriminator(){return this._def.discriminator}get options(){return this._def.options}get optionsMap(){return this._def.optionsMap}static create(e,i,r){const n=new Map;for(const s of i){const a=Kt(s.shape[e]);if(!a)throw new Error(`A discriminator value for key \`${e}\` could not be extracted from all schema options`);for(const t of a){if(n.has(t))throw new Error(`Discriminator property ${String(e)} has duplicate value ${String(t)}`);n.set(t,s)}}return new mr({typeName:w.ZodDiscriminatedUnion,discriminator:e,options:i,optionsMap:n,...x(r)})}};function yr(e,i){const r=de(e),n=de(i);if(e===i)return{valid:!0,data:e};if(r===L.object&&n===L.object){const s=D.objectKeys(i),a=D.objectKeys(e).filter(l=>s.indexOf(l)!==-1),t={...e,...i};for(const l of a){const u=yr(e[l],i[l]);if(!u.valid)return{valid:!1};t[l]=u.data}return{valid:!0,data:t}}else if(r===L.array&&n===L.array){if(e.length!==i.length)return{valid:!1};const s=[];for(let a=0;a<e.length;a++){const t=e[a],l=i[a],u=yr(t,l);if(!u.valid)return{valid:!1};s.push(u.data)}return{valid:!0,data:s}}else return r===L.date&&n===L.date&&+e==+i?{valid:!0,data:e}:{valid:!1}}var at=class extends V{_parse(e){const{status:i,ctx:r}=this._processInputParams(e),n=(s,a)=>{if(tt(s)||tt(a))return S;const t=yr(s.value,a.value);return t.valid?((dr(s)||dr(a))&&i.dirty(),{status:i.value,value:t.data}):(C(r,{code:o.invalid_intersection_types}),S)};return r.common.async?Promise.all([this._def.left._parseAsync({data:r.data,path:r.path,parent:r}),this._def.right._parseAsync({data:r.data,path:r.path,parent:r})]).then(([s,a])=>n(s,a)):n(this._def.left._parseSync({data:r.data,path:r.path,parent:r}),this._def.right._parseSync({data:r.data,path:r.path,parent:r}))}};at.create=(e,i,r)=>new at({left:e,right:i,typeName:w.ZodIntersection,...x(r)});var ve=class extends V{_parse(e){const{status:i,ctx:r}=this._processInputParams(e);if(r.parsedType!==L.array)return C(r,{code:o.invalid_type,expected:L.array,received:r.parsedType}),S;if(r.data.length<this._def.items.length)return C(r,{code:o.too_small,minimum:this._def.items.length,inclusive:!0,exact:!1,type:"array"}),S;!this._def.rest&&r.data.length>this._def.items.length&&(C(r,{code:o.too_big,maximum:this._def.items.length,inclusive:!0,exact:!1,type:"array"}),i.dirty());const s=[...r.data].map((a,t)=>{const l=this._def.items[t]||this._def.rest;return l?l._parse(new ye(r,a,r.path,t)):null}).filter(a=>!!a);return r.common.async?Promise.all(s).then(a=>X.mergeArray(i,a)):X.mergeArray(i,s)}get items(){return this._def.items}rest(e){return new ve({...this._def,rest:e})}};ve.create=(e,i)=>{if(!Array.isArray(e))throw new Error("You must pass an array of schemas to z.tuple([ ... ])");return new ve({items:e,typeName:w.ZodTuple,rest:null,...x(i)})};var Ut=class extends V{get keySchema(){return this._def.keyType}get valueSchema(){return this._def.valueType}_parse(e){const{status:i,ctx:r}=this._processInputParams(e);if(r.parsedType!==L.object)return C(r,{code:o.invalid_type,expected:L.object,received:r.parsedType}),S;const n=[],s=this._def.keyType,a=this._def.valueType;for(const t in r.data)n.push({key:s._parse(new ye(r,t,r.path,t)),value:a._parse(new ye(r,r.data[t],r.path,t))});return r.common.async?X.mergeObjectAsync(i,n):X.mergeObjectSync(i,n)}get element(){return this._def.valueType}static create(e,i,r){return i instanceof V?new Ut({keyType:e,valueType:i,typeName:w.ZodRecord,...x(r)}):new Ut({keyType:Ee.create(),valueType:e,typeName:w.ZodRecord,...x(i)})}},Vt=class extends V{_parse(e){const{status:i,ctx:r}=this._processInputParams(e);if(r.parsedType!==L.map)return C(r,{code:o.invalid_type,expected:L.map,received:r.parsedType}),S;const n=this._def.keyType,s=this._def.valueType,a=[...r.data.entries()].map(([t,l],u)=>({key:n._parse(new ye(r,t,r.path,[u,"key"])),value:s._parse(new ye(r,l,r.path,[u,"value"]))}));if(r.common.async){const t=new Map;return Promise.resolve().then(async()=>{for(const l of a){const u=await l.key,y=await l.value;if(u.status==="aborted"||y.status==="aborted")return S;(u.status==="dirty"||y.status==="dirty")&&i.dirty(),t.set(u.value,y.value)}return{status:i.value,value:t}})}else{const t=new Map;for(const l of a){const u=l.key,y=l.value;if(u.status==="aborted"||y.status==="aborted")return S;(u.status==="dirty"||y.status==="dirty")&&i.dirty(),t.set(u.value,y.value)}return{status:i.value,value:t}}}};Vt.create=(e,i,r)=>new Vt({valueType:i,keyType:e,typeName:w.ZodMap,...x(r)});var $e=class extends V{_parse(e){const{status:i,ctx:r}=this._processInputParams(e);if(r.parsedType!==L.set)return C(r,{code:o.invalid_type,expected:L.set,received:r.parsedType}),S;const n=this._def;n.minSize!==null&&r.data.size<n.minSize.value&&(C(r,{code:o.too_small,minimum:n.minSize.value,type:"set",inclusive:!0,exact:!1,message:n.minSize.message}),i.dirty()),n.maxSize!==null&&r.data.size>n.maxSize.value&&(C(r,{code:o.too_big,maximum:n.maxSize.value,type:"set",inclusive:!0,exact:!1,message:n.maxSize.message}),i.dirty());const s=this._def.valueType;function a(l){const u=new Set;for(const y of l){if(y.status==="aborted")return S;y.status==="dirty"&&i.dirty(),u.add(y.value)}return{status:i.value,value:u}}const t=[...r.data.values()].map((l,u)=>s._parse(new ye(r,l,r.path,u)));return r.common.async?Promise.all(t).then(l=>a(l)):a(t)}min(e,i){return new $e({...this._def,minSize:{value:e,message:_.toString(i)}})}max(e,i){return new $e({...this._def,maxSize:{value:e,message:_.toString(i)}})}size(e,i){return this.min(e,i).max(e,i)}nonempty(e){return this.min(1,e)}};$e.create=(e,i)=>new $e({valueType:e,minSize:null,maxSize:null,typeName:w.ZodSet,...x(i)});var ot=class extends V{constructor(){super(...arguments),this.validate=this.implement}_parse(e){const{ctx:i}=this._processInputParams(e);if(i.parsedType!==L.function)return C(i,{code:o.invalid_type,expected:L.function,received:i.parsedType}),S;function r(t,l){return me({data:t,path:i.path,errorMaps:[i.common.contextualErrorMap,i.schemaErrorMap,z(),T].filter(u=>!!u),issueData:{code:o.invalid_arguments,argumentsError:l}})}function n(t,l){return me({data:t,path:i.path,errorMaps:[i.common.contextualErrorMap,i.schemaErrorMap,z(),T].filter(u=>!!u),issueData:{code:o.invalid_return_type,returnTypeError:l}})}const s={errorMap:i.common.contextualErrorMap},a=i.data;return this._def.returns instanceof Oe?F(async(...t)=>{const l=new R([]),u=await this._def.args.parseAsync(t,s).catch(A=>{throw l.addIssue(r(t,A)),l}),y=await a(...u);return await this._def.returns._def.type.parseAsync(y,s).catch(A=>{throw l.addIssue(n(y,A)),l})}):F((...t)=>{const l=this._def.args.safeParse(t,s);if(!l.success)throw new R([r(t,l.error)]);const u=a(...l.data),y=this._def.returns.safeParse(u,s);if(!y.success)throw new R([n(u,y.error)]);return y.data})}parameters(){return this._def.args}returnType(){return this._def.returns}args(...e){return new ot({...this._def,args:ve.create(e).rest(xe.create())})}returns(e){return new ot({...this._def,returns:e})}implement(e){return this.parse(e)}strictImplement(e){return this.parse(e)}static create(e,i,r){return new ot({args:e||ve.create([]).rest(xe.create()),returns:i||xe.create(),typeName:w.ZodFunction,...x(r)})}},lt=class extends V{get schema(){return this._def.getter()}_parse(e){const{ctx:i}=this._processInputParams(e);return this._def.getter()._parse({data:i.data,path:i.path,parent:i})}};lt.create=(e,i)=>new lt({getter:e,typeName:w.ZodLazy,...x(i)});var pt=class extends V{_parse(e){if(e.data!==this._def.value){const i=this._getOrReturnCtx(e);return C(i,{received:i.data,code:o.invalid_literal,expected:this._def.value}),S}return{status:"valid",value:e.data}}get value(){return this._def.value}};pt.create=(e,i)=>new pt({value:e,typeName:w.ZodLiteral,...x(i)});function $r(e,i){return new Ke({values:e,typeName:w.ZodEnum,...x(i)})}var Ke=class extends V{_parse(e){if(typeof e.data!="string"){const i=this._getOrReturnCtx(e),r=this._def.values;return C(i,{expected:D.joinValues(r),received:i.parsedType,code:o.invalid_type}),S}if(this._def.values.indexOf(e.data)===-1){const i=this._getOrReturnCtx(e),r=this._def.values;return C(i,{received:i.data,code:o.invalid_enum_value,options:r}),S}return F(e.data)}get options(){return this._def.values}get enum(){const e={};for(const i of this._def.values)e[i]=i;return e}get Values(){const e={};for(const i of this._def.values)e[i]=i;return e}get Enum(){const e={};for(const i of this._def.values)e[i]=i;return e}extract(e){return Ke.create(e)}exclude(e){return Ke.create(this.options.filter(i=>!e.includes(i)))}};Ke.create=$r;var ut=class extends V{_parse(e){const i=D.getValidEnumValues(this._def.values),r=this._getOrReturnCtx(e);if(r.parsedType!==L.string&&r.parsedType!==L.number){const n=D.objectValues(i);return C(r,{expected:D.joinValues(n),received:r.parsedType,code:o.invalid_type}),S}if(i.indexOf(e.data)===-1){const n=D.objectValues(i);return C(r,{received:r.data,code:o.invalid_enum_value,options:n}),S}return F(e.data)}get enum(){return this._def.values}};ut.create=(e,i)=>new ut({values:e,typeName:w.ZodNativeEnum,...x(i)});var Oe=class extends V{unwrap(){return this._def.type}_parse(e){const{ctx:i}=this._processInputParams(e);if(i.parsedType!==L.promise&&i.common.async===!1)return C(i,{code:o.invalid_type,expected:L.promise,received:i.parsedType}),S;const r=i.parsedType===L.promise?i.data:Promise.resolve(i.data);return F(r.then(n=>this._def.type.parseAsync(n,{path:i.path,errorMap:i.common.contextualErrorMap})))}};Oe.create=(e,i)=>new Oe({type:e,typeName:w.ZodPromise,...x(i)});var oe=class extends V{innerType(){return this._def.schema}sourceType(){return this._def.schema._def.typeName===w.ZodEffects?this._def.schema.sourceType():this._def.schema}_parse(e){const{status:i,ctx:r}=this._processInputParams(e),n=this._def.effect||null;if(n.type==="preprocess"){const a=n.transform(r.data);return r.common.async?Promise.resolve(a).then(t=>this._def.schema._parseAsync({data:t,path:r.path,parent:r})):this._def.schema._parseSync({data:a,path:r.path,parent:r})}const s={addIssue:a=>{C(r,a),a.fatal?i.abort():i.dirty()},get path(){return r.path}};if(s.addIssue=s.addIssue.bind(s),n.type==="refinement"){const a=t=>{const l=n.refinement(t,s);if(r.common.async)return Promise.resolve(l);if(l instanceof Promise)throw new Error("Async refinement encountered during synchronous parse operation. Use .parseAsync instead.");return t};if(r.common.async===!1){const t=this._def.schema._parseSync({data:r.data,path:r.path,parent:r});return t.status==="aborted"?S:(t.status==="dirty"&&i.dirty(),a(t.value),{status:i.value,value:t.value})}else return this._def.schema._parseAsync({data:r.data,path:r.path,parent:r}).then(t=>t.status==="aborted"?S:(t.status==="dirty"&&i.dirty(),a(t.value).then(()=>({status:i.value,value:t.value}))))}if(n.type==="transform")if(r.common.async===!1){const a=this._def.schema._parseSync({data:r.data,path:r.path,parent:r});if(!wt(a))return a;const t=n.transform(a.value,s);if(t instanceof Promise)throw new Error("Asynchronous transform encountered during synchronous parse operation. Use .parseAsync instead.");return{status:i.value,value:t}}else return this._def.schema._parseAsync({data:r.data,path:r.path,parent:r}).then(a=>wt(a)?Promise.resolve(n.transform(a.value,s)).then(t=>({status:i.value,value:t})):a);D.assertNever(n)}};oe.create=(e,i,r)=>new oe({schema:e,typeName:w.ZodEffects,effect:i,...x(r)}),oe.createWithPreprocess=(e,i,r)=>new oe({schema:i,effect:{type:"preprocess",transform:e},typeName:w.ZodEffects,...x(r)});var Le=class extends V{_parse(e){return this._getType(e)===L.undefined?F(void 0):this._def.innerType._parse(e)}unwrap(){return this._def.innerType}};Le.create=(e,i)=>new Le({innerType:e,typeName:w.ZodOptional,...x(i)});var Ue=class extends V{_parse(e){return this._getType(e)===L.null?F(null):this._def.innerType._parse(e)}unwrap(){return this._def.innerType}};Ue.create=(e,i)=>new Ue({innerType:e,typeName:w.ZodNullable,...x(i)});var ft=class extends V{_parse(e){const{ctx:i}=this._processInputParams(e);let r=i.data;return i.parsedType===L.undefined&&(r=this._def.defaultValue()),this._def.innerType._parse({data:r,path:i.path,parent:i})}removeDefault(){return this._def.innerType}};ft.create=(e,i)=>new ft({innerType:e,typeName:w.ZodDefault,defaultValue:typeof i.default=="function"?i.default:()=>i.default,...x(i)});var Dt=class extends V{_parse(e){const{ctx:i}=this._processInputParams(e),r={...i,common:{...i.common,issues:[]}},n=this._def.innerType._parse({data:r.data,path:r.path,parent:{...r}});return Bt(n)?n.then(s=>({status:"valid",value:s.status==="valid"?s.value:this._def.catchValue({get error(){return new R(r.common.issues)},input:r.data})})):{status:"valid",value:n.status==="valid"?n.value:this._def.catchValue({get error(){return new R(r.common.issues)},input:r.data})}}removeCatch(){return this._def.innerType}};Dt.create=(e,i)=>new Dt({innerType:e,typeName:w.ZodCatch,catchValue:typeof i.catch=="function"?i.catch:()=>i.catch,...x(i)});var Nt=class extends V{_parse(e){if(this._getType(e)!==L.nan){const r=this._getOrReturnCtx(e);return C(r,{code:o.invalid_type,expected:L.nan,received:r.parsedType}),S}return{status:"valid",value:e.data}}};Nt.create=e=>new Nt({typeName:w.ZodNaN,...x(e)});var Np=Symbol("zod_brand"),Or=class extends V{_parse(e){const{ctx:i}=this._processInputParams(e),r=i.data;return this._def.type._parse({data:r,path:i.path,parent:i})}unwrap(){return this._def.type}},Pt=class extends V{_parse(e){const{status:i,ctx:r}=this._processInputParams(e);if(r.common.async)return(async()=>{const s=await this._def.in._parseAsync({data:r.data,path:r.path,parent:r});return s.status==="aborted"?S:s.status==="dirty"?(i.dirty(),se(s.value)):this._def.out._parseAsync({data:s.value,path:r.path,parent:r})})();{const n=this._def.in._parseSync({data:r.data,path:r.path,parent:r});return n.status==="aborted"?S:n.status==="dirty"?(i.dirty(),{status:"dirty",value:n.value}):this._def.out._parseSync({data:n.value,path:r.path,parent:r})}}static create(e,i){return new Pt({in:e,out:i,typeName:w.ZodPipeline})}},Gr=(e,i={},r)=>e?Fe.create().superRefine((n,s)=>{var a,t;if(!e(n)){const l=typeof i=="function"?i(n):typeof i=="string"?{message:i}:i,u=(t=(a=l.fatal)!==null&&a!==void 0?a:r)!==null&&t!==void 0?t:!0,y=typeof l=="string"?{message:l}:l;s.addIssue({code:"custom",...y,fatal:u})}}):Fe.create(),Pp={object:$.lazycreate},w;(function(e){e.ZodString="ZodString",e.ZodNumber="ZodNumber",e.ZodNaN="ZodNaN",e.ZodBigInt="ZodBigInt",e.ZodBoolean="ZodBoolean",e.ZodDate="ZodDate",e.ZodSymbol="ZodSymbol",e.ZodUndefined="ZodUndefined",e.ZodNull="ZodNull",e.ZodAny="ZodAny",e.ZodUnknown="ZodUnknown",e.ZodNever="ZodNever",e.ZodVoid="ZodVoid",e.ZodArray="ZodArray",e.ZodObject="ZodObject",e.ZodUnion="ZodUnion",e.ZodDiscriminatedUnion="ZodDiscriminatedUnion",e.ZodIntersection="ZodIntersection",e.ZodTuple="ZodTuple",e.ZodRecord="ZodRecord",e.ZodMap="ZodMap",e.ZodSet="ZodSet",e.ZodFunction="ZodFunction",e.ZodLazy="ZodLazy",e.ZodLiteral="ZodLiteral",e.ZodEnum="ZodEnum",e.ZodEffects="ZodEffects",e.ZodNativeEnum="ZodNativeEnum",e.ZodOptional="ZodOptional",e.ZodNullable="ZodNullable",e.ZodDefault="ZodDefault",e.ZodCatch="ZodCatch",e.ZodPromise="ZodPromise",e.ZodBranded="ZodBranded",e.ZodPipeline="ZodPipeline"})(w||(w={}));var Ip=(e,i={message:`Input not instance of ${e.name}`})=>Gr(r=>r instanceof e,i),Xr=Ee.create,zr=Be.create,jp=Nt.create,qp=ke.create,Hr=rt.create,Fp=qe.create,Mp=kt.create,$p=it.create,Op=nt.create,Gp=Fe.create,Xp=xe.create,zp=Te.create,Hp=xt.create,Zp=he.create,Wp=$.create,Jp=$.strictCreate,Qp=st.create,Yp=mr.create,eu=at.create,tu=ve.create,ru=Ut.create,iu=Vt.create,nu=$e.create,su=ot.create,au=lt.create,ou=pt.create,lu=Ke.create,pu=ut.create,uu=Oe.create,Zr=oe.create,fu=Le.create,cu=Ue.create,du=oe.createWithPreprocess,mu=Pt.create,yu=()=>Xr().optional(),Eu=()=>zr().optional(),hu=()=>Hr().optional(),Ru={string:e=>Ee.create({...e,coerce:!0}),number:e=>Be.create({...e,coerce:!0}),boolean:e=>rt.create({...e,coerce:!0}),bigint:e=>ke.create({...e,coerce:!0}),date:e=>qe.create({...e,coerce:!0})},gu=S,f=Object.freeze({__proto__:null,defaultErrorMap:T,setErrorMap:q,getErrorMap:z,makeIssue:me,EMPTY_PATH:cr,addIssueToContext:C,ParseStatus:X,INVALID:S,DIRTY:se,OK:F,isAborted:tt,isDirty:dr,isValid:wt,isAsync:Bt,get util(){return D},get objectUtil(){return et},ZodParsedType:L,getParsedType:de,ZodType:V,ZodString:Ee,ZodNumber:Be,ZodBigInt:ke,ZodBoolean:rt,ZodDate:qe,ZodSymbol:kt,ZodUndefined:it,ZodNull:nt,ZodAny:Fe,ZodUnknown:xe,ZodNever:Te,ZodVoid:xt,ZodArray:he,ZodObject:$,ZodUnion:st,ZodDiscriminatedUnion:mr,ZodIntersection:at,ZodTuple:ve,ZodRecord:Ut,ZodMap:Vt,ZodSet:$e,ZodFunction:ot,ZodLazy:lt,ZodLiteral:pt,ZodEnum:Ke,ZodNativeEnum:ut,ZodPromise:Oe,ZodEffects:oe,ZodTransformer:oe,ZodOptional:Le,ZodNullable:Ue,ZodDefault:ft,ZodCatch:Dt,ZodNaN:Nt,BRAND:Np,ZodBranded:Or,ZodPipeline:Pt,custom:Gr,Schema:V,ZodSchema:V,late:Pp,get ZodFirstPartyTypeKind(){return w},coerce:Ru,any:Gp,array:Zp,bigint:qp,boolean:Hr,date:Fp,discriminatedUnion:Yp,effect:Zr,enum:lu,function:su,instanceof:Ip,intersection:eu,lazy:au,literal:ou,map:iu,nan:jp,nativeEnum:pu,never:zp,null:Op,nullable:cu,number:zr,object:Wp,oboolean:hu,onumber:Eu,optional:fu,ostring:yu,pipeline:mu,preprocess:du,promise:uu,record:ru,set:nu,strictObject:Jp,string:Xr,symbol:Mp,transformer:Zr,tuple:tu,undefined:$p,union:Qp,unknown:Xp,void:Hp,NEVER:gu,ZodIssueCode:o,quotelessJson:E,ZodError:R}),It={};p(It,{assure:()=>Au,is:()=>bu,isObject:()=>Tu});var bu=(e,i)=>i.safeParse(e).success,Au=(e,i)=>e.parse(i),Tu=e=>typeof e=="object"&&e!==null,vu=Jr,Wr=128,Lu=-128,Cu=Math.pow(2,31);function Jr(e,i,r){i=i||[],r=r||0;for(var n=r;e>=Cu;)i[r++]=e&255|Wr,e/=128;for(;e&Lu;)i[r++]=e&255|Wr,e>>>=7;return i[r]=e|0,Jr.bytes=r-n+1,i}var _u=Er,Su=128,Qr=127;function Er(e,n){var r=0,n=n||0,s=0,a=n,t,l=e.length;do{if(a>=l)throw Er.bytes=0,new RangeError("Could not decode varint");t=e[a++],r+=s<28?(t&Qr)<<s:(t&Qr)*Math.pow(2,s),s+=7}while(t>=Su);return Er.bytes=a-n,r}var wu=Math.pow(2,7),Bu=Math.pow(2,14),ku=Math.pow(2,21),xu=Math.pow(2,28),Ku=Math.pow(2,35),Uu=Math.pow(2,42),Vu=Math.pow(2,49),Du=Math.pow(2,56),Nu=Math.pow(2,63),Pu=function(e){return e<wu?1:e<Bu?2:e<ku?3:e<xu?4:e<Ku?5:e<Uu?6:e<Vu?7:e<Du?8:e<Nu?9:10},Iu={encode:vu,decode:_u,encodingLength:Pu},ju=Iu,jt=ju,hr=(e,i=0)=>[jt.decode(e,i),jt.decode.bytes],qt=(e,i,r=0)=>(jt.encode(e,i,r),i),Ft=e=>jt.encodingLength(e),qu=(e,i)=>{if(e===i)return!0;if(e.byteLength!==i.byteLength)return!1;for(let r=0;r<e.byteLength;r++)if(e[r]!==i[r])return!1;return!0},Mt=e=>{if(e instanceof Uint8Array&&e.constructor.name==="Uint8Array")return e;if(e instanceof ArrayBuffer)return new Uint8Array(e);if(ArrayBuffer.isView(e))return new Uint8Array(e.buffer,e.byteOffset,e.byteLength);throw new Error("Unknown type, must be binary type")},Fu=e=>new TextEncoder().encode(e),Mu=e=>new TextDecoder().decode(e),$t=(e,i)=>{const r=i.byteLength,n=Ft(e),s=n+Ft(r),a=new Uint8Array(s+r);return qt(e,a,0),qt(r,a,n),a.set(i,s),new Rr(e,r,i,a)},$u=e=>{const i=Mt(e),[r,n]=hr(i),[s,a]=hr(i.subarray(n)),t=i.subarray(n+a);if(t.byteLength!==s)throw new Error("Incorrect length");return new Rr(r,s,t,i)},Ou=(e,i)=>e===i?!0:e.code===i.code&&e.size===i.size&&qu(e.bytes,i.bytes),Rr=class{constructor(e,i,r,n){this.code=e,this.size=i,this.digest=r,this.bytes=n}},Yr={};p(Yr,{base58btc:()=>Ce,base58flickr:()=>tf});function Gu(e,i){if(e.length>=255)throw new TypeError("Alphabet too long");for(var r=new Uint8Array(256),n=0;n<r.length;n++)r[n]=255;for(var s=0;s<e.length;s++){var a=e.charAt(s),t=a.charCodeAt(0);if(r[t]!==255)throw new TypeError(a+" is ambiguous");r[t]=s}var l=e.length,u=e.charAt(0),y=Math.log(l)/Math.log(256),b=Math.log(256)/Math.log(l);function A(U){if(U instanceof Uint8Array||(ArrayBuffer.isView(U)?U=new Uint8Array(U.buffer,U.byteOffset,U.byteLength):Array.isArray(U)&&(U=Uint8Array.from(U))),!(U instanceof Uint8Array))throw new TypeError("Expected Uint8Array");if(U.length===0)return"";for(var j=0,P=0,I=0,re=U.length;I!==re&&U[I]===0;)I++,j++;for(var ee=(re-I)*b+1>>>0,N=new Uint8Array(ee);I!==re;){for(var J=U[I],we=0,pe=ee-1;(J!==0||we<P)&&pe!==-1;pe--,we++)J+=256*N[pe]>>>0,N[pe]=J%l>>>0,J=J/l>>>0;if(J!==0)throw new Error("Non-zero carry");P=we,I++}for(var _e=ee-P;_e!==ee&&N[_e]===0;)_e++;for(var tr=u.repeat(j);_e<ee;++_e)tr+=e.charAt(N[_e]);return tr}function K(U){if(typeof U!="string")throw new TypeError("Expected String");if(U.length===0)return new Uint8Array;var j=0;if(U[j]!==" "){for(var P=0,I=0;U[j]===u;)P++,j++;for(var re=(U.length-j)*y+1>>>0,ee=new Uint8Array(re);U[j];){var N=r[U.charCodeAt(j)];if(N===255)return;for(var J=0,we=re-1;(N!==0||J<I)&&we!==-1;we--,J++)N+=l*ee[we]>>>0,ee[we]=N%256>>>0,N=N/256>>>0;if(N!==0)throw new Error("Non-zero carry");I=J,j++}if(U[j]!==" "){for(var pe=re-I;pe!==re&&ee[pe]===0;)pe++;for(var _e=new Uint8Array(P+(re-pe)),tr=P;pe!==re;)_e[tr++]=ee[pe++];return _e}}}function O(U){var j=K(U);if(j)return j;throw new Error(`Non-${i} character`)}return{encode:A,decodeUnsafe:K,decode:O}}var Xu=Gu,zu=Xu,Hu=zu,Zu=class{constructor(e,i,r){this.name=e,this.prefix=i,this.baseEncode=r}encode(e){if(e instanceof Uint8Array)return`${this.prefix}${this.baseEncode(e)}`;throw Error("Unknown type, must be binary type")}},Wu=class{constructor(e,i,r){if(this.name=e,this.prefix=i,i.codePointAt(0)===void 0)throw new Error("Invalid prefix character");this.prefixCodePoint=i.codePointAt(0),this.baseDecode=r}decode(e){if(typeof e=="string"){if(e.codePointAt(0)!==this.prefixCodePoint)throw Error(`Unable to decode multibase string ${JSON.stringify(e)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);return this.baseDecode(e.slice(this.prefix.length))}else throw Error("Can only multibase decode strings")}or(e){return ei(this,e)}},Ju=class{constructor(e){this.decoders=e}or(e){return ei(this,e)}decode(e){const i=e[0],r=this.decoders[i];if(r)return r.decode(e);throw RangeError(`Unable to decode multibase string ${JSON.stringify(e)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`)}},ei=(e,i)=>new Ju({...e.decoders||{[e.prefix]:e},...i.decoders||{[i.prefix]:i}}),Qu=class{constructor(e,i,r,n){this.name=e,this.prefix=i,this.baseEncode=r,this.baseDecode=n,this.encoder=new Zu(e,i,r),this.decoder=new Wu(e,i,n)}encode(e){return this.encoder.encode(e)}decode(e){return this.decoder.decode(e)}},Ot=({name:e,prefix:i,encode:r,decode:n})=>new Qu(e,i,r,n),ct=({prefix:e,name:i,alphabet:r})=>{const{encode:n,decode:s}=Hu(r,i);return Ot({prefix:e,name:i,encode:n,decode:a=>Mt(s(a))})},Yu=(e,i,r,n)=>{const s={};for(let b=0;b<i.length;++b)s[i[b]]=b;let a=e.length;for(;e[a-1]==="=";)--a;const t=new Uint8Array(a*r/8|0);let l=0,u=0,y=0;for(let b=0;b<a;++b){const A=s[e[b]];if(A===void 0)throw new SyntaxError(`Non-${n} character`);u=u<<r|A,l+=r,l>=8&&(l-=8,t[y++]=255&u>>l)}if(l>=r||255&u<<8-l)throw new SyntaxError("Unexpected end of data");return t},ef=(e,i,r)=>{const n=i[i.length-1]==="=",s=(1<<r)-1;let a="",t=0,l=0;for(let u=0;u<e.length;++u)for(l=l<<8|e[u],t+=8;t>r;)t-=r,a+=i[s&l>>t];if(t&&(a+=i[s&l<<r-t]),n)for(;a.length*r&7;)a+="=";return a},H=({name:e,prefix:i,bitsPerChar:r,alphabet:n})=>Ot({prefix:i,name:e,encode(s){return ef(s,n,r)},decode(s){return Yu(s,n,r,e)}}),Ce=ct({name:"base58btc",prefix:"z",alphabet:"123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"}),tf=ct({name:"base58flickr",prefix:"Z",alphabet:"123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"}),ti={};p(ti,{base32:()=>dt,base32hex:()=>af,base32hexpad:()=>lf,base32hexpadupper:()=>pf,base32hexupper:()=>of,base32pad:()=>nf,base32padupper:()=>sf,base32upper:()=>rf,base32z:()=>uf});var dt=H({prefix:"b",name:"base32",alphabet:"abcdefghijklmnopqrstuvwxyz234567",bitsPerChar:5}),rf=H({prefix:"B",name:"base32upper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",bitsPerChar:5}),nf=H({prefix:"c",name:"base32pad",alphabet:"abcdefghijklmnopqrstuvwxyz234567=",bitsPerChar:5}),sf=H({prefix:"C",name:"base32padupper",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",bitsPerChar:5}),af=H({prefix:"v",name:"base32hex",alphabet:"0123456789abcdefghijklmnopqrstuv",bitsPerChar:5}),of=H({prefix:"V",name:"base32hexupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV",bitsPerChar:5}),lf=H({prefix:"t",name:"base32hexpad",alphabet:"0123456789abcdefghijklmnopqrstuv=",bitsPerChar:5}),pf=H({prefix:"T",name:"base32hexpadupper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUV=",bitsPerChar:5}),uf=H({prefix:"h",name:"base32z",alphabet:"ybndrfg8ejkmcpqxot1uwisza345h769",bitsPerChar:5}),M=class{constructor(e,i,r,n){this.code=i,this.version=e,this.multihash=r,this.bytes=n,this.byteOffset=n.byteOffset,this.byteLength=n.byteLength,this.asCID=this,this._baseCache=new Map,Object.defineProperties(this,{byteOffset:Xt,byteLength:Xt,code:Gt,version:Gt,multihash:Gt,bytes:Gt,_baseCache:Xt,asCID:Xt})}toV0(){switch(this.version){case 0:return this;default:{const{code:e,multihash:i}=this;if(e!==mt)throw new Error("Cannot convert a non dag-pb CID to CIDv0");if(i.code!==mf)throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");return M.createV0(i)}}}toV1(){switch(this.version){case 0:{const{code:e,digest:i}=this.multihash,r=$t(e,i);return M.createV1(this.code,r)}case 1:return this;default:throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`)}}equals(e){return e&&this.code===e.code&&this.version===e.version&&Ou(this.multihash,e.multihash)}toString(e){const{bytes:i,version:r,_baseCache:n}=this;switch(r){case 0:return cf(i,n,e||Ce.encoder);default:return df(i,n,e||dt.encoder)}}toJSON(){return{code:this.code,version:this.version,hash:this.multihash.bytes}}get[Symbol.toStringTag](){return"CID"}[Symbol.for("nodejs.util.inspect.custom")](){return"CID("+this.toString()+")"}static isCID(e){return Ef(/^0\.0/,hf),!!(e&&(e[ii]||e.asCID===e))}get toBaseEncodedString(){throw new Error("Deprecated, use .toString()")}get codec(){throw new Error('"codec" property is deprecated, use integer "code" property instead')}get buffer(){throw new Error("Deprecated .buffer property, use .bytes to get Uint8Array instead")}get multibaseName(){throw new Error('"multibaseName" property is deprecated')}get prefix(){throw new Error('"prefix" property is deprecated')}static asCID(e){if(e instanceof M)return e;if(e!=null&&e.asCID===e){const{version:i,code:r,multihash:n,bytes:s}=e;return new M(i,r,n,s||ri(i,r,n.bytes))}else if(e!=null&&e[ii]===!0){const{version:i,multihash:r,code:n}=e,s=$u(r);return M.create(i,n,s)}else return null}static create(e,i,r){if(typeof i!="number")throw new Error("String codecs are no longer supported");switch(e){case 0:{if(i!==mt)throw new Error(`Version 0 CID must use dag-pb (code: ${mt}) block encoding`);return new M(e,i,r,r.bytes)}case 1:{const n=ri(e,i,r.bytes);return new M(e,i,r,n)}default:throw new Error("Invalid version")}}static createV0(e){return M.create(0,mt,e)}static createV1(e,i){return M.create(1,e,i)}static decode(e){const[i,r]=M.decodeFirst(e);if(r.length)throw new Error("Incorrect length");return i}static decodeFirst(e){const i=M.inspectBytes(e),r=i.size-i.multihashSize,n=Mt(e.subarray(r,r+i.multihashSize));if(n.byteLength!==i.multihashSize)throw new Error("Incorrect length");const s=n.subarray(i.multihashSize-i.digestSize),a=new Rr(i.multihashCode,i.digestSize,s,n);return[i.version===0?M.createV0(a):M.createV1(i.codec,a),e.subarray(i.size)]}static inspectBytes(e){let i=0;const r=()=>{const[b,A]=hr(e.subarray(i));return i+=A,b};let n=r(),s=mt;if(n===18?(n=0,i=0):n===1&&(s=r()),n!==0&&n!==1)throw new RangeError(`Invalid CID version ${n}`);const a=i,t=r(),l=r(),u=i+l,y=u-a;return{version:n,codec:s,multihashCode:t,digestSize:l,multihashSize:y,size:u}}static parse(e,i){const[r,n]=ff(e,i),s=M.decode(n);return s._baseCache.set(r,e),s}},ff=(e,i)=>{switch(e[0]){case"Q":{const r=i||Ce;return[Ce.prefix,r.decode(`${Ce.prefix}${e}`)]}case Ce.prefix:{const r=i||Ce;return[Ce.prefix,r.decode(e)]}case dt.prefix:{const r=i||dt;return[dt.prefix,r.decode(e)]}default:{if(i==null)throw Error("To parse non base32 or base58btc encoded CID multibase decoder must be provided");return[e[0],i.decode(e)]}}},cf=(e,i,r)=>{const{prefix:n}=r;if(n!==Ce.prefix)throw Error(`Cannot string encode V0 in ${r.name} encoding`);const s=i.get(n);if(s==null){const a=r.encode(e).slice(1);return i.set(n,a),a}else return s},df=(e,i,r)=>{const{prefix:n}=r,s=i.get(n);if(s==null){const a=r.encode(e);return i.set(n,a),a}else return s},mt=112,mf=18,ri=(e,i,r)=>{const n=Ft(e),s=n+Ft(i),a=new Uint8Array(s+r.byteLength);return qt(e,a,0),qt(i,a,n),a.set(r,s),a},ii=Symbol.for("@ipld/js-cid/CID"),Gt={writable:!1,configurable:!1,enumerable:!0},Xt={writable:!1,enumerable:!1,configurable:!1},yf="0.0.0-dev",Ef=(e,i)=>{if(e.test(yf))console.warn(i);else throw new Error(i)},hf=`CID.isCID(v) is deprecated and will be removed in the next major release.
Following code pattern:

if (CID.isCID(value)) {
  doSomethingWithCID(value)
}

Is replaced with:

const cid = CID.asCID(value)
if (cid) {
  // Make sure to use cid instead of value
  doSomethingWithCID(cid)
}
`,ni={};p(ni,{identity:()=>Rf});var Rf=Ot({prefix:"\0",name:"identity",encode:e=>Mu(e),decode:e=>Fu(e)}),si={};p(si,{base2:()=>gf});var gf=H({prefix:"0",name:"base2",alphabet:"01",bitsPerChar:1}),ai={};p(ai,{base8:()=>bf});var bf=H({prefix:"7",name:"base8",alphabet:"01234567",bitsPerChar:3}),oi={};p(oi,{base10:()=>Af});var Af=ct({prefix:"9",name:"base10",alphabet:"0123456789"}),li={};p(li,{base16:()=>Tf,base16upper:()=>vf});var Tf=H({prefix:"f",name:"base16",alphabet:"0123456789abcdef",bitsPerChar:4}),vf=H({prefix:"F",name:"base16upper",alphabet:"0123456789ABCDEF",bitsPerChar:4}),pi={};p(pi,{base36:()=>Lf,base36upper:()=>Cf});var Lf=ct({prefix:"k",name:"base36",alphabet:"0123456789abcdefghijklmnopqrstuvwxyz"}),Cf=ct({prefix:"K",name:"base36upper",alphabet:"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"}),ui={};p(ui,{base64:()=>_f,base64pad:()=>Sf,base64url:()=>wf,base64urlpad:()=>Bf});var _f=H({prefix:"m",name:"base64",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",bitsPerChar:6}),Sf=H({prefix:"M",name:"base64pad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",bitsPerChar:6}),wf=H({prefix:"u",name:"base64url",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",bitsPerChar:6}),Bf=H({prefix:"U",name:"base64urlpad",alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",bitsPerChar:6}),fi={};p(fi,{base256emoji:()=>Vf});var ci=Array.from("🚀🪐☄🛰🌌🌑🌒🌓🌔🌕🌖🌗🌘🌍🌏🌎🐉☀💻🖥💾💿😂❤😍🤣😊🙏💕😭😘👍😅👏😁🔥🥰💔💖💙😢🤔😆🙄💪😉☺👌🤗💜😔😎😇🌹🤦🎉💞✌✨🤷😱😌🌸🙌😋💗💚😏💛🙂💓🤩😄😀🖤😃💯🙈👇🎶😒🤭❣😜💋👀😪😑💥🙋😞😩😡🤪👊🥳😥🤤👉💃😳✋😚😝😴🌟😬🙃🍀🌷😻😓⭐✅🥺🌈😈🤘💦✔😣🏃💐☹🎊💘😠☝😕🌺🎂🌻😐🖕💝🙊😹🗣💫💀👑🎵🤞😛🔴😤🌼😫⚽🤙☕🏆🤫👈😮🙆🍻🍃🐶💁😲🌿🧡🎁⚡🌞🎈❌✊👋😰🤨😶🤝🚶💰🍓💢🤟🙁🚨💨🤬✈🎀🍺🤓😙💟🌱😖👶🥴▶➡❓💎💸⬇😨🌚🦋😷🕺⚠🙅😟😵👎🤲🤠🤧📌🔵💅🧐🐾🍒😗🤑🌊🤯🐷☎💧😯💆👆🎤🙇🍑❄🌴💣🐸💌📍🥀🤢👅💡💩👐📸👻🤐🤮🎼🥵🚩🍎🍊👼💍📣🥂"),kf=ci.reduce((e,i,r)=>(e[r]=i,e),[]),xf=ci.reduce((e,i,r)=>(e[i.codePointAt(0)]=r,e),[]);function Kf(e){return e.reduce((i,r)=>(i+=kf[r],i),"")}function Uf(e){const i=[];for(const r of e){const n=xf[r.codePointAt(0)];if(n===void 0)throw new Error(`Non-base256emoji character: ${r}`);i.push(n)}return new Uint8Array(i)}var Vf=Ot({prefix:"🚀",name:"base256emoji",encode:Kf,decode:Uf}),di={};p(di,{sha256:()=>Nf,sha512:()=>Pf});var mi=({name:e,code:i,encode:r})=>new Df(e,i,r),Df=class{constructor(e,i,r){this.name=e,this.code=i,this.encode=r}digest(e){if(e instanceof Uint8Array){const i=this.encode(e);return i instanceof Uint8Array?$t(this.code,i):i.then(r=>$t(this.code,r))}else throw Error("Unknown type, must be binary type")}},yi=e=>async i=>new Uint8Array(await crypto.subtle.digest(e,i)),Nf=mi({name:"sha2-256",code:18,encode:yi("SHA-256")}),Pf=mi({name:"sha2-512",code:19,encode:yi("SHA-512")}),Ei={};p(Ei,{identity:()=>qf});var hi=0,If="identity",Ri=Mt,jf=e=>$t(hi,Ri(e)),qf={code:hi,name:If,encode:Ri,digest:jf};new TextEncoder,new TextDecoder;var gi={...ni,...si,...ai,...oi,...li,...ti,...pi,...Yr,...ui,...fi};({...di,...Ei});function bi(e,i,r,n){return{name:e,prefix:i,encoder:{name:e,prefix:i,encode:r},decoder:{decode:n}}}var Ai=bi("utf8","u",e=>"u"+new TextDecoder("utf8").decode(e),e=>new TextEncoder().encode(e.substring(1))),gr=bi("ascii","a",e=>{let i="a";for(let r=0;r<e.length;r++)i+=String.fromCharCode(e[r]);return i},e=>{e=e.substring(1);const i=new Uint8Array(e.length);for(let r=0;r<e.length;r++)i[r]=e.charCodeAt(r);return i}),Ff={utf8:Ai,"utf-8":Ai,hex:gi.base16,latin1:gr,ascii:gr,binary:gr,...gi},Ti=Ff;function Mf(e,i="utf8"){const r=Ti[i];if(!r)throw new Error(`Unsupported encoding "${i}"`);return r.decoder.decode(`${r.prefix}${e}`)}function $f(e,i="utf8"){const r=Ti[i];if(!r)throw new Error(`Unsupported encoding "${i}"`);return r.encoder.encode(e).substring(1)}var br=e=>{if(Array.isArray(e))return e.map(i=>br(i));if(e&&typeof e=="object"){if(typeof e.$link=="string"&&Object.keys(e).length===1)return M.parse(e.$link);if(typeof e.$bytes=="string"&&Object.keys(e).length===1)return Mf(e.$bytes,"base64");const i={};for(const r of Object.keys(e))i[r]=br(e[r]);return i}return e},zt=e=>{if(Array.isArray(e))return e.map(i=>zt(i));if(e&&typeof e=="object"){if(e instanceof Uint8Array)return{$bytes:$f(e,"base64")};if(M.asCID(e))return{$link:e.toString()};const i={};for(const r of Object.keys(e))i[r]=zt(e[r]);return i}return e},Of=f.any().refine(e=>M.asCID(e)!==null,{message:"Not a CID"}).transform(e=>M.asCID(e)),Gf={cid:Of,bytes:f.instanceof(Uint8Array),string:f.string(),array:f.array(f.unknown()),map:f.record(f.string(),f.unknown()),unknown:f.unknown()},Xf=Ae(or()),vi=e=>new TextEncoder().encode(e).byteLength,Ar=e=>new Xf.default().countGraphemes(e),zf=e=>{const i=e.match(Li);if(!(i!=null&&i.groups))return null;const r=i.groups;return{grandfathered:r.grandfathered,language:r.language,extlang:r.extlang,script:r.script,region:r.region,variant:r.variant,extension:r.extension,privateUse:r.privateUseA||r.privateUseB}},Hf=e=>Li.test(e),Li=/^((?<grandfathered>(en-GB-oed|i-ami|i-bnn|i-default|i-enochian|i-hak|i-klingon|i-lux|i-mingo|i-navajo|i-pwn|i-tao|i-tay|i-tsu|sgn-BE-FR|sgn-BE-NL|sgn-CH-DE)|(art-lojban|cel-gaulish|no-bok|no-nyn|zh-guoyu|zh-hakka|zh-min|zh-min-nan|zh-xiang))|((?<language>([A-Za-z]{2,3}(-(?<extlang>[A-Za-z]{3}(-[A-Za-z]{3}){0,2}))?)|[A-Za-z]{4}|[A-Za-z]{5,8})(-(?<script>[A-Za-z]{4}))?(-(?<region>[A-Za-z]{2}|[0-9]{3}))?(-(?<variant>[A-Za-z0-9]{5,8}|[0-9][A-Za-z0-9]{3}))*(-(?<extension>[0-9A-WY-Za-wy-z](-[A-Za-z0-9]{2,8})+))*(-(?<privateUseA>x(-[A-Za-z0-9]{1,8})+))?)|(?<privateUseB>x(-[A-Za-z0-9]{1,8})+))$/,Zf=e=>rc.safeParse(e).success,Wf=e=>{const i=e.id;if(typeof i!="string")throw new Error("No `id` on document");return i},Jf=e=>Qf(e,{id:"#atproto_pds",type:"AtprotoPersonalDataServer"}),Qf=(e,i)=>{const r=Wf(e);let n=e.service;if(!n||typeof n!="object")return;Array.isArray(n)||(n=[n]);const s=n.find(a=>a.id===i.id||a.id===`${r}${i.id}`);if(s&&s.type===i.type&&typeof s.serviceEndpoint=="string")return Yf(s.serviceEndpoint)},Yf=e=>{let i;try{i=new URL(e)}catch{return}if(["http:","https:"].includes(i.protocol))return i.hostname?e:void 0},ec=f.object({id:f.string(),type:f.string(),controller:f.string(),publicKeyMultibase:f.string().optional()}),tc=f.object({id:f.string(),type:f.string(),serviceEndpoint:f.union([f.string(),f.record(f.unknown())])}),rc=f.object({id:f.string(),alsoKnownAs:f.array(f.string()).optional(),verificationMethod:f.array(ec).optional(),service:f.array(tc).optional()}),ic=Ae(lr());function nc(e,i){try{if(!(0,ic.isValidISODateString)(i))throw new Error}catch{return{success:!1,error:new B(`${e} must be an valid atproto datetime (both RFC-3339 and ISO-8601)`)}}return{success:!0,value:i}}function sc(e,i){return i.match(/^\w+:(?:\/\/)?[^\s/][^\s]*$/)!==null?{success:!0,value:i}:{success:!1,error:new B(`${e} must be a uri`)}}function ac(e,i){try{Ye(i)}catch{return{success:!1,error:new B(`${e} must be a valid at-uri`)}}return{success:!0,value:i}}function Ci(e,i){try{Pe(i)}catch{return{success:!1,error:new B(`${e} must be a valid did`)}}return{success:!0,value:i}}function _i(e,i){try{Qe(i)}catch{return{success:!1,error:new B(`${e} must be a valid handle`)}}return{success:!0,value:i}}function oc(e,i){return!Ci(e,i).success&&!_i(e,i).success?{success:!1,error:new B(`${e} must be a valid did or a handle`)}:{success:!0,value:i}}function lc(e,i){try{je(i)}catch{return{success:!1,error:new B(`${e} must be a valid nsid`)}}return{success:!0,value:i}}function pc(e,i){try{M.parse(i)}catch{return{success:!1,error:new B(`${e} must be a cid string`)}}return{success:!0,value:i}}function uc(e,i){return Hf(i)?{success:!0,value:i}:{success:!1,error:new B(`${e} must be a well-formed BCP 47 language tag`)}}function fc(e,i,r,n){switch(r.type){case"boolean":return Si(e,i,r,n);case"integer":return wi(e,i,r,n);case"string":return Bi(e,i,r,n);case"bytes":return ki(e,i,r,n);case"cid-link":return xi(e,i,r,n);case"unknown":return Ki(e,i,r,n);default:return{success:!1,error:new B(`Unexpected lexicon type: ${r.type}`)}}}function Si(e,i,r,n){r=r;const s=typeof n;return s==="undefined"?typeof r.default=="boolean"?{success:!0,value:r.default}:{success:!1,error:new B(`${i} must be a boolean`)}:s!=="boolean"?{success:!1,error:new B(`${i} must be a boolean`)}:typeof r.const=="boolean"&&n!==r.const?{success:!1,error:new B(`${i} must be ${r.const}`)}:{success:!0,value:n}}function wi(e,i,r,n){return r=r,typeof n==="undefined"?typeof r.default=="number"?{success:!0,value:r.default}:{success:!1,error:new B(`${i} must be an integer`)}:Number.isInteger(n)?typeof r.const=="number"&&n!==r.const?{success:!1,error:new B(`${i} must be ${r.const}`)}:Array.isArray(r.enum)&&!r.enum.includes(n)?{success:!1,error:new B(`${i} must be one of (${r.enum.join("|")})`)}:typeof r.maximum=="number"&&n>r.maximum?{success:!1,error:new B(`${i} can not be greater than ${r.maximum}`)}:typeof r.minimum=="number"&&n<r.minimum?{success:!1,error:new B(`${i} can not be less than ${r.minimum}`)}:{success:!0,value:n}:{success:!1,error:new B(`${i} must be an integer`)}}function Bi(e,i,r,n){if(r=r,typeof n>"u")return typeof r.default=="string"?{success:!0,value:r.default}:{success:!1,error:new B(`${i} must be a string`)};if(typeof n!="string")return{success:!1,error:new B(`${i} must be a string`)};if(typeof r.const=="string"&&n!==r.const)return{success:!1,error:new B(`${i} must be ${r.const}`)};if(Array.isArray(r.enum)&&!r.enum.includes(n))return{success:!1,error:new B(`${i} must be one of (${r.enum.join("|")})`)};if(typeof r.maxLength=="number"&&vi(n)>r.maxLength)return{success:!1,error:new B(`${i} must not be longer than ${r.maxLength} characters`)};if(typeof r.minLength=="number"&&vi(n)<r.minLength)return{success:!1,error:new B(`${i} must not be shorter than ${r.minLength} characters`)};if(typeof r.maxGraphemes=="number"&&Ar(n)>r.maxGraphemes)return{success:!1,error:new B(`${i} must not be longer than ${r.maxGraphemes} graphemes`)};if(typeof r.minGraphemes=="number"&&Ar(n)<r.minGraphemes)return{success:!1,error:new B(`${i} must not be shorter than ${r.minGraphemes} graphemes`)};if(typeof r.format=="string")switch(r.format){case"datetime":return nc(i,n);case"uri":return sc(i,n);case"at-uri":return ac(i,n);case"did":return Ci(i,n);case"handle":return _i(i,n);case"at-identifier":return oc(i,n);case"nsid":return lc(i,n);case"cid":return pc(i,n);case"language":return uc(i,n)}return{success:!0,value:n}}function ki(e,i,r,n){return r=r,!n||!(n instanceof Uint8Array)?{success:!1,error:new B(`${i} must be a byte array`)}:typeof r.maxLength=="number"&&n.byteLength>r.maxLength?{success:!1,error:new B(`${i} must not be larger than ${r.maxLength} bytes`)}:typeof r.minLength=="number"&&n.byteLength<r.minLength?{success:!1,error:new B(`${i} must not be smaller than ${r.minLength} bytes`)}:{success:!0,value:n}}function xi(e,i,r,n){return M.asCID(n)===null?{success:!1,error:new B(`${i} must be a CID`)}:{success:!0,value:n}}function Ki(e,i,r,n){return!n||typeof n!="object"?{success:!1,error:new B(`${i} must be an object`)}:{success:!0,value:n}}var Ui=f.object({$type:f.literal("blob"),ref:Gf.cid,mimeType:f.string(),size:f.number()}).strict(),cc=f.object({cid:f.string(),mimeType:f.string()}).strict(),Vi=f.union([Ui,cc]),Ve=class{constructor(e,i,r,n){this.ref=e,this.mimeType=i,this.size=r,this.original=n??{$type:"blob",ref:e,mimeType:i,size:r}}static asBlobRef(e){return It.is(e,Vi)?Ve.fromJsonRef(e):null}static fromJsonRef(e){return It.is(e,Ui)?new Ve(e.ref,e.mimeType,e.size):new Ve(M.parse(e.cid),e.mimeType,-1,e)}ipld(){return{$type:"blob",ref:this.ref,mimeType:this.mimeType,size:this.size}}toJSON(){return zt(this.ipld())}};function dc(e,i,r,n){return!n||!(n instanceof Ve)?{success:!1,error:new B(`${i} should be a blob ref`)}:{success:!0,value:n}}function mc(e,i,r,n){switch(r.type){case"boolean":return Si(e,i,r,n);case"integer":return wi(e,i,r,n);case"string":return Bi(e,i,r,n);case"bytes":return ki(e,i,r,n);case"cid-link":return xi(e,i,r,n);case"unknown":return Ki(e,i,r,n);case"object":return yt(e,i,r,n);case"array":return Di(e,i,r,n);case"blob":return dc(e,i,r,n);default:return{success:!1,error:new B(`Unexpected lexicon type: ${r.type}`)}}}function Di(e,i,r,n){if(!Array.isArray(n))return{success:!1,error:new B(`${i} must be an array`)};if(typeof r.maxLength=="number"&&n.length>r.maxLength)return{success:!1,error:new B(`${i} must not have more than ${r.maxLength} elements`)};if(typeof r.minLength=="number"&&n.length<r.minLength)return{success:!1,error:new B(`${i} must not have fewer than ${r.minLength} elements`)};const s=r.items;for(let a=0;a<n.length;a++){const t=n[a],l=`${i}/${a}`,u=Tr(e,l,s,t);if(!u.success)return u}return{success:!0,value:n}}function yt(e,i,r,n){if(r=r,!n||typeof n!="object")return{success:!1,error:new B(`${i} must be an object`)};const s=new Set(r.required),a=new Set(r.nullable);let t=n;if(typeof r.properties=="object")for(const l in r.properties){if(n[l]===null&&a.has(l))continue;const u=r.properties[l],y=`${i}/${l}`,b=Tr(e,y,u,n[l]),A=b.success?b.value:n[l],K=typeof A>"u";if(K&&s.has(l))return{success:!1,error:new B(`${i} must have the property "${l}"`)};if(!K&&!b.success)return b;A!==n[l]&&(t===n&&(t={...n}),t[l]=A)}return{success:!0,value:t}}function Z(e,i){if(e.split("#").length>2)throw new Error("Uri can only have one hash segment");if(e.startsWith("lex:"))return e;if(e.startsWith("#")){if(!i)throw new Error(`Unable to resolve uri without anchor: ${e}`);return`${i}${e}`}return`lex:${e}`}function Tr(e,i,r,n,s=!1){let a,t;if(r.type==="union"){if(!Bc(n))return{success:!1,error:new B(`${i} must be an object which includes the "$type" property`)};if(yc(r.refs,n.$type))t=Ni(e,{type:"ref",ref:n.$type});else return r.closed?{success:!1,error:new B(`${i} $type must be one of ${r.refs.join(", ")}`)}:{success:!0,value:n}}else t=Ni(e,r);for(const l of t){const u=s?yt(e,i,l,n):mc(e,i,l,n);if(u.success)return u;a??(a=u.error)}return t.length>1?{success:!1,error:new B(`${i} did not match any of the expected definitions`)}:{success:!1,error:a}}function vr(e,i,r,n,s=!1){const a=Tr(e,i,r,n,s);if(!a.success)throw a.error;return a.value}function Ni(e,i){return i.type==="ref"?[e.getDefOrThrow(i.ref)]:i.type==="union"?i.refs.map(r=>e.getDefOrThrow(r)).flat():[i]}function Pi(e,i){if(e.required!==void 0){if(!Array.isArray(e.required)){i.addIssue({code:f.ZodIssueCode.invalid_type,received:typeof e.required,expected:"array"});return}if(e.properties===void 0){e.required.length>0&&i.addIssue({code:f.ZodIssueCode.custom,message:"Required fields defined but no properties defined"});return}for(const r of e.required)e.properties[r]===void 0&&i.addIssue({code:f.ZodIssueCode.custom,message:`Required field "${r}" not defined`})}}var yc=(e,i)=>{const r=Z(i);return e.includes(r)?!0:r.endsWith("#main")?e.includes(r.replace("#main","")):e.includes(r+"#main")},Ii=f.object({type:f.literal("boolean"),description:f.string().optional(),default:f.boolean().optional(),const:f.boolean().optional()}).strict(),ji=f.object({type:f.literal("integer"),description:f.string().optional(),default:f.number().int().optional(),minimum:f.number().int().optional(),maximum:f.number().int().optional(),enum:f.number().int().array().optional(),const:f.number().int().optional()}).strict(),Ec=f.enum(["datetime","uri","at-uri","did","handle","at-identifier","nsid","cid","language"]),qi=f.object({type:f.literal("string"),format:Ec.optional(),description:f.string().optional(),default:f.string().optional(),minLength:f.number().int().optional(),maxLength:f.number().int().optional(),minGraphemes:f.number().int().optional(),maxGraphemes:f.number().int().optional(),enum:f.string().array().optional(),const:f.string().optional(),knownValues:f.string().array().optional()}).strict(),Fi=f.object({type:f.literal("unknown"),description:f.string().optional()}).strict(),Ht=f.discriminatedUnion("type",[Ii,ji,qi,Fi]),Mi=f.object({type:f.literal("bytes"),description:f.string().optional(),maxLength:f.number().optional(),minLength:f.number().optional()}).strict(),$i=f.object({type:f.literal("cid-link"),description:f.string().optional()}).strict(),Oi=f.discriminatedUnion("type",[Mi,$i]),hc=f.object({type:f.literal("ref"),description:f.string().optional(),ref:f.string()}).strict(),Rc=f.object({type:f.literal("union"),description:f.string().optional(),refs:f.string().array(),closed:f.boolean().optional()}).strict(),Zt=f.discriminatedUnion("type",[hc,Rc]),Lr=f.object({type:f.literal("blob"),description:f.string().optional(),accept:f.string().array().optional(),maxSize:f.number().optional()}).strict(),Cr=f.object({type:f.literal("array"),description:f.string().optional(),items:f.union([Ht,Oi,Lr,Zt]),minLength:f.number().int().optional(),maxLength:f.number().int().optional()}).strict(),gc=Cr.merge(f.object({items:Ht}).strict()),bc=f.object({type:f.literal("token"),description:f.string().optional()}).strict(),Wt=f.object({type:f.literal("object"),description:f.string().optional(),required:f.string().array().optional(),nullable:f.string().array().optional(),properties:f.record(f.union([Zt,Oi,Cr,Lr,Ht]))}).strict().superRefine(Pi),_r=f.object({type:f.literal("params"),description:f.string().optional(),required:f.string().array().optional(),properties:f.record(f.union([Ht,gc]))}).strict().superRefine(Pi),Sr=f.object({description:f.string().optional(),encoding:f.string(),schema:f.union([Zt,Wt]).optional()}).strict(),Ac=f.object({description:f.string().optional(),schema:f.union([Zt,Wt]).optional()}).strict(),wr=f.object({name:f.string(),description:f.string().optional()}).strict(),Tc=f.object({type:f.literal("query"),description:f.string().optional(),parameters:_r.optional(),output:Sr.optional(),errors:wr.array().optional()}).strict(),vc=f.object({type:f.literal("procedure"),description:f.string().optional(),parameters:_r.optional(),input:Sr.optional(),output:Sr.optional(),errors:wr.array().optional()}).strict(),Lc=f.object({type:f.literal("subscription"),description:f.string().optional(),parameters:_r.optional(),message:Ac.optional(),errors:wr.array().optional()}).strict(),Cc=f.object({type:f.literal("record"),description:f.string().optional(),key:f.string().optional(),record:Wt}).strict(),_c=f.custom(e=>{if(!(!e||typeof e!="object")&&e.type!==void 0)switch(e.type){case"record":return Cc.parse(e);case"query":return Tc.parse(e);case"procedure":return vc.parse(e);case"subscription":return Lc.parse(e);case"blob":return Lr.parse(e);case"array":return Cr.parse(e);case"token":return bc.parse(e);case"object":return Wt.parse(e);case"boolean":return Ii.parse(e);case"integer":return ji.parse(e);case"string":return qi.parse(e);case"bytes":return Mi.parse(e);case"cid-link":return $i.parse(e);case"unknown":return Fi.parse(e)}},e=>!e||typeof e!="object"?{message:"Must be an object",fatal:!0}:e.type===void 0?{message:"Must have a type",fatal:!0}:{message:`Invalid type: ${e.type} must be one of: record, query, procedure, subscription, blob, array, token, object, boolean, integer, string, bytes, cid-link, unknown`,fatal:!0});f.object({lexicon:f.literal(1),id:f.string().refine(e=>Ie.isValid(e),{message:"Must be a valid NSID"}),revision:f.number().optional(),description:f.string().optional(),defs:f.record(_c)}).strict().superRefine((e,i)=>{for(const r in e.defs){const n=e.defs[r];r!=="main"&&(n.type==="record"||n.type==="procedure"||n.type==="query"||n.type==="subscription")&&i.addIssue({code:f.ZodIssueCode.custom,message:"Records, procedures, queries, and subscriptions must be the main definition."})}});function Gi(e){return e!==null&&typeof e=="object"}function Sc(e,i){return i in e}var wc=f.object({$type:f.string()});function Bc(e){return wc.safeParse(e).success}var B=class extends Error{},Xi=class extends Error{},kc=class extends Error{};function xc(e,i,r,n){const s=n&&typeof n=="object"?n:{},a=new Set(r.required??[]);let t=s;if(typeof r.properties=="object")for(const l in r.properties){const u=r.properties[l],y=u.type==="array"?Di(e,l,u,s[l]):fc(e,l,u,s[l]),b=y.success?y.value:s[l],A=typeof b>"u";if(A&&a.has(l))return{success:!1,error:new B(`${i} must have the property "${l}"`)};if(!A&&!y.success)return y;b!==s[l]&&(t===s&&(t={...s}),t[l]=b)}return{success:!0,value:t}}function Kc(e,i,r){const n=yt(e,"Record",i.record,r);if(!n.success)throw n.error;return n.value}function Uc(e,i,r){if(i.parameters){const n=xc(e,"Params",i.parameters,r);if(!n.success)throw n.error;return n.value}}function Vc(e,i,r){var n;if((n=i.input)!=null&&n.schema)return vr(e,"Input",i.input.schema,r,!0)}function Dc(e,i,r){var n;if((n=i.output)!=null&&n.schema)return vr(e,"Output",i.output.schema,r,!0)}function Nc(e,i,r){var n;if((n=i.message)!=null&&n.schema)return vr(e,"Message",i.message.schema,r,!0)}var zi=class{constructor(e){if(this.docs=new Map,this.defs=new Map,e!=null&&e.length)for(const i of e)this.add(i)}add(e){const i=Z(e.id);if(this.docs.has(i))throw new Error(`${i} has already been registered`);Br(e,i),this.docs.set(i,e);for(const[r,n]of Hi(e))this.defs.set(r,n)}remove(e){e=Z(e);const i=this.docs.get(e);if(!i)throw new Error(`Unable to remove "${e}": does not exist`);for(const[r,n]of Hi(i))this.defs.delete(r);this.docs.delete(e)}get(e){return e=Z(e),this.docs.get(e)}getDef(e){return e=Z(e),this.defs.get(e)}getDefOrThrow(e,i){const r=this.getDef(e);if(!r)throw new kc(`Lexicon not found: ${e}`);if(i&&!i.includes(r.type))throw new Xi(`Not a ${i.join(" or ")} lexicon: ${e}`);return r}validate(e,i){e=Z(e);const r=this.getDefOrThrow(e,["record","object"]);if(!Gi(i))throw new B("Value must be an object");if(r.type==="record")return yt(this,"Record",r.record,i);if(r.type==="object")return yt(this,"Object",r,i);throw new Xi("Definition must be a record or object")}assertValidRecord(e,i){e=Z(e);const r=this.getDefOrThrow(e,["record"]);if(!Gi(i))throw new B("Record must be an object");if(!Sc(i,"$type")||typeof i.$type!="string")throw new B("Record/$type must be a string");const n=i.$type||"";if(Z(n)!==e)throw new B(`Invalid $type: must be ${e}, got ${n}`);return Kc(this,r,i)}assertValidXrpcParams(e,i){e=Z(e);const r=this.getDefOrThrow(e,["query","procedure","subscription"]);return Uc(this,r,i)}assertValidXrpcInput(e,i){e=Z(e);const r=this.getDefOrThrow(e,["procedure"]);return Vc(this,r,i)}assertValidXrpcOutput(e,i){e=Z(e);const r=this.getDefOrThrow(e,["query","procedure"]);return Dc(this,r,i)}assertValidXrpcMessage(e,i){e=Z(e);const r=this.getDefOrThrow(e,["subscription"]);return Nc(this,r,i)}resolveLexUri(e,i){return e=Z(e),Z(i,e)}};function*Hi(e){for(const i in e.defs)yield[`lex:${e.id}#${i}`,e.defs[i]],i==="main"&&(yield[`lex:${e.id}`,e.defs[i]])}function Br(e,i){for(const r in e)e.type==="ref"?e.ref=Z(e.ref,i):e.type==="union"?e.refs=e.refs.map(n=>Z(n,i)):Array.isArray(e[r])?e[r]=e[r].map(n=>typeof n=="string"?n.startsWith("#")?Z(n,i):n:n&&typeof n=="object"?Br(n,i):n):e[r]&&typeof e[r]=="object"&&(e[r]=Br(e[r],i));return e}var kr=e=>{if(Array.isArray(e))return e.map(i=>kr(i));if(e&&typeof e=="object"){if(e instanceof Ve)return e.original;if(M.asCID(e)||e instanceof Uint8Array)return e;const i={};for(const r of Object.keys(e))i[r]=kr(e[r]);return i}return e},xr=e=>{if(Array.isArray(e))return e.map(i=>xr(i));if(e&&typeof e=="object"){if((e.$type==="blob"||typeof e.cid=="string"&&typeof e.mimeType=="string")&&It.is(e,Vi))return Ve.fromJsonRef(e);if(M.asCID(e)||e instanceof Uint8Array)return e;const i={};for(const r of Object.keys(e))i[r]=xr(e[r]);return i}return e},Zi=e=>zt(kr(e)),Wi=e=>JSON.stringify(Zi(e)),Ji=e=>xr(br(e)),Qi=e=>Ji(JSON.parse(e)),Yi="did:plc:ar7c4by46qjdydhdevvrndac";function Kr(e){return e.trim().replace(/^#(?!\ufe0f)/,"").replace(/[\r\n\u00AD\u2060\u200D\u200C\u200B]+/,"")}var en=f.object({error:f.string().optional(),message:f.string().optional()}),tn=(e=>(e[e.Unknown=1]="Unknown",e[e.InvalidResponse=2]="InvalidResponse",e[e.Success=200]="Success",e[e.InvalidRequest=400]="InvalidRequest",e[e.AuthRequired=401]="AuthRequired",e[e.Forbidden=403]="Forbidden",e[e.XRPCNotSupported=404]="XRPCNotSupported",e[e.PayloadTooLarge=413]="PayloadTooLarge",e[e.RateLimitExceeded=429]="RateLimitExceeded",e[e.InternalServerError=500]="InternalServerError",e[e.MethodNotImplemented=501]="MethodNotImplemented",e[e.UpstreamFailure=502]="UpstreamFailure",e[e.NotEnoughResources=503]="NotEnoughResources",e[e.UpstreamTimeout=504]="UpstreamTimeout",e))(tn||{}),Pc={2:"InvalidResponse",200:"Success",400:"InvalidRequest",401:"AuthenticationRequired",403:"Forbidden",404:"XRPCNotSupported",413:"PayloadTooLarge",429:"RateLimitExceeded",500:"InternalServerError",501:"MethodNotImplemented",502:"UpstreamFailure",503:"NotEnoughResources",504:"UpstreamTimeout"},rn={2:"Invalid Response",200:"Success",400:"Invalid Request",401:"Authentication Required",403:"Forbidden",404:"XRPC Not Supported",413:"Payload Too Large",429:"Rate Limit Exceeded",500:"Internal Server Error",501:"Method Not Implemented",502:"Upstream Failure",503:"Not Enough Resources",504:"Upstream Timeout"},Ic=class{constructor(e,i){this.data=e,this.headers=i,this.success=!0}},g=class extends Error{constructor(e,i,r,n){super(r||i||rn[e]),this.status=e,this.error=i,this.success=!1,this.error||(this.error=Pc[e]),this.headers=n}},jc=class extends g{constructor(e,i,r){super(2,rn[2],"The server gave an invalid response and may be out of date."),this.lexiconNsid=e,this.validationError=i,this.responseBody=r}};function qc(e){return e.type==="procedure"?"post":"get"}function Fc(e,i,r,n){var a,t;const s=new URL(r);if(s.pathname=`/xrpc/${e}`,n)for(const[l,u]of Object.entries(n)){const y=(t=(a=i.parameters)==null?void 0:a.properties)==null?void 0:t[l];if(!y)throw new Error(`Invalid query parameter: ${l}`);u!==void 0&&(y.type==="array"?[].concat(u).forEach(A=>{s.searchParams.append(l,nn(y.items.type,A))}):s.searchParams.set(l,nn(y.type,u)))}return s.toString()}function nn(e,i){if(e==="string"||e==="unknown")return String(i);if(e==="float")return String(Number(i));if(e==="integer")return String(Number(i)|0);if(e==="boolean")return i?"true":"false";if(e==="datetime")return i instanceof Date?i.toISOString():String(i);throw new Error(`Unsupported query param type: ${e}`)}function Mc(e){const i={};for(const[r,n]of Object.entries(e))i[r.toLowerCase()]=n;return i}function $c(e,i,r){const n=(r==null?void 0:r.headers)||{};return e.type==="procedure"&&(r!=null&&r.encoding&&(n["Content-Type"]=r.encoding),i&&typeof i=="object"&&(n["Content-Type"]||(n["Content-Type"]="application/json"))),n}function Oc(e,i){if(!(!e["content-type"]||typeof i>"u"))return i instanceof ArrayBuffer?i:e["content-type"].startsWith("text/")?new TextEncoder().encode(i.toString()):e["content-type"].startsWith("application/json")?new TextEncoder().encode(Wi(i)):i}function Gc(e){let i;return e in tn?i=e:e>=100&&e<200?i=404:e>=200&&e<300?i=200:e>=300&&e<400?i=404:e>=400&&e<500?i=400:i=500,i}function Xc(e,i){if(e){if(e.includes("application/json")&&(i!=null&&i.byteLength))try{const r=new TextDecoder().decode(i);return Qi(r)}catch(r){throw new g(2,`Failed to parse response body: ${String(r)}`)}if(e.startsWith("text/")&&(i!=null&&i.byteLength))try{return new TextDecoder().decode(i)}catch(r){throw new g(2,`Failed to parse response body: ${String(r)}`)}}return i instanceof ArrayBuffer?new Uint8Array(i):i}var sn=class{constructor(){this.fetch=an,this.lex=new zi}async call(e,i,r,n,s){return this.service(e).call(i,r,n,s)}service(e){return new zc(this,e)}addLexicon(e){this.lex.add(e)}addLexicons(e){for(const i of e)this.addLexicon(i)}removeLexicon(e){this.lex.remove(e)}},zc=class{constructor(e,i){this.headers={},this.baseClient=e,this.uri=typeof i=="string"?new URL(i):i}setHeader(e,i){this.headers[e]=i}unsetHeader(e){delete this.headers[e]}async call(e,i,r,n){const s=this.baseClient.lex.getDefOrThrow(e);if(!s||s.type!=="query"&&s.type!=="procedure")throw new Error(`Invalid lexicon: ${e}. Must be a query or procedure.`);const a=qc(s),t=Fc(e,s,this.uri,i),l=$c(s,r,{headers:{...this.headers,...n==null?void 0:n.headers},encoding:n==null?void 0:n.encoding}),u=await this.baseClient.fetch(t,a,l,r),y=Gc(u.status);if(y===200){try{this.baseClient.lex.assertValidXrpcOutput(e,u.body)}catch(b){throw b instanceof B?new jc(e,b,u.body):b}return new Ic(u.body,u.headers)}else throw u.body&&Hc(u.body)?new g(y,u.body.error,u.body.message,u.headers):new g(y)}};async function an(e,i,r,n){try{const s=Mc(r),a={method:i,headers:s,body:Oc(s,n),duplex:"half"},t=await fetch(e,a),l=await t.arrayBuffer();return{status:t.status,headers:Object.fromEntries(t.headers.entries()),body:Xc(t.headers.get("content-type"),l)}}catch(s){throw new g(1,String(s))}}function Hc(e){return en.safeParse(e).success}new sn;var Zc={ComAtprotoAdminDefs:{lexicon:1,id:"com.atproto.admin.defs",defs:{statusAttr:{type:"object",required:["applied"],properties:{applied:{type:"boolean"},ref:{type:"string"}}},accountView:{type:"object",required:["did","handle","indexedAt"],properties:{did:{type:"string",format:"did"},handle:{type:"string",format:"handle"},email:{type:"string"},relatedRecords:{type:"array",items:{type:"unknown"}},indexedAt:{type:"string",format:"datetime"},invitedBy:{type:"ref",ref:"lex:com.atproto.server.defs#inviteCode"},invites:{type:"array",items:{type:"ref",ref:"lex:com.atproto.server.defs#inviteCode"}},invitesDisabled:{type:"boolean"},emailConfirmedAt:{type:"string",format:"datetime"},inviteNote:{type:"string"}}},repoRef:{type:"object",required:["did"],properties:{did:{type:"string",format:"did"}}},repoBlobRef:{type:"object",required:["did","cid"],properties:{did:{type:"string",format:"did"},cid:{type:"string",format:"cid"},recordUri:{type:"string",format:"at-uri"}}}}},ComAtprotoAdminDeleteAccount:{lexicon:1,id:"com.atproto.admin.deleteAccount",defs:{main:{type:"procedure",description:"Delete a user account as an administrator.",input:{encoding:"application/json",schema:{type:"object",required:["did"],properties:{did:{type:"string",format:"did"}}}}}}},ComAtprotoAdminDisableAccountInvites:{lexicon:1,id:"com.atproto.admin.disableAccountInvites",defs:{main:{type:"procedure",description:"Disable an account from receiving new invite codes, but does not invalidate existing codes.",input:{encoding:"application/json",schema:{type:"object",required:["account"],properties:{account:{type:"string",format:"did"},note:{type:"string",description:"Optional reason for disabled invites."}}}}}}},ComAtprotoAdminDisableInviteCodes:{lexicon:1,id:"com.atproto.admin.disableInviteCodes",defs:{main:{type:"procedure",description:"Disable some set of codes and/or all codes associated with a set of users.",input:{encoding:"application/json",schema:{type:"object",properties:{codes:{type:"array",items:{type:"string"}},accounts:{type:"array",items:{type:"string"}}}}}}}},ComAtprotoAdminEnableAccountInvites:{lexicon:1,id:"com.atproto.admin.enableAccountInvites",defs:{main:{type:"procedure",description:"Re-enable an account's ability to receive invite codes.",input:{encoding:"application/json",schema:{type:"object",required:["account"],properties:{account:{type:"string",format:"did"},note:{type:"string",description:"Optional reason for enabled invites."}}}}}}},ComAtprotoAdminGetAccountInfo:{lexicon:1,id:"com.atproto.admin.getAccountInfo",defs:{main:{type:"query",description:"Get details about an account.",parameters:{type:"params",required:["did"],properties:{did:{type:"string",format:"did"}}},output:{encoding:"application/json",schema:{type:"ref",ref:"lex:com.atproto.admin.defs#accountView"}}}}},ComAtprotoAdminGetAccountInfos:{lexicon:1,id:"com.atproto.admin.getAccountInfos",defs:{main:{type:"query",description:"Get details about some accounts.",parameters:{type:"params",required:["dids"],properties:{dids:{type:"array",items:{type:"string",format:"did"}}}},output:{encoding:"application/json",schema:{type:"object",required:["infos"],properties:{infos:{type:"array",items:{type:"ref",ref:"lex:com.atproto.admin.defs#accountView"}}}}}}}},ComAtprotoAdminGetInviteCodes:{lexicon:1,id:"com.atproto.admin.getInviteCodes",defs:{main:{type:"query",description:"Get an admin view of invite codes.",parameters:{type:"params",properties:{sort:{type:"string",knownValues:["recent","usage"],default:"recent"},limit:{type:"integer",minimum:1,maximum:500,default:100},cursor:{type:"string"}}},output:{encoding:"application/json",schema:{type:"object",required:["codes"],properties:{cursor:{type:"string"},codes:{type:"array",items:{type:"ref",ref:"lex:com.atproto.server.defs#inviteCode"}}}}}}}},ComAtprotoAdminGetSubjectStatus:{lexicon:1,id:"com.atproto.admin.getSubjectStatus",defs:{main:{type:"query",description:"Get the service-specific admin status of a subject (account, record, or blob).",parameters:{type:"params",properties:{did:{type:"string",format:"did"},uri:{type:"string",format:"at-uri"},blob:{type:"string",format:"cid"}}},output:{encoding:"application/json",schema:{type:"object",required:["subject"],properties:{subject:{type:"union",refs:["lex:com.atproto.admin.defs#repoRef","lex:com.atproto.repo.strongRef","lex:com.atproto.admin.defs#repoBlobRef"]},takedown:{type:"ref",ref:"lex:com.atproto.admin.defs#statusAttr"}}}}}}},ComAtprotoAdminSendEmail:{lexicon:1,id:"com.atproto.admin.sendEmail",defs:{main:{type:"procedure",description:"Send email to a user's account email address.",input:{encoding:"application/json",schema:{type:"object",required:["recipientDid","content","senderDid"],properties:{recipientDid:{type:"string",format:"did"},content:{type:"string"},subject:{type:"string"},senderDid:{type:"string",format:"did"},comment:{type:"string",description:"Additional comment by the sender that won't be used in the email itself but helpful to provide more context for moderators/reviewers"}}}},output:{encoding:"application/json",schema:{type:"object",required:["sent"],properties:{sent:{type:"boolean"}}}}}}},ComAtprotoAdminUpdateAccountEmail:{lexicon:1,id:"com.atproto.admin.updateAccountEmail",defs:{main:{type:"procedure",description:"Administrative action to update an account's email.",input:{encoding:"application/json",schema:{type:"object",required:["account","email"],properties:{account:{type:"string",format:"at-identifier",description:"The handle or DID of the repo."},email:{type:"string"}}}}}}},ComAtprotoAdminUpdateAccountHandle:{lexicon:1,id:"com.atproto.admin.updateAccountHandle",defs:{main:{type:"procedure",description:"Administrative action to update an account's handle.",input:{encoding:"application/json",schema:{type:"object",required:["did","handle"],properties:{did:{type:"string",format:"did"},handle:{type:"string",format:"handle"}}}}}}},ComAtprotoAdminUpdateAccountPassword:{lexicon:1,id:"com.atproto.admin.updateAccountPassword",defs:{main:{type:"procedure",description:"Update the password for a user account as an administrator.",input:{encoding:"application/json",schema:{type:"object",required:["did","password"],properties:{did:{type:"string",format:"did"},password:{type:"string"}}}}}}},ComAtprotoAdminUpdateSubjectStatus:{lexicon:1,id:"com.atproto.admin.updateSubjectStatus",defs:{main:{type:"procedure",description:"Update the service-specific admin status of a subject (account, record, or blob).",input:{encoding:"application/json",schema:{type:"object",required:["subject"],properties:{subject:{type:"union",refs:["lex:com.atproto.admin.defs#repoRef","lex:com.atproto.repo.strongRef","lex:com.atproto.admin.defs#repoBlobRef"]},takedown:{type:"ref",ref:"lex:com.atproto.admin.defs#statusAttr"}}}},output:{encoding:"application/json",schema:{type:"object",required:["subject"],properties:{subject:{type:"union",refs:["lex:com.atproto.admin.defs#repoRef","lex:com.atproto.repo.strongRef","lex:com.atproto.admin.defs#repoBlobRef"]},takedown:{type:"ref",ref:"lex:com.atproto.admin.defs#statusAttr"}}}}}}},ComAtprotoIdentityGetRecommendedDidCredentials:{lexicon:1,id:"com.atproto.identity.getRecommendedDidCredentials",defs:{main:{type:"query",description:"Describe the credentials that should be included in the DID doc of an account that is migrating to this service.",output:{encoding:"application/json",schema:{type:"object",properties:{rotationKeys:{description:"Recommended rotation keys for PLC dids. Should be undefined (or ignored) for did:webs.",type:"array",items:{type:"string"}},alsoKnownAs:{type:"array",items:{type:"string"}},verificationMethods:{type:"unknown"},services:{type:"unknown"}}}}}}},ComAtprotoIdentityRequestPlcOperationSignature:{lexicon:1,id:"com.atproto.identity.requestPlcOperationSignature",defs:{main:{type:"procedure",description:"Request an email with a code to in order to request a signed PLC operation. Requires Auth."}}},ComAtprotoIdentityResolveHandle:{lexicon:1,id:"com.atproto.identity.resolveHandle",defs:{main:{type:"query",description:"Resolves a handle (domain name) to a DID.",parameters:{type:"params",required:["handle"],properties:{handle:{type:"string",format:"handle",description:"The handle to resolve."}}},output:{encoding:"application/json",schema:{type:"object",required:["did"],properties:{did:{type:"string",format:"did"}}}}}}},ComAtprotoIdentitySignPlcOperation:{lexicon:1,id:"com.atproto.identity.signPlcOperation",defs:{main:{type:"procedure",description:"Signs a PLC operation to update some value(s) in the requesting DID's document.",input:{encoding:"application/json",schema:{type:"object",properties:{token:{description:"A token received through com.atproto.identity.requestPlcOperationSignature",type:"string"},rotationKeys:{type:"array",items:{type:"string"}},alsoKnownAs:{type:"array",items:{type:"string"}},verificationMethods:{type:"unknown"},services:{type:"unknown"}}}},output:{encoding:"application/json",schema:{type:"object",required:["operation"],properties:{operation:{type:"unknown",description:"A signed DID PLC operation."}}}}}}},ComAtprotoIdentitySubmitPlcOperation:{lexicon:1,id:"com.atproto.identity.submitPlcOperation",defs:{main:{type:"procedure",description:"Validates a PLC operation to ensure that it doesn't violate a service's constraints or get the identity into a bad state, then submits it to the PLC registry",input:{encoding:"application/json",schema:{type:"object",required:["operation"],properties:{operation:{type:"unknown"}}}}}}},ComAtprotoIdentityUpdateHandle:{lexicon:1,id:"com.atproto.identity.updateHandle",defs:{main:{type:"procedure",description:"Updates the current account's handle. Verifies handle validity, and updates did:plc document if necessary. Implemented by PDS, and requires auth.",input:{encoding:"application/json",schema:{type:"object",required:["handle"],properties:{handle:{type:"string",format:"handle",description:"The new handle."}}}}}}},ComAtprotoLabelDefs:{lexicon:1,id:"com.atproto.label.defs",defs:{label:{type:"object",description:"Metadata tag on an atproto resource (eg, repo or record).",required:["src","uri","val","cts"],properties:{ver:{type:"integer",description:"The AT Protocol version of the label object."},src:{type:"string",format:"did",description:"DID of the actor who created this label."},uri:{type:"string",format:"uri",description:"AT URI of the record, repository (account), or other resource that this label applies to."},cid:{type:"string",format:"cid",description:"Optionally, CID specifying the specific version of 'uri' resource this label applies to."},val:{type:"string",maxLength:128,description:"The short string name of the value or type of this label."},neg:{type:"boolean",description:"If true, this is a negation label, overwriting a previous label."},cts:{type:"string",format:"datetime",description:"Timestamp when this label was created."},exp:{type:"string",format:"datetime",description:"Timestamp at which this label expires (no longer applies)."},sig:{type:"bytes",description:"Signature of dag-cbor encoded label."}}},selfLabels:{type:"object",description:"Metadata tags on an atproto record, published by the author within the record.",required:["values"],properties:{values:{type:"array",items:{type:"ref",ref:"lex:com.atproto.label.defs#selfLabel"},maxLength:10}}},selfLabel:{type:"object",description:"Metadata tag on an atproto record, published by the author within the record. Note that schemas should use #selfLabels, not #selfLabel.",required:["val"],properties:{val:{type:"string",maxLength:128,description:"The short string name of the value or type of this label."}}},labelValueDefinition:{type:"object",description:"Declares a label value and its expected interpertations and behaviors.",required:["identifier","severity","blurs","locales"],properties:{identifier:{type:"string",description:"The value of the label being defined. Must only include lowercase ascii and the '-' character ([a-z-]+).",maxLength:100,maxGraphemes:100},severity:{type:"string",description:"How should a client visually convey this label? 'inform' means neutral and informational; 'alert' means negative and warning; 'none' means show nothing.",knownValues:["inform","alert","none"]},blurs:{type:"string",description:"What should this label hide in the UI, if applied? 'content' hides all of the target; 'media' hides the images/video/audio; 'none' hides nothing.",knownValues:["content","media","none"]},defaultSetting:{type:"string",description:"The default setting for this label.",knownValues:["ignore","warn","hide"],default:"warn"},adultOnly:{type:"boolean",description:"Does the user need to have adult content enabled in order to configure this label?"},locales:{type:"array",items:{type:"ref",ref:"lex:com.atproto.label.defs#labelValueDefinitionStrings"}}}},labelValueDefinitionStrings:{type:"object",description:"Strings which describe the label in the UI, localized into a specific language.",required:["lang","name","description"],properties:{lang:{type:"string",description:"The code of the language these strings are written in.",format:"language"},name:{type:"string",description:"A short human-readable name for the label.",maxGraphemes:64,maxLength:640},description:{type:"string",description:"A longer description of what the label means and why it might be applied.",maxGraphemes:1e4,maxLength:1e5}}},labelValue:{type:"string",knownValues:["!hide","!no-promote","!warn","!no-unauthenticated","dmca-violation","doxxing","porn","sexual","nudity","nsfl","gore"]}}},ComAtprotoLabelQueryLabels:{lexicon:1,id:"com.atproto.label.queryLabels",defs:{main:{type:"query",description:"Find labels relevant to the provided AT-URI patterns. Public endpoint for moderation services, though may return different or additional results with auth.",parameters:{type:"params",required:["uriPatterns"],properties:{uriPatterns:{type:"array",items:{type:"string"},description:"List of AT URI patterns to match (boolean 'OR'). Each may be a prefix (ending with '*'; will match inclusive of the string leading to '*'), or a full URI."},sources:{type:"array",items:{type:"string",format:"did"},description:"Optional list of label sources (DIDs) to filter on."},limit:{type:"integer",minimum:1,maximum:250,default:50},cursor:{type:"string"}}},output:{encoding:"application/json",schema:{type:"object",required:["labels"],properties:{cursor:{type:"string"},labels:{type:"array",items:{type:"ref",ref:"lex:com.atproto.label.defs#label"}}}}}}}},ComAtprotoLabelSubscribeLabels:{lexicon:1,id:"com.atproto.label.subscribeLabels",defs:{main:{type:"subscription",description:"Subscribe to stream of labels (and negations). Public endpoint implemented by mod services. Uses same sequencing scheme as repo event stream.",parameters:{type:"params",properties:{cursor:{type:"integer",description:"The last known event seq number to backfill from."}}},message:{schema:{type:"union",refs:["lex:com.atproto.label.subscribeLabels#labels","lex:com.atproto.label.subscribeLabels#info"]}},errors:[{name:"FutureCursor"}]},labels:{type:"object",required:["seq","labels"],properties:{seq:{type:"integer"},labels:{type:"array",items:{type:"ref",ref:"lex:com.atproto.label.defs#label"}}}},info:{type:"object",required:["name"],properties:{name:{type:"string",knownValues:["OutdatedCursor"]},message:{type:"string"}}}}},ComAtprotoModerationCreateReport:{lexicon:1,id:"com.atproto.moderation.createReport",defs:{main:{type:"procedure",description:"Submit a moderation report regarding an atproto account or record. Implemented by moderation services (with PDS proxying), and requires auth.",input:{encoding:"application/json",schema:{type:"object",required:["reasonType","subject"],properties:{reasonType:{type:"ref",description:"Indicates the broad category of violation the report is for.",ref:"lex:com.atproto.moderation.defs#reasonType"},reason:{type:"string",description:"Additional context about the content and violation."},subject:{type:"union",refs:["lex:com.atproto.admin.defs#repoRef","lex:com.atproto.repo.strongRef"]}}}},output:{encoding:"application/json",schema:{type:"object",required:["id","reasonType","subject","reportedBy","createdAt"],properties:{id:{type:"integer"},reasonType:{type:"ref",ref:"lex:com.atproto.moderation.defs#reasonType"},reason:{type:"string",maxGraphemes:2e3,maxLength:2e4},subject:{type:"union",refs:["lex:com.atproto.admin.defs#repoRef","lex:com.atproto.repo.strongRef"]},reportedBy:{type:"string",format:"did"},createdAt:{type:"string",format:"datetime"}}}}}}},ComAtprotoModerationDefs:{lexicon:1,id:"com.atproto.moderation.defs",defs:{reasonType:{type:"string",knownValues:["com.atproto.moderation.defs#reasonSpam","com.atproto.moderation.defs#reasonViolation","com.atproto.moderation.defs#reasonMisleading","com.atproto.moderation.defs#reasonSexual","com.atproto.moderation.defs#reasonRude","com.atproto.moderation.defs#reasonOther","com.atproto.moderation.defs#reasonAppeal"]},reasonSpam:{type:"token",description:"Spam: frequent unwanted promotion, replies, mentions"},reasonViolation:{type:"token",description:"Direct violation of server rules, laws, terms of service"},reasonMisleading:{type:"token",description:"Misleading identity, affiliation, or content"},reasonSexual:{type:"token",description:"Unwanted or mislabeled sexual content"},reasonRude:{type:"token",description:"Rude, harassing, explicit, or otherwise unwelcoming behavior"},reasonOther:{type:"token",description:"Other: reports not falling under another report category"},reasonAppeal:{type:"token",description:"Appeal: appeal a previously taken moderation action"}}},ComAtprotoRepoApplyWrites:{lexicon:1,id:"com.atproto.repo.applyWrites",defs:{main:{type:"procedure",description:"Apply a batch transaction of repository creates, updates, and deletes. Requires auth, implemented by PDS.",input:{encoding:"application/json",schema:{type:"object",required:["repo","writes"],properties:{repo:{type:"string",format:"at-identifier",description:"The handle or DID of the repo (aka, current account)."},validate:{type:"boolean",default:!0,description:"Can be set to 'false' to skip Lexicon schema validation of record data, for all operations."},writes:{type:"array",items:{type:"union",refs:["lex:com.atproto.repo.applyWrites#create","lex:com.atproto.repo.applyWrites#update","lex:com.atproto.repo.applyWrites#delete"],closed:!0}},swapCommit:{type:"string",description:"If provided, the entire operation will fail if the current repo commit CID does not match this value. Used to prevent conflicting repo mutations.",format:"cid"}}}},errors:[{name:"InvalidSwap",description:"Indicates that the 'swapCommit' parameter did not match current commit."}]},create:{type:"object",description:"Operation which creates a new record.",required:["collection","value"],properties:{collection:{type:"string",format:"nsid"},rkey:{type:"string",maxLength:15},value:{type:"unknown"}}},update:{type:"object",description:"Operation which updates an existing record.",required:["collection","rkey","value"],properties:{collection:{type:"string",format:"nsid"},rkey:{type:"string"},value:{type:"unknown"}}},delete:{type:"object",description:"Operation which deletes an existing record.",required:["collection","rkey"],properties:{collection:{type:"string",format:"nsid"},rkey:{type:"string"}}}}},ComAtprotoRepoCreateRecord:{lexicon:1,id:"com.atproto.repo.createRecord",defs:{main:{type:"procedure",description:"Create a single new repository record. Requires auth, implemented by PDS.",input:{encoding:"application/json",schema:{type:"object",required:["repo","collection","record"],properties:{repo:{type:"string",format:"at-identifier",description:"The handle or DID of the repo (aka, current account)."},collection:{type:"string",format:"nsid",description:"The NSID of the record collection."},rkey:{type:"string",description:"The Record Key.",maxLength:15},validate:{type:"boolean",default:!0,description:"Can be set to 'false' to skip Lexicon schema validation of record data."},record:{type:"unknown",description:"The record itself. Must contain a $type field."},swapCommit:{type:"string",format:"cid",description:"Compare and swap with the previous commit by CID."}}}},output:{encoding:"application/json",schema:{type:"object",required:["uri","cid"],properties:{uri:{type:"string",format:"at-uri"},cid:{type:"string",format:"cid"}}}},errors:[{name:"InvalidSwap",description:"Indicates that 'swapCommit' didn't match current repo commit."}]}}},ComAtprotoRepoDeleteRecord:{lexicon:1,id:"com.atproto.repo.deleteRecord",defs:{main:{type:"procedure",description:"Delete a repository record, or ensure it doesn't exist. Requires auth, implemented by PDS.",input:{encoding:"application/json",schema:{type:"object",required:["repo","collection","rkey"],properties:{repo:{type:"string",format:"at-identifier",description:"The handle or DID of the repo (aka, current account)."},collection:{type:"string",format:"nsid",description:"The NSID of the record collection."},rkey:{type:"string",description:"The Record Key."},swapRecord:{type:"string",format:"cid",description:"Compare and swap with the previous record by CID."},swapCommit:{type:"string",format:"cid",description:"Compare and swap with the previous commit by CID."}}}},errors:[{name:"InvalidSwap"}]}}},ComAtprotoRepoDescribeRepo:{lexicon:1,id:"com.atproto.repo.describeRepo",defs:{main:{type:"query",description:"Get information about an account and repository, including the list of collections. Does not require auth.",parameters:{type:"params",required:["repo"],properties:{repo:{type:"string",format:"at-identifier",description:"The handle or DID of the repo."}}},output:{encoding:"application/json",schema:{type:"object",required:["handle","did","didDoc","collections","handleIsCorrect"],properties:{handle:{type:"string",format:"handle"},did:{type:"string",format:"did"},didDoc:{type:"unknown",description:"The complete DID document for this account."},collections:{type:"array",description:"List of all the collections (NSIDs) for which this repo contains at least one record.",items:{type:"string",format:"nsid"}},handleIsCorrect:{type:"boolean",description:"Indicates if handle is currently valid (resolves bi-directionally)"}}}}}}},ComAtprotoRepoGetRecord:{lexicon:1,id:"com.atproto.repo.getRecord",defs:{main:{type:"query",description:"Get a single record from a repository. Does not require auth.",parameters:{type:"params",required:["repo","collection","rkey"],properties:{repo:{type:"string",format:"at-identifier",description:"The handle or DID of the repo."},collection:{type:"string",format:"nsid",description:"The NSID of the record collection."},rkey:{type:"string",description:"The Record Key."},cid:{type:"string",format:"cid",description:"The CID of the version of the record. If not specified, then return the most recent version."}}},output:{encoding:"application/json",schema:{type:"object",required:["uri","value"],properties:{uri:{type:"string",format:"at-uri"},cid:{type:"string",format:"cid"},value:{type:"unknown"}}}}}}},ComAtprotoRepoImportRepo:{lexicon:1,id:"com.atproto.repo.importRepo",defs:{main:{type:"procedure",description:"Import a repo in the form of a CAR file. Requires Content-Length HTTP header to be set.",input:{encoding:"application/vnd.ipld.car"}}}},ComAtprotoRepoListMissingBlobs:{lexicon:1,id:"com.atproto.repo.listMissingBlobs",defs:{main:{type:"query",description:"Returns a list of missing blobs for the requesting account. Intended to be used in the account migration flow.",parameters:{type:"params",properties:{limit:{type:"integer",minimum:1,maximum:1e3,default:500},cursor:{type:"string"}}},output:{encoding:"application/json",schema:{type:"object",required:["blobs"],properties:{cursor:{type:"string"},blobs:{type:"array",items:{type:"ref",ref:"lex:com.atproto.repo.listMissingBlobs#recordBlob"}}}}}},recordBlob:{type:"object",required:["cid","recordUri"],properties:{cid:{type:"string",format:"cid"},recordUri:{type:"string",format:"at-uri"}}}}},ComAtprotoRepoListRecords:{lexicon:1,id:"com.atproto.repo.listRecords",defs:{main:{type:"query",description:"List a range of records in a repository, matching a specific collection. Does not require auth.",parameters:{type:"params",required:["repo","collection"],properties:{repo:{type:"string",format:"at-identifier",description:"The handle or DID of the repo."},collection:{type:"string",format:"nsid",description:"The NSID of the record type."},limit:{type:"integer",minimum:1,maximum:100,default:50,description:"The number of records to return."},cursor:{type:"string"},rkeyStart:{type:"string",description:"DEPRECATED: The lowest sort-ordered rkey to start from (exclusive)"},rkeyEnd:{type:"string",description:"DEPRECATED: The highest sort-ordered rkey to stop at (exclusive)"},reverse:{type:"boolean",description:"Flag to reverse the order of the returned records."}}},output:{encoding:"application/json",schema:{type:"object",required:["records"],properties:{cursor:{type:"string"},records:{type:"array",items:{type:"ref",ref:"lex:com.atproto.repo.listRecords#record"}}}}}},record:{type:"object",required:["uri","cid","value"],properties:{uri:{type:"string",format:"at-uri"},cid:{type:"string",format:"cid"},value:{type:"unknown"}}}}},ComAtprotoRepoPutRecord:{lexicon:1,id:"com.atproto.repo.putRecord",defs:{main:{type:"procedure",description:"Write a repository record, creating or updating it as needed. Requires auth, implemented by PDS.",input:{encoding:"application/json",schema:{type:"object",required:["repo","collection","rkey","record"],nullable:["swapRecord"],properties:{repo:{type:"string",format:"at-identifier",description:"The handle or DID of the repo (aka, current account)."},collection:{type:"string",format:"nsid",description:"The NSID of the record collection."},rkey:{type:"string",description:"The Record Key.",maxLength:15},validate:{type:"boolean",default:!0,description:"Can be set to 'false' to skip Lexicon schema validation of record data."},record:{type:"unknown",description:"The record to write."},swapRecord:{type:"string",format:"cid",description:"Compare and swap with the previous record by CID. WARNING: nullable and optional field; may cause problems with golang implementation"},swapCommit:{type:"string",format:"cid",description:"Compare and swap with the previous commit by CID."}}}},output:{encoding:"application/json",schema:{type:"object",required:["uri","cid"],properties:{uri:{type:"string",format:"at-uri"},cid:{type:"string",format:"cid"}}}},errors:[{name:"InvalidSwap"}]}}},ComAtprotoRepoStrongRef:{lexicon:1,id:"com.atproto.repo.strongRef",description:"A URI with a content-hash fingerprint.",defs:{main:{type:"object",required:["uri","cid"],properties:{uri:{type:"string",format:"at-uri"},cid:{type:"string",format:"cid"}}}}},ComAtprotoRepoUploadBlob:{lexicon:1,id:"com.atproto.repo.uploadBlob",defs:{main:{type:"procedure",description:"Upload a new blob, to be referenced from a repository record. The blob will be deleted if it is not referenced within a time window (eg, minutes). Blob restrictions (mimetype, size, etc) are enforced when the reference is created. Requires auth, implemented by PDS.",input:{encoding:"*/*"},output:{encoding:"application/json",schema:{type:"object",required:["blob"],properties:{blob:{type:"blob"}}}}}}},ComAtprotoServerActivateAccount:{lexicon:1,id:"com.atproto.server.activateAccount",defs:{main:{type:"procedure",description:"Activates a currently deactivated account. Used to finalize account migration after the account's repo is imported and identity is setup."}}},ComAtprotoServerCheckAccountStatus:{lexicon:1,id:"com.atproto.server.checkAccountStatus",defs:{main:{type:"query",description:"Returns the status of an account, especially as pertaining to import or recovery. Can be called many times over the course of an account migration. Requires auth and can only be called pertaining to oneself.",output:{encoding:"application/json",schema:{type:"object",required:["activated","validDid","repoCommit","repoRev","repoBlocks","indexedRecords","privateStateValues","expectedBlobs","importedBlobs"],properties:{activated:{type:"boolean"},validDid:{type:"boolean"},repoCommit:{type:"string",format:"cid"},repoRev:{type:"string"},repoBlocks:{type:"integer"},indexedRecords:{type:"integer"},privateStateValues:{type:"integer"},expectedBlobs:{type:"integer"},importedBlobs:{type:"integer"}}}}}}},ComAtprotoServerConfirmEmail:{lexicon:1,id:"com.atproto.server.confirmEmail",defs:{main:{type:"procedure",description:"Confirm an email using a token from com.atproto.server.requestEmailConfirmation.",input:{encoding:"application/json",schema:{type:"object",required:["email","token"],properties:{email:{type:"string"},token:{type:"string"}}}},errors:[{name:"AccountNotFound"},{name:"ExpiredToken"},{name:"InvalidToken"},{name:"InvalidEmail"}]}}},ComAtprotoServerCreateAccount:{lexicon:1,id:"com.atproto.server.createAccount",defs:{main:{type:"procedure",description:"Create an account. Implemented by PDS.",input:{encoding:"application/json",schema:{type:"object",required:["handle"],properties:{email:{type:"string"},handle:{type:"string",format:"handle",description:"Requested handle for the account."},did:{type:"string",format:"did",description:"Pre-existing atproto DID, being imported to a new account."},inviteCode:{type:"string"},verificationCode:{type:"string"},verificationPhone:{type:"string"},password:{type:"string",description:"Initial account password. May need to meet instance-specific password strength requirements."},recoveryKey:{type:"string",description:"DID PLC rotation key (aka, recovery key) to be included in PLC creation operation."},plcOp:{type:"unknown",description:"A signed DID PLC operation to be submitted as part of importing an existing account to this instance. NOTE: this optional field may be updated when full account migration is implemented."}}}},output:{encoding:"application/json",schema:{type:"object",description:"Account login session returned on successful account creation.",required:["accessJwt","refreshJwt","handle","did"],properties:{accessJwt:{type:"string"},refreshJwt:{type:"string"},handle:{type:"string",format:"handle"},did:{type:"string",format:"did",description:"The DID of the new account."},didDoc:{type:"unknown",description:"Complete DID document."}}}},errors:[{name:"InvalidHandle"},{name:"InvalidPassword"},{name:"InvalidInviteCode"},{name:"HandleNotAvailable"},{name:"UnsupportedDomain"},{name:"UnresolvableDid"},{name:"IncompatibleDidDoc"}]}}},ComAtprotoServerCreateAppPassword:{lexicon:1,id:"com.atproto.server.createAppPassword",defs:{main:{type:"procedure",description:"Create an App Password.",input:{encoding:"application/json",schema:{type:"object",required:["name"],properties:{name:{type:"string",description:"A short name for the App Password, to help distinguish them."}}}},output:{encoding:"application/json",schema:{type:"ref",ref:"lex:com.atproto.server.createAppPassword#appPassword"}},errors:[{name:"AccountTakedown"}]},appPassword:{type:"object",required:["name","password","createdAt"],properties:{name:{type:"string"},password:{type:"string"},createdAt:{type:"string",format:"datetime"}}}}},ComAtprotoServerCreateInviteCode:{lexicon:1,id:"com.atproto.server.createInviteCode",defs:{main:{type:"procedure",description:"Create an invite code.",input:{encoding:"application/json",schema:{type:"object",required:["useCount"],properties:{useCount:{type:"integer"},forAccount:{type:"string",format:"did"}}}},output:{encoding:"application/json",schema:{type:"object",required:["code"],properties:{code:{type:"string"}}}}}}},ComAtprotoServerCreateInviteCodes:{lexicon:1,id:"com.atproto.server.createInviteCodes",defs:{main:{type:"procedure",description:"Create invite codes.",input:{encoding:"application/json",schema:{type:"object",required:["codeCount","useCount"],properties:{codeCount:{type:"integer",default:1},useCount:{type:"integer"},forAccounts:{type:"array",items:{type:"string",format:"did"}}}}},output:{encoding:"application/json",schema:{type:"object",required:["codes"],properties:{codes:{type:"array",items:{type:"ref",ref:"lex:com.atproto.server.createInviteCodes#accountCodes"}}}}}},accountCodes:{type:"object",required:["account","codes"],properties:{account:{type:"string"},codes:{type:"array",items:{type:"string"}}}}}},ComAtprotoServerCreateSession:{lexicon:1,id:"com.atproto.server.createSession",defs:{main:{type:"procedure",description:"Create an authentication session.",input:{encoding:"application/json",schema:{type:"object",required:["identifier","password"],properties:{identifier:{type:"string",description:"Handle or other identifier supported by the server for the authenticating user."},password:{type:"string"}}}},output:{encoding:"application/json",schema:{type:"object",required:["accessJwt","refreshJwt","handle","did"],properties:{accessJwt:{type:"string"},refreshJwt:{type:"string"},handle:{type:"string",format:"handle"},did:{type:"string",format:"did"},didDoc:{type:"unknown"},email:{type:"string"},emailConfirmed:{type:"boolean"}}}},errors:[{name:"AccountTakedown"}]}}},ComAtprotoServerDeactivateAccount:{lexicon:1,id:"com.atproto.server.deactivateAccount",defs:{main:{type:"procedure",description:"Deactivates a currently active account. Stops serving of repo, and future writes to repo until reactivated. Used to finalize account migration with the old host after the account has been activated on the new host.",input:{encoding:"application/json",schema:{type:"object",properties:{deleteAfter:{type:"string",format:"datetime",description:"A recommendation to server as to how long they should hold onto the deactivated account before deleting."}}}}}}},ComAtprotoServerDefs:{lexicon:1,id:"com.atproto.server.defs",defs:{inviteCode:{type:"object",required:["code","available","disabled","forAccount","createdBy","createdAt","uses"],properties:{code:{type:"string"},available:{type:"integer"},disabled:{type:"boolean"},forAccount:{type:"string"},createdBy:{type:"string"},createdAt:{type:"string",format:"datetime"},uses:{type:"array",items:{type:"ref",ref:"lex:com.atproto.server.defs#inviteCodeUse"}}}},inviteCodeUse:{type:"object",required:["usedBy","usedAt"],properties:{usedBy:{type:"string",format:"did"},usedAt:{type:"string",format:"datetime"}}}}},ComAtprotoServerDeleteAccount:{lexicon:1,id:"com.atproto.server.deleteAccount",defs:{main:{type:"procedure",description:"Delete an actor's account with a token and password. Can only be called after requesting a deletion token. Requires auth.",input:{encoding:"application/json",schema:{type:"object",required:["did","password","token"],properties:{did:{type:"string",format:"did"},password:{type:"string"},token:{type:"string"}}}},errors:[{name:"ExpiredToken"},{name:"InvalidToken"}]}}},ComAtprotoServerDeleteSession:{lexicon:1,id:"com.atproto.server.deleteSession",defs:{main:{type:"procedure",description:"Delete the current session. Requires auth."}}},ComAtprotoServerDescribeServer:{lexicon:1,id:"com.atproto.server.describeServer",defs:{main:{type:"query",description:"Describes the server's account creation requirements and capabilities. Implemented by PDS.",output:{encoding:"application/json",schema:{type:"object",required:["did","availableUserDomains"],properties:{inviteCodeRequired:{type:"boolean",description:"If true, an invite code must be supplied to create an account on this instance."},phoneVerificationRequired:{type:"boolean",description:"If true, a phone verification token must be supplied to create an account on this instance."},availableUserDomains:{type:"array",description:"List of domain suffixes that can be used in account handles.",items:{type:"string"}},links:{type:"ref",description:"URLs of service policy documents.",ref:"lex:com.atproto.server.describeServer#links"},contact:{type:"ref",description:"Contact information",ref:"lex:com.atproto.server.describeServer#contact"},did:{type:"string",format:"did"}}}}},links:{type:"object",properties:{privacyPolicy:{type:"string"},termsOfService:{type:"string"}}},contact:{type:"object",properties:{email:{type:"string"}}}}},ComAtprotoServerGetAccountInviteCodes:{lexicon:1,id:"com.atproto.server.getAccountInviteCodes",defs:{main:{type:"query",description:"Get all invite codes for the current account. Requires auth.",parameters:{type:"params",properties:{includeUsed:{type:"boolean",default:!0},createAvailable:{type:"boolean",default:!0,description:"Controls whether any new 'earned' but not 'created' invites should be created."}}},output:{encoding:"application/json",schema:{type:"object",required:["codes"],properties:{codes:{type:"array",items:{type:"ref",ref:"lex:com.atproto.server.defs#inviteCode"}}}}},errors:[{name:"DuplicateCreate"}]}}},ComAtprotoServerGetServiceAuth:{lexicon:1,id:"com.atproto.server.getServiceAuth",defs:{main:{type:"query",description:"Get a signed token on behalf of the requesting DID for the requested service.",parameters:{type:"params",required:["aud"],properties:{aud:{type:"string",format:"did",description:"The DID of the service that the token will be used to authenticate with"}}},output:{encoding:"application/json",schema:{type:"object",required:["token"],properties:{token:{type:"string"}}}}}}},ComAtprotoServerGetSession:{lexicon:1,id:"com.atproto.server.getSession",defs:{main:{type:"query",description:"Get information about the current auth session. Requires auth.",output:{encoding:"application/json",schema:{type:"object",required:["handle","did"],properties:{handle:{type:"string",format:"handle"},did:{type:"string",format:"did"},email:{type:"string"},emailConfirmed:{type:"boolean"},didDoc:{type:"unknown"}}}}}}},ComAtprotoServerListAppPasswords:{lexicon:1,id:"com.atproto.server.listAppPasswords",defs:{main:{type:"query",description:"List all App Passwords.",output:{encoding:"application/json",schema:{type:"object",required:["passwords"],properties:{passwords:{type:"array",items:{type:"ref",ref:"lex:com.atproto.server.listAppPasswords#appPassword"}}}}},errors:[{name:"AccountTakedown"}]},appPassword:{type:"object",required:["name","createdAt"],properties:{name:{type:"string"},createdAt:{type:"string",format:"datetime"}}}}},ComAtprotoServerRefreshSession:{lexicon:1,id:"com.atproto.server.refreshSession",defs:{main:{type:"procedure",description:"Refresh an authentication session. Requires auth using the 'refreshJwt' (not the 'accessJwt').",output:{encoding:"application/json",schema:{type:"object",required:["accessJwt","refreshJwt","handle","did"],properties:{accessJwt:{type:"string"},refreshJwt:{type:"string"},handle:{type:"string",format:"handle"},did:{type:"string",format:"did"},didDoc:{type:"unknown"}}}},errors:[{name:"AccountTakedown"}]}}},ComAtprotoServerRequestAccountDelete:{lexicon:1,id:"com.atproto.server.requestAccountDelete",defs:{main:{type:"procedure",description:"Initiate a user account deletion via email."}}},ComAtprotoServerRequestEmailConfirmation:{lexicon:1,id:"com.atproto.server.requestEmailConfirmation",defs:{main:{type:"procedure",description:"Request an email with a code to confirm ownership of email."}}},ComAtprotoServerRequestEmailUpdate:{lexicon:1,id:"com.atproto.server.requestEmailUpdate",defs:{main:{type:"procedure",description:"Request a token in order to update email.",output:{encoding:"application/json",schema:{type:"object",required:["tokenRequired"],properties:{tokenRequired:{type:"boolean"}}}}}}},ComAtprotoServerRequestPasswordReset:{lexicon:1,id:"com.atproto.server.requestPasswordReset",defs:{main:{type:"procedure",description:"Initiate a user account password reset via email.",input:{encoding:"application/json",schema:{type:"object",required:["email"],properties:{email:{type:"string"}}}}}}},ComAtprotoServerReserveSigningKey:{lexicon:1,id:"com.atproto.server.reserveSigningKey",defs:{main:{type:"procedure",description:"Reserve a repo signing key, for use with account creation. Necessary so that a DID PLC update operation can be constructed during an account migraiton. Public and does not require auth; implemented by PDS. NOTE: this endpoint may change when full account migration is implemented.",input:{encoding:"application/json",schema:{type:"object",properties:{did:{type:"string",format:"did",description:"The DID to reserve a key for."}}}},output:{encoding:"application/json",schema:{type:"object",required:["signingKey"],properties:{signingKey:{type:"string",description:"The public key for the reserved signing key, in did:key serialization."}}}}}}},ComAtprotoServerResetPassword:{lexicon:1,id:"com.atproto.server.resetPassword",defs:{main:{type:"procedure",description:"Reset a user account password using a token.",input:{encoding:"application/json",schema:{type:"object",required:["token","password"],properties:{token:{type:"string"},password:{type:"string"}}}},errors:[{name:"ExpiredToken"},{name:"InvalidToken"}]}}},ComAtprotoServerRevokeAppPassword:{lexicon:1,id:"com.atproto.server.revokeAppPassword",defs:{main:{type:"procedure",description:"Revoke an App Password by name.",input:{encoding:"application/json",schema:{type:"object",required:["name"],properties:{name:{type:"string"}}}}}}},ComAtprotoServerUpdateEmail:{lexicon:1,id:"com.atproto.server.updateEmail",defs:{main:{type:"procedure",description:"Update an account's email.",input:{encoding:"application/json",schema:{type:"object",required:["email"],properties:{email:{type:"string"},token:{type:"string",description:"Requires a token from com.atproto.sever.requestEmailUpdate if the account's email has been confirmed."}}}},errors:[{name:"ExpiredToken"},{name:"InvalidToken"},{name:"TokenRequired"}]}}},ComAtprotoSyncGetBlob:{lexicon:1,id:"com.atproto.sync.getBlob",defs:{main:{type:"query",description:"Get a blob associated with a given account. Returns the full blob as originally uploaded. Does not require auth; implemented by PDS.",parameters:{type:"params",required:["did","cid"],properties:{did:{type:"string",format:"did",description:"The DID of the account."},cid:{type:"string",format:"cid",description:"The CID of the blob to fetch"}}},output:{encoding:"*/*"}}}},ComAtprotoSyncGetBlocks:{lexicon:1,id:"com.atproto.sync.getBlocks",defs:{main:{type:"query",description:"Get data blocks from a given repo, by CID. For example, intermediate MST nodes, or records. Does not require auth; implemented by PDS.",parameters:{type:"params",required:["did","cids"],properties:{did:{type:"string",format:"did",description:"The DID of the repo."},cids:{type:"array",items:{type:"string",format:"cid"}}}},output:{encoding:"application/vnd.ipld.car"}}}},ComAtprotoSyncGetCheckout:{lexicon:1,id:"com.atproto.sync.getCheckout",defs:{main:{type:"query",description:"DEPRECATED - please use com.atproto.sync.getRepo instead",parameters:{type:"params",required:["did"],properties:{did:{type:"string",format:"did",description:"The DID of the repo."}}},output:{encoding:"application/vnd.ipld.car"}}}},ComAtprotoSyncGetHead:{lexicon:1,id:"com.atproto.sync.getHead",defs:{main:{type:"query",description:"DEPRECATED - please use com.atproto.sync.getLatestCommit instead",parameters:{type:"params",required:["did"],properties:{did:{type:"string",format:"did",description:"The DID of the repo."}}},output:{encoding:"application/json",schema:{type:"object",required:["root"],properties:{root:{type:"string",format:"cid"}}}},errors:[{name:"HeadNotFound"}]}}},ComAtprotoSyncGetLatestCommit:{lexicon:1,id:"com.atproto.sync.getLatestCommit",defs:{main:{type:"query",description:"Get the current commit CID & revision of the specified repo. Does not require auth.",parameters:{type:"params",required:["did"],properties:{did:{type:"string",format:"did",description:"The DID of the repo."}}},output:{encoding:"application/json",schema:{type:"object",required:["cid","rev"],properties:{cid:{type:"string",format:"cid"},rev:{type:"string"}}}},errors:[{name:"RepoNotFound"}]}}},ComAtprotoSyncGetRecord:{lexicon:1,id:"com.atproto.sync.getRecord",defs:{main:{type:"query",description:"Get data blocks needed to prove the existence or non-existence of record in the current version of repo. Does not require auth.",parameters:{type:"params",required:["did","collection","rkey"],properties:{did:{type:"string",format:"did",description:"The DID of the repo."},collection:{type:"string",format:"nsid"},rkey:{type:"string",description:"Record Key"},commit:{type:"string",format:"cid",description:"An optional past commit CID."}}},output:{encoding:"application/vnd.ipld.car"}}}},ComAtprotoSyncGetRepo:{lexicon:1,id:"com.atproto.sync.getRepo",defs:{main:{type:"query",description:"Download a repository export as CAR file. Optionally only a 'diff' since a previous revision. Does not require auth; implemented by PDS.",parameters:{type:"params",required:["did"],properties:{did:{type:"string",format:"did",description:"The DID of the repo."},since:{type:"string",description:"The revision ('rev') of the repo to create a diff from."}}},output:{encoding:"application/vnd.ipld.car"}}}},ComAtprotoSyncListBlobs:{lexicon:1,id:"com.atproto.sync.listBlobs",defs:{main:{type:"query",description:"List blob CIDso for an account, since some repo revision. Does not require auth; implemented by PDS.",parameters:{type:"params",required:["did"],properties:{did:{type:"string",format:"did",description:"The DID of the repo."},since:{type:"string",description:"Optional revision of the repo to list blobs since."},limit:{type:"integer",minimum:1,maximum:1e3,default:500},cursor:{type:"string"}}},output:{encoding:"application/json",schema:{type:"object",required:["cids"],properties:{cursor:{type:"string"},cids:{type:"array",items:{type:"string",format:"cid"}}}}}}}},ComAtprotoSyncListRepos:{lexicon:1,id:"com.atproto.sync.listRepos",defs:{main:{type:"query",description:"Enumerates all the DID, rev, and commit CID for all repos hosted by this service. Does not require auth; implemented by PDS and Relay.",parameters:{type:"params",properties:{limit:{type:"integer",minimum:1,maximum:1e3,default:500},cursor:{type:"string"}}},output:{encoding:"application/json",schema:{type:"object",required:["repos"],properties:{cursor:{type:"string"},repos:{type:"array",items:{type:"ref",ref:"lex:com.atproto.sync.listRepos#repo"}}}}}},repo:{type:"object",required:["did","head","rev"],properties:{did:{type:"string",format:"did"},head:{type:"string",format:"cid",description:"Current repo commit CID"},rev:{type:"string"}}}}},ComAtprotoSyncNotifyOfUpdate:{lexicon:1,id:"com.atproto.sync.notifyOfUpdate",defs:{main:{type:"procedure",description:"Notify a crawling service of a recent update, and that crawling should resume. Intended use is after a gap between repo stream events caused the crawling service to disconnect. Does not require auth; implemented by Relay.",input:{encoding:"application/json",schema:{type:"object",required:["hostname"],properties:{hostname:{type:"string",description:"Hostname of the current service (usually a PDS) that is notifying of update."}}}}}}},ComAtprotoSyncRequestCrawl:{lexicon:1,id:"com.atproto.sync.requestCrawl",defs:{main:{type:"procedure",description:"Request a service to persistently crawl hosted repos. Expected use is new PDS instances declaring their existence to Relays. Does not require auth.",input:{encoding:"application/json",schema:{type:"object",required:["hostname"],properties:{hostname:{type:"string",description:"Hostname of the current service (eg, PDS) that is requesting to be crawled."}}}}}}},ComAtprotoSyncSubscribeRepos:{lexicon:1,id:"com.atproto.sync.subscribeRepos",defs:{main:{type:"subscription",description:"Repository event stream, aka Firehose endpoint. Outputs repo commits with diff data, and identity update events, for all repositories on the current server. See the atproto specifications for details around stream sequencing, repo versioning, CAR diff format, and more. Public and does not require auth; implemented by PDS and Relay.",parameters:{type:"params",properties:{cursor:{type:"integer",description:"The last known event seq number to backfill from."}}},message:{schema:{type:"union",refs:["lex:com.atproto.sync.subscribeRepos#commit","lex:com.atproto.sync.subscribeRepos#identity","lex:com.atproto.sync.subscribeRepos#handle","lex:com.atproto.sync.subscribeRepos#migrate","lex:com.atproto.sync.subscribeRepos#tombstone","lex:com.atproto.sync.subscribeRepos#info"]}},errors:[{name:"FutureCursor"},{name:"ConsumerTooSlow",description:"If the consumer of the stream can not keep up with events, and a backlog gets too large, the server will drop the connection."}]},commit:{type:"object",description:"Represents an update of repository state. Note that empty commits are allowed, which include no repo data changes, but an update to rev and signature.",required:["seq","rebase","tooBig","repo","commit","rev","since","blocks","ops","blobs","time"],nullable:["prev","since"],properties:{seq:{type:"integer",description:"The stream sequence number of this message."},rebase:{type:"boolean",description:"DEPRECATED -- unused"},tooBig:{type:"boolean",description:"Indicates that this commit contained too many ops, or data size was too large. Consumers will need to make a separate request to get missing data."},repo:{type:"string",format:"did",description:"The repo this event comes from."},commit:{type:"cid-link",description:"Repo commit object CID."},prev:{type:"cid-link",description:"DEPRECATED -- unused. WARNING -- nullable and optional; stick with optional to ensure golang interoperability."},rev:{type:"string",description:"The rev of the emitted commit. Note that this information is also in the commit object included in blocks, unless this is a tooBig event."},since:{type:"string",description:"The rev of the last emitted commit from this repo (if any)."},blocks:{type:"bytes",description:"CAR file containing relevant blocks, as a diff since the previous repo state.",maxLength:1e6},ops:{type:"array",items:{type:"ref",ref:"lex:com.atproto.sync.subscribeRepos#repoOp",description:"List of repo mutation operations in this commit (eg, records created, updated, or deleted)."},maxLength:200},blobs:{type:"array",items:{type:"cid-link",description:"List of new blobs (by CID) referenced by records in this commit."}},time:{type:"string",format:"datetime",description:"Timestamp of when this message was originally broadcast."}}},identity:{type:"object",description:"Represents a change to an account's identity. Could be an updated handle, signing key, or pds hosting endpoint. Serves as a prod to all downstream services to refresh their identity cache.",required:["seq","did","time"],properties:{seq:{type:"integer"},did:{type:"string",format:"did"},time:{type:"string",format:"datetime"}}},handle:{type:"object",description:"Represents an update of the account's handle, or transition to/from invalid state. NOTE: Will be deprecated in favor of #identity.",required:["seq","did","handle","time"],properties:{seq:{type:"integer"},did:{type:"string",format:"did"},handle:{type:"string",format:"handle"},time:{type:"string",format:"datetime"}}},migrate:{type:"object",description:"Represents an account moving from one PDS instance to another. NOTE: not implemented; account migration uses #identity instead",required:["seq","did","migrateTo","time"],nullable:["migrateTo"],properties:{seq:{type:"integer"},did:{type:"string",format:"did"},migrateTo:{type:"string"},time:{type:"string",format:"datetime"}}},tombstone:{type:"object",description:"Indicates that an account has been deleted. NOTE: may be deprecated in favor of #identity or a future #account event",required:["seq","did","time"],properties:{seq:{type:"integer"},did:{type:"string",format:"did"},time:{type:"string",format:"datetime"}}},info:{type:"object",required:["name"],properties:{name:{type:"string",knownValues:["OutdatedCursor"]},message:{type:"string"}}},repoOp:{type:"object",description:"A repo operation, ie a mutation of a single record.",required:["action","path","cid"],nullable:["cid"],properties:{action:{type:"string",knownValues:["create","update","delete"]},path:{type:"string"},cid:{type:"cid-link",description:"For creates and updates, the new record CID. For deletions, null."}}}}},ComAtprotoTempCheckSignupQueue:{lexicon:1,id:"com.atproto.temp.checkSignupQueue",defs:{main:{type:"query",description:"Check accounts location in signup queue.",output:{encoding:"application/json",schema:{type:"object",required:["activated"],properties:{activated:{type:"boolean"},placeInQueue:{type:"integer"},estimatedTimeMs:{type:"integer"}}}}}}},ComAtprotoTempFetchLabels:{lexicon:1,id:"com.atproto.temp.fetchLabels",defs:{main:{type:"query",description:"DEPRECATED: use queryLabels or subscribeLabels instead -- Fetch all labels from a labeler created after a certain date.",parameters:{type:"params",properties:{since:{type:"integer"},limit:{type:"integer",minimum:1,maximum:250,default:50}}},output:{encoding:"application/json",schema:{type:"object",required:["labels"],properties:{labels:{type:"array",items:{type:"ref",ref:"lex:com.atproto.label.defs#label"}}}}}}}},ComAtprotoTempRequestPhoneVerification:{lexicon:1,id:"com.atproto.temp.requestPhoneVerification",defs:{main:{type:"procedure",description:"Request a verification code to be sent to the supplied phone number",input:{encoding:"application/json",schema:{type:"object",required:["phoneNumber"],properties:{phoneNumber:{type:"string"}}}}}}},AppBskyActorDefs:{lexicon:1,id:"app.bsky.actor.defs",defs:{profileViewBasic:{type:"object",required:["did","handle"],properties:{did:{type:"string",format:"did"},handle:{type:"string",format:"handle"},displayName:{type:"string",maxGraphemes:64,maxLength:640},avatar:{type:"string"},viewer:{type:"ref",ref:"lex:app.bsky.actor.defs#viewerState"},labels:{type:"array",items:{type:"ref",ref:"lex:com.atproto.label.defs#label"}}}},profileView:{type:"object",required:["did","handle"],properties:{did:{type:"string",format:"did"},handle:{type:"string",format:"handle"},displayName:{type:"string",maxGraphemes:64,maxLength:640},description:{type:"string",maxGraphemes:256,maxLength:2560},avatar:{type:"string"},indexedAt:{type:"string",format:"datetime"},viewer:{type:"ref",ref:"lex:app.bsky.actor.defs#viewerState"},labels:{type:"array",items:{type:"ref",ref:"lex:com.atproto.label.defs#label"}}}},profileViewDetailed:{type:"object",required:["did","handle"],properties:{did:{type:"string",format:"did"},handle:{type:"string",format:"handle"},displayName:{type:"string",maxGraphemes:64,maxLength:640},description:{type:"string",maxGraphemes:256,maxLength:2560},avatar:{type:"string"},banner:{type:"string"},followersCount:{type:"integer"},followsCount:{type:"integer"},postsCount:{type:"integer"},associated:{type:"ref",ref:"lex:app.bsky.actor.defs#profileAssociated"},indexedAt:{type:"string",format:"datetime"},viewer:{type:"ref",ref:"lex:app.bsky.actor.defs#viewerState"},labels:{type:"array",items:{type:"ref",ref:"lex:com.atproto.label.defs#label"}}}},profileAssociated:{type:"object",properties:{lists:{type:"integer"},feedgens:{type:"integer"},labeler:{type:"boolean"}}},viewerState:{type:"object",description:"Metadata about the requesting account's relationship with the subject account. Only has meaningful content for authed requests.",properties:{muted:{type:"boolean"},mutedByList:{type:"ref",ref:"lex:app.bsky.graph.defs#listViewBasic"},blockedBy:{type:"boolean"},blocking:{type:"string",format:"at-uri"},blockingByList:{type:"ref",ref:"lex:app.bsky.graph.defs#listViewBasic"},following:{type:"string",format:"at-uri"},followedBy:{type:"string",format:"at-uri"}}},preferences:{type:"array",items:{type:"union",refs:["lex:app.bsky.actor.defs#adultContentPref","lex:app.bsky.actor.defs#contentLabelPref","lex:app.bsky.actor.defs#savedFeedsPref","lex:app.bsky.actor.defs#personalDetailsPref","lex:app.bsky.actor.defs#feedViewPref","lex:app.bsky.actor.defs#threadViewPref","lex:app.bsky.actor.defs#interestsPref","lex:app.bsky.actor.defs#mutedWordsPref","lex:app.bsky.actor.defs#hiddenPostsPref"]}},adultContentPref:{type:"object",required:["enabled"],properties:{enabled:{type:"boolean",default:!1}}},contentLabelPref:{type:"object",required:["label","visibility"],properties:{labelerDid:{type:"string",description:"Which labeler does this preference apply to? If undefined, applies globally.",format:"did"},label:{type:"string"},visibility:{type:"string",knownValues:["ignore","show","warn","hide"]}}},savedFeedsPref:{type:"object",required:["pinned","saved"],properties:{pinned:{type:"array",items:{type:"string",format:"at-uri"}},saved:{type:"array",items:{type:"string",format:"at-uri"}},timelineIndex:{type:"integer"}}},personalDetailsPref:{type:"object",properties:{birthDate:{type:"string",format:"datetime",description:"The birth date of account owner."}}},feedViewPref:{type:"object",required:["feed"],properties:{feed:{type:"string",description:"The URI of the feed, or an identifier which describes the feed."},hideReplies:{type:"boolean",description:"Hide replies in the feed."},hideRepliesByUnfollowed:{type:"boolean",description:"Hide replies in the feed if they are not by followed users.",default:!0},hideRepliesByLikeCount:{type:"integer",description:"Hide replies in the feed if they do not have this number of likes."},hideReposts:{type:"boolean",description:"Hide reposts in the feed."},hideQuotePosts:{type:"boolean",description:"Hide quote posts in the feed."}}},threadViewPref:{type:"object",properties:{sort:{type:"string",description:"Sorting mode for threads.",knownValues:["oldest","newest","most-likes","random"]},prioritizeFollowedUsers:{type:"boolean",description:"Show followed users at the top of all replies."}}},interestsPref:{type:"object",required:["tags"],properties:{tags:{type:"array",maxLength:100,items:{type:"string",maxLength:640,maxGraphemes:64},description:"A list of tags which describe the account owner's interests gathered during onboarding."}}},mutedWordTarget:{type:"string",knownValues:["content","tag"],maxLength:640,maxGraphemes:64},mutedWord:{type:"object",description:"A word that the account owner has muted.",required:["value","targets"],properties:{value:{type:"string",description:"The muted word itself.",maxLength:1e4,maxGraphemes:1e3},targets:{type:"array",description:"The intended targets of the muted word.",items:{type:"ref",ref:"lex:app.bsky.actor.defs#mutedWordTarget"}}}},mutedWordsPref:{type:"object",required:["items"],properties:{items:{type:"array",items:{type:"ref",ref:"lex:app.bsky.actor.defs#mutedWord"},description:"A list of words the account owner has muted."}}},hiddenPostsPref:{type:"object",required:["items"],properties:{items:{type:"array",items:{type:"string",format:"at-uri"},description:"A list of URIs of posts the account owner has hidden."}}},labelersPref:{type:"object",required:["labelers"],properties:{labelers:{type:"array",items:{type:"ref",ref:"lex:app.bsky.actor.defs#labelerPrefItem"}}}},labelerPrefItem:{type:"object",required:["did"],properties:{did:{type:"string",format:"did"}}}}},AppBskyActorGetPreferences:{lexicon:1,id:"app.bsky.actor.getPreferences",defs:{main:{type:"query",description:"Get private preferences attached to the current account. Expected use is synchronization between multiple devices, and import/export during account migration. Requires auth.",parameters:{type:"params",properties:{}},output:{encoding:"application/json",schema:{type:"object",required:["preferences"],properties:{preferences:{type:"ref",ref:"lex:app.bsky.actor.defs#preferences"}}}}}}},AppBskyActorGetProfile:{lexicon:1,id:"app.bsky.actor.getProfile",defs:{main:{type:"query",description:"Get detailed profile view of an actor. Does not require auth, but contains relevant metadata with auth.",parameters:{type:"params",required:["actor"],properties:{actor:{type:"string",format:"at-identifier",description:"Handle or DID of account to fetch profile of."}}},output:{encoding:"application/json",schema:{type:"ref",ref:"lex:app.bsky.actor.defs#profileViewDetailed"}}}}},AppBskyActorGetProfiles:{lexicon:1,id:"app.bsky.actor.getProfiles",defs:{main:{type:"query",description:"Get detailed profile views of multiple actors.",parameters:{type:"params",required:["actors"],properties:{actors:{type:"array",items:{type:"string",format:"at-identifier"},maxLength:25}}},output:{encoding:"application/json",schema:{type:"object",required:["profiles"],properties:{profiles:{type:"array",items:{type:"ref",ref:"lex:app.bsky.actor.defs#profileViewDetailed"}}}}}}}},AppBskyActorGetSuggestions:{lexicon:1,id:"app.bsky.actor.getSuggestions",defs:{main:{type:"query",description:"Get a list of suggested actors. Expected use is discovery of accounts to follow during new account onboarding.",parameters:{type:"params",properties:{limit:{type:"integer",minimum:1,maximum:100,default:50},cursor:{type:"string"}}},output:{encoding:"application/json",schema:{type:"object",required:["actors"],properties:{cursor:{type:"string"},actors:{type:"array",items:{type:"ref",ref:"lex:app.bsky.actor.defs#profileView"}}}}}}}},AppBskyActorProfile:{lexicon:1,id:"app.bsky.actor.profile",defs:{main:{type:"record",description:"A declaration of a Bluesky account profile.",key:"literal:self",record:{type:"object",properties:{displayName:{type:"string",maxGraphemes:64,maxLength:640},description:{type:"string",description:"Free-form profile description text.",maxGraphemes:256,maxLength:2560},avatar:{type:"blob",description:"Small image to be displayed next to posts from account. AKA, 'profile picture'",accept:["image/png","image/jpeg"],maxSize:1e6},banner:{type:"blob",description:"Larger horizontal image to display behind profile view.",accept:["image/png","image/jpeg"],maxSize:1e6},labels:{type:"union",description:"Self-label values, specific to the Bluesky application, on the overall account.",refs:["lex:com.atproto.label.defs#selfLabels"]}}}}}},AppBskyActorPutPreferences:{lexicon:1,id:"app.bsky.actor.putPreferences",defs:{main:{type:"procedure",description:"Set the private preferences attached to the account.",input:{encoding:"application/json",schema:{type:"object",required:["preferences"],properties:{preferences:{type:"ref",ref:"lex:app.bsky.actor.defs#preferences"}}}}}}},AppBskyActorSearchActors:{lexicon:1,id:"app.bsky.actor.searchActors",defs:{main:{type:"query",description:"Find actors (profiles) matching search criteria. Does not require auth.",parameters:{type:"params",properties:{term:{type:"string",description:"DEPRECATED: use 'q' instead."},q:{type:"string",description:"Search query string. Syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended."},limit:{type:"integer",minimum:1,maximum:100,default:25},cursor:{type:"string"}}},output:{encoding:"application/json",schema:{type:"object",required:["actors"],properties:{cursor:{type:"string"},actors:{type:"array",items:{type:"ref",ref:"lex:app.bsky.actor.defs#profileView"}}}}}}}},AppBskyActorSearchActorsTypeahead:{lexicon:1,id:"app.bsky.actor.searchActorsTypeahead",defs:{main:{type:"query",description:"Find actor suggestions for a prefix search term. Expected use is for auto-completion during text field entry. Does not require auth.",parameters:{type:"params",properties:{term:{type:"string",description:"DEPRECATED: use 'q' instead."},q:{type:"string",description:"Search query prefix; not a full query string."},limit:{type:"integer",minimum:1,maximum:100,default:10}}},output:{encoding:"application/json",schema:{type:"object",required:["actors"],properties:{actors:{type:"array",items:{type:"ref",ref:"lex:app.bsky.actor.defs#profileViewBasic"}}}}}}}},AppBskyEmbedExternal:{lexicon:1,id:"app.bsky.embed.external",defs:{main:{type:"object",description:"A representation of some externally linked content (eg, a URL and 'card'), embedded in a Bluesky record (eg, a post).",required:["external"],properties:{external:{type:"ref",ref:"lex:app.bsky.embed.external#external"}}},external:{type:"object",required:["uri","title","description"],properties:{uri:{type:"string",format:"uri"},title:{type:"string"},description:{type:"string"},thumb:{type:"blob",accept:["image/*"],maxSize:1e6}}},view:{type:"object",required:["external"],properties:{external:{type:"ref",ref:"lex:app.bsky.embed.external#viewExternal"}}},viewExternal:{type:"object",required:["uri","title","description"],properties:{uri:{type:"string",format:"uri"},title:{type:"string"},description:{type:"string"},thumb:{type:"string"}}}}},AppBskyEmbedImages:{lexicon:1,id:"app.bsky.embed.images",description:"A set of images embedded in a Bluesky record (eg, a post).",defs:{main:{type:"object",required:["images"],properties:{images:{type:"array",items:{type:"ref",ref:"lex:app.bsky.embed.images#image"},maxLength:4}}},image:{type:"object",required:["image","alt"],properties:{image:{type:"blob",accept:["image/*"],maxSize:1e6},alt:{type:"string",description:"Alt text description of the image, for accessibility."},aspectRatio:{type:"ref",ref:"lex:app.bsky.embed.images#aspectRatio"}}},aspectRatio:{type:"object",description:"width:height represents an aspect ratio. It may be approximate, and may not correspond to absolute dimensions in any given unit.",required:["width","height"],properties:{width:{type:"integer",minimum:1},height:{type:"integer",minimum:1}}},view:{type:"object",required:["images"],properties:{images:{type:"array",items:{type:"ref",ref:"lex:app.bsky.embed.images#viewImage"},maxLength:4}}},viewImage:{type:"object",required:["thumb","fullsize","alt"],properties:{thumb:{type:"string",description:"Fully-qualified URL where a thumbnail of the image can be fetched. For example, CDN location provided by the App View."},fullsize:{type:"string",description:"Fully-qualified URL where a large version of the image can be fetched. May or may not be the exact original blob. For example, CDN location provided by the App View."},alt:{type:"string",description:"Alt text description of the image, for accessibility."},aspectRatio:{type:"ref",ref:"lex:app.bsky.embed.images#aspectRatio"}}}}},AppBskyEmbedRecord:{lexicon:1,id:"app.bsky.embed.record",description:"A representation of a record embedded in a Bluesky record (eg, a post). For example, a quote-post, or sharing a feed generator record.",defs:{main:{type:"object",required:["record"],properties:{record:{type:"ref",ref:"lex:com.atproto.repo.strongRef"}}},view:{type:"object",required:["record"],properties:{record:{type:"union",refs:["lex:app.bsky.embed.record#viewRecord","lex:app.bsky.embed.record#viewNotFound","lex:app.bsky.embed.record#viewBlocked","lex:app.bsky.feed.defs#generatorView","lex:app.bsky.graph.defs#listView","lex:app.bsky.labeler.defs#labelerView"]}}},viewRecord:{type:"object",required:["uri","cid","author","value","indexedAt"],properties:{uri:{type:"string",format:"at-uri"},cid:{type:"string",format:"cid"},author:{type:"ref",ref:"lex:app.bsky.actor.defs#profileViewBasic"},value:{type:"unknown",description:"The record data itself."},labels:{type:"array",items:{type:"ref",ref:"lex:com.atproto.label.defs#label"}},embeds:{type:"array",items:{type:"union",refs:["lex:app.bsky.embed.images#view","lex:app.bsky.embed.external#view","lex:app.bsky.embed.record#view","lex:app.bsky.embed.recordWithMedia#view"]}},indexedAt:{type:"string",format:"datetime"}}},viewNotFound:{type:"object",required:["uri","notFound"],properties:{uri:{type:"string",format:"at-uri"},notFound:{type:"boolean",const:!0}}},viewBlocked:{type:"object",required:["uri","blocked","author"],properties:{uri:{type:"string",format:"at-uri"},blocked:{type:"boolean",const:!0},author:{type:"ref",ref:"lex:app.bsky.feed.defs#blockedAuthor"}}}}},AppBskyEmbedRecordWithMedia:{lexicon:1,id:"app.bsky.embed.recordWithMedia",description:"A representation of a record embedded in a Bluesky record (eg, a post), alongside other compatible embeds. For example, a quote post and image, or a quote post and external URL card.",defs:{main:{type:"object",required:["record","media"],properties:{record:{type:"ref",ref:"lex:app.bsky.embed.record"},media:{type:"union",refs:["lex:app.bsky.embed.images","lex:app.bsky.embed.external"]}}},view:{type:"object",required:["record","media"],properties:{record:{type:"ref",ref:"lex:app.bsky.embed.record#view"},media:{type:"union",refs:["lex:app.bsky.embed.images#view","lex:app.bsky.embed.external#view"]}}}}},AppBskyFeedDefs:{lexicon:1,id:"app.bsky.feed.defs",defs:{postView:{type:"object",required:["uri","cid","author","record","indexedAt"],properties:{uri:{type:"string",format:"at-uri"},cid:{type:"string",format:"cid"},author:{type:"ref",ref:"lex:app.bsky.actor.defs#profileViewBasic"},record:{type:"unknown"},embed:{type:"union",refs:["lex:app.bsky.embed.images#view","lex:app.bsky.embed.external#view","lex:app.bsky.embed.record#view","lex:app.bsky.embed.recordWithMedia#view"]},replyCount:{type:"integer"},repostCount:{type:"integer"},likeCount:{type:"integer"},indexedAt:{type:"string",format:"datetime"},viewer:{type:"ref",ref:"lex:app.bsky.feed.defs#viewerState"},labels:{type:"array",items:{type:"ref",ref:"lex:com.atproto.label.defs#label"}},threadgate:{type:"ref",ref:"lex:app.bsky.feed.defs#threadgateView"}}},viewerState:{type:"object",description:"Metadata about the requesting account's relationship with the subject content. Only has meaningful content for authed requests.",properties:{repost:{type:"string",format:"at-uri"},like:{type:"string",format:"at-uri"},replyDisabled:{type:"boolean"}}},feedViewPost:{type:"object",required:["post"],properties:{post:{type:"ref",ref:"lex:app.bsky.feed.defs#postView"},reply:{type:"ref",ref:"lex:app.bsky.feed.defs#replyRef"},reason:{type:"union",refs:["lex:app.bsky.feed.defs#reasonRepost"]}}},replyRef:{type:"object",required:["root","parent"],properties:{root:{type:"union",refs:["lex:app.bsky.feed.defs#postView","lex:app.bsky.feed.defs#notFoundPost","lex:app.bsky.feed.defs#blockedPost"]},parent:{type:"union",refs:["lex:app.bsky.feed.defs#postView","lex:app.bsky.feed.defs#notFoundPost","lex:app.bsky.feed.defs#blockedPost"]}}},reasonRepost:{type:"object",required:["by","indexedAt"],properties:{by:{type:"ref",ref:"lex:app.bsky.actor.defs#profileViewBasic"},indexedAt:{type:"string",format:"datetime"}}},threadViewPost:{type:"object",required:["post"],properties:{post:{type:"ref",ref:"lex:app.bsky.feed.defs#postView"},parent:{type:"union",refs:["lex:app.bsky.feed.defs#threadViewPost","lex:app.bsky.feed.defs#notFoundPost","lex:app.bsky.feed.defs#blockedPost"]},replies:{type:"array",items:{type:"union",refs:["lex:app.bsky.feed.defs#threadViewPost","lex:app.bsky.feed.defs#notFoundPost","lex:app.bsky.feed.defs#blockedPost"]}}}},notFoundPost:{type:"object",required:["uri","notFound"],properties:{uri:{type:"string",format:"at-uri"},notFound:{type:"boolean",const:!0}}},blockedPost:{type:"object",required:["uri","blocked","author"],properties:{uri:{type:"string",format:"at-uri"},blocked:{type:"boolean",const:!0},author:{type:"ref",ref:"lex:app.bsky.feed.defs#blockedAuthor"}}},blockedAuthor:{type:"object",required:["did"],properties:{did:{type:"string",format:"did"},viewer:{type:"ref",ref:"lex:app.bsky.actor.defs#viewerState"}}},generatorView:{type:"object",required:["uri","cid","did","creator","displayName","indexedAt"],properties:{uri:{type:"string",format:"at-uri"},cid:{type:"string",format:"cid"},did:{type:"string",format:"did"},creator:{type:"ref",ref:"lex:app.bsky.actor.defs#profileView"},displayName:{type:"string"},description:{type:"string",maxGraphemes:300,maxLength:3e3},descriptionFacets:{type:"array",items:{type:"ref",ref:"lex:app.bsky.richtext.facet"}},avatar:{type:"string"},likeCount:{type:"integer",minimum:0},labels:{type:"array",items:{type:"ref",ref:"lex:com.atproto.label.defs#label"}},viewer:{type:"ref",ref:"lex:app.bsky.feed.defs#generatorViewerState"},indexedAt:{type:"string",format:"datetime"}}},generatorViewerState:{type:"object",properties:{like:{type:"string",format:"at-uri"}}},skeletonFeedPost:{type:"object",required:["post"],properties:{post:{type:"string",format:"at-uri"},reason:{type:"union",refs:["lex:app.bsky.feed.defs#skeletonReasonRepost"]}}},skeletonReasonRepost:{type:"object",required:["repost"],properties:{repost:{type:"string",format:"at-uri"}}},threadgateView:{type:"object",properties:{uri:{type:"string",format:"at-uri"},cid:{type:"string",format:"cid"},record:{type:"unknown"},lists:{type:"array",items:{type:"ref",ref:"lex:app.bsky.graph.defs#listViewBasic"}}}}}},AppBskyFeedDescribeFeedGenerator:{lexicon:1,id:"app.bsky.feed.describeFeedGenerator",defs:{main:{type:"query",description:"Get information about a feed generator, including policies and offered feed URIs. Does not require auth; implemented by Feed Generator services (not App View).",output:{encoding:"application/json",schema:{type:"object",required:["did","feeds"],properties:{did:{type:"string",format:"did"},feeds:{type:"array",items:{type:"ref",ref:"lex:app.bsky.feed.describeFeedGenerator#feed"}},links:{type:"ref",ref:"lex:app.bsky.feed.describeFeedGenerator#links"}}}}},feed:{type:"object",required:["uri"],properties:{uri:{type:"string",format:"at-uri"}}},links:{type:"object",properties:{privacyPolicy:{type:"string"},termsOfService:{type:"string"}}}}},AppBskyFeedGenerator:{lexicon:1,id:"app.bsky.feed.generator",defs:{main:{type:"record",description:"Record declaring of the existence of a feed generator, and containing metadata about it. The record can exist in any repository.",key:"any",record:{type:"object",required:["did","displayName","createdAt"],properties:{did:{type:"string",format:"did"},displayName:{type:"string",maxGraphemes:24,maxLength:240},description:{type:"string",maxGraphemes:300,maxLength:3e3},descriptionFacets:{type:"array",items:{type:"ref",ref:"lex:app.bsky.richtext.facet"}},avatar:{type:"blob",accept:["image/png","image/jpeg"],maxSize:1e6},labels:{type:"union",description:"Self-label values",refs:["lex:com.atproto.label.defs#selfLabels"]},createdAt:{type:"string",format:"datetime"}}}}}},AppBskyFeedGetActorFeeds:{lexicon:1,id:"app.bsky.feed.getActorFeeds",defs:{main:{type:"query",description:"Get a list of feeds (feed generator records) created by the actor (in the actor's repo).",parameters:{type:"params",required:["actor"],properties:{actor:{type:"string",format:"at-identifier"},limit:{type:"integer",minimum:1,maximum:100,default:50},cursor:{type:"string"}}},output:{encoding:"application/json",schema:{type:"object",required:["feeds"],properties:{cursor:{type:"string"},feeds:{type:"array",items:{type:"ref",ref:"lex:app.bsky.feed.defs#generatorView"}}}}}}}},AppBskyFeedGetActorLikes:{lexicon:1,id:"app.bsky.feed.getActorLikes",defs:{main:{type:"query",description:"Get a list of posts liked by an actor. Does not require auth.",parameters:{type:"params",required:["actor"],properties:{actor:{type:"string",format:"at-identifier"},limit:{type:"integer",minimum:1,maximum:100,default:50},cursor:{type:"string"}}},output:{encoding:"application/json",schema:{type:"object",required:["feed"],properties:{cursor:{type:"string"},feed:{type:"array",items:{type:"ref",ref:"lex:app.bsky.feed.defs#feedViewPost"}}}}},errors:[{name:"BlockedActor"},{name:"BlockedByActor"}]}}},AppBskyFeedGetAuthorFeed:{lexicon:1,id:"app.bsky.feed.getAuthorFeed",defs:{main:{type:"query",description:"Get a view of an actor's 'author feed' (post and reposts by the author). Does not require auth.",parameters:{type:"params",required:["actor"],properties:{actor:{type:"string",format:"at-identifier"},limit:{type:"integer",minimum:1,maximum:100,default:50},cursor:{type:"string"},filter:{type:"string",description:"Combinations of post/repost types to include in response.",knownValues:["posts_with_replies","posts_no_replies","posts_with_media","posts_and_author_threads"],default:"posts_with_replies"}}},output:{encoding:"application/json",schema:{type:"object",required:["feed"],properties:{cursor:{type:"string"},feed:{type:"array",items:{type:"ref",ref:"lex:app.bsky.feed.defs#feedViewPost"}}}}},errors:[{name:"BlockedActor"},{name:"BlockedByActor"}]}}},AppBskyFeedGetFeed:{lexicon:1,id:"app.bsky.feed.getFeed",defs:{main:{type:"query",description:"Get a hydrated feed from an actor's selected feed generator. Implemented by App View.",parameters:{type:"params",required:["feed"],properties:{feed:{type:"string",format:"at-uri"},limit:{type:"integer",minimum:1,maximum:100,default:50},cursor:{type:"string"}}},output:{encoding:"application/json",schema:{type:"object",required:["feed"],properties:{cursor:{type:"string"},feed:{type:"array",items:{type:"ref",ref:"lex:app.bsky.feed.defs#feedViewPost"}}}}},errors:[{name:"UnknownFeed"}]}}},AppBskyFeedGetFeedGenerator:{lexicon:1,id:"app.bsky.feed.getFeedGenerator",defs:{main:{type:"query",description:"Get information about a feed generator. Implemented by AppView.",parameters:{type:"params",required:["feed"],properties:{feed:{type:"string",format:"at-uri",description:"AT-URI of the feed generator record."}}},output:{encoding:"application/json",schema:{type:"object",required:["view","isOnline","isValid"],properties:{view:{type:"ref",ref:"lex:app.bsky.feed.defs#generatorView"},isOnline:{type:"boolean",description:"Indicates whether the feed generator service has been online recently, or else seems to be inactive."},isValid:{type:"boolean",description:"Indicates whether the feed generator service is compatible with the record declaration."}}}}}}},AppBskyFeedGetFeedGenerators:{lexicon:1,id:"app.bsky.feed.getFeedGenerators",defs:{main:{type:"query",description:"Get information about a list of feed generators.",parameters:{type:"params",required:["feeds"],properties:{feeds:{type:"array",items:{type:"string",format:"at-uri"}}}},output:{encoding:"application/json",schema:{type:"object",required:["feeds"],properties:{feeds:{type:"array",items:{type:"ref",ref:"lex:app.bsky.feed.defs#generatorView"}}}}}}}},AppBskyFeedGetFeedSkeleton:{lexicon:1,id:"app.bsky.feed.getFeedSkeleton",defs:{main:{type:"query",description:"Get a skeleton of a feed provided by a feed generator. Auth is optional, depending on provider requirements, and provides the DID of the requester. Implemented by Feed Generator Service.",parameters:{type:"params",required:["feed"],properties:{feed:{type:"string",format:"at-uri",description:"Reference to feed generator record describing the specific feed being requested."},limit:{type:"integer",minimum:1,maximum:100,default:50},cursor:{type:"string"}}},output:{encoding:"application/json",schema:{type:"object",required:["feed"],properties:{cursor:{type:"string"},feed:{type:"array",items:{type:"ref",ref:"lex:app.bsky.feed.defs#skeletonFeedPost"}}}}},errors:[{name:"UnknownFeed"}]}}},AppBskyFeedGetLikes:{lexicon:1,id:"app.bsky.feed.getLikes",defs:{main:{type:"query",description:"Get like records which reference a subject (by AT-URI and CID).",parameters:{type:"params",required:["uri"],properties:{uri:{type:"string",format:"at-uri",description:"AT-URI of the subject (eg, a post record)."},cid:{type:"string",format:"cid",description:"CID of the subject record (aka, specific version of record), to filter likes."},limit:{type:"integer",minimum:1,maximum:100,default:50},cursor:{type:"string"}}},output:{encoding:"application/json",schema:{type:"object",required:["uri","likes"],properties:{uri:{type:"string",format:"at-uri"},cid:{type:"string",format:"cid"},cursor:{type:"string"},likes:{type:"array",items:{type:"ref",ref:"lex:app.bsky.feed.getLikes#like"}}}}}},like:{type:"object",required:["indexedAt","createdAt","actor"],properties:{indexedAt:{type:"string",format:"datetime"},createdAt:{type:"string",format:"datetime"},actor:{type:"ref",ref:"lex:app.bsky.actor.defs#profileView"}}}}},AppBskyFeedGetListFeed:{lexicon:1,id:"app.bsky.feed.getListFeed",defs:{main:{type:"query",description:"Get a feed of recent posts from a list (posts and reposts from any actors on the list). Does not require auth.",parameters:{type:"params",required:["list"],properties:{list:{type:"string",format:"at-uri",description:"Reference (AT-URI) to the list record."},limit:{type:"integer",minimum:1,maximum:100,default:50},cursor:{type:"string"}}},output:{encoding:"application/json",schema:{type:"object",required:["feed"],properties:{cursor:{type:"string"},feed:{type:"array",items:{type:"ref",ref:"lex:app.bsky.feed.defs#feedViewPost"}}}}},errors:[{name:"UnknownList"}]}}},AppBskyFeedGetPostThread:{lexicon:1,id:"app.bsky.feed.getPostThread",defs:{main:{type:"query",description:"Get posts in a thread. Does not require auth, but additional metadata and filtering will be applied for authed requests.",parameters:{type:"params",required:["uri"],properties:{uri:{type:"string",format:"at-uri",description:"Reference (AT-URI) to post record."},depth:{type:"integer",description:"How many levels of reply depth should be included in response.",default:6,minimum:0,maximum:1e3},parentHeight:{type:"integer",description:"How many levels of parent (and grandparent, etc) post to include.",default:80,minimum:0,maximum:1e3}}},output:{encoding:"application/json",schema:{type:"object",required:["thread"],properties:{thread:{type:"union",refs:["lex:app.bsky.feed.defs#threadViewPost","lex:app.bsky.feed.defs#notFoundPost","lex:app.bsky.feed.defs#blockedPost"]}}}},errors:[{name:"NotFound"}]}}},AppBskyFeedGetPosts:{lexicon:1,id:"app.bsky.feed.getPosts",defs:{main:{type:"query",description:"Gets post views for a specified list of posts (by AT-URI). This is sometimes referred to as 'hydrating' a 'feed skeleton'.",parameters:{type:"params",required:["uris"],properties:{uris:{type:"array",description:"List of post AT-URIs to return hydrated views for.",items:{type:"string",format:"at-uri"},maxLength:25}}},output:{encoding:"application/json",schema:{type:"object",required:["posts"],properties:{posts:{type:"array",items:{type:"ref",ref:"lex:app.bsky.feed.defs#postView"}}}}}}}},AppBskyFeedGetRepostedBy:{lexicon:1,id:"app.bsky.feed.getRepostedBy",defs:{main:{type:"query",description:"Get a list of reposts for a given post.",parameters:{type:"params",required:["uri"],properties:{uri:{type:"string",format:"at-uri",description:"Reference (AT-URI) of post record"},cid:{type:"string",format:"cid",description:"If supplied, filters to reposts of specific version (by CID) of the post record."},limit:{type:"integer",minimum:1,maximum:100,default:50},cursor:{type:"string"}}},output:{encoding:"application/json",schema:{type:"object",required:["uri","repostedBy"],properties:{uri:{type:"string",format:"at-uri"},cid:{type:"string",format:"cid"},cursor:{type:"string"},repostedBy:{type:"array",items:{type:"ref",ref:"lex:app.bsky.actor.defs#profileView"}}}}}}}},AppBskyFeedGetSuggestedFeeds:{lexicon:1,id:"app.bsky.feed.getSuggestedFeeds",defs:{main:{type:"query",description:"Get a list of suggested feeds (feed generators) for the requesting account.",parameters:{type:"params",properties:{limit:{type:"integer",minimum:1,maximum:100,default:50},cursor:{type:"string"}}},output:{encoding:"application/json",schema:{type:"object",required:["feeds"],properties:{cursor:{type:"string"},feeds:{type:"array",items:{type:"ref",ref:"lex:app.bsky.feed.defs#generatorView"}}}}}}}},AppBskyFeedGetTimeline:{lexicon:1,id:"app.bsky.feed.getTimeline",defs:{main:{type:"query",description:"Get a view of the requesting account's home timeline. This is expected to be some form of reverse-chronological feed.",parameters:{type:"params",properties:{algorithm:{type:"string",description:"Variant 'algorithm' for timeline. Implementation-specific. NOTE: most feed flexibility has been moved to feed generator mechanism."},limit:{type:"integer",minimum:1,maximum:100,default:50},cursor:{type:"string"}}},output:{encoding:"application/json",schema:{type:"object",required:["feed"],properties:{cursor:{type:"string"},feed:{type:"array",items:{type:"ref",ref:"lex:app.bsky.feed.defs#feedViewPost"}}}}}}}},AppBskyFeedLike:{lexicon:1,id:"app.bsky.feed.like",defs:{main:{type:"record",description:"Record declaring a 'like' of a piece of subject content.",key:"tid",record:{type:"object",required:["subject","createdAt"],properties:{subject:{type:"ref",ref:"lex:com.atproto.repo.strongRef"},createdAt:{type:"string",format:"datetime"}}}}}},AppBskyFeedPost:{lexicon:1,id:"app.bsky.feed.post",defs:{main:{type:"record",description:"Record containing a Bluesky post.",key:"tid",record:{type:"object",required:["text","createdAt"],properties:{text:{type:"string",maxLength:3e3,maxGraphemes:300,description:"The primary post content. May be an empty string, if there are embeds."},entities:{type:"array",description:"DEPRECATED: replaced by app.bsky.richtext.facet.",items:{type:"ref",ref:"lex:app.bsky.feed.post#entity"}},facets:{type:"array",description:"Annotations of text (mentions, URLs, hashtags, etc)",items:{type:"ref",ref:"lex:app.bsky.richtext.facet"}},reply:{type:"ref",ref:"lex:app.bsky.feed.post#replyRef"},embed:{type:"union",refs:["lex:app.bsky.embed.images","lex:app.bsky.embed.external","lex:app.bsky.embed.record","lex:app.bsky.embed.recordWithMedia"]},langs:{type:"array",description:"Indicates human language of post primary text content.",maxLength:3,items:{type:"string",format:"language"}},labels:{type:"union",description:"Self-label values for this post. Effectively content warnings.",refs:["lex:com.atproto.label.defs#selfLabels"]},tags:{type:"array",description:"Additional hashtags, in addition to any included in post text and facets.",maxLength:8,items:{type:"string",maxLength:640,maxGraphemes:64}},createdAt:{type:"string",format:"datetime",description:"Client-declared timestamp when this post was originally created."}}}},replyRef:{type:"object",required:["root","parent"],properties:{root:{type:"ref",ref:"lex:com.atproto.repo.strongRef"},parent:{type:"ref",ref:"lex:com.atproto.repo.strongRef"}}},entity:{type:"object",description:"Deprecated: use facets instead.",required:["index","type","value"],properties:{index:{type:"ref",ref:"lex:app.bsky.feed.post#textSlice"},type:{type:"string",description:"Expected values are 'mention' and 'link'."},value:{type:"string"}}},textSlice:{type:"object",description:"Deprecated. Use app.bsky.richtext instead -- A text segment. Start is inclusive, end is exclusive. Indices are for utf16-encoded strings.",required:["start","end"],properties:{start:{type:"integer",minimum:0},end:{type:"integer",minimum:0}}}}},AppBskyFeedRepost:{lexicon:1,id:"app.bsky.feed.repost",defs:{main:{description:"Record representing a 'repost' of an existing Bluesky post.",type:"record",key:"tid",record:{type:"object",required:["subject","createdAt"],properties:{subject:{type:"ref",ref:"lex:com.atproto.repo.strongRef"},createdAt:{type:"string",format:"datetime"}}}}}},AppBskyFeedSearchPosts:{lexicon:1,id:"app.bsky.feed.searchPosts",defs:{main:{type:"query",description:"Find posts matching search criteria, returning views of those posts.",parameters:{type:"params",required:["q"],properties:{q:{type:"string",description:"Search query string; syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended."},limit:{type:"integer",minimum:1,maximum:100,default:25},cursor:{type:"string",description:"Optional pagination mechanism; may not necessarily allow scrolling through entire result set."}}},output:{encoding:"application/json",schema:{type:"object",required:["posts"],properties:{cursor:{type:"string"},hitsTotal:{type:"integer",description:"Count of search hits. Optional, may be rounded/truncated, and may not be possible to paginate through all hits."},posts:{type:"array",items:{type:"ref",ref:"lex:app.bsky.feed.defs#postView"}}}}},errors:[{name:"BadQueryString"}]}}},AppBskyFeedThreadgate:{lexicon:1,id:"app.bsky.feed.threadgate",defs:{main:{type:"record",key:"tid",description:"Record defining interaction gating rules for a thread (aka, reply controls). The record key (rkey) of the threadgate record must match the record key of the thread's root post, and that record must be in the same repository..",record:{type:"object",required:["post","createdAt"],properties:{post:{type:"string",format:"at-uri",description:"Reference (AT-URI) to the post record."},allow:{type:"array",maxLength:5,items:{type:"union",refs:["lex:app.bsky.feed.threadgate#mentionRule","lex:app.bsky.feed.threadgate#followingRule","lex:app.bsky.feed.threadgate#listRule"]}},createdAt:{type:"string",format:"datetime"}}}},mentionRule:{type:"object",description:"Allow replies from actors mentioned in your post.",properties:{}},followingRule:{type:"object",description:"Allow replies from actors you follow.",properties:{}},listRule:{type:"object",description:"Allow replies from actors on a list.",required:["list"],properties:{list:{type:"string",format:"at-uri"}}}}},AppBskyGraphBlock:{lexicon:1,id:"app.bsky.graph.block",defs:{main:{type:"record",description:"Record declaring a 'block' relationship against another account. NOTE: blocks are public in Bluesky; see blog posts for details.",key:"tid",record:{type:"object",required:["subject","createdAt"],properties:{subject:{type:"string",format:"did",description:"DID of the account to be blocked."},createdAt:{type:"string",format:"datetime"}}}}}},AppBskyGraphDefs:{lexicon:1,id:"app.bsky.graph.defs",defs:{listViewBasic:{type:"object",required:["uri","cid","name","purpose"],properties:{uri:{type:"string",format:"at-uri"},cid:{type:"string",format:"cid"},name:{type:"string",maxLength:64,minLength:1},purpose:{type:"ref",ref:"lex:app.bsky.graph.defs#listPurpose"},avatar:{type:"string"},labels:{type:"array",items:{type:"ref",ref:"lex:com.atproto.label.defs#label"}},viewer:{type:"ref",ref:"lex:app.bsky.graph.defs#listViewerState"},indexedAt:{type:"string",format:"datetime"}}},listView:{type:"object",required:["uri","cid","creator","name","purpose","indexedAt"],properties:{uri:{type:"string",format:"at-uri"},cid:{type:"string",format:"cid"},creator:{type:"ref",ref:"lex:app.bsky.actor.defs#profileView"},name:{type:"string",maxLength:64,minLength:1},purpose:{type:"ref",ref:"lex:app.bsky.graph.defs#listPurpose"},description:{type:"string",maxGraphemes:300,maxLength:3e3},descriptionFacets:{type:"array",items:{type:"ref",ref:"lex:app.bsky.richtext.facet"}},avatar:{type:"string"},labels:{type:"array",items:{type:"ref",ref:"lex:com.atproto.label.defs#label"}},viewer:{type:"ref",ref:"lex:app.bsky.graph.defs#listViewerState"},indexedAt:{type:"string",format:"datetime"}}},listItemView:{type:"object",required:["uri","subject"],properties:{uri:{type:"string",format:"at-uri"},subject:{type:"ref",ref:"lex:app.bsky.actor.defs#profileView"}}},listPurpose:{type:"string",knownValues:["app.bsky.graph.defs#modlist","app.bsky.graph.defs#curatelist"]},modlist:{type:"token",description:"A list of actors to apply an aggregate moderation action (mute/block) on."},curatelist:{type:"token",description:"A list of actors used for curation purposes such as list feeds or interaction gating."},listViewerState:{type:"object",properties:{muted:{type:"boolean"},blocked:{type:"string",format:"at-uri"}}},notFoundActor:{type:"object",description:"indicates that a handle or DID could not be resolved",required:["actor","notFound"],properties:{actor:{type:"string",format:"at-identifier"},notFound:{type:"boolean",const:!0}}},relationship:{type:"object",description:"lists the bi-directional graph relationships between one actor (not indicated in the object), and the target actors (the DID included in the object)",required:["did"],properties:{did:{type:"string",format:"did"},following:{type:"string",format:"at-uri",description:"if the actor follows this DID, this is the AT-URI of the follow record"},followedBy:{type:"string",format:"at-uri",description:"if the actor is followed by this DID, contains the AT-URI of the follow record"}}}}},AppBskyGraphFollow:{lexicon:1,id:"app.bsky.graph.follow",defs:{main:{type:"record",description:"Record declaring a social 'follow' relationship of another account. Duplicate follows will be ignored by the AppView.",key:"tid",record:{type:"object",required:["subject","createdAt"],properties:{subject:{type:"string",format:"did"},createdAt:{type:"string",format:"datetime"}}}}}},AppBskyGraphGetBlocks:{lexicon:1,id:"app.bsky.graph.getBlocks",defs:{main:{type:"query",description:"Enumerates which accounts the requesting account is currently blocking. Requires auth.",parameters:{type:"params",properties:{limit:{type:"integer",minimum:1,maximum:100,default:50},cursor:{type:"string"}}},output:{encoding:"application/json",schema:{type:"object",required:["blocks"],properties:{cursor:{type:"string"},blocks:{type:"array",items:{type:"ref",ref:"lex:app.bsky.actor.defs#profileView"}}}}}}}},AppBskyGraphGetFollowers:{lexicon:1,id:"app.bsky.graph.getFollowers",defs:{main:{type:"query",description:"Enumerates accounts which follow a specified account (actor).",parameters:{type:"params",required:["actor"],properties:{actor:{type:"string",format:"at-identifier"},limit:{type:"integer",minimum:1,maximum:100,default:50},cursor:{type:"string"}}},output:{encoding:"application/json",schema:{type:"object",required:["subject","followers"],properties:{subject:{type:"ref",ref:"lex:app.bsky.actor.defs#profileView"},cursor:{type:"string"},followers:{type:"array",items:{type:"ref",ref:"lex:app.bsky.actor.defs#profileView"}}}}}}}},AppBskyGraphGetFollows:{lexicon:1,id:"app.bsky.graph.getFollows",defs:{main:{type:"query",description:"Enumerates accounts which a specified account (actor) follows.",parameters:{type:"params",required:["actor"],properties:{actor:{type:"string",format:"at-identifier"},limit:{type:"integer",minimum:1,maximum:100,default:50},cursor:{type:"string"}}},output:{encoding:"application/json",schema:{type:"object",required:["subject","follows"],properties:{subject:{type:"ref",ref:"lex:app.bsky.actor.defs#profileView"},cursor:{type:"string"},follows:{type:"array",items:{type:"ref",ref:"lex:app.bsky.actor.defs#profileView"}}}}}}}},AppBskyGraphGetList:{lexicon:1,id:"app.bsky.graph.getList",defs:{main:{type:"query",description:"Gets a 'view' (with additional context) of a specified list.",parameters:{type:"params",required:["list"],properties:{list:{type:"string",format:"at-uri",description:"Reference (AT-URI) of the list record to hydrate."},limit:{type:"integer",minimum:1,maximum:100,default:50},cursor:{type:"string"}}},output:{encoding:"application/json",schema:{type:"object",required:["list","items"],properties:{cursor:{type:"string"},list:{type:"ref",ref:"lex:app.bsky.graph.defs#listView"},items:{type:"array",items:{type:"ref",ref:"lex:app.bsky.graph.defs#listItemView"}}}}}}}},AppBskyGraphGetListBlocks:{lexicon:1,id:"app.bsky.graph.getListBlocks",defs:{main:{type:"query",description:"Get mod lists that the requesting account (actor) is blocking. Requires auth.",parameters:{type:"params",properties:{limit:{type:"integer",minimum:1,maximum:100,default:50},cursor:{type:"string"}}},output:{encoding:"application/json",schema:{type:"object",required:["lists"],properties:{cursor:{type:"string"},lists:{type:"array",items:{type:"ref",ref:"lex:app.bsky.graph.defs#listView"}}}}}}}},AppBskyGraphGetListMutes:{lexicon:1,id:"app.bsky.graph.getListMutes",defs:{main:{type:"query",description:"Enumerates mod lists that the requesting account (actor) currently has muted. Requires auth.",parameters:{type:"params",properties:{limit:{type:"integer",minimum:1,maximum:100,default:50},cursor:{type:"string"}}},output:{encoding:"application/json",schema:{type:"object",required:["lists"],properties:{cursor:{type:"string"},lists:{type:"array",items:{type:"ref",ref:"lex:app.bsky.graph.defs#listView"}}}}}}}},AppBskyGraphGetLists:{lexicon:1,id:"app.bsky.graph.getLists",defs:{main:{type:"query",description:"Enumerates the lists created by a specified account (actor).",parameters:{type:"params",required:["actor"],properties:{actor:{type:"string",format:"at-identifier",description:"The account (actor) to enumerate lists from."},limit:{type:"integer",minimum:1,maximum:100,default:50},cursor:{type:"string"}}},output:{encoding:"application/json",schema:{type:"object",required:["lists"],properties:{cursor:{type:"string"},lists:{type:"array",items:{type:"ref",ref:"lex:app.bsky.graph.defs#listView"}}}}}}}},AppBskyGraphGetMutes:{lexicon:1,id:"app.bsky.graph.getMutes",defs:{main:{type:"query",description:"Enumerates accounts that the requesting account (actor) currently has muted. Requires auth.",parameters:{type:"params",properties:{limit:{type:"integer",minimum:1,maximum:100,default:50},cursor:{type:"string"}}},output:{encoding:"application/json",schema:{type:"object",required:["mutes"],properties:{cursor:{type:"string"},mutes:{type:"array",items:{type:"ref",ref:"lex:app.bsky.actor.defs#profileView"}}}}}}}},AppBskyGraphGetRelationships:{lexicon:1,id:"app.bsky.graph.getRelationships",defs:{main:{type:"query",description:"Enumerates public relationships between one account, and a list of other accounts. Does not require auth.",parameters:{type:"params",required:["actor"],properties:{actor:{type:"string",format:"at-identifier",description:"Primary account requesting relationships for."},others:{type:"array",description:"List of 'other' accounts to be related back to the primary.",maxLength:30,items:{type:"string",format:"at-identifier"}}}},output:{encoding:"application/json",schema:{type:"object",required:["relationships"],properties:{actor:{type:"string",format:"did"},relationships:{type:"array",items:{type:"union",refs:["lex:app.bsky.graph.defs#relationship","lex:app.bsky.graph.defs#notFoundActor"]}}}}},errors:[{name:"ActorNotFound",description:"the primary actor at-identifier could not be resolved"}]}}},AppBskyGraphGetSuggestedFollowsByActor:{lexicon:1,id:"app.bsky.graph.getSuggestedFollowsByActor",defs:{main:{type:"query",description:"Enumerates follows similar to a given account (actor). Expected use is to recommend additional accounts immediately after following one account.",parameters:{type:"params",required:["actor"],properties:{actor:{type:"string",format:"at-identifier"}}},output:{encoding:"application/json",schema:{type:"object",required:["suggestions"],properties:{suggestions:{type:"array",items:{type:"ref",ref:"lex:app.bsky.actor.defs#profileView"}}}}}}}},AppBskyGraphList:{lexicon:1,id:"app.bsky.graph.list",defs:{main:{type:"record",description:"Record representing a list of accounts (actors). Scope includes both moderation-oriented lists and curration-oriented lists.",key:"tid",record:{type:"object",required:["name","purpose","createdAt"],properties:{purpose:{type:"ref",description:"Defines the purpose of the list (aka, moderation-oriented or curration-oriented)",ref:"lex:app.bsky.graph.defs#listPurpose"},name:{type:"string",maxLength:64,minLength:1,description:"Display name for list; can not be empty."},description:{type:"string",maxGraphemes:300,maxLength:3e3},descriptionFacets:{type:"array",items:{type:"ref",ref:"lex:app.bsky.richtext.facet"}},avatar:{type:"blob",accept:["image/png","image/jpeg"],maxSize:1e6},labels:{type:"union",refs:["lex:com.atproto.label.defs#selfLabels"]},createdAt:{type:"string",format:"datetime"}}}}}},AppBskyGraphListblock:{lexicon:1,id:"app.bsky.graph.listblock",defs:{main:{type:"record",description:"Record representing a block relationship against an entire an entire list of accounts (actors).",key:"tid",record:{type:"object",required:["subject","createdAt"],properties:{subject:{type:"string",format:"at-uri",description:"Reference (AT-URI) to the mod list record."},createdAt:{type:"string",format:"datetime"}}}}}},AppBskyGraphListitem:{lexicon:1,id:"app.bsky.graph.listitem",defs:{main:{type:"record",description:"Record representing an account's inclusion on a specific list. The AppView will ignore duplicate listitem records.",key:"tid",record:{type:"object",required:["subject","list","createdAt"],properties:{subject:{type:"string",format:"did",description:"The account which is included on the list."},list:{type:"string",format:"at-uri",description:"Reference (AT-URI) to the list record (app.bsky.graph.list)."},createdAt:{type:"string",format:"datetime"}}}}}},AppBskyGraphMuteActor:{lexicon:1,id:"app.bsky.graph.muteActor",defs:{main:{type:"procedure",description:"Creates a mute relationship for the specified account. Mutes are private in Bluesky. Requires auth.",input:{encoding:"application/json",schema:{type:"object",required:["actor"],properties:{actor:{type:"string",format:"at-identifier"}}}}}}},AppBskyGraphMuteActorList:{lexicon:1,id:"app.bsky.graph.muteActorList",defs:{main:{type:"procedure",description:"Creates a mute relationship for the specified list of accounts. Mutes are private in Bluesky. Requires auth.",input:{encoding:"application/json",schema:{type:"object",required:["list"],properties:{list:{type:"string",format:"at-uri"}}}}}}},AppBskyGraphUnmuteActor:{lexicon:1,id:"app.bsky.graph.unmuteActor",defs:{main:{type:"procedure",description:"Unmutes the specified account. Requires auth.",input:{encoding:"application/json",schema:{type:"object",required:["actor"],properties:{actor:{type:"string",format:"at-identifier"}}}}}}},AppBskyGraphUnmuteActorList:{lexicon:1,id:"app.bsky.graph.unmuteActorList",defs:{main:{type:"procedure",description:"Unmutes the specified list of accounts. Requires auth.",input:{encoding:"application/json",schema:{type:"object",required:["list"],properties:{list:{type:"string",format:"at-uri"}}}}}}},AppBskyLabelerDefs:{lexicon:1,id:"app.bsky.labeler.defs",defs:{labelerView:{type:"object",required:["uri","cid","creator","indexedAt"],properties:{uri:{type:"string",format:"at-uri"},cid:{type:"string",format:"cid"},creator:{type:"ref",ref:"lex:app.bsky.actor.defs#profileView"},likeCount:{type:"integer",minimum:0},viewer:{type:"ref",ref:"lex:app.bsky.labeler.defs#labelerViewerState"},indexedAt:{type:"string",format:"datetime"},labels:{type:"array",items:{type:"ref",ref:"lex:com.atproto.label.defs#label"}}}},labelerViewDetailed:{type:"object",required:["uri","cid","creator","policies","indexedAt"],properties:{uri:{type:"string",format:"at-uri"},cid:{type:"string",format:"cid"},creator:{type:"ref",ref:"lex:app.bsky.actor.defs#profileView"},policies:{type:"ref",ref:"lex:app.bsky.labeler.defs#labelerPolicies"},likeCount:{type:"integer",minimum:0},viewer:{type:"ref",ref:"lex:app.bsky.labeler.defs#labelerViewerState"},indexedAt:{type:"string",format:"datetime"},labels:{type:"array",items:{type:"ref",ref:"lex:com.atproto.label.defs#label"}}}},labelerViewerState:{type:"object",properties:{like:{type:"string",format:"at-uri"}}},labelerPolicies:{type:"object",required:["labelValues"],properties:{labelValues:{type:"array",description:"The label values which this labeler publishes. May include global or custom labels.",items:{type:"ref",ref:"lex:com.atproto.label.defs#labelValue"}},labelValueDefinitions:{type:"array",description:"Label values created by this labeler and scoped exclusively to it. Labels defined here will override global label definitions for this labeler.",items:{type:"ref",ref:"lex:com.atproto.label.defs#labelValueDefinition"}}}}}},AppBskyLabelerGetServices:{lexicon:1,id:"app.bsky.labeler.getServices",defs:{main:{type:"query",description:"Get information about a list of labeler services.",parameters:{type:"params",required:["dids"],properties:{dids:{type:"array",items:{type:"string",format:"did"}},detailed:{type:"boolean",default:!1}}},output:{encoding:"application/json",schema:{type:"object",required:["views"],properties:{views:{type:"array",items:{type:"union",refs:["lex:app.bsky.labeler.defs#labelerView","lex:app.bsky.labeler.defs#labelerViewDetailed"]}}}}}}}},AppBskyLabelerService:{lexicon:1,id:"app.bsky.labeler.service",defs:{main:{type:"record",description:"A declaration of the existence of labeler service.",key:"literal:self",record:{type:"object",required:["policies","createdAt"],properties:{policies:{type:"ref",ref:"lex:app.bsky.labeler.defs#labelerPolicies"},labels:{type:"union",refs:["lex:com.atproto.label.defs#selfLabels"]},createdAt:{type:"string",format:"datetime"}}}}}},AppBskyNotificationGetUnreadCount:{lexicon:1,id:"app.bsky.notification.getUnreadCount",defs:{main:{type:"query",description:"Count the number of unread notifications for the requesting account. Requires auth.",parameters:{type:"params",properties:{seenAt:{type:"string",format:"datetime"}}},output:{encoding:"application/json",schema:{type:"object",required:["count"],properties:{count:{type:"integer"}}}}}}},AppBskyNotificationListNotifications:{lexicon:1,id:"app.bsky.notification.listNotifications",defs:{main:{type:"query",description:"Enumerate notifications for the requesting account. Requires auth.",parameters:{type:"params",properties:{limit:{type:"integer",minimum:1,maximum:100,default:50},cursor:{type:"string"},seenAt:{type:"string",format:"datetime"}}},output:{encoding:"application/json",schema:{type:"object",required:["notifications"],properties:{cursor:{type:"string"},notifications:{type:"array",items:{type:"ref",ref:"lex:app.bsky.notification.listNotifications#notification"}},seenAt:{type:"string",format:"datetime"}}}}},notification:{type:"object",required:["uri","cid","author","reason","record","isRead","indexedAt"],properties:{uri:{type:"string",format:"at-uri"},cid:{type:"string",format:"cid"},author:{type:"ref",ref:"lex:app.bsky.actor.defs#profileView"},reason:{type:"string",description:"Expected values are 'like', 'repost', 'follow', 'mention', 'reply', and 'quote'.",knownValues:["like","repost","follow","mention","reply","quote"]},reasonSubject:{type:"string",format:"at-uri"},record:{type:"unknown"},isRead:{type:"boolean"},indexedAt:{type:"string",format:"datetime"},labels:{type:"array",items:{type:"ref",ref:"lex:com.atproto.label.defs#label"}}}}}},AppBskyNotificationRegisterPush:{lexicon:1,id:"app.bsky.notification.registerPush",defs:{main:{type:"procedure",description:"Register to receive push notifications, via a specified service, for the requesting account. Requires auth.",input:{encoding:"application/json",schema:{type:"object",required:["serviceDid","token","platform","appId"],properties:{serviceDid:{type:"string",format:"did"},token:{type:"string"},platform:{type:"string",knownValues:["ios","android","web"]},appId:{type:"string"}}}}}}},AppBskyNotificationUpdateSeen:{lexicon:1,id:"app.bsky.notification.updateSeen",defs:{main:{type:"procedure",description:"Notify server that the requesting account has seen notifications. Requires auth.",input:{encoding:"application/json",schema:{type:"object",required:["seenAt"],properties:{seenAt:{type:"string",format:"datetime"}}}}}}},AppBskyRichtextFacet:{lexicon:1,id:"app.bsky.richtext.facet",defs:{main:{type:"object",description:"Annotation of a sub-string within rich text.",required:["index","features"],properties:{index:{type:"ref",ref:"lex:app.bsky.richtext.facet#byteSlice"},features:{type:"array",items:{type:"union",refs:["lex:app.bsky.richtext.facet#mention","lex:app.bsky.richtext.facet#link","lex:app.bsky.richtext.facet#tag"]}}}},mention:{type:"object",description:"Facet feature for mention of another account. The text is usually a handle, including a '@' prefix, but the facet reference is a DID.",required:["did"],properties:{did:{type:"string",format:"did"}}},link:{type:"object",description:"Facet feature for a URL. The text URL may have been simplified or truncated, but the facet reference should be a complete URL.",required:["uri"],properties:{uri:{type:"string",format:"uri"}}},tag:{type:"object",description:"Facet feature for a hashtag. The text usually includes a '#' prefix, but the facet reference should not (except in the case of 'double hash tags').",required:["tag"],properties:{tag:{type:"string",maxLength:640,maxGraphemes:64}}},byteSlice:{type:"object",description:"Specifies the sub-string range a facet feature applies to. Start index is inclusive, end index is exclusive. Indices are zero-indexed, counting bytes of the UTF-8 encoded text. NOTE: some languages, like Javascript, use UTF-16 or Unicode codepoints for string slice indexing; in these languages, convert to byte arrays before working with facets.",required:["byteStart","byteEnd"],properties:{byteStart:{type:"integer",minimum:0},byteEnd:{type:"integer",minimum:0}}}}},AppBskyUnspeccedDefs:{lexicon:1,id:"app.bsky.unspecced.defs",defs:{skeletonSearchPost:{type:"object",required:["uri"],properties:{uri:{type:"string",format:"at-uri"}}},skeletonSearchActor:{type:"object",required:["did"],properties:{did:{type:"string",format:"did"}}}}},AppBskyUnspeccedGetPopularFeedGenerators:{lexicon:1,id:"app.bsky.unspecced.getPopularFeedGenerators",defs:{main:{type:"query",description:"An unspecced view of globally popular feed generators.",parameters:{type:"params",properties:{limit:{type:"integer",minimum:1,maximum:100,default:50},cursor:{type:"string"},query:{type:"string"}}},output:{encoding:"application/json",schema:{type:"object",required:["feeds"],properties:{cursor:{type:"string"},feeds:{type:"array",items:{type:"ref",ref:"lex:app.bsky.feed.defs#generatorView"}}}}}}}},AppBskyUnspeccedGetTaggedSuggestions:{lexicon:1,id:"app.bsky.unspecced.getTaggedSuggestions",defs:{main:{type:"query",description:"Get a list of suggestions (feeds and users) tagged with categories",parameters:{type:"params",properties:{}},output:{encoding:"application/json",schema:{type:"object",required:["suggestions"],properties:{suggestions:{type:"array",items:{type:"ref",ref:"lex:app.bsky.unspecced.getTaggedSuggestions#suggestion"}}}}}},suggestion:{type:"object",required:["tag","subjectType","subject"],properties:{tag:{type:"string"},subjectType:{type:"string",knownValues:["actor","feed"]},subject:{type:"string",format:"uri"}}}}},AppBskyUnspeccedSearchActorsSkeleton:{lexicon:1,id:"app.bsky.unspecced.searchActorsSkeleton",defs:{main:{type:"query",description:"Backend Actors (profile) search, returns only skeleton.",parameters:{type:"params",required:["q"],properties:{q:{type:"string",description:"Search query string; syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended. For typeahead search, only simple term match is supported, not full syntax."},typeahead:{type:"boolean",description:"If true, acts as fast/simple 'typeahead' query."},limit:{type:"integer",minimum:1,maximum:100,default:25},cursor:{type:"string",description:"Optional pagination mechanism; may not necessarily allow scrolling through entire result set."}}},output:{encoding:"application/json",schema:{type:"object",required:["actors"],properties:{cursor:{type:"string"},hitsTotal:{type:"integer",description:"Count of search hits. Optional, may be rounded/truncated, and may not be possible to paginate through all hits."},actors:{type:"array",items:{type:"ref",ref:"lex:app.bsky.unspecced.defs#skeletonSearchActor"}}}}},errors:[{name:"BadQueryString"}]}}},AppBskyUnspeccedSearchPostsSkeleton:{lexicon:1,id:"app.bsky.unspecced.searchPostsSkeleton",defs:{main:{type:"query",description:"Backend Posts search, returns only skeleton",parameters:{type:"params",required:["q"],properties:{q:{type:"string",description:"Search query string; syntax, phrase, boolean, and faceting is unspecified, but Lucene query syntax is recommended."},limit:{type:"integer",minimum:1,maximum:100,default:25},cursor:{type:"string",description:"Optional pagination mechanism; may not necessarily allow scrolling through entire result set."}}},output:{encoding:"application/json",schema:{type:"object",required:["posts"],properties:{cursor:{type:"string"},hitsTotal:{type:"integer",description:"Count of search hits. Optional, may be rounded/truncated, and may not be possible to paginate through all hits."},posts:{type:"array",items:{type:"ref",ref:"lex:app.bsky.unspecced.defs#skeletonSearchPost"}}}}},errors:[{name:"BadQueryString"}]}}},ToolsOzoneCommunicationCreateTemplate:{lexicon:1,id:"tools.ozone.communication.createTemplate",defs:{main:{type:"procedure",description:"Administrative action to create a new, re-usable communication (email for now) template.",input:{encoding:"application/json",schema:{type:"object",required:["subject","contentMarkdown","name"],properties:{name:{type:"string",description:"Name of the template."},contentMarkdown:{type:"string",description:"Content of the template, markdown supported, can contain variable placeholders."},subject:{type:"string",description:"Subject of the message, used in emails."},createdBy:{type:"string",format:"did",description:"DID of the user who is creating the template."}}}},output:{encoding:"application/json",schema:{type:"ref",ref:"lex:tools.ozone.communication.defs#templateView"}}}}},ToolsOzoneCommunicationDefs:{lexicon:1,id:"tools.ozone.communication.defs",defs:{templateView:{type:"object",required:["id","name","contentMarkdown","disabled","lastUpdatedBy","createdAt","updatedAt"],properties:{id:{type:"string"},name:{type:"string",description:"Name of the template."},subject:{type:"string",description:"Content of the template, can contain markdown and variable placeholders."},contentMarkdown:{type:"string",description:"Subject of the message, used in emails."},disabled:{type:"boolean"},lastUpdatedBy:{type:"string",format:"did",description:"DID of the user who last updated the template."},createdAt:{type:"string",format:"datetime"},updatedAt:{type:"string",format:"datetime"}}}}},ToolsOzoneCommunicationDeleteTemplate:{lexicon:1,id:"tools.ozone.communication.deleteTemplate",defs:{main:{type:"procedure",description:"Delete a communication template.",input:{encoding:"application/json",schema:{type:"object",required:["id"],properties:{id:{type:"string"}}}}}}},ToolsOzoneCommunicationListTemplates:{lexicon:1,id:"tools.ozone.communication.listTemplates",defs:{main:{type:"query",description:"Get list of all communication templates.",output:{encoding:"application/json",schema:{type:"object",required:["communicationTemplates"],properties:{communicationTemplates:{type:"array",items:{type:"ref",ref:"lex:tools.ozone.communication.defs#templateView"}}}}}}}},ToolsOzoneCommunicationUpdateTemplate:{lexicon:1,id:"tools.ozone.communication.updateTemplate",defs:{main:{type:"procedure",description:"Administrative action to update an existing communication template. Allows passing partial fields to patch specific fields only.",input:{encoding:"application/json",schema:{type:"object",required:["id"],properties:{id:{type:"string",description:"ID of the template to be updated."},name:{type:"string",description:"Name of the template."},contentMarkdown:{type:"string",description:"Content of the template, markdown supported, can contain variable placeholders."},subject:{type:"string",description:"Subject of the message, used in emails."},updatedBy:{type:"string",format:"did",description:"DID of the user who is updating the template."},disabled:{type:"boolean"}}}},output:{encoding:"application/json",schema:{type:"ref",ref:"lex:tools.ozone.communication.defs#templateView"}}}}},ToolsOzoneModerationDefs:{lexicon:1,id:"tools.ozone.moderation.defs",defs:{modEventView:{type:"object",required:["id","event","subject","subjectBlobCids","createdBy","createdAt"],properties:{id:{type:"integer"},event:{type:"union",refs:["lex:tools.ozone.moderation.defs#modEventTakedown","lex:tools.ozone.moderation.defs#modEventReverseTakedown","lex:tools.ozone.moderation.defs#modEventComment","lex:tools.ozone.moderation.defs#modEventReport","lex:tools.ozone.moderation.defs#modEventLabel","lex:tools.ozone.moderation.defs#modEventAcknowledge","lex:tools.ozone.moderation.defs#modEventEscalate","lex:tools.ozone.moderation.defs#modEventMute","lex:tools.ozone.moderation.defs#modEventEmail","lex:tools.ozone.moderation.defs#modEventResolveAppeal","lex:tools.ozone.moderation.defs#modEventDivert"]},subject:{type:"union",refs:["lex:com.atproto.admin.defs#repoRef","lex:com.atproto.repo.strongRef"]},subjectBlobCids:{type:"array",items:{type:"string"}},createdBy:{type:"string",format:"did"},createdAt:{type:"string",format:"datetime"},creatorHandle:{type:"string"},subjectHandle:{type:"string"}}},modEventViewDetail:{type:"object",required:["id","event","subject","subjectBlobs","createdBy","createdAt"],properties:{id:{type:"integer"},event:{type:"union",refs:["lex:tools.ozone.moderation.defs#modEventTakedown","lex:tools.ozone.moderation.defs#modEventReverseTakedown","lex:tools.ozone.moderation.defs#modEventComment","lex:tools.ozone.moderation.defs#modEventReport","lex:tools.ozone.moderation.defs#modEventLabel","lex:tools.ozone.moderation.defs#modEventAcknowledge","lex:tools.ozone.moderation.defs#modEventEscalate","lex:tools.ozone.moderation.defs#modEventMute","lex:tools.ozone.moderation.defs#modEventEmail","lex:tools.ozone.moderation.defs#modEventResolveAppeal","lex:tools.ozone.moderation.defs#modEventDivert"]},subject:{type:"union",refs:["lex:tools.ozone.moderation.defs#repoView","lex:tools.ozone.moderation.defs#repoViewNotFound","lex:tools.ozone.moderation.defs#recordView","lex:tools.ozone.moderation.defs#recordViewNotFound"]},subjectBlobs:{type:"array",items:{type:"ref",ref:"lex:tools.ozone.moderation.defs#blobView"}},createdBy:{type:"string",format:"did"},createdAt:{type:"string",format:"datetime"}}},subjectStatusView:{type:"object",required:["id","subject","createdAt","updatedAt","reviewState"],properties:{id:{type:"integer"},subject:{type:"union",refs:["lex:com.atproto.admin.defs#repoRef","lex:com.atproto.repo.strongRef"]},subjectBlobCids:{type:"array",items:{type:"string",format:"cid"}},subjectRepoHandle:{type:"string"},updatedAt:{type:"string",format:"datetime",description:"Timestamp referencing when the last update was made to the moderation status of the subject"},createdAt:{type:"string",format:"datetime",description:"Timestamp referencing the first moderation status impacting event was emitted on the subject"},reviewState:{type:"ref",ref:"lex:tools.ozone.moderation.defs#subjectReviewState"},comment:{type:"string",description:"Sticky comment on the subject."},muteUntil:{type:"string",format:"datetime"},lastReviewedBy:{type:"string",format:"did"},lastReviewedAt:{type:"string",format:"datetime"},lastReportedAt:{type:"string",format:"datetime"},lastAppealedAt:{type:"string",format:"datetime",description:"Timestamp referencing when the author of the subject appealed a moderation action"},takendown:{type:"boolean"},appealed:{type:"boolean",description:"True indicates that the a previously taken moderator action was appealed against, by the author of the content. False indicates last appeal was resolved by moderators."},suspendUntil:{type:"string",format:"datetime"},tags:{type:"array",items:{type:"string"}}}},subjectReviewState:{type:"string",knownValues:["lex:tools.ozone.moderation.defs#reviewOpen","lex:tools.ozone.moderation.defs#reviewEscalated","lex:tools.ozone.moderation.defs#reviewClosed","lex:tools.ozone.moderation.defs#reviewNone"]},reviewOpen:{type:"token",description:"Moderator review status of a subject: Open. Indicates that the subject needs to be reviewed by a moderator"},reviewEscalated:{type:"token",description:"Moderator review status of a subject: Escalated. Indicates that the subject was escalated for review by a moderator"},reviewClosed:{type:"token",description:"Moderator review status of a subject: Closed. Indicates that the subject was already reviewed and resolved by a moderator"},reviewNone:{type:"token",description:"Moderator review status of a subject: Unnecessary. Indicates that the subject does not need a review at the moment but there is probably some moderation related metadata available for it"},modEventTakedown:{type:"object",description:"Take down a subject permanently or temporarily",properties:{comment:{type:"string"},durationInHours:{type:"integer",description:"Indicates how long the takedown should be in effect before automatically expiring."}}},modEventReverseTakedown:{type:"object",description:"Revert take down action on a subject",properties:{comment:{type:"string",description:"Describe reasoning behind the reversal."}}},modEventResolveAppeal:{type:"object",description:"Resolve appeal on a subject",properties:{comment:{type:"string",description:"Describe resolution."}}},modEventComment:{type:"object",description:"Add a comment to a subject",required:["comment"],properties:{comment:{type:"string"},sticky:{type:"boolean",description:"Make the comment persistent on the subject"}}},modEventReport:{type:"object",description:"Report a subject",required:["reportType"],properties:{comment:{type:"string"},reportType:{type:"ref",ref:"lex:com.atproto.moderation.defs#reasonType"}}},modEventLabel:{type:"object",description:"Apply/Negate labels on a subject",required:["createLabelVals","negateLabelVals"],properties:{comment:{type:"string"},createLabelVals:{type:"array",items:{type:"string"}},negateLabelVals:{type:"array",items:{type:"string"}}}},modEventAcknowledge:{type:"object",properties:{comment:{type:"string"}}},modEventEscalate:{type:"object",properties:{comment:{type:"string"}}},modEventMute:{type:"object",description:"Mute incoming reports on a subject",required:["durationInHours"],properties:{comment:{type:"string"},durationInHours:{type:"integer",description:"Indicates how long the subject should remain muted."}}},modEventUnmute:{type:"object",description:"Unmute action on a subject",properties:{comment:{type:"string",description:"Describe reasoning behind the reversal."}}},modEventEmail:{type:"object",description:"Keep a log of outgoing email to a user",required:["subjectLine"],properties:{subjectLine:{type:"string",description:"The subject line of the email sent to the user."},content:{type:"string",description:"The content of the email sent to the user."},comment:{type:"string",description:"Additional comment about the outgoing comm."}}},modEventDivert:{type:"object",description:"Divert a record's blobs to a 3rd party service for further scanning/tagging",properties:{comment:{type:"string"}}},modEventTag:{type:"object",description:"Add/Remove a tag on a subject",required:["add","remove"],properties:{add:{type:"array",items:{type:"string"},description:"Tags to be added to the subject. If already exists, won't be duplicated."},remove:{type:"array",items:{type:"string"},description:"Tags to be removed to the subject. Ignores a tag If it doesn't exist, won't be duplicated."},comment:{type:"string",description:"Additional comment about added/removed tags."}}},repoView:{type:"object",required:["did","handle","relatedRecords","indexedAt","moderation"],properties:{did:{type:"string",format:"did"},handle:{type:"string",format:"handle"},email:{type:"string"},relatedRecords:{type:"array",items:{type:"unknown"}},indexedAt:{type:"string",format:"datetime"},moderation:{type:"ref",ref:"lex:tools.ozone.moderation.defs#moderation"},invitedBy:{type:"ref",ref:"lex:com.atproto.server.defs#inviteCode"},invitesDisabled:{type:"boolean"},inviteNote:{type:"string"}}},repoViewDetail:{type:"object",required:["did","handle","relatedRecords","indexedAt","moderation"],properties:{did:{type:"string",format:"did"},handle:{type:"string",format:"handle"},email:{type:"string"},relatedRecords:{type:"array",items:{type:"unknown"}},indexedAt:{type:"string",format:"datetime"},moderation:{type:"ref",ref:"lex:tools.ozone.moderation.defs#moderationDetail"},labels:{type:"array",items:{type:"ref",ref:"lex:com.atproto.label.defs#label"}},invitedBy:{type:"ref",ref:"lex:com.atproto.server.defs#inviteCode"},invites:{type:"array",items:{type:"ref",ref:"lex:com.atproto.server.defs#inviteCode"}},invitesDisabled:{type:"boolean"},inviteNote:{type:"string"},emailConfirmedAt:{type:"string",format:"datetime"}}},repoViewNotFound:{type:"object",required:["did"],properties:{did:{type:"string",format:"did"}}},recordView:{type:"object",required:["uri","cid","value","blobCids","indexedAt","moderation","repo"],properties:{uri:{type:"string",format:"at-uri"},cid:{type:"string",format:"cid"},value:{type:"unknown"},blobCids:{type:"array",items:{type:"string",format:"cid"}},indexedAt:{type:"string",format:"datetime"},moderation:{type:"ref",ref:"lex:tools.ozone.moderation.defs#moderation"},repo:{type:"ref",ref:"lex:tools.ozone.moderation.defs#repoView"}}},recordViewDetail:{type:"object",required:["uri","cid","value","blobs","indexedAt","moderation","repo"],properties:{uri:{type:"string",format:"at-uri"},cid:{type:"string",format:"cid"},value:{type:"unknown"},blobs:{type:"array",items:{type:"ref",ref:"lex:tools.ozone.moderation.defs#blobView"}},labels:{type:"array",items:{type:"ref",ref:"lex:com.atproto.label.defs#label"}},indexedAt:{type:"string",format:"datetime"},moderation:{type:"ref",ref:"lex:tools.ozone.moderation.defs#moderationDetail"},repo:{type:"ref",ref:"lex:tools.ozone.moderation.defs#repoView"}}},recordViewNotFound:{type:"object",required:["uri"],properties:{uri:{type:"string",format:"at-uri"}}},moderation:{type:"object",properties:{subjectStatus:{type:"ref",ref:"lex:tools.ozone.moderation.defs#subjectStatusView"}}},moderationDetail:{type:"object",properties:{subjectStatus:{type:"ref",ref:"lex:tools.ozone.moderation.defs#subjectStatusView"}}},blobView:{type:"object",required:["cid","mimeType","size","createdAt"],properties:{cid:{type:"string",format:"cid"},mimeType:{type:"string"},size:{type:"integer"},createdAt:{type:"string",format:"datetime"},details:{type:"union",refs:["lex:tools.ozone.moderation.defs#imageDetails","lex:tools.ozone.moderation.defs#videoDetails"]},moderation:{type:"ref",ref:"lex:tools.ozone.moderation.defs#moderation"}}},imageDetails:{type:"object",required:["width","height"],properties:{width:{type:"integer"},height:{type:"integer"}}},videoDetails:{type:"object",required:["width","height","length"],properties:{width:{type:"integer"},height:{type:"integer"},length:{type:"integer"}}}}},ToolsOzoneModerationEmitEvent:{lexicon:1,id:"tools.ozone.moderation.emitEvent",defs:{main:{type:"procedure",description:"Take a moderation action on an actor.",input:{encoding:"application/json",schema:{type:"object",required:["event","subject","createdBy"],properties:{event:{type:"union",refs:["lex:tools.ozone.moderation.defs#modEventTakedown","lex:tools.ozone.moderation.defs#modEventAcknowledge","lex:tools.ozone.moderation.defs#modEventEscalate","lex:tools.ozone.moderation.defs#modEventComment","lex:tools.ozone.moderation.defs#modEventLabel","lex:tools.ozone.moderation.defs#modEventReport","lex:tools.ozone.moderation.defs#modEventMute","lex:tools.ozone.moderation.defs#modEventReverseTakedown","lex:tools.ozone.moderation.defs#modEventUnmute","lex:tools.ozone.moderation.defs#modEventEmail","lex:tools.ozone.moderation.defs#modEventTag"]},subject:{type:"union",refs:["lex:com.atproto.admin.defs#repoRef","lex:com.atproto.repo.strongRef"]},subjectBlobCids:{type:"array",items:{type:"string",format:"cid"}},createdBy:{type:"string",format:"did"}}}},output:{encoding:"application/json",schema:{type:"ref",ref:"lex:tools.ozone.moderation.defs#modEventView"}},errors:[{name:"SubjectHasAction"}]}}},ToolsOzoneModerationGetEvent:{lexicon:1,id:"tools.ozone.moderation.getEvent",defs:{main:{type:"query",description:"Get details about a moderation event.",parameters:{type:"params",required:["id"],properties:{id:{type:"integer"}}},output:{encoding:"application/json",schema:{type:"ref",ref:"lex:tools.ozone.moderation.defs#modEventViewDetail"}}}}},ToolsOzoneModerationGetRecord:{lexicon:1,id:"tools.ozone.moderation.getRecord",defs:{main:{type:"query",description:"Get details about a record.",parameters:{type:"params",required:["uri"],properties:{uri:{type:"string",format:"at-uri"},cid:{type:"string",format:"cid"}}},output:{encoding:"application/json",schema:{type:"ref",ref:"lex:tools.ozone.moderation.defs#recordViewDetail"}},errors:[{name:"RecordNotFound"}]}}},ToolsOzoneModerationGetRepo:{lexicon:1,id:"tools.ozone.moderation.getRepo",defs:{main:{type:"query",description:"Get details about a repository.",parameters:{type:"params",required:["did"],properties:{did:{type:"string",format:"did"}}},output:{encoding:"application/json",schema:{type:"ref",ref:"lex:tools.ozone.moderation.defs#repoViewDetail"}},errors:[{name:"RepoNotFound"}]}}},ToolsOzoneModerationQueryEvents:{lexicon:1,id:"tools.ozone.moderation.queryEvents",defs:{main:{type:"query",description:"List moderation events related to a subject.",parameters:{type:"params",properties:{types:{type:"array",items:{type:"string"},description:"The types of events (fully qualified string in the format of tools.ozone.moderation.defs#modEvent<name>) to filter by. If not specified, all events are returned."},createdBy:{type:"string",format:"did"},sortDirection:{type:"string",default:"desc",enum:["asc","desc"],description:"Sort direction for the events. Defaults to descending order of created at timestamp."},createdAfter:{type:"string",format:"datetime",description:"Retrieve events created after a given timestamp"},createdBefore:{type:"string",format:"datetime",description:"Retrieve events created before a given timestamp"},subject:{type:"string",format:"uri"},includeAllUserRecords:{type:"boolean",default:!1,description:"If true, events on all record types (posts, lists, profile etc.) owned by the did are returned"},limit:{type:"integer",minimum:1,maximum:100,default:50},hasComment:{type:"boolean",description:"If true, only events with comments are returned"},comment:{type:"string",description:"If specified, only events with comments containing the keyword are returned"},addedLabels:{type:"array",items:{type:"string"},description:"If specified, only events where all of these labels were added are returned"},removedLabels:{type:"array",items:{type:"string"},description:"If specified, only events where all of these labels were removed are returned"},addedTags:{type:"array",items:{type:"string"},description:"If specified, only events where all of these tags were added are returned"},removedTags:{type:"array",items:{type:"string"},description:"If specified, only events where all of these tags were removed are returned"},reportTypes:{type:"array",items:{type:"string"}},cursor:{type:"string"}}},output:{encoding:"application/json",schema:{type:"object",required:["events"],properties:{cursor:{type:"string"},events:{type:"array",items:{type:"ref",ref:"lex:tools.ozone.moderation.defs#modEventView"}}}}}}}},ToolsOzoneModerationQueryStatuses:{lexicon:1,id:"tools.ozone.moderation.queryStatuses",defs:{main:{type:"query",description:"View moderation statuses of subjects (record or repo).",parameters:{type:"params",properties:{subject:{type:"string",format:"uri"},comment:{type:"string",description:"Search subjects by keyword from comments"},reportedAfter:{type:"string",format:"datetime",description:"Search subjects reported after a given timestamp"},reportedBefore:{type:"string",format:"datetime",description:"Search subjects reported before a given timestamp"},reviewedAfter:{type:"string",format:"datetime",description:"Search subjects reviewed after a given timestamp"},reviewedBefore:{type:"string",format:"datetime",description:"Search subjects reviewed before a given timestamp"},includeMuted:{type:"boolean",description:"By default, we don't include muted subjects in the results. Set this to true to include them."},reviewState:{type:"string",description:"Specify when fetching subjects in a certain state"},ignoreSubjects:{type:"array",items:{type:"string",format:"uri"}},lastReviewedBy:{type:"string",format:"did",description:"Get all subject statuses that were reviewed by a specific moderator"},sortField:{type:"string",default:"lastReportedAt",enum:["lastReviewedAt","lastReportedAt"]},sortDirection:{type:"string",default:"desc",enum:["asc","desc"]},takendown:{type:"boolean",description:"Get subjects that were taken down"},appealed:{type:"boolean",description:"Get subjects in unresolved appealed status"},limit:{type:"integer",minimum:1,maximum:100,default:50},tags:{type:"array",items:{type:"string"}},excludeTags:{type:"array",items:{type:"string"}},cursor:{type:"string"}}},output:{encoding:"application/json",schema:{type:"object",required:["subjectStatuses"],properties:{cursor:{type:"string"},subjectStatuses:{type:"array",items:{type:"ref",ref:"lex:tools.ozone.moderation.defs#subjectStatusView"}}}}}}}},ToolsOzoneModerationSearchRepos:{lexicon:1,id:"tools.ozone.moderation.searchRepos",defs:{main:{type:"query",description:"Find repositories based on a search term.",parameters:{type:"params",properties:{term:{type:"string",description:"DEPRECATED: use 'q' instead"},q:{type:"string"},limit:{type:"integer",minimum:1,maximum:100,default:50},cursor:{type:"string"}}},output:{encoding:"application/json",schema:{type:"object",required:["repos"],properties:{cursor:{type:"string"},repos:{type:"array",items:{type:"ref",ref:"lex:tools.ozone.moderation.defs#repoView"}}}}}}}}},on=Object.values(Zc),c=new zi(on),ln={};p(ln,{toKnownErr:()=>Wc});function Wc(e){return e}var pn={};p(pn,{toKnownErr:()=>Jc});function Jc(e){return e}var un={};p(un,{toKnownErr:()=>Qc});function Qc(e){return e}var fn={};p(fn,{toKnownErr:()=>Yc});function Yc(e){return e}var cn={};p(cn,{toKnownErr:()=>ed});function ed(e){return e}var dn={};p(dn,{toKnownErr:()=>td});function td(e){return e}var mn={};p(mn,{toKnownErr:()=>rd});function rd(e){return e}var yn={};p(yn,{toKnownErr:()=>id});function id(e){return e}var En={};p(En,{toKnownErr:()=>nd});function nd(e){return e}var hn={};p(hn,{toKnownErr:()=>sd});function sd(e){return e}var Rn={};p(Rn,{toKnownErr:()=>ad});function ad(e){return e}var gn={};p(gn,{toKnownErr:()=>od});function od(e){return e}var bn={};p(bn,{toKnownErr:()=>ld});function ld(e){return e}var An={};p(An,{toKnownErr:()=>pd});function pd(e){return e}var Tn={};p(Tn,{toKnownErr:()=>ud});function ud(e){return e}var vn={};p(vn,{toKnownErr:()=>fd});function fd(e){return e}var Ln={};p(Ln,{toKnownErr:()=>cd});function cd(e){return e}var Cn={};p(Cn,{toKnownErr:()=>dd});function dd(e){return e}var _n={};p(_n,{toKnownErr:()=>md});function md(e){return e}var Sn={};p(Sn,{toKnownErr:()=>yd});function yd(e){return e}var wn={};p(wn,{toKnownErr:()=>Ed});function Ed(e){return e}var Bn={};p(Bn,{InvalidSwapError:()=>kn,isCreate:()=>hd,isDelete:()=>Ad,isUpdate:()=>gd,toKnownErr:()=>xn,validateCreate:()=>Rd,validateDelete:()=>Td,validateUpdate:()=>bd});function d(e){return typeof e=="object"&&e!==null}function m(e,i){return i in e}var kn=class extends g{constructor(e){super(e.status,e.error,e.message,e.headers)}};function xn(e){return e instanceof g&&e.error==="InvalidSwap"?new kn(e):e}function hd(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.repo.applyWrites#create"}function Rd(e){return c.validate("com.atproto.repo.applyWrites#create",e)}function gd(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.repo.applyWrites#update"}function bd(e){return c.validate("com.atproto.repo.applyWrites#update",e)}function Ad(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.repo.applyWrites#delete"}function Td(e){return c.validate("com.atproto.repo.applyWrites#delete",e)}var Kn={};p(Kn,{InvalidSwapError:()=>Un,toKnownErr:()=>Vn});var Un=class extends g{constructor(e){super(e.status,e.error,e.message,e.headers)}};function Vn(e){return e instanceof g&&e.error==="InvalidSwap"?new Un(e):e}var Dn={};p(Dn,{InvalidSwapError:()=>Nn,toKnownErr:()=>Pn});var Nn=class extends g{constructor(e){super(e.status,e.error,e.message,e.headers)}};function Pn(e){return e instanceof g&&e.error==="InvalidSwap"?new Nn(e):e}var In={};p(In,{toKnownErr:()=>vd});function vd(e){return e}var jn={};p(jn,{toKnownErr:()=>Ld});function Ld(e){return e}var qn={};p(qn,{toKnownErr:()=>Cd});function Cd(e){return e}var Fn={};p(Fn,{isRecordBlob:()=>Sd,toKnownErr:()=>_d,validateRecordBlob:()=>wd});function _d(e){return e}function Sd(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.repo.listMissingBlobs#recordBlob"}function wd(e){return c.validate("com.atproto.repo.listMissingBlobs#recordBlob",e)}var Mn={};p(Mn,{isRecord:()=>kd,toKnownErr:()=>Bd,validateRecord:()=>xd});function Bd(e){return e}function kd(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.repo.listRecords#record"}function xd(e){return c.validate("com.atproto.repo.listRecords#record",e)}var Ur={};p(Ur,{InvalidSwapError:()=>$n,toKnownErr:()=>On});var $n=class extends g{constructor(e){super(e.status,e.error,e.message,e.headers)}};function On(e){return e instanceof g&&e.error==="InvalidSwap"?new $n(e):e}var Gn={};p(Gn,{toKnownErr:()=>Kd});function Kd(e){return e}var Xn={};p(Xn,{toKnownErr:()=>Ud});function Ud(e){return e}var zn={};p(zn,{toKnownErr:()=>Vd});function Vd(e){return e}var Hn={};p(Hn,{AccountNotFoundError:()=>Zn,ExpiredTokenError:()=>Wn,InvalidEmailError:()=>Qn,InvalidTokenError:()=>Jn,toKnownErr:()=>Yn});var Zn=class extends g{constructor(e){super(e.status,e.error,e.message,e.headers)}},Wn=class extends g{constructor(e){super(e.status,e.error,e.message,e.headers)}},Jn=class extends g{constructor(e){super(e.status,e.error,e.message,e.headers)}},Qn=class extends g{constructor(e){super(e.status,e.error,e.message,e.headers)}};function Yn(e){if(e instanceof g){if(e.error==="AccountNotFound")return new Zn(e);if(e.error==="ExpiredToken")return new Wn(e);if(e.error==="InvalidToken")return new Jn(e);if(e.error==="InvalidEmail")return new Qn(e)}return e}var es={};p(es,{HandleNotAvailableError:()=>ns,IncompatibleDidDocError:()=>os,InvalidHandleError:()=>ts,InvalidInviteCodeError:()=>is,InvalidPasswordError:()=>rs,UnresolvableDidError:()=>as,UnsupportedDomainError:()=>ss,toKnownErr:()=>ls});var ts=class extends g{constructor(e){super(e.status,e.error,e.message,e.headers)}},rs=class extends g{constructor(e){super(e.status,e.error,e.message,e.headers)}},is=class extends g{constructor(e){super(e.status,e.error,e.message,e.headers)}},ns=class extends g{constructor(e){super(e.status,e.error,e.message,e.headers)}},ss=class extends g{constructor(e){super(e.status,e.error,e.message,e.headers)}},as=class extends g{constructor(e){super(e.status,e.error,e.message,e.headers)}},os=class extends g{constructor(e){super(e.status,e.error,e.message,e.headers)}};function ls(e){if(e instanceof g){if(e.error==="InvalidHandle")return new ts(e);if(e.error==="InvalidPassword")return new rs(e);if(e.error==="InvalidInviteCode")return new is(e);if(e.error==="HandleNotAvailable")return new ns(e);if(e.error==="UnsupportedDomain")return new ss(e);if(e.error==="UnresolvableDid")return new as(e);if(e.error==="IncompatibleDidDoc")return new os(e)}return e}var ps={};p(ps,{AccountTakedownError:()=>us,isAppPassword:()=>Dd,toKnownErr:()=>fs,validateAppPassword:()=>Nd});var us=class extends g{constructor(e){super(e.status,e.error,e.message,e.headers)}};function fs(e){return e instanceof g&&e.error==="AccountTakedown"?new us(e):e}function Dd(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.server.createAppPassword#appPassword"}function Nd(e){return c.validate("com.atproto.server.createAppPassword#appPassword",e)}var cs={};p(cs,{toKnownErr:()=>Pd});function Pd(e){return e}var ds={};p(ds,{isAccountCodes:()=>jd,toKnownErr:()=>Id,validateAccountCodes:()=>qd});function Id(e){return e}function jd(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.server.createInviteCodes#accountCodes"}function qd(e){return c.validate("com.atproto.server.createInviteCodes#accountCodes",e)}var ms={};p(ms,{AccountTakedownError:()=>ys,toKnownErr:()=>Es});var ys=class extends g{constructor(e){super(e.status,e.error,e.message,e.headers)}};function Es(e){return e instanceof g&&e.error==="AccountTakedown"?new ys(e):e}var hs={};p(hs,{toKnownErr:()=>Fd});function Fd(e){return e}var Rs={};p(Rs,{ExpiredTokenError:()=>gs,InvalidTokenError:()=>bs,toKnownErr:()=>As});var gs=class extends g{constructor(e){super(e.status,e.error,e.message,e.headers)}},bs=class extends g{constructor(e){super(e.status,e.error,e.message,e.headers)}};function As(e){if(e instanceof g){if(e.error==="ExpiredToken")return new gs(e);if(e.error==="InvalidToken")return new bs(e)}return e}var Ts={};p(Ts,{toKnownErr:()=>Md});function Md(e){return e}var vs={};p(vs,{isContact:()=>Xd,isLinks:()=>Od,toKnownErr:()=>$d,validateContact:()=>zd,validateLinks:()=>Gd});function $d(e){return e}function Od(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.server.describeServer#links"}function Gd(e){return c.validate("com.atproto.server.describeServer#links",e)}function Xd(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.server.describeServer#contact"}function zd(e){return c.validate("com.atproto.server.describeServer#contact",e)}var Ls={};p(Ls,{DuplicateCreateError:()=>Cs,toKnownErr:()=>_s});var Cs=class extends g{constructor(e){super(e.status,e.error,e.message,e.headers)}};function _s(e){return e instanceof g&&e.error==="DuplicateCreate"?new Cs(e):e}var Ss={};p(Ss,{toKnownErr:()=>Hd});function Hd(e){return e}var ws={};p(ws,{toKnownErr:()=>Zd});function Zd(e){return e}var Bs={};p(Bs,{AccountTakedownError:()=>ks,isAppPassword:()=>Wd,toKnownErr:()=>xs,validateAppPassword:()=>Jd});var ks=class extends g{constructor(e){super(e.status,e.error,e.message,e.headers)}};function xs(e){return e instanceof g&&e.error==="AccountTakedown"?new ks(e):e}function Wd(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.server.listAppPasswords#appPassword"}function Jd(e){return c.validate("com.atproto.server.listAppPasswords#appPassword",e)}var Ks={};p(Ks,{AccountTakedownError:()=>Us,toKnownErr:()=>Vs});var Us=class extends g{constructor(e){super(e.status,e.error,e.message,e.headers)}};function Vs(e){return e instanceof g&&e.error==="AccountTakedown"?new Us(e):e}var Ds={};p(Ds,{toKnownErr:()=>Qd});function Qd(e){return e}var Ns={};p(Ns,{toKnownErr:()=>Yd});function Yd(e){return e}var Ps={};p(Ps,{toKnownErr:()=>em});function em(e){return e}var Is={};p(Is,{toKnownErr:()=>tm});function tm(e){return e}var js={};p(js,{toKnownErr:()=>rm});function rm(e){return e}var qs={};p(qs,{ExpiredTokenError:()=>Fs,InvalidTokenError:()=>Ms,toKnownErr:()=>$s});var Fs=class extends g{constructor(e){super(e.status,e.error,e.message,e.headers)}},Ms=class extends g{constructor(e){super(e.status,e.error,e.message,e.headers)}};function $s(e){if(e instanceof g){if(e.error==="ExpiredToken")return new Fs(e);if(e.error==="InvalidToken")return new Ms(e)}return e}var Os={};p(Os,{toKnownErr:()=>im});function im(e){return e}var Gs={};p(Gs,{ExpiredTokenError:()=>Xs,InvalidTokenError:()=>zs,TokenRequiredError:()=>Hs,toKnownErr:()=>Zs});var Xs=class extends g{constructor(e){super(e.status,e.error,e.message,e.headers)}},zs=class extends g{constructor(e){super(e.status,e.error,e.message,e.headers)}},Hs=class extends g{constructor(e){super(e.status,e.error,e.message,e.headers)}};function Zs(e){if(e instanceof g){if(e.error==="ExpiredToken")return new Xs(e);if(e.error==="InvalidToken")return new zs(e);if(e.error==="TokenRequired")return new Hs(e)}return e}var Ws={};p(Ws,{toKnownErr:()=>nm});function nm(e){return e}var Js={};p(Js,{toKnownErr:()=>sm});function sm(e){return e}var Qs={};p(Qs,{toKnownErr:()=>am});function am(e){return e}var Ys={};p(Ys,{HeadNotFoundError:()=>ea,toKnownErr:()=>ta});var ea=class extends g{constructor(e){super(e.status,e.error,e.message,e.headers)}};function ta(e){return e instanceof g&&e.error==="HeadNotFound"?new ea(e):e}var ra={};p(ra,{RepoNotFoundError:()=>ia,toKnownErr:()=>na});var ia=class extends g{constructor(e){super(e.status,e.error,e.message,e.headers)}};function na(e){return e instanceof g&&e.error==="RepoNotFound"?new ia(e):e}var sa={};p(sa,{toKnownErr:()=>om});function om(e){return e}var aa={};p(aa,{toKnownErr:()=>lm});function lm(e){return e}var oa={};p(oa,{toKnownErr:()=>pm});function pm(e){return e}var la={};p(la,{isRepo:()=>fm,toKnownErr:()=>um,validateRepo:()=>cm});function um(e){return e}function fm(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.sync.listRepos#repo"}function cm(e){return c.validate("com.atproto.sync.listRepos#repo",e)}var pa={};p(pa,{toKnownErr:()=>dm});function dm(e){return e}var ua={};p(ua,{toKnownErr:()=>mm});function mm(e){return e}var fa={};p(fa,{toKnownErr:()=>ym});function ym(e){return e}var ca={};p(ca,{toKnownErr:()=>Em});function Em(e){return e}var da={};p(da,{toKnownErr:()=>hm});function hm(e){return e}var ma={};p(ma,{toKnownErr:()=>Rm});function Rm(e){return e}var ya={};p(ya,{toKnownErr:()=>gm});function gm(e){return e}var Ea={};p(Ea,{toKnownErr:()=>bm});function bm(e){return e}var ha={};p(ha,{toKnownErr:()=>Am});function Am(e){return e}var Ra={};p(Ra,{toKnownErr:()=>Tm});function Tm(e){return e}var ga={};p(ga,{toKnownErr:()=>vm});function vm(e){return e}var ba={};p(ba,{toKnownErr:()=>Lm});function Lm(e){return e}var Aa={};p(Aa,{isFeed:()=>_m,isLinks:()=>wm,toKnownErr:()=>Cm,validateFeed:()=>Sm,validateLinks:()=>Bm});function Cm(e){return e}function _m(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.feed.describeFeedGenerator#feed"}function Sm(e){return c.validate("app.bsky.feed.describeFeedGenerator#feed",e)}function wm(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.feed.describeFeedGenerator#links"}function Bm(e){return c.validate("app.bsky.feed.describeFeedGenerator#links",e)}var Ta={};p(Ta,{toKnownErr:()=>km});function km(e){return e}var va={};p(va,{BlockedActorError:()=>La,BlockedByActorError:()=>Ca,toKnownErr:()=>_a});var La=class extends g{constructor(e){super(e.status,e.error,e.message,e.headers)}},Ca=class extends g{constructor(e){super(e.status,e.error,e.message,e.headers)}};function _a(e){if(e instanceof g){if(e.error==="BlockedActor")return new La(e);if(e.error==="BlockedByActor")return new Ca(e)}return e}var Sa={};p(Sa,{BlockedActorError:()=>wa,BlockedByActorError:()=>Ba,toKnownErr:()=>ka});var wa=class extends g{constructor(e){super(e.status,e.error,e.message,e.headers)}},Ba=class extends g{constructor(e){super(e.status,e.error,e.message,e.headers)}};function ka(e){if(e instanceof g){if(e.error==="BlockedActor")return new wa(e);if(e.error==="BlockedByActor")return new Ba(e)}return e}var xa={};p(xa,{UnknownFeedError:()=>Ka,toKnownErr:()=>Ua});var Ka=class extends g{constructor(e){super(e.status,e.error,e.message,e.headers)}};function Ua(e){return e instanceof g&&e.error==="UnknownFeed"?new Ka(e):e}var Va={};p(Va,{toKnownErr:()=>xm});function xm(e){return e}var Da={};p(Da,{toKnownErr:()=>Km});function Km(e){return e}var Na={};p(Na,{UnknownFeedError:()=>Pa,toKnownErr:()=>Ia});var Pa=class extends g{constructor(e){super(e.status,e.error,e.message,e.headers)}};function Ia(e){return e instanceof g&&e.error==="UnknownFeed"?new Pa(e):e}var ja={};p(ja,{isLike:()=>Vm,toKnownErr:()=>Um,validateLike:()=>Dm});function Um(e){return e}function Vm(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.feed.getLikes#like"}function Dm(e){return c.validate("app.bsky.feed.getLikes#like",e)}var qa={};p(qa,{UnknownListError:()=>Fa,toKnownErr:()=>Ma});var Fa=class extends g{constructor(e){super(e.status,e.error,e.message,e.headers)}};function Ma(e){return e instanceof g&&e.error==="UnknownList"?new Fa(e):e}var $a={};p($a,{NotFoundError:()=>Oa,toKnownErr:()=>Ga});var Oa=class extends g{constructor(e){super(e.status,e.error,e.message,e.headers)}};function Ga(e){return e instanceof g&&e.error==="NotFound"?new Oa(e):e}var Xa={};p(Xa,{toKnownErr:()=>Nm});function Nm(e){return e}var za={};p(za,{toKnownErr:()=>Pm});function Pm(e){return e}var Ha={};p(Ha,{toKnownErr:()=>Im});function Im(e){return e}var Za={};p(Za,{toKnownErr:()=>jm});function jm(e){return e}var Wa={};p(Wa,{BadQueryStringError:()=>Ja,toKnownErr:()=>Qa});var Ja=class extends g{constructor(e){super(e.status,e.error,e.message,e.headers)}};function Qa(e){return e instanceof g&&e.error==="BadQueryString"?new Ja(e):e}var Ya={};p(Ya,{toKnownErr:()=>qm});function qm(e){return e}var eo={};p(eo,{toKnownErr:()=>Fm});function Fm(e){return e}var to={};p(to,{toKnownErr:()=>Mm});function Mm(e){return e}var ro={};p(ro,{toKnownErr:()=>$m});function $m(e){return e}var io={};p(io,{toKnownErr:()=>Om});function Om(e){return e}var no={};p(no,{toKnownErr:()=>Gm});function Gm(e){return e}var so={};p(so,{toKnownErr:()=>Xm});function Xm(e){return e}var ao={};p(ao,{toKnownErr:()=>zm});function zm(e){return e}var oo={};p(oo,{ActorNotFoundError:()=>lo,toKnownErr:()=>po});var lo=class extends g{constructor(e){super(e.status,e.error,e.message,e.headers)}};function po(e){return e instanceof g&&e.error==="ActorNotFound"?new lo(e):e}var uo={};p(uo,{toKnownErr:()=>Hm});function Hm(e){return e}var fo={};p(fo,{toKnownErr:()=>Zm});function Zm(e){return e}var co={};p(co,{toKnownErr:()=>Wm});function Wm(e){return e}var mo={};p(mo,{toKnownErr:()=>Jm});function Jm(e){return e}var yo={};p(yo,{toKnownErr:()=>Qm});function Qm(e){return e}var Eo={};p(Eo,{toKnownErr:()=>Ym});function Ym(e){return e}var ho={};p(ho,{toKnownErr:()=>ey});function ey(e){return e}var Ro={};p(Ro,{isNotification:()=>ry,toKnownErr:()=>ty,validateNotification:()=>iy});function ty(e){return e}function ry(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.notification.listNotifications#notification"}function iy(e){return c.validate("app.bsky.notification.listNotifications#notification",e)}var go={};p(go,{toKnownErr:()=>ny});function ny(e){return e}var bo={};p(bo,{toKnownErr:()=>sy});function sy(e){return e}var Ao={};p(Ao,{toKnownErr:()=>ay});function ay(e){return e}var To={};p(To,{isSuggestion:()=>ly,toKnownErr:()=>oy,validateSuggestion:()=>py});function oy(e){return e}function ly(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.unspecced.getTaggedSuggestions#suggestion"}function py(e){return c.validate("app.bsky.unspecced.getTaggedSuggestions#suggestion",e)}var vo={};p(vo,{BadQueryStringError:()=>Lo,toKnownErr:()=>Co});var Lo=class extends g{constructor(e){super(e.status,e.error,e.message,e.headers)}};function Co(e){return e instanceof g&&e.error==="BadQueryString"?new Lo(e):e}var _o={};p(_o,{BadQueryStringError:()=>So,toKnownErr:()=>wo});var So=class extends g{constructor(e){super(e.status,e.error,e.message,e.headers)}};function wo(e){return e instanceof g&&e.error==="BadQueryString"?new So(e):e}var Bo={};p(Bo,{toKnownErr:()=>uy});function uy(e){return e}var ko={};p(ko,{toKnownErr:()=>fy});function fy(e){return e}var xo={};p(xo,{toKnownErr:()=>cy});function cy(e){return e}var Ko={};p(Ko,{toKnownErr:()=>dy});function dy(e){return e}var Uo={};p(Uo,{SubjectHasActionError:()=>Vo,toKnownErr:()=>Do});var Vo=class extends g{constructor(e){super(e.status,e.error,e.message,e.headers)}};function Do(e){return e instanceof g&&e.error==="SubjectHasAction"?new Vo(e):e}var No={};p(No,{toKnownErr:()=>my});function my(e){return e}var Po={};p(Po,{RecordNotFoundError:()=>Io,toKnownErr:()=>jo});var Io=class extends g{constructor(e){super(e.status,e.error,e.message,e.headers)}};function jo(e){return e instanceof g&&e.error==="RecordNotFound"?new Io(e):e}var qo={};p(qo,{RepoNotFoundError:()=>Fo,toKnownErr:()=>Mo});var Fo=class extends g{constructor(e){super(e.status,e.error,e.message,e.headers)}};function Mo(e){return e instanceof g&&e.error==="RepoNotFound"?new Fo(e):e}var $o={};p($o,{toKnownErr:()=>yy});function yy(e){return e}var Oo={};p(Oo,{toKnownErr:()=>Ey});function Ey(e){return e}var Go={};p(Go,{toKnownErr:()=>hy});function hy(e){return e}var Xo={};p(Xo,{isAccountView:()=>by,isRepoBlobRef:()=>Ly,isRepoRef:()=>Ty,isStatusAttr:()=>Ry,validateAccountView:()=>Ay,validateRepoBlobRef:()=>Cy,validateRepoRef:()=>vy,validateStatusAttr:()=>gy});function Ry(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.admin.defs#statusAttr"}function gy(e){return c.validate("com.atproto.admin.defs#statusAttr",e)}function by(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.admin.defs#accountView"}function Ay(e){return c.validate("com.atproto.admin.defs#accountView",e)}function Ty(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.admin.defs#repoRef"}function vy(e){return c.validate("com.atproto.admin.defs#repoRef",e)}function Ly(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.admin.defs#repoBlobRef"}function Cy(e){return c.validate("com.atproto.admin.defs#repoBlobRef",e)}var Vr={};p(Vr,{isLabel:()=>_y,isLabelValueDefinition:()=>Ky,isLabelValueDefinitionStrings:()=>Vy,isSelfLabel:()=>ky,isSelfLabels:()=>wy,validateLabel:()=>Sy,validateLabelValueDefinition:()=>Uy,validateLabelValueDefinitionStrings:()=>Dy,validateSelfLabel:()=>xy,validateSelfLabels:()=>By});function _y(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.label.defs#label"}function Sy(e){return c.validate("com.atproto.label.defs#label",e)}function wy(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.label.defs#selfLabels"}function By(e){return c.validate("com.atproto.label.defs#selfLabels",e)}function ky(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.label.defs#selfLabel"}function xy(e){return c.validate("com.atproto.label.defs#selfLabel",e)}function Ky(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.label.defs#labelValueDefinition"}function Uy(e){return c.validate("com.atproto.label.defs#labelValueDefinition",e)}function Vy(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.label.defs#labelValueDefinitionStrings"}function Dy(e){return c.validate("com.atproto.label.defs#labelValueDefinitionStrings",e)}var zo={};p(zo,{isInfo:()=>Iy,isLabels:()=>Ny,validateInfo:()=>jy,validateLabels:()=>Py});function Ny(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.label.subscribeLabels#labels"}function Py(e){return c.validate("com.atproto.label.subscribeLabels#labels",e)}function Iy(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.label.subscribeLabels#info"}function jy(e){return c.validate("com.atproto.label.subscribeLabels#info",e)}var Ho={};p(Ho,{REASONAPPEAL:()=>Xy,REASONMISLEADING:()=>My,REASONOTHER:()=>Gy,REASONRUDE:()=>Oy,REASONSEXUAL:()=>$y,REASONSPAM:()=>qy,REASONVIOLATION:()=>Fy});var qy="com.atproto.moderation.defs#reasonSpam",Fy="com.atproto.moderation.defs#reasonViolation",My="com.atproto.moderation.defs#reasonMisleading",$y="com.atproto.moderation.defs#reasonSexual",Oy="com.atproto.moderation.defs#reasonRude",Gy="com.atproto.moderation.defs#reasonOther",Xy="com.atproto.moderation.defs#reasonAppeal",Zo={};p(Zo,{isMain:()=>zy,validateMain:()=>Hy});function zy(e){return d(e)&&m(e,"$type")&&(e.$type==="com.atproto.repo.strongRef#main"||e.$type==="com.atproto.repo.strongRef")}function Hy(e){return c.validate("com.atproto.repo.strongRef#main",e)}var Wo={};p(Wo,{isInviteCode:()=>Zy,isInviteCodeUse:()=>Jy,validateInviteCode:()=>Wy,validateInviteCodeUse:()=>Qy});function Zy(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.server.defs#inviteCode"}function Wy(e){return c.validate("com.atproto.server.defs#inviteCode",e)}function Jy(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.server.defs#inviteCodeUse"}function Qy(e){return c.validate("com.atproto.server.defs#inviteCodeUse",e)}var Jo={};p(Jo,{isCommit:()=>Yy,isHandle:()=>iE,isIdentity:()=>tE,isInfo:()=>pE,isMigrate:()=>sE,isRepoOp:()=>fE,isTombstone:()=>oE,validateCommit:()=>eE,validateHandle:()=>nE,validateIdentity:()=>rE,validateInfo:()=>uE,validateMigrate:()=>aE,validateRepoOp:()=>cE,validateTombstone:()=>lE});function Yy(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.sync.subscribeRepos#commit"}function eE(e){return c.validate("com.atproto.sync.subscribeRepos#commit",e)}function tE(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.sync.subscribeRepos#identity"}function rE(e){return c.validate("com.atproto.sync.subscribeRepos#identity",e)}function iE(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.sync.subscribeRepos#handle"}function nE(e){return c.validate("com.atproto.sync.subscribeRepos#handle",e)}function sE(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.sync.subscribeRepos#migrate"}function aE(e){return c.validate("com.atproto.sync.subscribeRepos#migrate",e)}function oE(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.sync.subscribeRepos#tombstone"}function lE(e){return c.validate("com.atproto.sync.subscribeRepos#tombstone",e)}function pE(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.sync.subscribeRepos#info"}function uE(e){return c.validate("com.atproto.sync.subscribeRepos#info",e)}function fE(e){return d(e)&&m(e,"$type")&&e.$type==="com.atproto.sync.subscribeRepos#repoOp"}function cE(e){return c.validate("com.atproto.sync.subscribeRepos#repoOp",e)}var v={};p(v,{isAdultContentPref:()=>vE,isContentLabelPref:()=>CE,isFeedViewPref:()=>xE,isHiddenPostsPref:()=>FE,isInterestsPref:()=>DE,isLabelerPrefItem:()=>GE,isLabelersPref:()=>$E,isMutedWord:()=>PE,isMutedWordsPref:()=>jE,isPersonalDetailsPref:()=>BE,isProfileAssociated:()=>gE,isProfileView:()=>yE,isProfileViewBasic:()=>dE,isProfileViewDetailed:()=>hE,isSavedFeedsPref:()=>SE,isThreadViewPref:()=>UE,isViewerState:()=>AE,validateAdultContentPref:()=>LE,validateContentLabelPref:()=>_E,validateFeedViewPref:()=>KE,validateHiddenPostsPref:()=>ME,validateInterestsPref:()=>NE,validateLabelerPrefItem:()=>XE,validateLabelersPref:()=>OE,validateMutedWord:()=>IE,validateMutedWordsPref:()=>qE,validatePersonalDetailsPref:()=>kE,validateProfileAssociated:()=>bE,validateProfileView:()=>EE,validateProfileViewBasic:()=>mE,validateProfileViewDetailed:()=>RE,validateSavedFeedsPref:()=>wE,validateThreadViewPref:()=>VE,validateViewerState:()=>TE});function dE(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.actor.defs#profileViewBasic"}function mE(e){return c.validate("app.bsky.actor.defs#profileViewBasic",e)}function yE(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.actor.defs#profileView"}function EE(e){return c.validate("app.bsky.actor.defs#profileView",e)}function hE(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.actor.defs#profileViewDetailed"}function RE(e){return c.validate("app.bsky.actor.defs#profileViewDetailed",e)}function gE(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.actor.defs#profileAssociated"}function bE(e){return c.validate("app.bsky.actor.defs#profileAssociated",e)}function AE(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.actor.defs#viewerState"}function TE(e){return c.validate("app.bsky.actor.defs#viewerState",e)}function vE(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.actor.defs#adultContentPref"}function LE(e){return c.validate("app.bsky.actor.defs#adultContentPref",e)}function CE(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.actor.defs#contentLabelPref"}function _E(e){return c.validate("app.bsky.actor.defs#contentLabelPref",e)}function SE(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.actor.defs#savedFeedsPref"}function wE(e){return c.validate("app.bsky.actor.defs#savedFeedsPref",e)}function BE(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.actor.defs#personalDetailsPref"}function kE(e){return c.validate("app.bsky.actor.defs#personalDetailsPref",e)}function xE(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.actor.defs#feedViewPref"}function KE(e){return c.validate("app.bsky.actor.defs#feedViewPref",e)}function UE(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.actor.defs#threadViewPref"}function VE(e){return c.validate("app.bsky.actor.defs#threadViewPref",e)}function DE(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.actor.defs#interestsPref"}function NE(e){return c.validate("app.bsky.actor.defs#interestsPref",e)}function PE(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.actor.defs#mutedWord"}function IE(e){return c.validate("app.bsky.actor.defs#mutedWord",e)}function jE(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.actor.defs#mutedWordsPref"}function qE(e){return c.validate("app.bsky.actor.defs#mutedWordsPref",e)}function FE(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.actor.defs#hiddenPostsPref"}function ME(e){return c.validate("app.bsky.actor.defs#hiddenPostsPref",e)}function $E(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.actor.defs#labelersPref"}function OE(e){return c.validate("app.bsky.actor.defs#labelersPref",e)}function GE(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.actor.defs#labelerPrefItem"}function XE(e){return c.validate("app.bsky.actor.defs#labelerPrefItem",e)}var Dr={};p(Dr,{isRecord:()=>zE,validateRecord:()=>HE});function zE(e){return d(e)&&m(e,"$type")&&(e.$type==="app.bsky.actor.profile#main"||e.$type==="app.bsky.actor.profile")}function HE(e){return c.validate("app.bsky.actor.profile#main",e)}var Et={};p(Et,{isExternal:()=>JE,isMain:()=>ZE,isView:()=>YE,isViewExternal:()=>th,validateExternal:()=>QE,validateMain:()=>WE,validateView:()=>eh,validateViewExternal:()=>rh});function ZE(e){return d(e)&&m(e,"$type")&&(e.$type==="app.bsky.embed.external#main"||e.$type==="app.bsky.embed.external")}function WE(e){return c.validate("app.bsky.embed.external#main",e)}function JE(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.embed.external#external"}function QE(e){return c.validate("app.bsky.embed.external#external",e)}function YE(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.embed.external#view"}function eh(e){return c.validate("app.bsky.embed.external#view",e)}function th(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.embed.external#viewExternal"}function rh(e){return c.validate("app.bsky.embed.external#viewExternal",e)}var Ge={};p(Ge,{isAspectRatio:()=>oh,isImage:()=>sh,isMain:()=>ih,isView:()=>ph,isViewImage:()=>fh,validateAspectRatio:()=>lh,validateImage:()=>ah,validateMain:()=>nh,validateView:()=>uh,validateViewImage:()=>ch});function ih(e){return d(e)&&m(e,"$type")&&(e.$type==="app.bsky.embed.images#main"||e.$type==="app.bsky.embed.images")}function nh(e){return c.validate("app.bsky.embed.images#main",e)}function sh(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.embed.images#image"}function ah(e){return c.validate("app.bsky.embed.images#image",e)}function oh(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.embed.images#aspectRatio"}function lh(e){return c.validate("app.bsky.embed.images#aspectRatio",e)}function ph(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.embed.images#view"}function uh(e){return c.validate("app.bsky.embed.images#view",e)}function fh(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.embed.images#viewImage"}function ch(e){return c.validate("app.bsky.embed.images#viewImage",e)}var Se={};p(Se,{isMain:()=>dh,isView:()=>yh,isViewBlocked:()=>Ah,isViewNotFound:()=>gh,isViewRecord:()=>hh,validateMain:()=>mh,validateView:()=>Eh,validateViewBlocked:()=>Th,validateViewNotFound:()=>bh,validateViewRecord:()=>Rh});function dh(e){return d(e)&&m(e,"$type")&&(e.$type==="app.bsky.embed.record#main"||e.$type==="app.bsky.embed.record")}function mh(e){return c.validate("app.bsky.embed.record#main",e)}function yh(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.embed.record#view"}function Eh(e){return c.validate("app.bsky.embed.record#view",e)}function hh(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.embed.record#viewRecord"}function Rh(e){return c.validate("app.bsky.embed.record#viewRecord",e)}function gh(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.embed.record#viewNotFound"}function bh(e){return c.validate("app.bsky.embed.record#viewNotFound",e)}function Ah(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.embed.record#viewBlocked"}function Th(e){return c.validate("app.bsky.embed.record#viewBlocked",e)}var Xe={};p(Xe,{isMain:()=>vh,isView:()=>Ch,validateMain:()=>Lh,validateView:()=>_h});function vh(e){return d(e)&&m(e,"$type")&&(e.$type==="app.bsky.embed.recordWithMedia#main"||e.$type==="app.bsky.embed.recordWithMedia")}function Lh(e){return c.validate("app.bsky.embed.recordWithMedia#main",e)}function Ch(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.embed.recordWithMedia#view"}function _h(e){return c.validate("app.bsky.embed.recordWithMedia#view",e)}var Qo={};p(Qo,{isBlockedAuthor:()=>$h,isBlockedPost:()=>Fh,isFeedViewPost:()=>xh,isGeneratorView:()=>Gh,isGeneratorViewerState:()=>zh,isNotFoundPost:()=>jh,isPostView:()=>Sh,isReasonRepost:()=>Dh,isReplyRef:()=>Uh,isSkeletonFeedPost:()=>Zh,isSkeletonReasonRepost:()=>Jh,isThreadViewPost:()=>Ph,isThreadgateView:()=>Yh,isViewerState:()=>Bh,validateBlockedAuthor:()=>Oh,validateBlockedPost:()=>Mh,validateFeedViewPost:()=>Kh,validateGeneratorView:()=>Xh,validateGeneratorViewerState:()=>Hh,validateNotFoundPost:()=>qh,validatePostView:()=>wh,validateReasonRepost:()=>Nh,validateReplyRef:()=>Vh,validateSkeletonFeedPost:()=>Wh,validateSkeletonReasonRepost:()=>Qh,validateThreadViewPost:()=>Ih,validateThreadgateView:()=>eR,validateViewerState:()=>kh});function Sh(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.feed.defs#postView"}function wh(e){return c.validate("app.bsky.feed.defs#postView",e)}function Bh(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.feed.defs#viewerState"}function kh(e){return c.validate("app.bsky.feed.defs#viewerState",e)}function xh(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.feed.defs#feedViewPost"}function Kh(e){return c.validate("app.bsky.feed.defs#feedViewPost",e)}function Uh(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.feed.defs#replyRef"}function Vh(e){return c.validate("app.bsky.feed.defs#replyRef",e)}function Dh(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.feed.defs#reasonRepost"}function Nh(e){return c.validate("app.bsky.feed.defs#reasonRepost",e)}function Ph(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.feed.defs#threadViewPost"}function Ih(e){return c.validate("app.bsky.feed.defs#threadViewPost",e)}function jh(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.feed.defs#notFoundPost"}function qh(e){return c.validate("app.bsky.feed.defs#notFoundPost",e)}function Fh(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.feed.defs#blockedPost"}function Mh(e){return c.validate("app.bsky.feed.defs#blockedPost",e)}function $h(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.feed.defs#blockedAuthor"}function Oh(e){return c.validate("app.bsky.feed.defs#blockedAuthor",e)}function Gh(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.feed.defs#generatorView"}function Xh(e){return c.validate("app.bsky.feed.defs#generatorView",e)}function zh(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.feed.defs#generatorViewerState"}function Hh(e){return c.validate("app.bsky.feed.defs#generatorViewerState",e)}function Zh(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.feed.defs#skeletonFeedPost"}function Wh(e){return c.validate("app.bsky.feed.defs#skeletonFeedPost",e)}function Jh(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.feed.defs#skeletonReasonRepost"}function Qh(e){return c.validate("app.bsky.feed.defs#skeletonReasonRepost",e)}function Yh(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.feed.defs#threadgateView"}function eR(e){return c.validate("app.bsky.feed.defs#threadgateView",e)}var Yo={};p(Yo,{isRecord:()=>tR,validateRecord:()=>rR});function tR(e){return d(e)&&m(e,"$type")&&(e.$type==="app.bsky.feed.generator#main"||e.$type==="app.bsky.feed.generator")}function rR(e){return c.validate("app.bsky.feed.generator#main",e)}var el={};p(el,{isRecord:()=>iR,validateRecord:()=>nR});function iR(e){return d(e)&&m(e,"$type")&&(e.$type==="app.bsky.feed.like#main"||e.$type==="app.bsky.feed.like")}function nR(e){return c.validate("app.bsky.feed.like#main",e)}var De={};p(De,{isEntity:()=>pR,isRecord:()=>sR,isReplyRef:()=>oR,isTextSlice:()=>fR,validateEntity:()=>uR,validateRecord:()=>aR,validateReplyRef:()=>lR,validateTextSlice:()=>cR});function sR(e){return d(e)&&m(e,"$type")&&(e.$type==="app.bsky.feed.post#main"||e.$type==="app.bsky.feed.post")}function aR(e){return c.validate("app.bsky.feed.post#main",e)}function oR(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.feed.post#replyRef"}function lR(e){return c.validate("app.bsky.feed.post#replyRef",e)}function pR(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.feed.post#entity"}function uR(e){return c.validate("app.bsky.feed.post#entity",e)}function fR(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.feed.post#textSlice"}function cR(e){return c.validate("app.bsky.feed.post#textSlice",e)}var tl={};p(tl,{isRecord:()=>dR,validateRecord:()=>mR});function dR(e){return d(e)&&m(e,"$type")&&(e.$type==="app.bsky.feed.repost#main"||e.$type==="app.bsky.feed.repost")}function mR(e){return c.validate("app.bsky.feed.repost#main",e)}var rl={};p(rl,{isFollowingRule:()=>gR,isListRule:()=>AR,isMentionRule:()=>hR,isRecord:()=>yR,validateFollowingRule:()=>bR,validateListRule:()=>TR,validateMentionRule:()=>RR,validateRecord:()=>ER});function yR(e){return d(e)&&m(e,"$type")&&(e.$type==="app.bsky.feed.threadgate#main"||e.$type==="app.bsky.feed.threadgate")}function ER(e){return c.validate("app.bsky.feed.threadgate#main",e)}function hR(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.feed.threadgate#mentionRule"}function RR(e){return c.validate("app.bsky.feed.threadgate#mentionRule",e)}function gR(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.feed.threadgate#followingRule"}function bR(e){return c.validate("app.bsky.feed.threadgate#followingRule",e)}function AR(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.feed.threadgate#listRule"}function TR(e){return c.validate("app.bsky.feed.threadgate#listRule",e)}var il={};p(il,{isRecord:()=>vR,validateRecord:()=>LR});function vR(e){return d(e)&&m(e,"$type")&&(e.$type==="app.bsky.graph.block#main"||e.$type==="app.bsky.graph.block")}function LR(e){return c.validate("app.bsky.graph.block#main",e)}var nl={};p(nl,{CURATELIST:()=>KR,MODLIST:()=>xR,isListItemView:()=>BR,isListView:()=>SR,isListViewBasic:()=>CR,isListViewerState:()=>UR,isNotFoundActor:()=>DR,isRelationship:()=>PR,validateListItemView:()=>kR,validateListView:()=>wR,validateListViewBasic:()=>_R,validateListViewerState:()=>VR,validateNotFoundActor:()=>NR,validateRelationship:()=>IR});function CR(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.graph.defs#listViewBasic"}function _R(e){return c.validate("app.bsky.graph.defs#listViewBasic",e)}function SR(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.graph.defs#listView"}function wR(e){return c.validate("app.bsky.graph.defs#listView",e)}function BR(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.graph.defs#listItemView"}function kR(e){return c.validate("app.bsky.graph.defs#listItemView",e)}var xR="app.bsky.graph.defs#modlist",KR="app.bsky.graph.defs#curatelist";function UR(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.graph.defs#listViewerState"}function VR(e){return c.validate("app.bsky.graph.defs#listViewerState",e)}function DR(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.graph.defs#notFoundActor"}function NR(e){return c.validate("app.bsky.graph.defs#notFoundActor",e)}function PR(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.graph.defs#relationship"}function IR(e){return c.validate("app.bsky.graph.defs#relationship",e)}var sl={};p(sl,{isRecord:()=>jR,validateRecord:()=>qR});function jR(e){return d(e)&&m(e,"$type")&&(e.$type==="app.bsky.graph.follow#main"||e.$type==="app.bsky.graph.follow")}function qR(e){return c.validate("app.bsky.graph.follow#main",e)}var al={};p(al,{isRecord:()=>FR,validateRecord:()=>MR});function FR(e){return d(e)&&m(e,"$type")&&(e.$type==="app.bsky.graph.list#main"||e.$type==="app.bsky.graph.list")}function MR(e){return c.validate("app.bsky.graph.list#main",e)}var ol={};p(ol,{isRecord:()=>$R,validateRecord:()=>OR});function $R(e){return d(e)&&m(e,"$type")&&(e.$type==="app.bsky.graph.listblock#main"||e.$type==="app.bsky.graph.listblock")}function OR(e){return c.validate("app.bsky.graph.listblock#main",e)}var ll={};p(ll,{isRecord:()=>GR,validateRecord:()=>XR});function GR(e){return d(e)&&m(e,"$type")&&(e.$type==="app.bsky.graph.listitem#main"||e.$type==="app.bsky.graph.listitem")}function XR(e){return c.validate("app.bsky.graph.listitem#main",e)}var pl={};p(pl,{isLabelerPolicies:()=>YR,isLabelerView:()=>zR,isLabelerViewDetailed:()=>ZR,isLabelerViewerState:()=>JR,validateLabelerPolicies:()=>eg,validateLabelerView:()=>HR,validateLabelerViewDetailed:()=>WR,validateLabelerViewerState:()=>QR});function zR(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.labeler.defs#labelerView"}function HR(e){return c.validate("app.bsky.labeler.defs#labelerView",e)}function ZR(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.labeler.defs#labelerViewDetailed"}function WR(e){return c.validate("app.bsky.labeler.defs#labelerViewDetailed",e)}function JR(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.labeler.defs#labelerViewerState"}function QR(e){return c.validate("app.bsky.labeler.defs#labelerViewerState",e)}function YR(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.labeler.defs#labelerPolicies"}function eg(e){return c.validate("app.bsky.labeler.defs#labelerPolicies",e)}var ul={};p(ul,{isRecord:()=>tg,validateRecord:()=>rg});function tg(e){return d(e)&&m(e,"$type")&&(e.$type==="app.bsky.labeler.service#main"||e.$type==="app.bsky.labeler.service")}function rg(e){return c.validate("app.bsky.labeler.service#main",e)}var Re={};p(Re,{isByteSlice:()=>fg,isLink:()=>og,isMain:()=>ig,isMention:()=>sg,isTag:()=>pg,validateByteSlice:()=>cg,validateLink:()=>lg,validateMain:()=>ng,validateMention:()=>ag,validateTag:()=>ug});function ig(e){return d(e)&&m(e,"$type")&&(e.$type==="app.bsky.richtext.facet#main"||e.$type==="app.bsky.richtext.facet")}function ng(e){return c.validate("app.bsky.richtext.facet#main",e)}function sg(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.richtext.facet#mention"}function ag(e){return c.validate("app.bsky.richtext.facet#mention",e)}function og(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.richtext.facet#link"}function lg(e){return c.validate("app.bsky.richtext.facet#link",e)}function pg(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.richtext.facet#tag"}function ug(e){return c.validate("app.bsky.richtext.facet#tag",e)}function fg(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.richtext.facet#byteSlice"}function cg(e){return c.validate("app.bsky.richtext.facet#byteSlice",e)}var fl={};p(fl,{isSkeletonSearchActor:()=>yg,isSkeletonSearchPost:()=>dg,validateSkeletonSearchActor:()=>Eg,validateSkeletonSearchPost:()=>mg});function dg(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.unspecced.defs#skeletonSearchPost"}function mg(e){return c.validate("app.bsky.unspecced.defs#skeletonSearchPost",e)}function yg(e){return d(e)&&m(e,"$type")&&e.$type==="app.bsky.unspecced.defs#skeletonSearchActor"}function Eg(e){return c.validate("app.bsky.unspecced.defs#skeletonSearchActor",e)}var cl={};p(cl,{isTemplateView:()=>hg,validateTemplateView:()=>Rg});function hg(e){return d(e)&&m(e,"$type")&&e.$type==="tools.ozone.communication.defs#templateView"}function Rg(e){return c.validate("tools.ozone.communication.defs#templateView",e)}var dl={};p(dl,{REVIEWCLOSED:()=>Sg,REVIEWESCALATED:()=>_g,REVIEWNONE:()=>wg,REVIEWOPEN:()=>Cg,isBlobView:()=>hb,isImageDetails:()=>gb,isModEventAcknowledge:()=>Fg,isModEventComment:()=>Dg,isModEventDivert:()=>Jg,isModEventEmail:()=>Zg,isModEventEscalate:()=>$g,isModEventLabel:()=>jg,isModEventMute:()=>Gg,isModEventReport:()=>Pg,isModEventResolveAppeal:()=>Ug,isModEventReverseTakedown:()=>xg,isModEventTag:()=>Yg,isModEventTakedown:()=>Bg,isModEventUnmute:()=>zg,isModEventView:()=>gg,isModEventViewDetail:()=>Ag,isModeration:()=>db,isModerationDetail:()=>yb,isRecordView:()=>ob,isRecordViewDetail:()=>pb,isRecordViewNotFound:()=>fb,isRepoView:()=>tb,isRepoViewDetail:()=>ib,isRepoViewNotFound:()=>sb,isSubjectStatusView:()=>vg,isVideoDetails:()=>Ab,validateBlobView:()=>Rb,validateImageDetails:()=>bb,validateModEventAcknowledge:()=>Mg,validateModEventComment:()=>Ng,validateModEventDivert:()=>Qg,validateModEventEmail:()=>Wg,validateModEventEscalate:()=>Og,validateModEventLabel:()=>qg,validateModEventMute:()=>Xg,validateModEventReport:()=>Ig,validateModEventResolveAppeal:()=>Vg,validateModEventReverseTakedown:()=>Kg,validateModEventTag:()=>eb,validateModEventTakedown:()=>kg,validateModEventUnmute:()=>Hg,validateModEventView:()=>bg,validateModEventViewDetail:()=>Tg,validateModeration:()=>mb,validateModerationDetail:()=>Eb,validateRecordView:()=>lb,validateRecordViewDetail:()=>ub,validateRecordViewNotFound:()=>cb,validateRepoView:()=>rb,validateRepoViewDetail:()=>nb,validateRepoViewNotFound:()=>ab,validateSubjectStatusView:()=>Lg,validateVideoDetails:()=>Tb});function gg(e){return d(e)&&m(e,"$type")&&e.$type==="tools.ozone.moderation.defs#modEventView"}function bg(e){return c.validate("tools.ozone.moderation.defs#modEventView",e)}function Ag(e){return d(e)&&m(e,"$type")&&e.$type==="tools.ozone.moderation.defs#modEventViewDetail"}function Tg(e){return c.validate("tools.ozone.moderation.defs#modEventViewDetail",e)}function vg(e){return d(e)&&m(e,"$type")&&e.$type==="tools.ozone.moderation.defs#subjectStatusView"}function Lg(e){return c.validate("tools.ozone.moderation.defs#subjectStatusView",e)}var Cg="tools.ozone.moderation.defs#reviewOpen",_g="tools.ozone.moderation.defs#reviewEscalated",Sg="tools.ozone.moderation.defs#reviewClosed",wg="tools.ozone.moderation.defs#reviewNone";function Bg(e){return d(e)&&m(e,"$type")&&e.$type==="tools.ozone.moderation.defs#modEventTakedown"}function kg(e){return c.validate("tools.ozone.moderation.defs#modEventTakedown",e)}function xg(e){return d(e)&&m(e,"$type")&&e.$type==="tools.ozone.moderation.defs#modEventReverseTakedown"}function Kg(e){return c.validate("tools.ozone.moderation.defs#modEventReverseTakedown",e)}function Ug(e){return d(e)&&m(e,"$type")&&e.$type==="tools.ozone.moderation.defs#modEventResolveAppeal"}function Vg(e){return c.validate("tools.ozone.moderation.defs#modEventResolveAppeal",e)}function Dg(e){return d(e)&&m(e,"$type")&&e.$type==="tools.ozone.moderation.defs#modEventComment"}function Ng(e){return c.validate("tools.ozone.moderation.defs#modEventComment",e)}function Pg(e){return d(e)&&m(e,"$type")&&e.$type==="tools.ozone.moderation.defs#modEventReport"}function Ig(e){return c.validate("tools.ozone.moderation.defs#modEventReport",e)}function jg(e){return d(e)&&m(e,"$type")&&e.$type==="tools.ozone.moderation.defs#modEventLabel"}function qg(e){return c.validate("tools.ozone.moderation.defs#modEventLabel",e)}function Fg(e){return d(e)&&m(e,"$type")&&e.$type==="tools.ozone.moderation.defs#modEventAcknowledge"}function Mg(e){return c.validate("tools.ozone.moderation.defs#modEventAcknowledge",e)}function $g(e){return d(e)&&m(e,"$type")&&e.$type==="tools.ozone.moderation.defs#modEventEscalate"}function Og(e){return c.validate("tools.ozone.moderation.defs#modEventEscalate",e)}function Gg(e){return d(e)&&m(e,"$type")&&e.$type==="tools.ozone.moderation.defs#modEventMute"}function Xg(e){return c.validate("tools.ozone.moderation.defs#modEventMute",e)}function zg(e){return d(e)&&m(e,"$type")&&e.$type==="tools.ozone.moderation.defs#modEventUnmute"}function Hg(e){return c.validate("tools.ozone.moderation.defs#modEventUnmute",e)}function Zg(e){return d(e)&&m(e,"$type")&&e.$type==="tools.ozone.moderation.defs#modEventEmail"}function Wg(e){return c.validate("tools.ozone.moderation.defs#modEventEmail",e)}function Jg(e){return d(e)&&m(e,"$type")&&e.$type==="tools.ozone.moderation.defs#modEventDivert"}function Qg(e){return c.validate("tools.ozone.moderation.defs#modEventDivert",e)}function Yg(e){return d(e)&&m(e,"$type")&&e.$type==="tools.ozone.moderation.defs#modEventTag"}function eb(e){return c.validate("tools.ozone.moderation.defs#modEventTag",e)}function tb(e){return d(e)&&m(e,"$type")&&e.$type==="tools.ozone.moderation.defs#repoView"}function rb(e){return c.validate("tools.ozone.moderation.defs#repoView",e)}function ib(e){return d(e)&&m(e,"$type")&&e.$type==="tools.ozone.moderation.defs#repoViewDetail"}function nb(e){return c.validate("tools.ozone.moderation.defs#repoViewDetail",e)}function sb(e){return d(e)&&m(e,"$type")&&e.$type==="tools.ozone.moderation.defs#repoViewNotFound"}function ab(e){return c.validate("tools.ozone.moderation.defs#repoViewNotFound",e)}function ob(e){return d(e)&&m(e,"$type")&&e.$type==="tools.ozone.moderation.defs#recordView"}function lb(e){return c.validate("tools.ozone.moderation.defs#recordView",e)}function pb(e){return d(e)&&m(e,"$type")&&e.$type==="tools.ozone.moderation.defs#recordViewDetail"}function ub(e){return c.validate("tools.ozone.moderation.defs#recordViewDetail",e)}function fb(e){return d(e)&&m(e,"$type")&&e.$type==="tools.ozone.moderation.defs#recordViewNotFound"}function cb(e){return c.validate("tools.ozone.moderation.defs#recordViewNotFound",e)}function db(e){return d(e)&&m(e,"$type")&&e.$type==="tools.ozone.moderation.defs#moderation"}function mb(e){return c.validate("tools.ozone.moderation.defs#moderation",e)}function yb(e){return d(e)&&m(e,"$type")&&e.$type==="tools.ozone.moderation.defs#moderationDetail"}function Eb(e){return c.validate("tools.ozone.moderation.defs#moderationDetail",e)}function hb(e){return d(e)&&m(e,"$type")&&e.$type==="tools.ozone.moderation.defs#blobView"}function Rb(e){return c.validate("tools.ozone.moderation.defs#blobView",e)}function gb(e){return d(e)&&m(e,"$type")&&e.$type==="tools.ozone.moderation.defs#imageDetails"}function bb(e){return c.validate("tools.ozone.moderation.defs#imageDetails",e)}function Ab(e){return d(e)&&m(e,"$type")&&e.$type==="tools.ozone.moderation.defs#videoDetails"}function Tb(e){return c.validate("tools.ozone.moderation.defs#videoDetails",e)}var vb={DefsReasonSpam:"com.atproto.moderation.defs#reasonSpam",DefsReasonViolation:"com.atproto.moderation.defs#reasonViolation",DefsReasonMisleading:"com.atproto.moderation.defs#reasonMisleading",DefsReasonSexual:"com.atproto.moderation.defs#reasonSexual",DefsReasonRude:"com.atproto.moderation.defs#reasonRude",DefsReasonOther:"com.atproto.moderation.defs#reasonOther",DefsReasonAppeal:"com.atproto.moderation.defs#reasonAppeal"},Lb={DefsModlist:"app.bsky.graph.defs#modlist",DefsCuratelist:"app.bsky.graph.defs#curatelist"},Cb={DefsReviewOpen:"tools.ozone.moderation.defs#reviewOpen",DefsReviewEscalated:"tools.ozone.moderation.defs#reviewEscalated",DefsReviewClosed:"tools.ozone.moderation.defs#reviewClosed",DefsReviewNone:"tools.ozone.moderation.defs#reviewNone"},ml=class{constructor(){this.xrpc=new sn,this.xrpc.addLexicons(on)}service(e){return new yl(this,this.xrpc.service(e))}},yl=class{constructor(e,i){this._baseClient=e,this.xrpc=i,this.com=new El(this),this.app=new _l(this),this.tools=new Hl(this)}setHeader(e,i){this.xrpc.setHeader(e,i)}},El=class{constructor(e){this._service=e,this.atproto=new hl(e)}},hl=class{constructor(e){this._service=e,this.admin=new Rl(e),this.identity=new gl(e),this.label=new bl(e),this.moderation=new Al(e),this.repo=new Tl(e),this.server=new vl(e),this.sync=new Ll(e),this.temp=new Cl(e)}},Rl=class{constructor(e){this._service=e}deleteAccount(e,i){return this._service.xrpc.call("com.atproto.admin.deleteAccount",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}disableAccountInvites(e,i){return this._service.xrpc.call("com.atproto.admin.disableAccountInvites",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}disableInviteCodes(e,i){return this._service.xrpc.call("com.atproto.admin.disableInviteCodes",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}enableAccountInvites(e,i){return this._service.xrpc.call("com.atproto.admin.enableAccountInvites",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}getAccountInfo(e,i){return this._service.xrpc.call("com.atproto.admin.getAccountInfo",e,void 0,i).catch(r=>{throw r})}getAccountInfos(e,i){return this._service.xrpc.call("com.atproto.admin.getAccountInfos",e,void 0,i).catch(r=>{throw r})}getInviteCodes(e,i){return this._service.xrpc.call("com.atproto.admin.getInviteCodes",e,void 0,i).catch(r=>{throw r})}getSubjectStatus(e,i){return this._service.xrpc.call("com.atproto.admin.getSubjectStatus",e,void 0,i).catch(r=>{throw r})}sendEmail(e,i){return this._service.xrpc.call("com.atproto.admin.sendEmail",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}updateAccountEmail(e,i){return this._service.xrpc.call("com.atproto.admin.updateAccountEmail",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}updateAccountHandle(e,i){return this._service.xrpc.call("com.atproto.admin.updateAccountHandle",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}updateAccountPassword(e,i){return this._service.xrpc.call("com.atproto.admin.updateAccountPassword",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}updateSubjectStatus(e,i){return this._service.xrpc.call("com.atproto.admin.updateSubjectStatus",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}},gl=class{constructor(e){this._service=e}getRecommendedDidCredentials(e,i){return this._service.xrpc.call("com.atproto.identity.getRecommendedDidCredentials",e,void 0,i).catch(r=>{throw r})}requestPlcOperationSignature(e,i){return this._service.xrpc.call("com.atproto.identity.requestPlcOperationSignature",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}resolveHandle(e,i){return this._service.xrpc.call("com.atproto.identity.resolveHandle",e,void 0,i).catch(r=>{throw r})}signPlcOperation(e,i){return this._service.xrpc.call("com.atproto.identity.signPlcOperation",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}submitPlcOperation(e,i){return this._service.xrpc.call("com.atproto.identity.submitPlcOperation",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}updateHandle(e,i){return this._service.xrpc.call("com.atproto.identity.updateHandle",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}},bl=class{constructor(e){this._service=e}queryLabels(e,i){return this._service.xrpc.call("com.atproto.label.queryLabels",e,void 0,i).catch(r=>{throw r})}},Al=class{constructor(e){this._service=e}createReport(e,i){return this._service.xrpc.call("com.atproto.moderation.createReport",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}},Tl=class{constructor(e){this._service=e}applyWrites(e,i){return this._service.xrpc.call("com.atproto.repo.applyWrites",i==null?void 0:i.qp,e,i).catch(r=>{throw xn(r)})}createRecord(e,i){return this._service.xrpc.call("com.atproto.repo.createRecord",i==null?void 0:i.qp,e,i).catch(r=>{throw Vn(r)})}deleteRecord(e,i){return this._service.xrpc.call("com.atproto.repo.deleteRecord",i==null?void 0:i.qp,e,i).catch(r=>{throw Pn(r)})}describeRepo(e,i){return this._service.xrpc.call("com.atproto.repo.describeRepo",e,void 0,i).catch(r=>{throw r})}getRecord(e,i){return this._service.xrpc.call("com.atproto.repo.getRecord",e,void 0,i).catch(r=>{throw r})}importRepo(e,i){return this._service.xrpc.call("com.atproto.repo.importRepo",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}listMissingBlobs(e,i){return this._service.xrpc.call("com.atproto.repo.listMissingBlobs",e,void 0,i).catch(r=>{throw r})}listRecords(e,i){return this._service.xrpc.call("com.atproto.repo.listRecords",e,void 0,i).catch(r=>{throw r})}putRecord(e,i){return this._service.xrpc.call("com.atproto.repo.putRecord",i==null?void 0:i.qp,e,i).catch(r=>{throw On(r)})}uploadBlob(e,i){return this._service.xrpc.call("com.atproto.repo.uploadBlob",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}},vl=class{constructor(e){this._service=e}activateAccount(e,i){return this._service.xrpc.call("com.atproto.server.activateAccount",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}checkAccountStatus(e,i){return this._service.xrpc.call("com.atproto.server.checkAccountStatus",e,void 0,i).catch(r=>{throw r})}confirmEmail(e,i){return this._service.xrpc.call("com.atproto.server.confirmEmail",i==null?void 0:i.qp,e,i).catch(r=>{throw Yn(r)})}createAccount(e,i){return this._service.xrpc.call("com.atproto.server.createAccount",i==null?void 0:i.qp,e,i).catch(r=>{throw ls(r)})}createAppPassword(e,i){return this._service.xrpc.call("com.atproto.server.createAppPassword",i==null?void 0:i.qp,e,i).catch(r=>{throw fs(r)})}createInviteCode(e,i){return this._service.xrpc.call("com.atproto.server.createInviteCode",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}createInviteCodes(e,i){return this._service.xrpc.call("com.atproto.server.createInviteCodes",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}createSession(e,i){return this._service.xrpc.call("com.atproto.server.createSession",i==null?void 0:i.qp,e,i).catch(r=>{throw Es(r)})}deactivateAccount(e,i){return this._service.xrpc.call("com.atproto.server.deactivateAccount",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}deleteAccount(e,i){return this._service.xrpc.call("com.atproto.server.deleteAccount",i==null?void 0:i.qp,e,i).catch(r=>{throw As(r)})}deleteSession(e,i){return this._service.xrpc.call("com.atproto.server.deleteSession",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}describeServer(e,i){return this._service.xrpc.call("com.atproto.server.describeServer",e,void 0,i).catch(r=>{throw r})}getAccountInviteCodes(e,i){return this._service.xrpc.call("com.atproto.server.getAccountInviteCodes",e,void 0,i).catch(r=>{throw _s(r)})}getServiceAuth(e,i){return this._service.xrpc.call("com.atproto.server.getServiceAuth",e,void 0,i).catch(r=>{throw r})}getSession(e,i){return this._service.xrpc.call("com.atproto.server.getSession",e,void 0,i).catch(r=>{throw r})}listAppPasswords(e,i){return this._service.xrpc.call("com.atproto.server.listAppPasswords",e,void 0,i).catch(r=>{throw xs(r)})}refreshSession(e,i){return this._service.xrpc.call("com.atproto.server.refreshSession",i==null?void 0:i.qp,e,i).catch(r=>{throw Vs(r)})}requestAccountDelete(e,i){return this._service.xrpc.call("com.atproto.server.requestAccountDelete",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}requestEmailConfirmation(e,i){return this._service.xrpc.call("com.atproto.server.requestEmailConfirmation",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}requestEmailUpdate(e,i){return this._service.xrpc.call("com.atproto.server.requestEmailUpdate",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}requestPasswordReset(e,i){return this._service.xrpc.call("com.atproto.server.requestPasswordReset",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}reserveSigningKey(e,i){return this._service.xrpc.call("com.atproto.server.reserveSigningKey",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}resetPassword(e,i){return this._service.xrpc.call("com.atproto.server.resetPassword",i==null?void 0:i.qp,e,i).catch(r=>{throw $s(r)})}revokeAppPassword(e,i){return this._service.xrpc.call("com.atproto.server.revokeAppPassword",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}updateEmail(e,i){return this._service.xrpc.call("com.atproto.server.updateEmail",i==null?void 0:i.qp,e,i).catch(r=>{throw Zs(r)})}},Ll=class{constructor(e){this._service=e}getBlob(e,i){return this._service.xrpc.call("com.atproto.sync.getBlob",e,void 0,i).catch(r=>{throw r})}getBlocks(e,i){return this._service.xrpc.call("com.atproto.sync.getBlocks",e,void 0,i).catch(r=>{throw r})}getCheckout(e,i){return this._service.xrpc.call("com.atproto.sync.getCheckout",e,void 0,i).catch(r=>{throw r})}getHead(e,i){return this._service.xrpc.call("com.atproto.sync.getHead",e,void 0,i).catch(r=>{throw ta(r)})}getLatestCommit(e,i){return this._service.xrpc.call("com.atproto.sync.getLatestCommit",e,void 0,i).catch(r=>{throw na(r)})}getRecord(e,i){return this._service.xrpc.call("com.atproto.sync.getRecord",e,void 0,i).catch(r=>{throw r})}getRepo(e,i){return this._service.xrpc.call("com.atproto.sync.getRepo",e,void 0,i).catch(r=>{throw r})}listBlobs(e,i){return this._service.xrpc.call("com.atproto.sync.listBlobs",e,void 0,i).catch(r=>{throw r})}listRepos(e,i){return this._service.xrpc.call("com.atproto.sync.listRepos",e,void 0,i).catch(r=>{throw r})}notifyOfUpdate(e,i){return this._service.xrpc.call("com.atproto.sync.notifyOfUpdate",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}requestCrawl(e,i){return this._service.xrpc.call("com.atproto.sync.requestCrawl",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}},Cl=class{constructor(e){this._service=e}checkSignupQueue(e,i){return this._service.xrpc.call("com.atproto.temp.checkSignupQueue",e,void 0,i).catch(r=>{throw r})}fetchLabels(e,i){return this._service.xrpc.call("com.atproto.temp.fetchLabels",e,void 0,i).catch(r=>{throw r})}requestPhoneVerification(e,i){return this._service.xrpc.call("com.atproto.temp.requestPhoneVerification",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}},_l=class{constructor(e){this._service=e,this.bsky=new Sl(e)}},Sl=class{constructor(e){this._service=e,this.actor=new wl(e),this.embed=new kl(e),this.feed=new xl(e),this.graph=new Pl(e),this.labeler=new $l(e),this.notification=new Gl(e),this.richtext=new Xl(e),this.unspecced=new zl(e)}},wl=class{constructor(e){this._service=e,this.profile=new Bl(e)}getPreferences(e,i){return this._service.xrpc.call("app.bsky.actor.getPreferences",e,void 0,i).catch(r=>{throw r})}getProfile(e,i){return this._service.xrpc.call("app.bsky.actor.getProfile",e,void 0,i).catch(r=>{throw r})}getProfiles(e,i){return this._service.xrpc.call("app.bsky.actor.getProfiles",e,void 0,i).catch(r=>{throw r})}getSuggestions(e,i){return this._service.xrpc.call("app.bsky.actor.getSuggestions",e,void 0,i).catch(r=>{throw r})}putPreferences(e,i){return this._service.xrpc.call("app.bsky.actor.putPreferences",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}searchActors(e,i){return this._service.xrpc.call("app.bsky.actor.searchActors",e,void 0,i).catch(r=>{throw r})}searchActorsTypeahead(e,i){return this._service.xrpc.call("app.bsky.actor.searchActorsTypeahead",e,void 0,i).catch(r=>{throw r})}},Bl=class{constructor(e){this._service=e}async list(e){return(await this._service.xrpc.call("com.atproto.repo.listRecords",{collection:"app.bsky.actor.profile",...e})).data}async get(e){return(await this._service.xrpc.call("com.atproto.repo.getRecord",{collection:"app.bsky.actor.profile",...e})).data}async create(e,i,r){return i.$type="app.bsky.actor.profile",(await this._service.xrpc.call("com.atproto.repo.createRecord",void 0,{collection:"app.bsky.actor.profile",rkey:"self",...e,record:i},{encoding:"application/json",headers:r})).data}async delete(e,i){await this._service.xrpc.call("com.atproto.repo.deleteRecord",void 0,{collection:"app.bsky.actor.profile",...e},{headers:i})}},kl=class{constructor(e){this._service=e}},xl=class{constructor(e){this._service=e,this.generator=new Kl(e),this.like=new Ul(e),this.post=new Vl(e),this.repost=new Dl(e),this.threadgate=new Nl(e)}describeFeedGenerator(e,i){return this._service.xrpc.call("app.bsky.feed.describeFeedGenerator",e,void 0,i).catch(r=>{throw r})}getActorFeeds(e,i){return this._service.xrpc.call("app.bsky.feed.getActorFeeds",e,void 0,i).catch(r=>{throw r})}getActorLikes(e,i){return this._service.xrpc.call("app.bsky.feed.getActorLikes",e,void 0,i).catch(r=>{throw _a(r)})}getAuthorFeed(e,i){return this._service.xrpc.call("app.bsky.feed.getAuthorFeed",e,void 0,i).catch(r=>{throw ka(r)})}getFeed(e,i){return this._service.xrpc.call("app.bsky.feed.getFeed",e,void 0,i).catch(r=>{throw Ua(r)})}getFeedGenerator(e,i){return this._service.xrpc.call("app.bsky.feed.getFeedGenerator",e,void 0,i).catch(r=>{throw r})}getFeedGenerators(e,i){return this._service.xrpc.call("app.bsky.feed.getFeedGenerators",e,void 0,i).catch(r=>{throw r})}getFeedSkeleton(e,i){return this._service.xrpc.call("app.bsky.feed.getFeedSkeleton",e,void 0,i).catch(r=>{throw Ia(r)})}getLikes(e,i){return this._service.xrpc.call("app.bsky.feed.getLikes",e,void 0,i).catch(r=>{throw r})}getListFeed(e,i){return this._service.xrpc.call("app.bsky.feed.getListFeed",e,void 0,i).catch(r=>{throw Ma(r)})}getPostThread(e,i){return this._service.xrpc.call("app.bsky.feed.getPostThread",e,void 0,i).catch(r=>{throw Ga(r)})}getPosts(e,i){return this._service.xrpc.call("app.bsky.feed.getPosts",e,void 0,i).catch(r=>{throw r})}getRepostedBy(e,i){return this._service.xrpc.call("app.bsky.feed.getRepostedBy",e,void 0,i).catch(r=>{throw r})}getSuggestedFeeds(e,i){return this._service.xrpc.call("app.bsky.feed.getSuggestedFeeds",e,void 0,i).catch(r=>{throw r})}getTimeline(e,i){return this._service.xrpc.call("app.bsky.feed.getTimeline",e,void 0,i).catch(r=>{throw r})}searchPosts(e,i){return this._service.xrpc.call("app.bsky.feed.searchPosts",e,void 0,i).catch(r=>{throw Qa(r)})}},Kl=class{constructor(e){this._service=e}async list(e){return(await this._service.xrpc.call("com.atproto.repo.listRecords",{collection:"app.bsky.feed.generator",...e})).data}async get(e){return(await this._service.xrpc.call("com.atproto.repo.getRecord",{collection:"app.bsky.feed.generator",...e})).data}async create(e,i,r){return i.$type="app.bsky.feed.generator",(await this._service.xrpc.call("com.atproto.repo.createRecord",void 0,{collection:"app.bsky.feed.generator",...e,record:i},{encoding:"application/json",headers:r})).data}async delete(e,i){await this._service.xrpc.call("com.atproto.repo.deleteRecord",void 0,{collection:"app.bsky.feed.generator",...e},{headers:i})}},Ul=class{constructor(e){this._service=e}async list(e){return(await this._service.xrpc.call("com.atproto.repo.listRecords",{collection:"app.bsky.feed.like",...e})).data}async get(e){return(await this._service.xrpc.call("com.atproto.repo.getRecord",{collection:"app.bsky.feed.like",...e})).data}async create(e,i,r){return i.$type="app.bsky.feed.like",(await this._service.xrpc.call("com.atproto.repo.createRecord",void 0,{collection:"app.bsky.feed.like",...e,record:i},{encoding:"application/json",headers:r})).data}async delete(e,i){await this._service.xrpc.call("com.atproto.repo.deleteRecord",void 0,{collection:"app.bsky.feed.like",...e},{headers:i})}},Vl=class{constructor(e){this._service=e}async list(e){return(await this._service.xrpc.call("com.atproto.repo.listRecords",{collection:"app.bsky.feed.post",...e})).data}async get(e){return(await this._service.xrpc.call("com.atproto.repo.getRecord",{collection:"app.bsky.feed.post",...e})).data}async create(e,i,r){return i.$type="app.bsky.feed.post",(await this._service.xrpc.call("com.atproto.repo.createRecord",void 0,{collection:"app.bsky.feed.post",...e,record:i},{encoding:"application/json",headers:r})).data}async delete(e,i){await this._service.xrpc.call("com.atproto.repo.deleteRecord",void 0,{collection:"app.bsky.feed.post",...e},{headers:i})}},Dl=class{constructor(e){this._service=e}async list(e){return(await this._service.xrpc.call("com.atproto.repo.listRecords",{collection:"app.bsky.feed.repost",...e})).data}async get(e){return(await this._service.xrpc.call("com.atproto.repo.getRecord",{collection:"app.bsky.feed.repost",...e})).data}async create(e,i,r){return i.$type="app.bsky.feed.repost",(await this._service.xrpc.call("com.atproto.repo.createRecord",void 0,{collection:"app.bsky.feed.repost",...e,record:i},{encoding:"application/json",headers:r})).data}async delete(e,i){await this._service.xrpc.call("com.atproto.repo.deleteRecord",void 0,{collection:"app.bsky.feed.repost",...e},{headers:i})}},Nl=class{constructor(e){this._service=e}async list(e){return(await this._service.xrpc.call("com.atproto.repo.listRecords",{collection:"app.bsky.feed.threadgate",...e})).data}async get(e){return(await this._service.xrpc.call("com.atproto.repo.getRecord",{collection:"app.bsky.feed.threadgate",...e})).data}async create(e,i,r){return i.$type="app.bsky.feed.threadgate",(await this._service.xrpc.call("com.atproto.repo.createRecord",void 0,{collection:"app.bsky.feed.threadgate",...e,record:i},{encoding:"application/json",headers:r})).data}async delete(e,i){await this._service.xrpc.call("com.atproto.repo.deleteRecord",void 0,{collection:"app.bsky.feed.threadgate",...e},{headers:i})}},Pl=class{constructor(e){this._service=e,this.block=new Il(e),this.follow=new jl(e),this.list=new ql(e),this.listblock=new Fl(e),this.listitem=new Ml(e)}getBlocks(e,i){return this._service.xrpc.call("app.bsky.graph.getBlocks",e,void 0,i).catch(r=>{throw r})}getFollowers(e,i){return this._service.xrpc.call("app.bsky.graph.getFollowers",e,void 0,i).catch(r=>{throw r})}getFollows(e,i){return this._service.xrpc.call("app.bsky.graph.getFollows",e,void 0,i).catch(r=>{throw r})}getList(e,i){return this._service.xrpc.call("app.bsky.graph.getList",e,void 0,i).catch(r=>{throw r})}getListBlocks(e,i){return this._service.xrpc.call("app.bsky.graph.getListBlocks",e,void 0,i).catch(r=>{throw r})}getListMutes(e,i){return this._service.xrpc.call("app.bsky.graph.getListMutes",e,void 0,i).catch(r=>{throw r})}getLists(e,i){return this._service.xrpc.call("app.bsky.graph.getLists",e,void 0,i).catch(r=>{throw r})}getMutes(e,i){return this._service.xrpc.call("app.bsky.graph.getMutes",e,void 0,i).catch(r=>{throw r})}getRelationships(e,i){return this._service.xrpc.call("app.bsky.graph.getRelationships",e,void 0,i).catch(r=>{throw po(r)})}getSuggestedFollowsByActor(e,i){return this._service.xrpc.call("app.bsky.graph.getSuggestedFollowsByActor",e,void 0,i).catch(r=>{throw r})}muteActor(e,i){return this._service.xrpc.call("app.bsky.graph.muteActor",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}muteActorList(e,i){return this._service.xrpc.call("app.bsky.graph.muteActorList",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}unmuteActor(e,i){return this._service.xrpc.call("app.bsky.graph.unmuteActor",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}unmuteActorList(e,i){return this._service.xrpc.call("app.bsky.graph.unmuteActorList",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}},Il=class{constructor(e){this._service=e}async list(e){return(await this._service.xrpc.call("com.atproto.repo.listRecords",{collection:"app.bsky.graph.block",...e})).data}async get(e){return(await this._service.xrpc.call("com.atproto.repo.getRecord",{collection:"app.bsky.graph.block",...e})).data}async create(e,i,r){return i.$type="app.bsky.graph.block",(await this._service.xrpc.call("com.atproto.repo.createRecord",void 0,{collection:"app.bsky.graph.block",...e,record:i},{encoding:"application/json",headers:r})).data}async delete(e,i){await this._service.xrpc.call("com.atproto.repo.deleteRecord",void 0,{collection:"app.bsky.graph.block",...e},{headers:i})}},jl=class{constructor(e){this._service=e}async list(e){return(await this._service.xrpc.call("com.atproto.repo.listRecords",{collection:"app.bsky.graph.follow",...e})).data}async get(e){return(await this._service.xrpc.call("com.atproto.repo.getRecord",{collection:"app.bsky.graph.follow",...e})).data}async create(e,i,r){return i.$type="app.bsky.graph.follow",(await this._service.xrpc.call("com.atproto.repo.createRecord",void 0,{collection:"app.bsky.graph.follow",...e,record:i},{encoding:"application/json",headers:r})).data}async delete(e,i){await this._service.xrpc.call("com.atproto.repo.deleteRecord",void 0,{collection:"app.bsky.graph.follow",...e},{headers:i})}},ql=class{constructor(e){this._service=e}async list(e){return(await this._service.xrpc.call("com.atproto.repo.listRecords",{collection:"app.bsky.graph.list",...e})).data}async get(e){return(await this._service.xrpc.call("com.atproto.repo.getRecord",{collection:"app.bsky.graph.list",...e})).data}async create(e,i,r){return i.$type="app.bsky.graph.list",(await this._service.xrpc.call("com.atproto.repo.createRecord",void 0,{collection:"app.bsky.graph.list",...e,record:i},{encoding:"application/json",headers:r})).data}async delete(e,i){await this._service.xrpc.call("com.atproto.repo.deleteRecord",void 0,{collection:"app.bsky.graph.list",...e},{headers:i})}},Fl=class{constructor(e){this._service=e}async list(e){return(await this._service.xrpc.call("com.atproto.repo.listRecords",{collection:"app.bsky.graph.listblock",...e})).data}async get(e){return(await this._service.xrpc.call("com.atproto.repo.getRecord",{collection:"app.bsky.graph.listblock",...e})).data}async create(e,i,r){return i.$type="app.bsky.graph.listblock",(await this._service.xrpc.call("com.atproto.repo.createRecord",void 0,{collection:"app.bsky.graph.listblock",...e,record:i},{encoding:"application/json",headers:r})).data}async delete(e,i){await this._service.xrpc.call("com.atproto.repo.deleteRecord",void 0,{collection:"app.bsky.graph.listblock",...e},{headers:i})}},Ml=class{constructor(e){this._service=e}async list(e){return(await this._service.xrpc.call("com.atproto.repo.listRecords",{collection:"app.bsky.graph.listitem",...e})).data}async get(e){return(await this._service.xrpc.call("com.atproto.repo.getRecord",{collection:"app.bsky.graph.listitem",...e})).data}async create(e,i,r){return i.$type="app.bsky.graph.listitem",(await this._service.xrpc.call("com.atproto.repo.createRecord",void 0,{collection:"app.bsky.graph.listitem",...e,record:i},{encoding:"application/json",headers:r})).data}async delete(e,i){await this._service.xrpc.call("com.atproto.repo.deleteRecord",void 0,{collection:"app.bsky.graph.listitem",...e},{headers:i})}},$l=class{constructor(e){this._service=e,this.service=new Ol(e)}getServices(e,i){return this._service.xrpc.call("app.bsky.labeler.getServices",e,void 0,i).catch(r=>{throw r})}},Ol=class{constructor(e){this._service=e}async list(e){return(await this._service.xrpc.call("com.atproto.repo.listRecords",{collection:"app.bsky.labeler.service",...e})).data}async get(e){return(await this._service.xrpc.call("com.atproto.repo.getRecord",{collection:"app.bsky.labeler.service",...e})).data}async create(e,i,r){return i.$type="app.bsky.labeler.service",(await this._service.xrpc.call("com.atproto.repo.createRecord",void 0,{collection:"app.bsky.labeler.service",rkey:"self",...e,record:i},{encoding:"application/json",headers:r})).data}async delete(e,i){await this._service.xrpc.call("com.atproto.repo.deleteRecord",void 0,{collection:"app.bsky.labeler.service",...e},{headers:i})}},Gl=class{constructor(e){this._service=e}getUnreadCount(e,i){return this._service.xrpc.call("app.bsky.notification.getUnreadCount",e,void 0,i).catch(r=>{throw r})}listNotifications(e,i){return this._service.xrpc.call("app.bsky.notification.listNotifications",e,void 0,i).catch(r=>{throw r})}registerPush(e,i){return this._service.xrpc.call("app.bsky.notification.registerPush",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}updateSeen(e,i){return this._service.xrpc.call("app.bsky.notification.updateSeen",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}},Xl=class{constructor(e){this._service=e}},zl=class{constructor(e){this._service=e}getPopularFeedGenerators(e,i){return this._service.xrpc.call("app.bsky.unspecced.getPopularFeedGenerators",e,void 0,i).catch(r=>{throw r})}getTaggedSuggestions(e,i){return this._service.xrpc.call("app.bsky.unspecced.getTaggedSuggestions",e,void 0,i).catch(r=>{throw r})}searchActorsSkeleton(e,i){return this._service.xrpc.call("app.bsky.unspecced.searchActorsSkeleton",e,void 0,i).catch(r=>{throw Co(r)})}searchPostsSkeleton(e,i){return this._service.xrpc.call("app.bsky.unspecced.searchPostsSkeleton",e,void 0,i).catch(r=>{throw wo(r)})}},Hl=class{constructor(e){this._service=e,this.ozone=new Zl(e)}},Zl=class{constructor(e){this._service=e,this.communication=new Wl(e),this.moderation=new Jl(e)}},Wl=class{constructor(e){this._service=e}createTemplate(e,i){return this._service.xrpc.call("tools.ozone.communication.createTemplate",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}deleteTemplate(e,i){return this._service.xrpc.call("tools.ozone.communication.deleteTemplate",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}listTemplates(e,i){return this._service.xrpc.call("tools.ozone.communication.listTemplates",e,void 0,i).catch(r=>{throw r})}updateTemplate(e,i){return this._service.xrpc.call("tools.ozone.communication.updateTemplate",i==null?void 0:i.qp,e,i).catch(r=>{throw r})}},Jl=class{constructor(e){this._service=e}emitEvent(e,i){return this._service.xrpc.call("tools.ozone.moderation.emitEvent",i==null?void 0:i.qp,e,i).catch(r=>{throw Do(r)})}getEvent(e,i){return this._service.xrpc.call("tools.ozone.moderation.getEvent",e,void 0,i).catch(r=>{throw r})}getRecord(e,i){return this._service.xrpc.call("tools.ozone.moderation.getRecord",e,void 0,i).catch(r=>{throw jo(r)})}getRepo(e,i){return this._service.xrpc.call("tools.ozone.moderation.getRepo",e,void 0,i).catch(r=>{throw Mo(r)})}queryEvents(e,i){return this._service.xrpc.call("tools.ozone.moderation.queryEvents",e,void 0,i).catch(r=>{throw r})}queryStatuses(e,i){return this._service.xrpc.call("tools.ozone.moderation.queryStatuses",e,void 0,i).catch(r=>{throw r})}searchRepos(e,i){return this._service.xrpc.call("tools.ozone.moderation.searchRepos",e,void 0,i).catch(r=>{throw r})}},_b=10,Sb="com.atproto.server.refreshSession",ge=class{constructor(e){this.labelersHeader=[],this.uploadBlob=(i,r)=>this.api.com.atproto.repo.uploadBlob(i,r),this.resolveHandle=(i,r)=>this.api.com.atproto.identity.resolveHandle(i,r),this.updateHandle=(i,r)=>this.api.com.atproto.identity.updateHandle(i,r),this.createModerationReport=(i,r)=>this.api.com.atproto.moderation.createReport(i,r),this.service=e.service instanceof URL?e.service:new URL(e.service),this._persistSession=e.persistSession,this._baseClient=new ml,this._baseClient.xrpc.fetch=this._fetch.bind(this),this.api=this._baseClient.service(e.service)}get com(){return this.api.com}static configure(e){e.fetch&&(ge.fetch=e.fetch),e.appLabelers&&(ge.appLabelers=e.appLabelers)}clone(){const e=new ge({service:this.service});return this.copyInto(e),e}copyInto(e){e.session=this.session,e.labelersHeader=this.labelersHeader,e.proxyHeader=this.proxyHeader,e.pdsUrl=this.pdsUrl,e.api.xrpc.uri=this.pdsUrl||this.service}withProxy(e,i){const r=this.clone();return r.configureProxyHeader(e,i),r}get hasSession(){return!!this.session}setPersistSessionHandler(e){this._persistSession=e}configureLabelersHeader(e){this.labelersHeader=e}configureProxyHeader(e,i){i.startsWith("did:")&&(this.proxyHeader=`${i}#${e}`)}async createAccount(e){var i,r;try{const n=await this.api.com.atproto.server.createAccount(e);return this.session={accessJwt:n.data.accessJwt,refreshJwt:n.data.refreshJwt,handle:n.data.handle,did:n.data.did,email:e.email,emailConfirmed:!1},this._updateApiEndpoint(n.data.didDoc),n}catch(n){throw this.session=void 0,n}finally{this.session?(i=this._persistSession)==null||i.call(this,"create",this.session):(r=this._persistSession)==null||r.call(this,"create-failed",void 0)}}async login(e){var i,r;try{const n=await this.api.com.atproto.server.createSession({identifier:e.identifier,password:e.password});return this.session={accessJwt:n.data.accessJwt,refreshJwt:n.data.refreshJwt,handle:n.data.handle,did:n.data.did,email:n.data.email,emailConfirmed:n.data.emailConfirmed},this._updateApiEndpoint(n.data.didDoc),n}catch(n){throw this.session=void 0,n}finally{this.session?(i=this._persistSession)==null||i.call(this,"create",this.session):(r=this._persistSession)==null||r.call(this,"create-failed",void 0)}}async resumeSession(e){var i,r,n,s;try{this.session=e;const a=await this.api.com.atproto.server.getSession();if(a.data.did!==this.session.did)throw new g(400,"Invalid session","InvalidDID");return this.session.email=a.data.email,this.session.handle=a.data.handle,this.session.emailConfirmed=a.data.emailConfirmed,this._updateApiEndpoint(a.data.didDoc),(i=this._persistSession)==null||i.call(this,"update",this.session),a}catch(a){throw this.session=void 0,a instanceof g?[1,408,425,429,500,502,503,504,522,524].includes(a.status)?(r=this._persistSession)==null||r.call(this,"network-error",void 0):(n=this._persistSession)==null||n.call(this,"expired",void 0):(s=this._persistSession)==null||s.call(this,"network-error",void 0),a}}_addHeaders(e){var i;return!e.authorization&&((i=this.session)!=null&&i.accessJwt)&&(e={...e,authorization:`Bearer ${this.session.accessJwt}`}),this.proxyHeader&&(e={...e,"atproto-proxy":this.proxyHeader}),e={...e,"atproto-accept-labelers":ge.appLabelers.map(r=>`${r};redact`).concat(this.labelersHeader.filter(r=>r.startsWith("did:"))).slice(0,_b).join(", ")},e}async _fetch(e,i,r,n){var a;if(!ge.fetch)throw new Error("AtpAgent fetch() method not configured");await this._refreshSessionPromise;let s=await ge.fetch(e,i,this._addHeaders(r),n);return Ql(s,["ExpiredToken"])&&((a=this.session)!=null&&a.refreshJwt)&&(await this.refreshSession(),s=await ge.fetch(e,i,this._addHeaders(r),n)),s}async refreshSession(){if(this._refreshSessionPromise)return this._refreshSessionPromise;this._refreshSessionPromise=this._refreshSessionInner();try{await this._refreshSessionPromise}finally{this._refreshSessionPromise=void 0}}async _refreshSessionInner(){var r,n,s;if(!ge.fetch)throw new Error("AtpAgent fetch() method not configured");if(!((r=this.session)!=null&&r.refreshJwt))return;const e=new URL((this.pdsUrl||this.service).origin);e.pathname=`/xrpc/${Sb}`;const i=await ge.fetch(e.toString(),"POST",{authorization:`Bearer ${this.session.refreshJwt}`},void 0);Ql(i,["ExpiredToken","InvalidToken"])?(this.session=void 0,(n=this._persistSession)==null||n.call(this,"expired",void 0)):Bb(this._baseClient,i.body)&&(this.session={...this.session||{},accessJwt:i.body.accessJwt,refreshJwt:i.body.refreshJwt,handle:i.body.handle,did:i.body.did},this._updateApiEndpoint(i.body.didDoc),(s=this._persistSession)==null||s.call(this,"update",this.session))}_updateApiEndpoint(e){if(Zf(e)){const i=Jf(e);this.pdsUrl=i?new URL(i):void 0}this.api.xrpc.uri=this.pdsUrl||this.service}},ht=ge;ht.fetch=an,ht.appLabelers=[Yi];function wb(e){return en.safeParse(e).success}function Ql(e,i){return e.status!==400||!wb(e.body)?!1:typeof e.body.error=="string"&&i.includes(e.body.error)}function Bb(e,i){try{return e.xrpc.lex.assertValidXrpcOutput("com.atproto.server.refreshSession",i),!0}catch{return!1}}var Yl=new TextEncoder,kb=new TextDecoder,Rt=class{constructor(e){this.utf16=e,this.utf8=Yl.encode(e)}get length(){return this.utf8.byteLength}get graphemeLength(){return this._graphemeLen||(this._graphemeLen=Ar(this.utf16)),this._graphemeLen}slice(e,i){return kb.decode(this.utf8.slice(e,i))}utf16IndexToUtf8Index(e){return Yl.encode(this.utf16.slice(0,e)).byteLength}toString(){return this.utf16}},xb=/[\r\n]([\u00AD\u2060\u200D\u200C\u200B\s]*[\r\n]){2,}/,Kb=`

`;function ep(e,i){return i.cleanNewlines&&(e=Ub(e,xb,Kb)),e}function Ub(e,i,r){e=e.clone();let n=e.unicodeText.utf16.match(i);for(;n&&typeof n.index<"u";){const s=e.unicodeText,a=e.unicodeText.utf16IndexToUtf8Index(n.index),t=a+new Rt(n[0]).length;if(e.delete(a,t),e.unicodeText.utf16===s.utf16)break;e.insert(a,r),n=e.unicodeText.utf16.match(i)}return e}var Vb=["aaa","aarp","abarth","abb","abbott","abbvie","abc","able","abogado","abudhabi","ac","academy","accenture","accountant","accountants","aco","actor","ad","ads","adult","ae","aeg","aero","aetna","af","afl","africa","ag","agakhan","agency","ai","aig","airbus","airforce","airtel","akdn","al","alfaromeo","alibaba","alipay","allfinanz","allstate","ally","alsace","alstom","am","amazon","americanexpress","americanfamily","amex","amfam","amica","amsterdam","analytics","android","anquan","anz","ao","aol","apartments","app","apple","aq","aquarelle","ar","arab","aramco","archi","army","arpa","art","arte","as","asda","asia","associates","at","athleta","attorney","au","auction","audi","audible","audio","auspost","author","auto","autos","avianca","aw","aws","ax","axa","az","azure","ba","baby","baidu","banamex","bananarepublic","band","bank","bar","barcelona","barclaycard","barclays","barefoot","bargains","baseball","basketball","bauhaus","bayern","bb","bbc","bbt","bbva","bcg","bcn","bd","be","beats","beauty","beer","bentley","berlin","best","bestbuy","bet","bf","bg","bh","bharti","bi","bible","bid","bike","bing","bingo","bio","biz","bj","black","blackfriday","blockbuster","blog","bloomberg","blue","bm","bms","bmw","bn","bnpparibas","bo","boats","boehringer","bofa","bom","bond","boo","book","booking","bosch","bostik","boston","bot","boutique","box","br","bradesco","bridgestone","broadway","broker","brother","brussels","bs","bt","build","builders","business","buy","buzz","bv","bw","by","bz","bzh","ca","cab","cafe","cal","call","calvinklein","cam","camera","camp","canon","capetown","capital","capitalone","car","caravan","cards","care","career","careers","cars","casa","case","cash","casino","cat","catering","catholic","cba","cbn","cbre","cbs","cc","cd","center","ceo","cern","cf","cfa","cfd","cg","ch","chanel","channel","charity","chase","chat","cheap","chintai","christmas","chrome","church","ci","cipriani","circle","cisco","citadel","citi","citic","city","cityeats","ck","cl","claims","cleaning","click","clinic","clinique","clothing","cloud","club","clubmed","cm","cn","co","coach","codes","coffee","college","cologne","com","comcast","commbank","community","company","compare","computer","comsec","condos","construction","consulting","contact","contractors","cooking","cookingchannel","cool","coop","corsica","country","coupon","coupons","courses","cpa","cr","credit","creditcard","creditunion","cricket","crown","crs","cruise","cruises","cu","cuisinella","cv","cw","cx","cy","cymru","cyou","cz","dabur","dad","dance","data","date","dating","datsun","day","dclk","dds","de","deal","dealer","deals","degree","delivery","dell","deloitte","delta","democrat","dental","dentist","desi","design","dev","dhl","diamonds","diet","digital","direct","directory","discount","discover","dish","diy","dj","dk","dm","dnp","do","docs","doctor","dog","domains","dot","download","drive","dtv","dubai","dunlop","dupont","durban","dvag","dvr","dz","earth","eat","ec","eco","edeka","edu","education","ee","eg","email","emerck","energy","engineer","engineering","enterprises","epson","equipment","er","ericsson","erni","es","esq","estate","et","etisalat","eu","eurovision","eus","events","exchange","expert","exposed","express","extraspace","fage","fail","fairwinds","faith","family","fan","fans","farm","farmers","fashion","fast","fedex","feedback","ferrari","ferrero","fi","fiat","fidelity","fido","film","final","finance","financial","fire","firestone","firmdale","fish","fishing","fit","fitness","fj","fk","flickr","flights","flir","florist","flowers","fly","fm","fo","foo","food","foodnetwork","football","ford","forex","forsale","forum","foundation","fox","fr","free","fresenius","frl","frogans","frontdoor","frontier","ftr","fujitsu","fun","fund","furniture","futbol","fyi","ga","gal","gallery","gallo","gallup","game","games","gap","garden","gay","gb","gbiz","gd","gdn","ge","gea","gent","genting","george","gf","gg","ggee","gh","gi","gift","gifts","gives","giving","gl","glass","gle","global","globo","gm","gmail","gmbh","gmo","gmx","gn","godaddy","gold","goldpoint","golf","goo","goodyear","goog","google","gop","got","gov","gp","gq","gr","grainger","graphics","gratis","green","gripe","grocery","group","gs","gt","gu","guardian","gucci","guge","guide","guitars","guru","gw","gy","hair","hamburg","hangout","haus","hbo","hdfc","hdfcbank","health","healthcare","help","helsinki","here","hermes","hgtv","hiphop","hisamitsu","hitachi","hiv","hk","hkt","hm","hn","hockey","holdings","holiday","homedepot","homegoods","homes","homesense","honda","horse","hospital","host","hosting","hot","hoteles","hotels","hotmail","house","how","hr","hsbc","ht","hu","hughes","hyatt","hyundai","ibm","icbc","ice","icu","id","ie","ieee","ifm","ikano","il","im","imamat","imdb","immo","immobilien","in","inc","industries","infiniti","info","ing","ink","institute","insurance","insure","int","international","intuit","investments","io","ipiranga","iq","ir","irish","is","ismaili","ist","istanbul","it","itau","itv","jaguar","java","jcb","je","jeep","jetzt","jewelry","jio","jll","jm","jmp","jnj","jo","jobs","joburg","jot","joy","jp","jpmorgan","jprs","juegos","juniper","kaufen","kddi","ke","kerryhotels","kerrylogistics","kerryproperties","kfh","kg","kh","ki","kia","kids","kim","kinder","kindle","kitchen","kiwi","km","kn","koeln","komatsu","kosher","kp","kpmg","kpn","kr","krd","kred","kuokgroup","kw","ky","kyoto","kz","la","lacaixa","lamborghini","lamer","lancaster","lancia","land","landrover","lanxess","lasalle","lat","latino","latrobe","law","lawyer","lb","lc","lds","lease","leclerc","lefrak","legal","lego","lexus","lgbt","li","lidl","life","lifeinsurance","lifestyle","lighting","like","lilly","limited","limo","lincoln","linde","link","lipsy","live","living","lk","llc","llp","loan","loans","locker","locus","loft","lol","london","lotte","lotto","love","lpl","lplfinancial","lr","ls","lt","ltd","ltda","lu","lundbeck","luxe","luxury","lv","ly","ma","macys","madrid","maif","maison","makeup","man","management","mango","map","market","marketing","markets","marriott","marshalls","maserati","mattel","mba","mc","mckinsey","md","me","med","media","meet","melbourne","meme","memorial","men","menu","merckmsd","mg","mh","miami","microsoft","mil","mini","mint","mit","mitsubishi","mk","ml","mlb","mls","mm","mma","mn","mo","mobi","mobile","moda","moe","moi","mom","monash","money","monster","mormon","mortgage","moscow","moto","motorcycles","mov","movie","mp","mq","mr","ms","msd","mt","mtn","mtr","mu","museum","music","mutual","mv","mw","mx","my","mz","na","nab","nagoya","name","natura","navy","nba","nc","ne","nec","net","netbank","netflix","network","neustar","new","news","next","nextdirect","nexus","nf","nfl","ng","ngo","nhk","ni","nico","nike","nikon","ninja","nissan","nissay","nl","no","nokia","northwesternmutual","norton","now","nowruz","nowtv","np","nr","nra","nrw","ntt","nu","nyc","nz","obi","observer","office","okinawa","olayan","olayangroup","oldnavy","ollo","om","omega","one","ong","onl","online","ooo","open","oracle","orange","org","organic","origins","osaka","otsuka","ott","ovh","pa","page","panasonic","paris","pars","partners","parts","party","passagens","pay","pccw","pe","pet","pf","pfizer","pg","ph","pharmacy","phd","philips","phone","photo","photography","photos","physio","pics","pictet","pictures","pid","pin","ping","pink","pioneer","pizza","pk","pl","place","play","playstation","plumbing","plus","pm","pn","pnc","pohl","poker","politie","porn","post","pr","pramerica","praxi","press","prime","pro","prod","productions","prof","progressive","promo","properties","property","protection","pru","prudential","ps","pt","pub","pw","pwc","py","qa","qpon","quebec","quest","racing","radio","re","read","realestate","realtor","realty","recipes","red","redstone","redumbrella","rehab","reise","reisen","reit","reliance","ren","rent","rentals","repair","report","republican","rest","restaurant","review","reviews","rexroth","rich","richardli","ricoh","ril","rio","rip","ro","rocher","rocks","rodeo","rogers","room","rs","rsvp","ru","rugby","ruhr","run","rw","rwe","ryukyu","sa","saarland","safe","safety","sakura","sale","salon","samsclub","samsung","sandvik","sandvikcoromant","sanofi","sap","sarl","sas","save","saxo","sb","sbi","sbs","sc","sca","scb","schaeffler","schmidt","scholarships","school","schule","schwarz","science","scot","sd","se","search","seat","secure","security","seek","select","sener","services","ses","seven","sew","sex","sexy","sfr","sg","sh","shangrila","sharp","shaw","shell","shia","shiksha","shoes","shop","shopping","shouji","show","showtime","si","silk","sina","singles","site","sj","sk","ski","skin","sky","skype","sl","sling","sm","smart","smile","sn","sncf","so","soccer","social","softbank","software","sohu","solar","solutions","song","sony","soy","spa","space","sport","spot","sr","srl","ss","st","stada","staples","star","statebank","statefarm","stc","stcgroup","stockholm","storage","store","stream","studio","study","style","su","sucks","supplies","supply","support","surf","surgery","suzuki","sv","swatch","swiss","sx","sy","sydney","systems","sz","tab","taipei","talk","taobao","target","tatamotors","tatar","tattoo","tax","taxi","tc","tci","td","tdk","team","tech","technology","tel","temasek","tennis","teva","tf","tg","th","thd","theater","theatre","tiaa","tickets","tienda","tiffany","tips","tires","tirol","tj","tjmaxx","tjx","tk","tkmaxx","tl","tm","tmall","tn","to","today","tokyo","tools","top","toray","toshiba","total","tours","town","toyota","toys","tr","trade","trading","training","travel","travelchannel","travelers","travelersinsurance","trust","trv","tt","tube","tui","tunes","tushu","tv","tvs","tw","tz","ua","ubank","ubs","ug","uk","unicom","university","uno","uol","ups","us","uy","uz","va","vacations","vana","vanguard","vc","ve","vegas","ventures","verisign","vermögensberater","vermögensberatung","versicherung","vet","vg","vi","viajes","video","vig","viking","villas","vin","vip","virgin","visa","vision","viva","vivo","vlaanderen","vn","vodka","volkswagen","volvo","vote","voting","voto","voyage","vu","vuelos","wales","walmart","walter","wang","wanggou","watch","watches","weather","weatherchannel","webcam","weber","website","wed","wedding","weibo","weir","wf","whoswho","wien","wiki","williamhill","win","windows","wine","winners","wme","wolterskluwer","woodside","work","works","world","wow","ws","wtc","wtf","xbox","xerox","xfinity","xihuan","xin","xxx","xyz","yachts","yahoo","yamaxun","yandex","ye","yodobashi","yoga","yokohama","you","youtube","yt","yun","za","zappos","zara","zero","zip","zm","zone","zuerich","zw","ελ","ευ","бг","бел","дети","ею","католик","ком","мкд","мон","москва","онлайн","орг","рус","рф","сайт","срб","укр","қаз","հայ","ישראל","קום","ابوظبي","اتصالات","ارامكو","الاردن","البحرين","الجزائر","السعودية","العليان","المغرب","امارات","ایران","بارت","بازار","بيتك","بھارت","تونس","سودان","سورية","شبكة","عراق","عرب","عمان","فلسطين","قطر","كاثوليك","كوم","مصر","مليسيا","موريتانيا","موقع","همراه","پاکستان","ڀارت","कॉम","नेट","भारत","भारतम्","भारोत","संगठन","বাংলা","ভারত","ভাৰত","ਭਾਰਤ","ભારત","ଭାରତ","இந்தியா","இலங்கை","சிங்கப்பூர்","భారత్","ಭಾರತ","ഭാരതം","ලංකා","คอม","ไทย","ລາວ","გე","みんな","アマゾン","クラウド","グーグル","コム","ストア","セール","ファッション","ポイント","世界","中信","中国","中國","中文网","亚马逊","企业","佛山","信息","健康","八卦","公司","公益","台湾","台灣","商城","商店","商标","嘉里","嘉里大酒店","在线","大拿","天主教","娱乐","家電","广东","微博","慈善","我爱你","手机","招聘","政务","政府","新加坡","新闻","时尚","書籍","机构","淡马锡","游戏","澳門","点看","移动","组织机构","网址","网店","网站","网络","联通","诺基亚","谷歌","购物","通販","集团","電訊盈科","飞利浦","食品","餐厅","香格里拉","香港","닷넷","닷컴","삼성","한국"],tp=/(^|\s|\()(@)([a-zA-Z0-9.-]+)(\b)/g,rp=/(^|\s|\()((https?:\/\/[\S]+)|((?<domain>[a-z][a-z0-9]*(\.[a-z0-9]+)+)[\S]*))/gim,ip=new RegExp("\\p{P}+$","gu"),np=/(^|\s)[#＃]((?!\ufe0f)[^\s\u00AD\u2060\u200A\u200B\u200C\u200D\u20e2]*[^\d\s\p{P}\u00AD\u2060\u200A\u200B\u200C\u200D\u20e2]+[^\s\u00AD\u2060\u200A\u200B\u200C\u200D\u20e2]*)?/gu;function sp(e){var n;let i;const r=[];{const s=tp;for(;i=s.exec(e.utf16);){if(!ap(i[3])&&!i[3].endsWith(".test"))continue;const a=e.utf16.indexOf(i[3],i.index)-1;r.push({$type:"app.bsky.richtext.facet",index:{byteStart:e.utf16IndexToUtf8Index(a),byteEnd:e.utf16IndexToUtf8Index(a+i[3].length+1)},features:[{$type:"app.bsky.richtext.facet#mention",did:i[3]}]})}}{const s=rp;for(;i=s.exec(e.utf16);){let a=i[2];if(!a.startsWith("http")){const u=(n=i.groups)==null?void 0:n.domain;if(!u||!ap(u))continue;a=`https://${a}`}const t=e.utf16.indexOf(i[2],i.index),l={start:t,end:t+i[2].length};/[.,;:!?]$/.test(a)&&(a=a.slice(0,-1),l.end--),/[)]$/.test(a)&&!a.includes("(")&&(a=a.slice(0,-1),l.end--),r.push({index:{byteStart:e.utf16IndexToUtf8Index(l.start),byteEnd:e.utf16IndexToUtf8Index(l.end)},features:[{$type:"app.bsky.richtext.facet#link",uri:a}]})}}{const s=np;for(;i=s.exec(e.utf16);){let[,a,t]=i;if(!t||(t=t.trim().replace(ip,""),t.length===0||t.length>64))continue;const l=i.index+a.length;r.push({index:{byteStart:e.utf16IndexToUtf8Index(l),byteEnd:e.utf16IndexToUtf8Index(l+1+t.length)},features:[{$type:"app.bsky.richtext.facet#tag",tag:t}]})}}return r.length>0?r:void 0}function ap(e){return!!Vb.find(i=>{const r=e.lastIndexOf(i);return r===-1?!1:e.charAt(r-1)==="."&&r===e.length-i.length})}var ze=class{constructor(e,i){this.text=e,this.facet=i}get link(){var i;const e=(i=this.facet)==null?void 0:i.features.find(Re.isLink);if(Re.isLink(e))return e}isLink(){return!!this.link}get mention(){var i;const e=(i=this.facet)==null?void 0:i.features.find(Re.isMention);if(Re.isMention(e))return e}isMention(){return!!this.mention}get tag(){var i;const e=(i=this.facet)==null?void 0:i.features.find(Re.isTag);if(Re.isTag(e))return e}isTag(){return!!this.tag}},op=class{constructor(e,i){var r,n;this.unicodeText=new Rt(e.text),this.facets=e.facets,!((r=this.facets)!=null&&r.length)&&((n=e.entities)!=null&&n.length)&&(this.facets=Db(this.unicodeText,e.entities)),this.facets&&this.facets.sort(Nr),i!=null&&i.cleanNewlines&&ep(this,{cleanNewlines:!0}).copyInto(this)}get text(){return this.unicodeText.toString()}get length(){return this.unicodeText.length}get graphemeLength(){return this.unicodeText.graphemeLength}clone(){return new op({text:this.unicodeText.utf16,facets:lp(this.facets)})}copyInto(e){e.unicodeText=this.unicodeText,e.facets=lp(this.facets)}*segments(){const e=this.facets||[];if(!e.length){yield new ze(this.unicodeText.utf16);return}let i=0,r=0;do{const n=e[r];if(i<n.index.byteStart)yield new ze(this.unicodeText.slice(i,n.index.byteStart));else if(i>n.index.byteStart){r++;continue}if(n.index.byteStart<n.index.byteEnd){const s=this.unicodeText.slice(n.index.byteStart,n.index.byteEnd);s.trim()?yield new ze(s,n):yield new ze(s)}i=n.index.byteEnd,r++}while(r<e.length);i<this.unicodeText.length&&(yield new ze(this.unicodeText.slice(i,this.unicodeText.length)))}insert(e,i){var n;if(this.unicodeText=new Rt(this.unicodeText.slice(0,e)+i+this.unicodeText.slice(e)),!((n=this.facets)!=null&&n.length))return this;const r=i.length;for(const s of this.facets)e<=s.index.byteStart?(s.index.byteStart+=r,s.index.byteEnd+=r):e>=s.index.byteStart&&e<s.index.byteEnd&&(s.index.byteEnd+=r);return this}delete(e,i){var n;if(this.unicodeText=new Rt(this.unicodeText.slice(0,e)+this.unicodeText.slice(i)),!((n=this.facets)!=null&&n.length))return this;const r=i-e;for(const s of this.facets)e<=s.index.byteStart&&i>=s.index.byteEnd?(s.index.byteStart=0,s.index.byteEnd=0):e>s.index.byteEnd||(e>s.index.byteStart&&e<=s.index.byteEnd&&i>s.index.byteEnd?s.index.byteEnd=e:e>=s.index.byteStart&&i<=s.index.byteEnd?s.index.byteEnd-=r:e<s.index.byteStart&&i>=s.index.byteStart&&i<=s.index.byteEnd?(s.index.byteStart=e,s.index.byteEnd-=r):i<s.index.byteStart&&(s.index.byteStart-=r,s.index.byteEnd-=r));return this.facets=this.facets.filter(s=>s.index.byteStart<s.index.byteEnd),this}async detectFacets(e){if(this.facets=sp(this.unicodeText),this.facets){for(const i of this.facets)for(const r of i.features)if(Re.isMention(r)){const n=await e.resolveHandle({handle:r.did}).catch(s=>{}).then(s=>s==null?void 0:s.data.did);r.did=n||""}this.facets.sort(Nr)}}detectFacetsWithoutResolution(){this.facets=sp(this.unicodeText),this.facets&&this.facets.sort(Nr)}},Nr=(e,i)=>e.index.byteStart-i.index.byteStart;function Db(e,i){const r=[];for(const n of i)n.type==="link"?r.push({$type:"app.bsky.richtext.facet",index:{byteStart:e.utf16IndexToUtf8Index(n.index.start),byteEnd:e.utf16IndexToUtf8Index(n.index.end)},features:[{$type:"app.bsky.richtext.facet#link",uri:n.value}]}):n.type==="mention"&&r.push({$type:"app.bsky.richtext.facet",index:{byteStart:e.utf16IndexToUtf8Index(n.index.start),byteEnd:e.utf16IndexToUtf8Index(n.index.end)},features:[{$type:"app.bsky.richtext.facet#mention",did:n.value}]});return r}function lp(e){return typeof e>"u"?e:JSON.parse(JSON.stringify(e))}var pp=/^[a-z-]+$/,Jt={profileList:"blur",profileView:"alert",avatar:"blur",banner:"blur",contentList:"blur",contentView:"blur"},Qt={profileList:"inform",profileView:"alert",contentList:"blur",contentView:"inform"},Yt={contentList:"blur",contentView:"blur"},er={contentList:"blur",contentView:"blur"},up={},fp=class{constructor(){this.noOverride=!1,this.filters=[],this.blurs=[],this.alerts=[],this.informs=[]}get filter(){return this.filters.length!==0}get blur(){return this.blurs.length!==0}get alert(){return this.alerts.length!==0}get inform(){return this.informs.length!==0}},cp={porn:"hide",sexual:"warn",nudity:"ignore","graphic-media":"warn"},Pr={"!hide":{identifier:"!hide",configurable:!1,defaultSetting:"hide",flags:["no-override","no-self"],severity:"alert",blurs:"content",behaviors:{account:{profileList:"blur",profileView:"blur",avatar:"blur",banner:"blur",displayName:"blur",contentList:"blur",contentView:"blur"},profile:{avatar:"blur",banner:"blur",displayName:"blur"},content:{contentList:"blur",contentView:"blur"}},locales:[]},"!warn":{identifier:"!warn",configurable:!1,defaultSetting:"warn",flags:["no-self"],severity:"none",blurs:"content",behaviors:{account:{profileList:"blur",profileView:"blur",avatar:"blur",banner:"blur",contentList:"blur",contentView:"blur"},profile:{avatar:"blur",banner:"blur",displayName:"blur"},content:{contentList:"blur",contentView:"blur"}},locales:[]},"!no-unauthenticated":{identifier:"!no-unauthenticated",configurable:!1,defaultSetting:"hide",flags:["no-override","unauthed"],severity:"none",blurs:"content",behaviors:{account:{profileList:"blur",profileView:"blur",avatar:"blur",banner:"blur",displayName:"blur",contentList:"blur",contentView:"blur"},profile:{avatar:"blur",banner:"blur",displayName:"blur"},content:{contentList:"blur",contentView:"blur"}},locales:[]},porn:{identifier:"porn",configurable:!0,defaultSetting:"hide",flags:["adult"],severity:"none",blurs:"media",behaviors:{account:{avatar:"blur",banner:"blur"},profile:{avatar:"blur",banner:"blur"},content:{contentMedia:"blur"}},locales:[]},sexual:{identifier:"sexual",configurable:!0,defaultSetting:"warn",flags:["adult"],severity:"none",blurs:"media",behaviors:{account:{avatar:"blur",banner:"blur"},profile:{avatar:"blur",banner:"blur"},content:{contentMedia:"blur"}},locales:[]},nudity:{identifier:"nudity",configurable:!0,defaultSetting:"ignore",flags:[],severity:"none",blurs:"media",behaviors:{account:{avatar:"blur",banner:"blur"},profile:{avatar:"blur",banner:"blur"},content:{contentMedia:"blur"}},locales:[]},"graphic-media":{identifier:"graphic-media",flags:["adult"],configurable:!0,defaultSetting:"warn",severity:"none",blurs:"media",behaviors:{account:{avatar:"blur",banner:"blur"},profile:{avatar:"blur",banner:"blur"},content:{contentMedia:"blur"}},locales:[]}},Y=class{constructor(){this.did="",this.isMe=!1,this.causes=[]}static merge(...e){const i=e.filter(n=>!!n),r=new Y;return i[0]&&(r.did=i[0].did,r.isMe=i[0].isMe),r.causes=i.flatMap(n=>n.causes),r}downgrade(){for(const e of this.causes)e.downgraded=!0;return this}get blocked(){return!!this.blockCause}get muted(){return!!this.muteCause}get blockCause(){return this.causes.find(e=>e.type==="blocking"||e.type==="blocked-by"||e.type==="block-other")}get muteCause(){return this.causes.find(e=>e.type==="muted")}get labelCauses(){return this.causes.filter(e=>e.type==="label")}ui(e){const i=new fp;if(this.isMe)return i;for(const r of this.causes)r.type==="blocking"||r.type==="blocked-by"||r.type==="block-other"?((e==="profileList"||e==="contentList")&&i.filters.push(r),r.downgraded||(Jt[e]==="blur"?(i.noOverride=!0,i.blurs.push(r)):Jt[e]==="alert"?i.alerts.push(r):Jt[e]==="inform"&&i.informs.push(r))):r.type==="muted"?((e==="profileList"||e==="contentList")&&i.filters.push(r),r.downgraded||(Qt[e]==="blur"?i.blurs.push(r):Qt[e]==="alert"?i.alerts.push(r):Qt[e]==="inform"&&i.informs.push(r))):r.type==="mute-word"?(e==="contentList"&&i.filters.push(r),r.downgraded||(Yt[e]==="blur"?i.blurs.push(r):Yt[e]==="alert"?i.alerts.push(r):Yt[e]==="inform"&&i.informs.push(r))):r.type==="hidden"?((e==="profileList"||e==="contentList")&&i.filters.push(r),r.downgraded||(er[e]==="blur"?i.blurs.push(r):er[e]==="alert"?i.alerts.push(r):er[e]==="inform"&&i.informs.push(r))):r.type==="label"&&(e==="profileList"&&r.target==="account"?r.setting==="hide"&&i.filters.push(r):e==="contentList"&&(r.target==="account"||r.target==="content")&&r.setting==="hide"&&i.filters.push(r),r.downgraded||(r.behavior[e]==="blur"?(i.blurs.push(r),r.noOverride&&(i.noOverride=!0)):r.behavior[e]==="alert"?i.alerts.push(r):r.behavior[e]==="inform"&&i.informs.push(r)));return i.filters.sort(dp),i.blurs.sort(dp),i}setDid(e){this.did=e}setIsMe(e){this.isMe=e}addHidden(e){e&&this.causes.push({type:"hidden",source:{type:"user"},priority:6})}addMutedWord(e){e&&this.causes.push({type:"mute-word",source:{type:"user"},priority:6})}addBlocking(e){e&&this.causes.push({type:"blocking",source:{type:"user"},priority:3})}addBlockingByList(e){e&&this.causes.push({type:"blocking",source:{type:"list",list:e},priority:3})}addBlockedBy(e){e&&this.causes.push({type:"blocked-by",source:{type:"user"},priority:4})}addBlockOther(e){e&&this.causes.push({type:"block-other",source:{type:"user"},priority:4})}addLabel(e,i,r){var b,A;const n=pp.test(i.val)&&((A=(b=r.labelDefs)==null?void 0:b[i.src])==null?void 0:A.find(K=>K.identifier===i.val))||Pr[i.val];if(!n)return;const s=i.src===this.did,a=s?void 0:r.prefs.labelers.find(K=>K.did===i.src);if(!s&&!a||s&&n.flags.includes("no-self"))return;let t=n.defaultSetting||"ignore";if(n.configurable?n.flags.includes("adult")&&!r.prefs.adultContentEnabled?t="hide":a!=null&&a.labels[n.identifier]?t=a==null?void 0:a.labels[n.identifier]:r.prefs.labels[n.identifier]&&(t=r.prefs.labels[n.identifier]):t=n.defaultSetting||"hide",t==="ignore"||n.flags.includes("unauthed")&&r.userDid)return;let l;const u=Nb(n.behaviors[e]);n.flags.includes("no-override")||n.flags.includes("adult")&&!r.prefs.adultContentEnabled?l=1:t==="hide"?l=2:u===0?l=5:u===1?l=7:l=8;let y=!1;(n.flags.includes("no-override")||n.flags.includes("adult")&&!r.prefs.adultContentEnabled)&&(y=!0),this.causes.push({type:"label",source:s||!a?{type:"user"}:{type:"labeler",did:a.did},label:i,labelDef:n,target:e,setting:t,behavior:n.behaviors[e]||up,noOverride:y,priority:l})}addMuted(e){e&&this.causes.push({type:"muted",source:{type:"user"},priority:6})}addMutedByList(e){e&&this.causes.push({type:"muted",source:{type:"list",list:e},priority:6})}};function Nb(e){return e?e.profileView==="blur"||e.contentView==="blur"?0:e.contentList==="blur"||e.contentMedia==="blur"?1:2:2}function dp(e,i){return e.priority-i.priority}function He(e,i){var n,s,a,t,l,u,y,b,A;const r=new Y;r.setDid(e.did),r.setIsMe(e.did===i.userDid),(n=e.viewer)!=null&&n.muted&&((s=e.viewer)!=null&&s.mutedByList?r.addMutedByList((a=e.viewer)==null?void 0:a.mutedByList):r.addMuted((t=e.viewer)==null?void 0:t.muted)),(l=e.viewer)!=null&&l.blocking&&((u=e.viewer)!=null&&u.blockingByList?r.addBlockingByList((y=e.viewer)==null?void 0:y.blockingByList):r.addBlocking((b=e.viewer)==null?void 0:b.blocking)),r.addBlockedBy((A=e.viewer)==null?void 0:A.blockedBy);for(const K of Pb(e.labels))r.addLabel("account",K,i);return r}function Pb(e){return e?e.filter(i=>!i.uri.endsWith("/app.bsky.actor.profile/self")||i.val==="!no-unauthenticated"):[]}function Ze(e,i){const r=new Y;r.setDid(e.did),r.setIsMe(e.did===i.userDid);for(const n of Ib(e.labels))r.addLabel("profile",n,i);return r}function Ib(e){return e?e.filter(i=>i.uri.endsWith("/app.bsky.actor.profile/self")):[]}function jb(e,i){var n;const r=new Y;if(r.setDid(e.author.did),r.setIsMe(e.author.did===i.userDid),(n=e.labels)!=null&&n.length)for(const s of e.labels)r.addLabel("content",s,i);return Y.merge(r,He(e.author,i),Ze(e.author,i))}var We={LEADING_TRAILING_PUNCTUATION:new RegExp("(?:^\\p{P}+|\\p{P}+$)","gu"),SEPARATORS:/[/\-–—()[\]_]+/g,WORD_BOUNDARY:/[\s\n\t\r\f\v]+?/g},qb=["ja","zh","ko","th","vi"];function le({mutedWords:e,text:i,facets:r,outlineTags:n,languages:s}){const a=qb.includes((s==null?void 0:s[0])||""),t=[].concat(n||[]).concat((r==null?void 0:r.filter(l=>l.features.find(u=>Re.isTag(u))).map(l=>l.features[0].tag))||[]).map(l=>l.toLowerCase());for(const l of e){const u=l.value.toLowerCase(),y=i.toLowerCase();if(t.includes(u))return!0;if(!l.targets.includes("content"))continue;if((u.length===1||a)&&y.includes(u))return!0;if(u.length>y.length)continue;if(u===y||new RegExp("(?:\\s|\\p{P})+?","u").test(u)&&y.includes(u))return!0;const b=y.split(We.WORD_BOUNDARY);for(const A of b){if(A===u)return!0;const K=A.replace(We.LEADING_TRAILING_PUNCTUATION,"");if(u===K)return!0;if(!(u.length>K.length)&&We.SEPARATORS.test(K)){const O=K.replace(We.SEPARATORS," "),U=u.replace(We.SEPARATORS," ");if(O===U)return!0;const j=K.split(We.SEPARATORS);for(const P of j)if(P===u)return!0}}}return!1}function Fb(e,i){var s;const r=new Y;if(r.setDid(e.author.did),r.setIsMe(e.author.did===i.userDid),(s=e.labels)!=null&&s.length)for(const a of e.labels)r.addLabel("content",a,i);r.addHidden(Mb(e,i.prefs.hiddenPosts)),r.isMe||r.addMutedWord($b(e,i.prefs.mutedWords));let n;return e.embed&&(Se.isViewRecord(e.embed.record)?n=mp(e.embed.record,i):Xe.isView(e.embed)&&Se.isViewRecord(e.embed.record.record)&&(n=mp(e.embed.record.record,i))),Y.merge(r,n==null?void 0:n.downgrade(),He(e.author,i),Ze(e.author,i))}function mp(e,i){var n;const r=new Y;if(r.setDid(e.author.did),r.setIsMe(e.author.did===i.userDid),(n=e.labels)!=null&&n.length)for(const s of e.labels)r.addLabel("content",s,i);return Y.merge(r,He(e.author,i),Ze(e.author,i))}function Mb(e,i){return i!=null&&i.length?!!(i.includes(e.uri)||e.embed&&(Se.isViewRecord(e.embed.record)&&i.includes(e.embed.record.uri)||Xe.isView(e.embed)&&Se.isViewRecord(e.embed.record.record)&&i.includes(e.embed.record.record.uri))):!1}function $b(e,i){if(!(i!=null&&i.length))return!1;if(De.isRecord(e.record)){if(le({mutedWords:i,text:e.record.text,facets:e.record.facets,outlineTags:e.record.tags,languages:e.record.langs}))return!0;if(e.record.embed&&Ge.isMain(e.record.embed)){for(const r of e.record.embed.images)if(le({mutedWords:i,text:r.alt,languages:e.record.langs}))return!0}}if(e.embed){if(Se.isViewRecord(e.embed.record)){if(De.isRecord(e.embed.record.value)){const r=e.embed.record.value;if(le({mutedWords:i,text:r.text,facets:r.facets,outlineTags:r.tags,languages:r.langs}))return!0;if(Ge.isMain(r.embed)){for(const n of r.embed.images)if(le({mutedWords:i,text:n.alt,languages:r.langs}))return!0}if(Et.isMain(r.embed)){const{external:n}=r.embed;if(le({mutedWords:i,text:n.title+" "+n.description,languages:[]}))return!0}if(Xe.isMain(r.embed)){if(Et.isMain(r.embed.media)){const{external:n}=r.embed.media;if(le({mutedWords:i,text:n.title+" "+n.description,languages:[]}))return!0}if(Ge.isMain(r.embed.media)){for(const n of r.embed.media.images)if(le({mutedWords:i,text:n.alt,languages:De.isRecord(r.record)?r.langs:[]}))return!0}}}}else if(Et.isView(e.embed)){const{external:r}=e.embed;if(le({mutedWords:i,text:r.title+" "+r.description,languages:[]}))return!0}else if(Xe.isView(e.embed)&&Se.isViewRecord(e.embed.record.record)){if(De.isRecord(e.embed.record.record.value)){const r=e.embed.record.record.value;if(le({mutedWords:i,text:r.text,facets:r.facets,outlineTags:r.tags,languages:r.langs}))return!0}if(Ge.isView(e.embed.media)){for(const r of e.embed.media.images)if(le({mutedWords:i,text:r.alt,languages:De.isRecord(e.record)?e.record.langs:[]}))return!0}}}return!1}function Ob(e,i){var n;const r=new Y;if(r.setDid(e.creator.did),r.setIsMe(e.creator.did===i.userDid),(n=e.labels)!=null&&n.length)for(const s of e.labels)r.addLabel("content",s,i);return Y.merge(r,He(e.creator,i),Ze(e.creator,i))}function Gb(e,i){var a,t;const r=new Y,n=Xb(e.creator)?e.creator:void 0;if(n){if(r.setDid(n.did),r.setIsMe(n.did===i.userDid),(a=e.labels)!=null&&a.length)for(const l of e.labels)r.addLabel("content",l,i);return Y.merge(r,He(n,i),Ze(n,i))}const s=new ce(e.uri).hostname;if(r.setDid(s),r.setIsMe(s===i.userDid),(t=e.labels)!=null&&t.length)for(const l of e.labels)r.addLabel("content",l,i);return r}function Xb(e){return e&&typeof e=="object"&&"did"in e}function yp(e,i){const r={account:{},profile:{},content:{}},n=e.severity==="alert"?"alert":e.severity==="inform"?"inform":void 0;e.blurs==="content"?(r.account.profileList=n,r.account.profileView=n,r.account.contentList="blur",r.account.contentView=e.adultOnly?"blur":n,r.profile.profileList=n,r.profile.profileView=n,r.content.contentList="blur",r.content.contentView=e.adultOnly?"blur":n):e.blurs==="media"?(r.account.profileList=n,r.account.profileView=n,r.account.avatar="blur",r.account.banner="blur",r.profile.profileList=n,r.profile.profileView=n,r.profile.avatar="blur",r.profile.banner="blur",r.content.contentMedia="blur"):e.blurs==="none"&&(r.account.profileList=n,r.account.profileView=n,r.account.contentList=n,r.account.contentView=n,r.profile.profileList=n,r.profile.profileView=n,r.content.contentList=n,r.content.contentView=n);let s="warn";(e.defaultSetting==="hide"||e.defaultSetting==="ignore")&&(s=e.defaultSetting);const a=["no-self"];return e.adultOnly&&a.push("adult"),{...e,definedBy:i,configurable:!0,defaultSetting:s,flags:a,behaviors:r}}function Ep(e){var i;return(((i=e.policies)==null?void 0:i.labelValueDefinitions)||[]).filter(r=>Vr.validateLabelValueDefinition(r).success).map(r=>yp(r,e.creator.did))}function zb(e,i){return Y.merge(He(e,i),Ze(e,i))}function Hb(e,i){return Fb(e,i)}function Zb(e,i){return jb(e,i)}function Wb(e,i){return Ob(e,i)}function Jb(e,i){return Gb(e,i)}var gt="bafyreiclp443lavogvhj3d2ob2cxbfuscni2k5jk7bebjzg7khl3esabwq",Qb={post({text:e,facets:i,reply:r,embed:n}){return{$type:"app.bsky.feed.post",text:e,facets:i,reply:r,embed:n,langs:["en"],createdAt:new Date().toISOString()}},postView({record:e,author:i,embed:r,replyCount:n,repostCount:s,likeCount:a,viewer:t,labels:l}){return{$type:"app.bsky.feed.defs#postView",uri:`at://${i.did}/app.bsky.feed.post/fake`,cid:gt,author:i,record:e,embed:r,replyCount:n,repostCount:s,likeCount:a,indexedAt:new Date().toISOString(),viewer:t,labels:l}},embedRecordView({record:e,author:i,labels:r}){return{$type:"app.bsky.embed.record#view",record:{$type:"app.bsky.embed.record#viewRecord",uri:`at://${i.did}/app.bsky.feed.post/fake`,cid:gt,author:i,value:e,labels:r,indexedAt:new Date().toISOString()}}},profileViewBasic({handle:e,displayName:i,description:r,viewer:n,labels:s}){return{did:`did:web:${e}`,handle:e,displayName:i,description:r,viewer:n,labels:s}},actorViewerState({muted:e,mutedByList:i,blockedBy:r,blocking:n,blockingByList:s,following:a,followedBy:t}){return{muted:e,mutedByList:i,blockedBy:r,blocking:n,blockingByList:s,following:a,followedBy:t}},listViewBasic({name:e}){return{uri:"at://did:plc:fake/app.bsky.graph.list/fake",cid:gt,name:e,purpose:"app.bsky.graph.defs#modlist",indexedAt:new Date().toISOString()}},replyNotification({author:e,record:i,labels:r}){return{uri:`at://${e.did}/app.bsky.feed.post/fake`,cid:gt,author:e,reason:"reply",reasonSubject:`at://${e.did}/app.bsky.feed.post/fake-parent`,record:i,isRead:!1,indexedAt:new Date().toISOString(),labels:r}},followNotification({author:e,subjectDid:i,labels:r}){return{uri:`at://${e.did}/app.bsky.graph.follow/fake`,cid:gt,author:e,reason:"follow",record:{$type:"app.bsky.graph.follow",createdAt:new Date().toISOString(),subject:i},isRead:!1,indexedAt:new Date().toISOString(),labels:r}},label({val:e,uri:i,src:r}){return{src:r||"did:plc:fake-labeler",uri:i,val:e,cts:new Date().toISOString()}}},hp={hideReplies:!1,hideRepliesByUnfollowed:!0,hideRepliesByLikeCount:0,hideReposts:!1,hideQuotePosts:!1},Yb={sort:"oldest",prioritizeFollowedUsers:!0},bt=class extends ht{constructor(){super(...arguments),this.getTimeline=(e,i)=>this.api.app.bsky.feed.getTimeline(e,i),this.getAuthorFeed=(e,i)=>this.api.app.bsky.feed.getAuthorFeed(e,i),this.getActorLikes=(e,i)=>this.api.app.bsky.feed.getActorLikes(e,i),this.getPostThread=(e,i)=>this.api.app.bsky.feed.getPostThread(e,i),this.getPost=e=>this.api.app.bsky.feed.post.get(e),this.getPosts=(e,i)=>this.api.app.bsky.feed.getPosts(e,i),this.getLikes=(e,i)=>this.api.app.bsky.feed.getLikes(e,i),this.getRepostedBy=(e,i)=>this.api.app.bsky.feed.getRepostedBy(e,i),this.getFollows=(e,i)=>this.api.app.bsky.graph.getFollows(e,i),this.getFollowers=(e,i)=>this.api.app.bsky.graph.getFollowers(e,i),this.getProfile=(e,i)=>this.api.app.bsky.actor.getProfile(e,i),this.getProfiles=(e,i)=>this.api.app.bsky.actor.getProfiles(e,i),this.getSuggestions=(e,i)=>this.api.app.bsky.actor.getSuggestions(e,i),this.searchActors=(e,i)=>this.api.app.bsky.actor.searchActors(e,i),this.searchActorsTypeahead=(e,i)=>this.api.app.bsky.actor.searchActorsTypeahead(e,i),this.listNotifications=(e,i)=>this.api.app.bsky.notification.listNotifications(e,i),this.countUnreadNotifications=(e,i)=>this.api.app.bsky.notification.getUnreadCount(e,i),this.getLabelers=(e,i)=>this.api.app.bsky.labeler.getServices(e,i)}clone(){const e=new bt({service:this.service});return this.copyInto(e),e}get app(){return this.api.app}async getLabelDefinitions(e){let i=bt.appLabelers;r4(e)?i=i.concat(e.moderationPrefs.labelers.map(s=>s.did)):gp(e)?i=i.concat(e.labelers.map(s=>s.did)):i=i.concat(e);const r=await this.getLabelers({dids:i,detailed:!0}),n={};if(r.data)for(const s of r.data.views)n[s.creator.did]=Ep(s);return n}async post(e){if(!this.session)throw new Error("Not logged in");return e.createdAt=e.createdAt||new Date().toISOString(),this.api.app.bsky.feed.post.create({repo:this.session.did},e)}async deletePost(e){if(!this.session)throw new Error("Not logged in");const i=new ce(e);return await this.api.app.bsky.feed.post.delete({repo:i.hostname,rkey:i.rkey})}async like(e,i){if(!this.session)throw new Error("Not logged in");return await this.api.app.bsky.feed.like.create({repo:this.session.did},{subject:{uri:e,cid:i},createdAt:new Date().toISOString()})}async deleteLike(e){if(!this.session)throw new Error("Not logged in");const i=new ce(e);return await this.api.app.bsky.feed.like.delete({repo:i.hostname,rkey:i.rkey})}async repost(e,i){if(!this.session)throw new Error("Not logged in");return await this.api.app.bsky.feed.repost.create({repo:this.session.did},{subject:{uri:e,cid:i},createdAt:new Date().toISOString()})}async deleteRepost(e){if(!this.session)throw new Error("Not logged in");const i=new ce(e);return await this.api.app.bsky.feed.repost.delete({repo:i.hostname,rkey:i.rkey})}async follow(e){if(!this.session)throw new Error("Not logged in");return await this.api.app.bsky.graph.follow.create({repo:this.session.did},{subject:e,createdAt:new Date().toISOString()})}async deleteFollow(e){if(!this.session)throw new Error("Not logged in");const i=new ce(e);return await this.api.app.bsky.graph.follow.delete({repo:i.hostname,rkey:i.rkey})}async upsertProfile(e){if(!this.session)throw new Error("Not logged in");let i=5;for(;i>=0;){const r=await this.com.atproto.repo.getRecord({repo:this.session.did,collection:"app.bsky.actor.profile",rkey:"self"}).catch(a=>{}),n=await e(r==null?void 0:r.data.value);n&&(n.$type="app.bsky.actor.profile");const s=Dr.validateRecord(n);if(!s.success)throw s.error;try{await this.com.atproto.repo.putRecord({repo:this.session.did,collection:"app.bsky.actor.profile",rkey:"self",record:n,swapRecord:(r==null?void 0:r.data.cid)||null})}catch(a){if(i>0&&a instanceof Ur.InvalidSwapError){i--;continue}else throw a}break}}async mute(e){return this.api.app.bsky.graph.muteActor({actor:e})}async unmute(e){return this.api.app.bsky.graph.unmuteActor({actor:e})}async muteModList(e){return this.api.app.bsky.graph.muteActorList({list:e})}async unmuteModList(e){return this.api.app.bsky.graph.unmuteActorList({list:e})}async blockModList(e){if(!this.session)throw new Error("Not logged in");return await this.api.app.bsky.graph.listblock.create({repo:this.session.did},{subject:e,createdAt:new Date().toISOString()})}async unblockModList(e){var n;if(!this.session)throw new Error("Not logged in");const i=await this.api.app.bsky.graph.getList({list:e,limit:1});if(!((n=i.data.list.viewer)!=null&&n.blocked))return;const{rkey:r}=new ce(i.data.list.viewer.blocked);return await this.api.app.bsky.graph.listblock.delete({repo:this.session.did,rkey:r})}async updateSeenNotifications(e){return e=e||new Date().toISOString(),this.api.app.bsky.notification.updateSeen({seenAt:e})}async getPreferences(){const e={feeds:{saved:void 0,pinned:void 0},feedViewPrefs:{home:{...hp}},threadViewPrefs:{...Yb},moderationPrefs:{adultContentEnabled:!1,labels:{...cp},labelers:bt.appLabelers.map(n=>({did:n,labels:{}})),mutedWords:[],hiddenPosts:[]},birthDate:void 0,interests:{tags:[]}},i=await this.app.bsky.actor.getPreferences({}),r=[];for(const n of i.data.preferences)if(v.isAdultContentPref(n)&&v.validateAdultContentPref(n).success)e.moderationPrefs.adultContentEnabled=n.enabled;else if(v.isContentLabelPref(n)&&v.validateContentLabelPref(n).success){const s=e4(n);r.push(s)}else if(v.isLabelersPref(n)&&v.validateLabelersPref(n).success)e.moderationPrefs.labelers=bt.appLabelers.map(s=>({did:s,labels:{}})).concat(n.labelers.map(s=>({...s,labels:{}})));else if(v.isSavedFeedsPref(n)&&v.validateSavedFeedsPref(n).success)e.feeds.saved=n.saved,e.feeds.pinned=n.pinned;else if(v.isPersonalDetailsPref(n)&&v.validatePersonalDetailsPref(n).success)n.birthDate&&(e.birthDate=new Date(n.birthDate));else if(v.isFeedViewPref(n)&&v.validateFeedViewPref(n).success){const{$type:s,feed:a,...t}=n;e.feedViewPrefs[n.feed]={...hp,...t}}else if(v.isThreadViewPref(n)&&v.validateThreadViewPref(n).success){const{$type:s,...a}=n;e.threadViewPrefs={...e.threadViewPrefs,...a}}else if(v.isInterestsPref(n)&&v.validateInterestsPref(n).success){const{$type:s,...a}=n;e.interests={...e.interests,...a}}else if(v.isMutedWordsPref(n)&&v.validateMutedWordsPref(n).success){const{$type:s,...a}=n;e.moderationPrefs.mutedWords=a.items}else if(v.isHiddenPostsPref(n)&&v.validateHiddenPostsPref(n).success){const{$type:s,...a}=n;e.moderationPrefs.hiddenPosts=a.items}for(const n of r)if(n.labelerDid){const s=e.moderationPrefs.labelers.find(a=>a.did===n.labelerDid);if(!s)continue;s.labels[n.label]=n.visibility}else e.moderationPrefs.labels[n.label]=n.visibility;return e.moderationPrefs.labels=t4(e.moderationPrefs.labels),this.configureLabelersHeader(Ir(i.data.preferences)),e}async setSavedFeeds(e,i){return At(this,()=>({saved:e,pinned:i}))}async addSavedFeed(e){return At(this,(i,r)=>({saved:[...i.filter(n=>n!==e),e],pinned:r}))}async removeSavedFeed(e){return At(this,(i,r)=>({saved:i.filter(n=>n!==e),pinned:r.filter(n=>n!==e)}))}async addPinnedFeed(e){return At(this,(i,r)=>({saved:[...i.filter(n=>n!==e),e],pinned:[...r.filter(n=>n!==e),e]}))}async removePinnedFeed(e){return At(this,(i,r)=>({saved:i,pinned:r.filter(n=>n!==e)}))}async setAdultContentEnabled(e){await ie(this,i=>{let r=i.findLast(n=>v.isAdultContentPref(n)&&v.validateAdultContentPref(n).success);return r?r.enabled=e:r={$type:"app.bsky.actor.defs#adultContentPref",enabled:e},i.filter(n=>!v.isAdultContentPref(n)).concat([r])})}async setContentLabelPref(e,i,r){r&&Pe(r),await ie(this,n=>{let s=n.findLast(t=>v.isContentLabelPref(t)&&v.validateContentLabelPref(t).success&&t.label===e&&t.labelerDid===r),a;if(s?s.visibility=i:s={$type:"app.bsky.actor.defs#contentLabelPref",label:e,labelerDid:r,visibility:i},v.isContentLabelPref(s)&&!s.labelerDid){const t={"graphic-media":"gore",porn:"nsfw",sexual:"suggestive"}[s.label];t&&(a=n.findLast(l=>v.isContentLabelPref(l)&&v.validateContentLabelPref(l).success&&l.label===t&&l.labelerDid===void 0),a?a.visibility=i:a={$type:"app.bsky.actor.defs#contentLabelPref",label:t,labelerDid:void 0,visibility:i})}return n.filter(t=>!v.isContentLabelPref(t)||!(t.label===e&&t.labelerDid===r)).concat([s]).filter(t=>a?!v.isContentLabelPref(t)||!(t.label===a.label&&t.labelerDid===void 0):!0).concat(a?[a]:[])})}async addLabeler(e){const i=await ie(this,r=>{let n=r.findLast(s=>v.isLabelersPref(s)&&v.validateLabelersPref(s).success);if(n||(n={$type:"app.bsky.actor.defs#labelersPref",labelers:[]}),v.isLabelersPref(n)){let s=n.labelers.find(a=>a.did===e);s||(s={did:e},n.labelers.push(s))}return r.filter(s=>!v.isLabelersPref(s)).concat([n])});this.configureLabelersHeader(Ir(i))}async removeLabeler(e){const i=await ie(this,r=>{let n=r.findLast(s=>v.isLabelersPref(s)&&v.validateLabelersPref(s).success);return n||(n={$type:"app.bsky.actor.defs#labelersPref",labelers:[]}),v.isLabelersPref(n)&&(n.labelers=n.labelers.filter(s=>s.did!==e)),r.filter(s=>!v.isLabelersPref(s)).concat([n])});this.configureLabelersHeader(Ir(i))}async setPersonalDetails({birthDate:e}){e=e instanceof Date?e.toISOString():e,await ie(this,i=>{let r=i.findLast(n=>v.isPersonalDetailsPref(n)&&v.validatePersonalDetailsPref(n).success);return r?r.birthDate=e:r={$type:"app.bsky.actor.defs#personalDetailsPref",birthDate:e},i.filter(n=>!v.isPersonalDetailsPref(n)).concat([r])})}async setFeedViewPrefs(e,i){await ie(this,r=>{const n=r.findLast(s=>v.isFeedViewPref(s)&&v.validateFeedViewPref(s).success&&s.feed===e);return n&&(i={...n,...i}),r.filter(s=>!v.isFeedViewPref(i)||s.feed!==e).concat([{...i,$type:"app.bsky.actor.defs#feedViewPref",feed:e}])})}async setThreadViewPrefs(e){await ie(this,i=>{const r=i.findLast(n=>v.isThreadViewPref(n)&&v.validateThreadViewPref(n).success);return r&&(e={...r,...e}),i.filter(n=>!v.isThreadViewPref(n)).concat([{...e,$type:"app.bsky.actor.defs#threadViewPref"}])})}async setInterestsPref(e){await ie(this,i=>{const r=i.findLast(n=>v.isInterestsPref(n)&&v.validateInterestsPref(n).success);return r&&(e={...r,...e}),i.filter(n=>!v.isInterestsPref(n)).concat([{...e,$type:"app.bsky.actor.defs#interestsPref"}])})}async upsertMutedWords(e){await ie(this,i=>{let r=i.findLast(n=>v.isMutedWordsPref(n)&&v.validateMutedWordsPref(n).success);if(r&&v.isMutedWordsPref(r))for(const n of e){let s=!1;const a=Kr(n.value);if(a){for(const t of r.items)if(t.value===a){t.targets=Array.from(new Set([...t.targets,...n.targets])),s=!0;break}s||r.items.push({...n,value:a})}}else r={items:e.map(n=>({...n,value:Kr(n.value)}))};return i.filter(n=>!v.isMutedWordsPref(n)).concat([{...r,$type:"app.bsky.actor.defs#mutedWordsPref"}])})}async updateMutedWord(e){await ie(this,i=>{const r=i.findLast(n=>v.isMutedWordsPref(n)&&v.validateMutedWordsPref(n).success);if(r&&v.isMutedWordsPref(r)){for(const n of r.items)if(n.value===e.value){n.targets=e.targets;break}}return i.filter(n=>!v.isMutedWordsPref(n)).concat([{...r,$type:"app.bsky.actor.defs#mutedWordsPref"}])})}async removeMutedWord(e){await ie(this,i=>{const r=i.findLast(n=>v.isMutedWordsPref(n)&&v.validateMutedWordsPref(n).success);if(r&&v.isMutedWordsPref(r)){for(let n=0;n<r.items.length;n++)if(r.items[n].value===e.value){r.items.splice(n,1);break}}return i.filter(n=>!v.isMutedWordsPref(n)).concat([{...r,$type:"app.bsky.actor.defs#mutedWordsPref"}])})}async hidePost(e){await Rp(this,e,"hide")}async unhidePost(e){await Rp(this,e,"unhide")}};async function ie(e,i){const r=await e.app.bsky.actor.getPreferences({}),n=i(r.data.preferences);return n===!1?r.data.preferences:(await e.app.bsky.actor.putPreferences({preferences:n}),n)}async function At(e,i){let r;return await ie(e,n=>{let s=n.findLast(a=>v.isSavedFeedsPref(a)&&v.validateSavedFeedsPref(a).success);return s?(r=i(s.saved,s.pinned),s.saved=r.saved,s.pinned=r.pinned):(r=i([],[]),s={$type:"app.bsky.actor.defs#savedFeedsPref",saved:r.saved,pinned:r.pinned}),n.filter(a=>!v.isSavedFeedsPref(a)).concat([s])}),r}function e4(e){let i=e.visibility;return i==="show"&&(i="ignore"),{...e,visibility:i}}function t4(e){const i={...e},r={gore:"graphic-media",nsfw:"porn",suggestive:"sexual"};for(const n in i){const s=r[n];s&&(i[s]=i[n])}return i}function Ir(e){const i=e.findLast(n=>v.isLabelersPref(n)&&v.validateLabelersPref(n).success);let r=[];return i&&(r=i.labelers.map(n=>n.did)),r}async function Rp(e,i,r){await ie(e,n=>{let s=n.findLast(a=>v.isHiddenPostsPref(a)&&v.validateHiddenPostsPref(a).success);return s&&v.isHiddenPostsPref(s)?s.items=r==="hide"?Array.from(new Set([...s.items,i])):s.items.filter(a=>a!==i):r==="hide"&&(s={$type:"app.bsky.actor.defs#hiddenPostsPref",items:[i]}),n.filter(a=>!v.isInterestsPref(a)).concat([{...s,$type:"app.bsky.actor.defs#hiddenPostsPref"}])})}function r4(e){return e&&typeof e=="object"&&"moderationPrefs"in e&&gp(e.moderationPrefs)}function gp(e){return e&&typeof e=="object"&&"labelers"in e}}(rr)),rr.exports}var Tp=Ap();const vp=bp(G=>{console.log("Notisky background script loaded");const te={};let Q=null,Ne=null,be=0;const vt=5,nr=5e3,ue="https://notisky.symm.app",p=(()=>{try{return typeof h<"u"&&typeof h.action<"u"&&typeof h.action.setIcon=="function"&&!h.action.setIcon.toString().includes("not implemented")}catch(o){return console.log("Notisky: Not in a real browser environment",o),!1}})();if(p)try{h.alarms.create("notiskyHeartbeat",{periodInMinutes:1}),h.alarms.create("notiskyKeepAlive",{periodInMinutes:.1})}catch(o){console.error("Notisky: Error creating heartbeat alarm",o)}if(p&&h.alarms&&h.alarms.onAlarm)try{h.alarms.onAlarm.addListener(o=>{if(o.name==="notiskyHeartbeat")try{h.storage.local.set({heartbeat:{timestamp:Date.now(),status:"active"}}).catch(E=>{console.error("Notisky: Error writing heartbeat to storage",E)})}catch(E){console.error("Notisky: Error in heartbeat alarm",E)}else if(o.name==="notiskyKeepAlive")try{h.storage.local.set({serviceWorkerKeepAlive:Date.now()}).catch(()=>{})}catch{}})}catch(o){console.error("Notisky: Error setting up alarm listener",o)}if(p&&typeof h<"u"&&typeof h.runtime<"u"&&typeof h.runtime.getManifest=="function"&&h.runtime.getManifest().manifest_version===3){console.log("Notisky: Running in MV3 mode, setting up additional keep-alive strategies"),setInterval(()=>{try{h.storage.local.set({serviceWorkerKeepAlive:Date.now(),serviceWorkerStatus:"active"}).catch(o=>{Math.random()<.1&&console.warn("Notisky: Error in service worker keep-alive storage operation",o)})}catch(o){Math.random()<.1&&console.warn("Notisky: Critical error in service worker keep-alive",o)}},3e3);try{typeof h.runtime.onConnect=="function"&&h.runtime.onConnect.addListener(o=>{console.log("Notisky: Background script received connection from",o.name||"unnamed port"),o.onDisconnect.addListener(()=>{console.log("Notisky: Port disconnected"),h.runtime.lastError&&console.warn("Notisky: Port disconnected with error:",h.runtime.lastError)})})}catch(o){console.error("Notisky: Error setting up connection listener",o)}}if(p&&h.runtime&&h.runtime.onMessage)try{h.runtime.onMessage.addListener((o,E,R)=>{try{console.log("Notisky: Received message from content script",o,E);try{h.storage.local.set({lastMessageTimestamp:Date.now(),lastMessageType:o.action})}catch(T){console.error("Notisky: Error writing to storage",T)}o.action==="getPreferences"?R({success:!0,preferences:ne}):o.action==="updateNotificationCount"?(Je(o.count),R({success:!0})):o.action==="sendNotification"?(fe(o.title,o.message,o.type),R({success:!0})):o.action==="checkForUpdates"?(ar(),R({success:!0})):o.action==="ping"?R({success:!0,message:"pong"}):(console.error("Notisky: Unknown message action",o),R({success:!1,error:"Unknown action"}))}catch(T){console.error("Notisky: Error handling message",o,T);try{R({success:!1,error:T.message})}catch(k){console.error("Notisky: Error sending response",k);try{R({success:!1,error:"Error processing request"})}catch{}}}return!0}),typeof h.runtime.onConnect=="function"&&h.runtime.onConnect.addListener(o=>{console.log("Notisky: Background script received connection attempt from content script to wake up service worker")})}catch(o){console.error("Notisky: Error setting up message listener",o)}let ne={updateSiteIcon:!0,updateExtensionIcon:!0,enableNotifications:!0,keepPageAlive:!0,refreshInterval:1,notificationServerUserId:""};function Ae(){if(!p){console.log("Notisky: In build mode, skipping loading user preferences");return}try{h.storage.sync.get({updateSiteIcon:!0,updateExtensionIcon:!0,enableNotifications:!0,keepPageAlive:!0,refreshInterval:1,notificationServerUserId:""}).then(o=>{ne=o,console.log("Notisky: Loaded user preferences",ne),ne.keepPageAlive&&sr()}).catch(o=>{console.error("Notisky: Error accessing storage",o),setTimeout(()=>{Ae()},5e3)})}catch(o){console.error("Notisky: Error loading preferences",o),setTimeout(()=>{Ae()},5e3)}}function sr(){if(!p)return;const o="notiskyAutoRefresh";h.alarms.clear(o).then(()=>{h.alarms.create(o,{periodInMinutes:15}),console.log("Notisky: Auto-refresh alarm set for every 15 minutes")})}async function Lt(){if(!p)return null;try{const o=await h.tabs.query({url:["*://bsky.app/*","*://*.bsky.social/*"]});return o.length>0?o[0]:await h.tabs.create({url:"https://bsky.app/",active:!1})}catch(o){return console.error("Notisky: Error finding or creating Bluesky tab",o),null}}async function ar(){if(!(!p||!ne.keepPageAlive))try{const o=await Lt();o&&o.id&&h.tabs.sendMessage(o.id,{action:"checkForUpdates"}).catch(E=>{console.log("Notisky: Content script not responsive, refreshing tab",E),h.tabs.reload(o.id)})}catch(o){console.error("Notisky: Error refreshing Bluesky tab",o)}}function Je(o){if(!(!p||!ne.updateExtensionIcon))try{o>0?typeof h.action<"u"||typeof h.browserAction<"u"?Ct(o):W(o):typeof h.action<"u"?(h.action.setIcon({path:{16:"icon/16.png",32:"icon/32.png",48:"icon/48.png",128:"icon/128.png"}}).catch(E=>{console.error("Notisky: Error resetting extension icon",E),W(0)}),h.action.setBadgeText({text:""}).catch(E=>{console.error("Notisky: Error clearing badge text",E)})):typeof h.browserAction<"u"?(h.browserAction.setIcon({path:{16:"icon/16.png",32:"icon/32.png",48:"icon/48.png",128:"icon/128.png"}}).catch(E=>{console.error("Notisky: Error resetting extension icon",E),W(0)}),h.browserAction.setBadgeText({text:""}).catch(E=>{console.error("Notisky: Error clearing badge text",E)})):console.warn("Notisky: No action API available for resetting icon")}catch(E){console.error("Notisky: Error updating extension icon",E);try{W(o)}catch(R){console.error("Notisky: Fallback badge update also failed",R)}}}function Ct(o){try{let E;typeof o=="number"?o>30?E="30plus":E=o.toString():E=o,or(E)?(h.action.setIcon({path:{16:`/icon/notification/${E}_16.png`,32:`/icon/notification/${E}_32.png`,48:`/icon/notification/${E}_48.png`,128:`/icon/notification/${E}_128.png`}}),h.action.setBadgeText({text:""})):lr(typeof o=="number"?o:Number.parseInt(o)||9)}catch(E){console.error("Notisky: Error setting notification badge icon",E),W(typeof o=="number"?o:Number.parseInt(o)||9)}}function or(o){try{return!0}catch(E){return console.log("Notisky: Error checking badge icon existence, falling back to dynamic generation",E),!1}}function lr(o){_t(o).then(E=>{Object.keys(E).length>0?(h.action.setIcon({imageData:E}),h.action.setBadgeText({text:""})):W(o)}).catch(E=>{console.error("Notisky: Error generating notification badge",E),W(o)})}async function _t(o){const E=[16,32,48,128],R={};try{for(const T of E)if(typeof OffscreenCanvas<"u"){const q=new OffscreenCanvas(T,T).getContext("2d");if(!q)throw new Error("Failed to get canvas context");q.clearRect(0,0,T,T),Qe(q,T,o),R[T]=q.getImageData(0,0,T,T)}else{const k=document.createElement("canvas");k.width=T,k.height=T;const q=k.getContext("2d");if(!q)throw new Error("Failed to get canvas context");q.clearRect(0,0,T,T),Qe(q,T,o),R[T]=q.getImageData(0,0,T,T)}}catch(T){console.error("Notisky: Error generating badge icon",T),W(o)}return R}function Qe(o,E,R){const T=Math.max(E*.9,14),k=E/2,q=E/2;o.beginPath(),o.arc(k,q,T/2,0,Math.PI*2),o.fillStyle="#FF4A4A",o.fill();let z=R.toString();R>30&&(z="30+"),o.fillStyle="#FFFFFF",o.textAlign="center",o.textBaseline="middle";const me=Math.max(T*.5,7);o.font=`bold ${me}px Arial`,z.length>1&&(o.font=`bold ${me*.8}px Arial`),z.length>2&&(o.font=`bold ${me*.7}px Arial`),o.fillText(z,k,q)}function W(o){console.log("Notisky: Falling back to badge API");try{if(o>0){const E=o>30?"30+":o.toString();h.action.setBadgeText({text:E}),h.action.setBadgeBackgroundColor({color:"#FF4A4A"}),typeof h.action.setBadgeTextColor=="function"&&h.action.setBadgeTextColor({color:"#FFFFFF"})}else h.action.setBadgeText({text:""})}catch(E){console.error("Notisky: Error in badge API fallback",E)}}async function Pe(){if(!(!p||!ne.updateExtensionIcon))try{const o=await h.storage.local.get("badgeState");if(o.badgeState){console.log("Notisky: Recovering badge state");const{count:E,timestamp:R}=o.badgeState;Date.now()-R<60*60*1e3&&E>0?(console.log("Notisky: Restoring notification count:",E),Je(E)):(console.log("Notisky: Badge state is outdated, clearing"),h.storage.local.remove("badgeState"),h.action.setIcon({path:{16:"/icon/16.png",32:"/icon/32.png",48:"/icon/48.png",128:"/icon/128.png"}}),h.action.setBadgeText({text:""}))}else console.log("Notisky: No badge state to recover")}catch(o){console.error("Notisky: Error recovering badge state",o),h.action.setIcon({path:{16:"/icon/16.png",32:"/icon/32.png",48:"/icon/48.png",128:"/icon/128.png"}}),h.action.setBadgeText({text:""})}}function fe(o,E,R="notification"){if(!(!p||!ne.enableNotifications))try{const T={type:"basic",title:o,message:E,iconUrl:R==="notification"?h.runtime.getURL("icon/notification/icon-128.png"):h.runtime.getURL("icon/message/icon-128.png")},k=`notisky-${R}-${Date.now()}`;h.notifications.create(k,T).catch(q=>{console.error("Notisky: Error creating notification",q)})}catch(T){console.error("Notisky: Error sending notification",T);try{const k={type:"basic",title:o,message:E,iconUrl:h.runtime.getURL("icon/128.png")};h.notifications.create(`notisky-basic-${Date.now()}`,k).catch(q=>{console.error("Notisky: Error creating basic notification",q)})}catch(k){console.error("Notisky: Error sending fallback notification",k)}}}async function Ie(){try{const{accounts:o=[]}=await h.storage.local.get("accounts");console.log(`Initializing ${o.length} headless clients`);for(const E of o)await je(E)}catch(o){console.error("Error initializing headless clients:",o)}}async function je(o){try{if(te[o.did]){console.log(`Headless client for ${o.handle} (${o.did}) already running`);return}console.log(`Initializing headless client for ${o.handle} (${o.did})`);const E=new Tp.BskyAgent({service:"https://bsky.social"});try{await E.resumeSession({did:o.did,handle:o.handle,refreshJwt:o.refreshJwt,accessJwt:o.accessJwt,active:!0}),console.log(`Resumed session for ${o.handle} (${o.did})`)}catch(k){console.error(`Error resuming session for ${o.handle}:`,k);return}const{preferences:R}=await h.storage.sync.get({preferences:{refreshInterval:3e4}}),T=R.refreshInterval||3e4;te[o.did]={agent:E,interval:null,lastRefresh:0,notificationData:null},te[o.did].interval=window.setInterval(async()=>{await Ye(o.did)},T),await Ye(o.did)}catch(E){console.error(`Error initializing headless client for ${o.did}:`,E)}}function ae(o){te[o]&&(console.log(`Stopping headless client for ${o}`),te[o].interval!==null&&clearInterval(te[o].interval),delete te[o])}async function Ye(o){if(!te[o]){console.warn(`No headless client found for ${o}`);return}const E=te[o];try{E.lastRefresh=Date.now();const R=E.agent;if(!R.session){console.log(`Session expired for ${o}, attempting to restore from storage`);const{accounts:S=[]}=await h.storage.local.get("accounts"),se=S.find(F=>F.did===o);if(!se){console.error(`No account found for ${o}, stopping headless client`),ae(o);return}try{if(await R.resumeSession({did:se.did,handle:se.handle,refreshJwt:se.refreshJwt,accessJwt:se.accessJwt,active:!0}),console.log(`Resumed session for ${se.handle} (${se.did})`),R.session){const F=S.findIndex(tt=>tt.did===o);F!==-1&&(S[F].accessJwt=R.session.accessJwt||se.accessJwt,S[F].refreshJwt=R.session.refreshJwt||se.refreshJwt,await h.storage.local.set({accounts:S}))}}catch(F){console.error(`Failed to resume session for ${o}, stopping headless client`,F),ae(o);return}}const T=await pr(R),k=await ce(R),q=Date.now(),z={did:R.session.did,handle:R.session.handle},me=await ur(R),cr=await St(R),C=T+k,X={notification:T,message:k,total:C,notifications:me,messages:cr,accountInfo:z,timestamp:q};E.notificationData=X,fr([X])}catch(R){console.error(`Error refreshing notifications for ${o}:`,R)}}async function pr(o){try{return(await o.countUnreadNotifications()).data.count||0}catch(E){return console.error("Error fetching unread notification count:",E),0}}async function ur(o){try{return(await o.listNotifications({limit:15})).data.notifications||[]}catch(E){return console.error("Error fetching raw notifications:",E),[]}}async function ce(o){var E,R;try{return(R=(E=o.app)==null?void 0:E.bsky)!=null&&R.unspecced&&typeof o.app.bsky.unspecced.getUnreadCount=="function"&&(await o.app.bsky.unspecced.getUnreadCount()).data.count||0}catch(T){return console.error("Error fetching unread message count:",T),0}}async function St(o){try{return typeof o.listThreads=="function"?(await o.listThreads({limit:15})).data.threads||[]:[]}catch(E){return console.error("Error fetching raw messages:",E),[]}}function fr(o){if(!o||!Array.isArray(o)||o.length===0){console.log("Notisky: No notification data received");return}try{let E=0,R=0,T=0;o.forEach(k=>{E+=k.total||0,R+=k.notification||0,T+=k.message||0}),console.log(`Notisky: Notification update - total: ${E}, notifications: ${R}, messages: ${T}`),h.storage.local.set({notificationCounts:{total:E,notification:R,message:T}}),Je(E),ne.enableNotifications&&E>0&&o.forEach(k=>{if(k.total>0){const q=`Bluesky Notifications for @${k.accountInfo.handle}`;let z="";k.notification>0&&(z+=`${k.notification} notification${k.notification!==1?"s":""}`),k.message>0&&(z&&(z+=" and "),z+=`${k.message} message${k.message!==1?"s":""}`),fe(q,z,"notification")}})}catch(E){console.error("Notisky: Error processing notification update",E)}}async function D(){try{Q&&(console.log("Notisky: Closing existing WebSocket connection"),Q.close(),Q=null),Ne!==null&&(clearTimeout(Ne),Ne=null),be=0;try{console.log(`Notisky: Checking server status at ${ue}/api/status`);const E=await fetch(`${ue}/api/status`,{method:"GET",headers:{"Content-Type":"application/json"},mode:"cors"});if(!E.ok){console.error(`Notisky: Server returned error status: ${E.status}`);return}const R=await E.json();if(!R.success){console.error("Notisky: Server returned non-success status",R);return}console.log("Notisky: Server status check successful",R)}catch(E){console.error("Notisky: Error checking server status",E);return}const o=ue.replace(/^http/,"ws")+"/";try{console.log(`Notisky: Connecting to WebSocket server at ${o}`),Q=new WebSocket(o);const{notificationServerUserId:E=""}=await h.storage.sync.get({notificationServerUserId:""});Q.onopen=()=>{console.log("Notisky: WebSocket connection established"),be=0,sendWebSocketMessage({type:"subscribe",userId:E,accounts:[]})},Q.onmessage=R=>{try{const T=JSON.parse(R.data);console.log("Notisky: Received WebSocket message",T),T.type==="accounts"?et(T.accounts):T.type==="connection"?console.log("Notisky: WebSocket connection status:",T.message):T.type==="error"&&console.error("Notisky: WebSocket error:",T.message)}catch(T){console.error("Notisky: Error parsing WebSocket message",T)}},Q.onerror=R=>{console.error("Notisky: WebSocket error",R)},Q.onclose=R=>{if(console.log(`Notisky: WebSocket connection closed, code: ${R.code}, reason: ${R.reason}`),Q=null,be<vt){be++;const T=nr*be;console.log(`Notisky: Attempting to reconnect in ${T/1e3} seconds (attempt ${be} of ${vt})`),Ne=setTimeout(()=>{D()},T)}else console.log("Notisky: Max reconnect attempts reached, giving up")}}catch(E){console.error("Notisky: Error setting up WebSocket connection",E)}}catch(o){console.error("Notisky: Error in setupWebSocketConnection",o)}}async function et(o){if(!o||!Array.isArray(o)||o.length===0){console.log("Notisky: No account data received");return}try{const{accounts:E=[]}=await h.storage.local.get("accounts"),R=[...E];o.forEach(T=>{const k=R.findIndex(q=>q.did===T.did);k>=0?R[k]=T:R.push(T)}),await h.storage.local.set({accounts:R});for(const T of o)await je(T)}catch(E){console.error("Notisky: Error handling accounts update",E)}}function L(){if(console.log("Notisky: Initializing background script"),Ae(),p&&h.alarms)try{h.alarms.create("notiskyHeartbeat",{periodInMinutes:1})}catch(o){console.error("Notisky: Error creating alarm",o)}if(D(),p&&h.alarms)try{h.alarms.create("notiskyServerConnect",{periodInMinutes:5}),h.alarms.onAlarm.addListener(o=>{o.name==="notiskyServerConnect"&&(Q||(console.log("Notisky: No active WebSocket connection, attempting to reconnect"),D()))})}catch(o){console.error("Notisky: Error creating server connection alarm",o)}Ie()}L(),h.runtime.onMessage.addListener((o,E,R)=>(o.action==="preferencesUpdated"&&(console.log("Notisky: Preferences updated, reconnecting WebSocket if needed"),D(),de(),R({success:!0})),!0));async function de(){try{const{preferences:o}=await h.storage.sync.get({preferences:{refreshInterval:3e4}}),E=o.refreshInterval||3e4;Object.keys(te).forEach(R=>{const T=te[R];T.interval!==null&&clearInterval(T.interval),T.interval=window.setInterval(async()=>{await Ye(R)},E)})}catch(o){console.error("Notisky: Error updating polling intervals",o)}}p&&(Ae(),Pe(),h.runtime&&h.runtime.onStartup&&h.runtime.onStartup.addListener(()=>{console.log("Notisky: Browser starting up, initializing extension"),Ae(),Pe()}),h.runtime&&h.runtime.onInstalled&&h.runtime.onInstalled.addListener(o=>{console.log("Notisky: Extension installed or updated",o),Ae(),o.reason==="install"&&fe("Notisky Installed","Thank you for installing Notisky! The extension will now show notifications for new Bluesky activity.","notification")}))});function n4(){}function Tt(G,...te){}const Lp={debug:(...G)=>Tt(console.debug,...G),log:(...G)=>Tt(console.log,...G),warn:(...G)=>Tt(console.warn,...G),error:(...G)=>Tt(console.error,...G)};let ir;try{ir=vp.main(),ir instanceof Promise&&console.warn("The background's main() function return a promise, but it must be synchronous")}catch(G){throw Lp.error("The background crashed on startup!"),G}return ir}();
background;
